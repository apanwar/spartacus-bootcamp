import { __extends } from "tslib";
import { StateUtils } from '../../../state/utils/index';
import { PROCESS_FEATURE } from '../../../process/store/process-state';
import { EntityFailAction, EntityLoadAction, EntityLoaderResetAction, EntitySuccessAction, } from '../../../state/utils/entity-loader/entity-loader.action';
import { UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID, NOTIFICATION_PREFERENCES, } from '../user-state';
export var LOAD_NOTIFICATION_PREFERENCES = '[User] Load Notification Preferences';
export var LOAD_NOTIFICATION_PREFERENCES_FAIL = '[User] Load Notification Preferences Fail';
export var LOAD_NOTIFICATION_PREFERENCES_SUCCESS = '[User] Load Notification Preferences Success';
export var UPDATE_NOTIFICATION_PREFERENCES = '[User] Update Notification Preferences';
export var UPDATE_NOTIFICATION_PREFERENCES_FAIL = '[User] Update Notification Preferences Fail';
export var UPDATE_NOTIFICATION_PREFERENCES_SUCCESS = '[User] Update Notification Preferences Success';
export var RESET_NOTIFICATION_PREFERENCES = '[User] Reset Notification Preferences';
export var CLEAR_NOTIFICATION_PREFERENCES = '[User] Clear Notification Preferences';
var LoadNotificationPreferences = /** @class */ (function (_super) {
    __extends(LoadNotificationPreferences, _super);
    function LoadNotificationPreferences(payload) {
        var _this = _super.call(this, NOTIFICATION_PREFERENCES) || this;
        _this.payload = payload;
        _this.type = LOAD_NOTIFICATION_PREFERENCES;
        return _this;
    }
    return LoadNotificationPreferences;
}(StateUtils.LoaderLoadAction));
export { LoadNotificationPreferences };
var LoadNotificationPreferencesFail = /** @class */ (function (_super) {
    __extends(LoadNotificationPreferencesFail, _super);
    function LoadNotificationPreferencesFail(payload) {
        var _this = _super.call(this, NOTIFICATION_PREFERENCES, payload) || this;
        _this.payload = payload;
        _this.type = LOAD_NOTIFICATION_PREFERENCES_FAIL;
        return _this;
    }
    return LoadNotificationPreferencesFail;
}(StateUtils.LoaderFailAction));
export { LoadNotificationPreferencesFail };
var LoadNotificationPreferencesSuccess = /** @class */ (function (_super) {
    __extends(LoadNotificationPreferencesSuccess, _super);
    function LoadNotificationPreferencesSuccess(payload) {
        var _this = _super.call(this, NOTIFICATION_PREFERENCES) || this;
        _this.payload = payload;
        _this.type = LOAD_NOTIFICATION_PREFERENCES_SUCCESS;
        return _this;
    }
    return LoadNotificationPreferencesSuccess;
}(StateUtils.LoaderSuccessAction));
export { LoadNotificationPreferencesSuccess };
var UpdateNotificationPreferences = /** @class */ (function (_super) {
    __extends(UpdateNotificationPreferences, _super);
    function UpdateNotificationPreferences(payload) {
        var _this = _super.call(this, PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID) || this;
        _this.payload = payload;
        _this.type = UPDATE_NOTIFICATION_PREFERENCES;
        return _this;
    }
    return UpdateNotificationPreferences;
}(EntityLoadAction));
export { UpdateNotificationPreferences };
var UpdateNotificationPreferencesFail = /** @class */ (function (_super) {
    __extends(UpdateNotificationPreferencesFail, _super);
    function UpdateNotificationPreferencesFail(payload) {
        var _this = _super.call(this, PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID, payload) || this;
        _this.payload = payload;
        _this.type = UPDATE_NOTIFICATION_PREFERENCES_FAIL;
        return _this;
    }
    return UpdateNotificationPreferencesFail;
}(EntityFailAction));
export { UpdateNotificationPreferencesFail };
var UpdateNotificationPreferencesSuccess = /** @class */ (function (_super) {
    __extends(UpdateNotificationPreferencesSuccess, _super);
    function UpdateNotificationPreferencesSuccess(payload) {
        var _this = _super.call(this, PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID) || this;
        _this.payload = payload;
        _this.type = UPDATE_NOTIFICATION_PREFERENCES_SUCCESS;
        return _this;
    }
    return UpdateNotificationPreferencesSuccess;
}(EntitySuccessAction));
export { UpdateNotificationPreferencesSuccess };
var ResetNotificationPreferences = /** @class */ (function (_super) {
    __extends(ResetNotificationPreferences, _super);
    function ResetNotificationPreferences() {
        var _this = _super.call(this, PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID) || this;
        _this.type = RESET_NOTIFICATION_PREFERENCES;
        return _this;
    }
    return ResetNotificationPreferences;
}(EntityLoaderResetAction));
export { ResetNotificationPreferences };
var ClearNotificationPreferences = /** @class */ (function (_super) {
    __extends(ClearNotificationPreferences, _super);
    function ClearNotificationPreferences() {
        var _this = _super.call(this, NOTIFICATION_PREFERENCES) || this;
        _this.type = CLEAR_NOTIFICATION_PREFERENCES;
        return _this;
    }
    return ClearNotificationPreferences;
}(StateUtils.LoaderResetAction));
export { ClearNotificationPreferences };
//# sourceMappingURL=data:application/json;base64,