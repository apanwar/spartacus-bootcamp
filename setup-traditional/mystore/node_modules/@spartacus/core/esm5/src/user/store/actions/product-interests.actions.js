import { __extends } from "tslib";
import { PRODUCT_INTERESTS, REMOVE_PRODUCT_INTERESTS_PROCESS_ID, ADD_PRODUCT_INTEREST_PROCESS_ID, } from '../user-state';
import { PROCESS_FEATURE } from '../../../process/store/process-state';
import { LoaderLoadAction, LoaderFailAction, LoaderSuccessAction, LoaderResetAction, } from '../../../state/utils/loader/loader.action';
import { EntityFailAction, EntityLoadAction, EntitySuccessAction, EntityLoaderResetAction, } from '../../../state/utils/entity-loader/entity-loader.action';
export var LOAD_PRODUCT_INTERESTS = 'Load Product Interests';
export var LOAD_PRODUCT_INTERESTS_FAIL = 'Load Product Interests Fail';
export var LOAD_PRODUCT_INTERESTS_SUCCESS = 'Load Product Interests Success';
export var REMOVE_PRODUCT_INTEREST = 'Remove Product Interest';
export var REMOVE_PRODUCT_INTEREST_SUCCESS = 'Remove Product Interest Success';
export var REMOVE_PRODUCT_INTEREST_FAIL = 'Remove Product Interest Fail';
export var ADD_PRODUCT_INTEREST = 'Add Product Interest';
export var ADD_PRODUCT_INTEREST_FAIL = 'Add Product Interest Fail';
export var ADD_PRODUCT_INTEREST_SUCCESS = 'Add Product Interest Success';
export var ADD_PRODUCT_INTEREST_RESET = 'Add Product Interest Reset';
export var REMOVE_PRODUCT_INTEREST_RESET = 'Remove Product Interest Reset';
export var CLEAR_PRODUCT_INTERESTS = 'Clear Product Interests';
var LoadProductInterests = /** @class */ (function (_super) {
    __extends(LoadProductInterests, _super);
    function LoadProductInterests(payload) {
        var _this = _super.call(this, PRODUCT_INTERESTS) || this;
        _this.payload = payload;
        _this.type = LOAD_PRODUCT_INTERESTS;
        return _this;
    }
    return LoadProductInterests;
}(LoaderLoadAction));
export { LoadProductInterests };
var LoadProductInterestsFail = /** @class */ (function (_super) {
    __extends(LoadProductInterestsFail, _super);
    function LoadProductInterestsFail(payload) {
        var _this = _super.call(this, PRODUCT_INTERESTS, payload) || this;
        _this.payload = payload;
        _this.type = LOAD_PRODUCT_INTERESTS_FAIL;
        return _this;
    }
    return LoadProductInterestsFail;
}(LoaderFailAction));
export { LoadProductInterestsFail };
var LoadProductInterestsSuccess = /** @class */ (function (_super) {
    __extends(LoadProductInterestsSuccess, _super);
    function LoadProductInterestsSuccess(payload) {
        var _this = _super.call(this, PRODUCT_INTERESTS) || this;
        _this.payload = payload;
        _this.type = LOAD_PRODUCT_INTERESTS_SUCCESS;
        return _this;
    }
    return LoadProductInterestsSuccess;
}(LoaderSuccessAction));
export { LoadProductInterestsSuccess };
var RemoveProductInterest = /** @class */ (function (_super) {
    __extends(RemoveProductInterest, _super);
    function RemoveProductInterest(payload) {
        var _this = _super.call(this, PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID) || this;
        _this.payload = payload;
        _this.type = REMOVE_PRODUCT_INTEREST;
        return _this;
    }
    return RemoveProductInterest;
}(EntityLoadAction));
export { RemoveProductInterest };
var RemoveProductInterestSuccess = /** @class */ (function (_super) {
    __extends(RemoveProductInterestSuccess, _super);
    function RemoveProductInterestSuccess(payload) {
        var _this = _super.call(this, PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID) || this;
        _this.payload = payload;
        _this.type = REMOVE_PRODUCT_INTEREST_SUCCESS;
        return _this;
    }
    return RemoveProductInterestSuccess;
}(EntitySuccessAction));
export { RemoveProductInterestSuccess };
var RemoveProductInterestFail = /** @class */ (function (_super) {
    __extends(RemoveProductInterestFail, _super);
    function RemoveProductInterestFail(payload) {
        var _this = _super.call(this, PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID, payload) || this;
        _this.payload = payload;
        _this.type = REMOVE_PRODUCT_INTEREST_FAIL;
        return _this;
    }
    return RemoveProductInterestFail;
}(EntityFailAction));
export { RemoveProductInterestFail };
var AddProductInterest = /** @class */ (function (_super) {
    __extends(AddProductInterest, _super);
    function AddProductInterest(payload) {
        var _this = _super.call(this, PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID) || this;
        _this.payload = payload;
        _this.type = ADD_PRODUCT_INTEREST;
        return _this;
    }
    return AddProductInterest;
}(EntityLoadAction));
export { AddProductInterest };
var AddProductInterestSuccess = /** @class */ (function (_super) {
    __extends(AddProductInterestSuccess, _super);
    function AddProductInterestSuccess(payload) {
        var _this = _super.call(this, PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID) || this;
        _this.payload = payload;
        _this.type = ADD_PRODUCT_INTEREST_SUCCESS;
        return _this;
    }
    return AddProductInterestSuccess;
}(EntitySuccessAction));
export { AddProductInterestSuccess };
var AddProductInterestFail = /** @class */ (function (_super) {
    __extends(AddProductInterestFail, _super);
    function AddProductInterestFail(payload) {
        var _this = _super.call(this, PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID, payload) || this;
        _this.payload = payload;
        _this.type = ADD_PRODUCT_INTEREST_FAIL;
        return _this;
    }
    return AddProductInterestFail;
}(EntityFailAction));
export { AddProductInterestFail };
var ResetAddInterestState = /** @class */ (function (_super) {
    __extends(ResetAddInterestState, _super);
    function ResetAddInterestState() {
        var _this = _super.call(this, PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID) || this;
        _this.type = ADD_PRODUCT_INTEREST_RESET;
        return _this;
    }
    return ResetAddInterestState;
}(EntityLoaderResetAction));
export { ResetAddInterestState };
var ResetRemoveInterestState = /** @class */ (function (_super) {
    __extends(ResetRemoveInterestState, _super);
    function ResetRemoveInterestState() {
        var _this = _super.call(this, PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID) || this;
        _this.type = REMOVE_PRODUCT_INTEREST_RESET;
        return _this;
    }
    return ResetRemoveInterestState;
}(EntityLoaderResetAction));
export { ResetRemoveInterestState };
var ClearProductInterests = /** @class */ (function (_super) {
    __extends(ClearProductInterests, _super);
    function ClearProductInterests() {
        var _this = _super.call(this, PRODUCT_INTERESTS) || this;
        _this.type = CLEAR_PRODUCT_INTERESTS;
        return _this;
    }
    return ClearProductInterests;
}(LoaderResetAction));
export { ClearProductInterests };
//# sourceMappingURL=data:application/json;base64,