import { __extends } from "tslib";
import { StateUtils } from '../../../state/utils/index';
export var LOAD_CMS_PAGE_DATA = '[Cms] Load Page Data';
export var LOAD_CMS_PAGE_DATA_FAIL = '[Cms] Load Page Data Fail';
export var LOAD_CMS_PAGE_DATA_SUCCESS = '[Cms] Load Page Data Success';
export var CMS_SET_PAGE_SUCCESS_INDEX = '[Cms] Set Page Success Index';
export var CMS_SET_PAGE_FAIL_INDEX = '[Cms] Set Page Fail Index';
var LoadCmsPageData = /** @class */ (function (_super) {
    __extends(LoadCmsPageData, _super);
    function LoadCmsPageData(payload) {
        var _this = _super.call(this, payload.type, payload.id) || this;
        _this.payload = payload;
        _this.type = LOAD_CMS_PAGE_DATA;
        return _this;
    }
    return LoadCmsPageData;
}(StateUtils.EntityLoadAction));
export { LoadCmsPageData };
var LoadCmsPageDataFail = /** @class */ (function (_super) {
    __extends(LoadCmsPageDataFail, _super);
    function LoadCmsPageDataFail(pageContext, error) {
        var _this = _super.call(this, pageContext.type, pageContext.id, error) || this;
        _this.type = LOAD_CMS_PAGE_DATA_FAIL;
        return _this;
    }
    return LoadCmsPageDataFail;
}(StateUtils.EntityFailAction));
export { LoadCmsPageDataFail };
var LoadCmsPageDataSuccess = /** @class */ (function (_super) {
    __extends(LoadCmsPageDataSuccess, _super);
    function LoadCmsPageDataSuccess(pageContext, payload) {
        var _this = _super.call(this, pageContext.type, pageContext.id, payload) || this;
        _this.type = LOAD_CMS_PAGE_DATA_SUCCESS;
        return _this;
    }
    return LoadCmsPageDataSuccess;
}(StateUtils.EntitySuccessAction));
export { LoadCmsPageDataSuccess };
var CmsSetPageSuccessIndex = /** @class */ (function (_super) {
    __extends(CmsSetPageSuccessIndex, _super);
    function CmsSetPageSuccessIndex(pageContext, payload) {
        var _this = _super.call(this, pageContext.type, pageContext.id, payload) || this;
        _this.type = CMS_SET_PAGE_SUCCESS_INDEX;
        return _this;
    }
    return CmsSetPageSuccessIndex;
}(StateUtils.EntitySuccessAction));
export { CmsSetPageSuccessIndex };
var CmsSetPageFailIndex = /** @class */ (function (_super) {
    __extends(CmsSetPageFailIndex, _super);
    function CmsSetPageFailIndex(pageContext, payload) {
        var _this = _super.call(this, pageContext.type, pageContext.id) || this;
        _this.payload = payload;
        _this.type = CMS_SET_PAGE_FAIL_INDEX;
        return _this;
    }
    return CmsSetPageFailIndex;
}(StateUtils.EntityFailAction));
export { CmsSetPageFailIndex };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS5hY3Rpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvY21zL3N0b3JlL2FjdGlvbnMvcGFnZS5hY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUd4RCxNQUFNLENBQUMsSUFBTSxrQkFBa0IsR0FBRyxzQkFBc0IsQ0FBQztBQUN6RCxNQUFNLENBQUMsSUFBTSx1QkFBdUIsR0FBRywyQkFBMkIsQ0FBQztBQUNuRSxNQUFNLENBQUMsSUFBTSwwQkFBMEIsR0FBRyw4QkFBOEIsQ0FBQztBQUN6RSxNQUFNLENBQUMsSUFBTSwwQkFBMEIsR0FBRyw4QkFBOEIsQ0FBQztBQUN6RSxNQUFNLENBQUMsSUFBTSx1QkFBdUIsR0FBRywyQkFBMkIsQ0FBQztBQUVuRTtJQUFxQyxtQ0FBMkI7SUFFOUQseUJBQW1CLE9BQW9CO1FBQXZDLFlBQ0Usa0JBQU0sT0FBTyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsRUFBRSxDQUFDLFNBQ2hDO1FBRmtCLGFBQU8sR0FBUCxPQUFPLENBQWE7UUFEOUIsVUFBSSxHQUFHLGtCQUFrQixDQUFDOztJQUduQyxDQUFDO0lBQ0gsc0JBQUM7QUFBRCxDQUFDLEFBTEQsQ0FBcUMsVUFBVSxDQUFDLGdCQUFnQixHQUsvRDs7QUFFRDtJQUF5Qyx1Q0FBMkI7SUFFbEUsNkJBQVksV0FBd0IsRUFBRSxLQUFVO1FBQWhELFlBQ0Usa0JBQU0sV0FBVyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQyxTQUMvQztRQUhRLFVBQUksR0FBRyx1QkFBdUIsQ0FBQzs7SUFHeEMsQ0FBQztJQUNILDBCQUFDO0FBQUQsQ0FBQyxBQUxELENBQXlDLFVBQVUsQ0FBQyxnQkFBZ0IsR0FLbkU7O0FBRUQ7SUFBNEMsMENBQThCO0lBRXhFLGdDQUFZLFdBQXdCLEVBQUUsT0FBYTtRQUFuRCxZQUNFLGtCQUFNLFdBQVcsQ0FBQyxJQUFJLEVBQUUsV0FBVyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsU0FDakQ7UUFIUSxVQUFJLEdBQUcsMEJBQTBCLENBQUM7O0lBRzNDLENBQUM7SUFDSCw2QkFBQztBQUFELENBQUMsQUFMRCxDQUE0QyxVQUFVLENBQUMsbUJBQW1CLEdBS3pFOztBQUVEO0lBQTRDLDBDQUE4QjtJQUV4RSxnQ0FBWSxXQUF3QixFQUFFLE9BQWE7UUFBbkQsWUFDRSxrQkFBTSxXQUFXLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLFNBQ2pEO1FBSFEsVUFBSSxHQUFHLDBCQUEwQixDQUFDOztJQUczQyxDQUFDO0lBQ0gsNkJBQUM7QUFBRCxDQUFDLEFBTEQsQ0FBNEMsVUFBVSxDQUFDLG1CQUFtQixHQUt6RTs7QUFFRDtJQUF5Qyx1Q0FBMkI7SUFFbEUsNkJBQVksV0FBd0IsRUFBUyxPQUFlO1FBQTVELFlBQ0Usa0JBQU0sV0FBVyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsRUFBRSxDQUFDLFNBQ3hDO1FBRjRDLGFBQU8sR0FBUCxPQUFPLENBQVE7UUFEbkQsVUFBSSxHQUFHLHVCQUF1QixDQUFDOztJQUd4QyxDQUFDO0lBQ0gsMEJBQUM7QUFBRCxDQUFDLEFBTEQsQ0FBeUMsVUFBVSxDQUFDLGdCQUFnQixHQUtuRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VDb250ZXh0IH0gZnJvbSAnLi4vLi4vLi4vcm91dGluZy9pbmRleCc7XHJcbmltcG9ydCB7IFN0YXRlVXRpbHMgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9pbmRleCc7XHJcbmltcG9ydCB7IFBhZ2UgfSBmcm9tICcuLi8uLi9tb2RlbC9wYWdlLm1vZGVsJztcclxuXHJcbmV4cG9ydCBjb25zdCBMT0FEX0NNU19QQUdFX0RBVEEgPSAnW0Ntc10gTG9hZCBQYWdlIERhdGEnO1xyXG5leHBvcnQgY29uc3QgTE9BRF9DTVNfUEFHRV9EQVRBX0ZBSUwgPSAnW0Ntc10gTG9hZCBQYWdlIERhdGEgRmFpbCc7XHJcbmV4cG9ydCBjb25zdCBMT0FEX0NNU19QQUdFX0RBVEFfU1VDQ0VTUyA9ICdbQ21zXSBMb2FkIFBhZ2UgRGF0YSBTdWNjZXNzJztcclxuZXhwb3J0IGNvbnN0IENNU19TRVRfUEFHRV9TVUNDRVNTX0lOREVYID0gJ1tDbXNdIFNldCBQYWdlIFN1Y2Nlc3MgSW5kZXgnO1xyXG5leHBvcnQgY29uc3QgQ01TX1NFVF9QQUdFX0ZBSUxfSU5ERVggPSAnW0Ntc10gU2V0IFBhZ2UgRmFpbCBJbmRleCc7XHJcblxyXG5leHBvcnQgY2xhc3MgTG9hZENtc1BhZ2VEYXRhIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlMb2FkQWN0aW9uIHtcclxuICByZWFkb25seSB0eXBlID0gTE9BRF9DTVNfUEFHRV9EQVRBO1xyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBQYWdlQ29udGV4dCkge1xyXG4gICAgc3VwZXIocGF5bG9hZC50eXBlLCBwYXlsb2FkLmlkKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBMb2FkQ21zUGFnZURhdGFGYWlsIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlGYWlsQWN0aW9uIHtcclxuICByZWFkb25seSB0eXBlID0gTE9BRF9DTVNfUEFHRV9EQVRBX0ZBSUw7XHJcbiAgY29uc3RydWN0b3IocGFnZUNvbnRleHQ6IFBhZ2VDb250ZXh0LCBlcnJvcjogYW55KSB7XHJcbiAgICBzdXBlcihwYWdlQ29udGV4dC50eXBlLCBwYWdlQ29udGV4dC5pZCwgZXJyb3IpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIExvYWRDbXNQYWdlRGF0YVN1Y2Nlc3MgZXh0ZW5kcyBTdGF0ZVV0aWxzLkVudGl0eVN1Y2Nlc3NBY3Rpb24ge1xyXG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX0NNU19QQUdFX0RBVEFfU1VDQ0VTUztcclxuICBjb25zdHJ1Y3RvcihwYWdlQ29udGV4dDogUGFnZUNvbnRleHQsIHBheWxvYWQ6IFBhZ2UpIHtcclxuICAgIHN1cGVyKHBhZ2VDb250ZXh0LnR5cGUsIHBhZ2VDb250ZXh0LmlkLCBwYXlsb2FkKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDbXNTZXRQYWdlU3VjY2Vzc0luZGV4IGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlTdWNjZXNzQWN0aW9uIHtcclxuICByZWFkb25seSB0eXBlID0gQ01TX1NFVF9QQUdFX1NVQ0NFU1NfSU5ERVg7XHJcbiAgY29uc3RydWN0b3IocGFnZUNvbnRleHQ6IFBhZ2VDb250ZXh0LCBwYXlsb2FkOiBQYWdlKSB7XHJcbiAgICBzdXBlcihwYWdlQ29udGV4dC50eXBlLCBwYWdlQ29udGV4dC5pZCwgcGF5bG9hZCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQ21zU2V0UGFnZUZhaWxJbmRleCBleHRlbmRzIFN0YXRlVXRpbHMuRW50aXR5RmFpbEFjdGlvbiB7XHJcbiAgcmVhZG9ubHkgdHlwZSA9IENNU19TRVRfUEFHRV9GQUlMX0lOREVYO1xyXG4gIGNvbnN0cnVjdG9yKHBhZ2VDb250ZXh0OiBQYWdlQ29udGV4dCwgcHVibGljIHBheWxvYWQ6IHN0cmluZykge1xyXG4gICAgc3VwZXIocGFnZUNvbnRleHQudHlwZSwgcGFnZUNvbnRleHQuaWQpO1xyXG4gIH1cclxufVxyXG5cclxuLy8gYWN0aW9uIHR5cGVzXHJcbmV4cG9ydCB0eXBlIENtc1BhZ2VBY3Rpb24gPVxyXG4gIHwgTG9hZENtc1BhZ2VEYXRhXHJcbiAgfCBMb2FkQ21zUGFnZURhdGFGYWlsXHJcbiAgfCBMb2FkQ21zUGFnZURhdGFTdWNjZXNzXHJcbiAgfCBDbXNTZXRQYWdlRmFpbEluZGV4O1xyXG4iXX0=