export var CMS_FEATURE = 'cms';
export var NAVIGATION_DETAIL_ENTITY = '[Cms] Navigation Entity';
export var COMPONENT_ENTITY = '[Cms] Component Entity';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY21zLXN0YXRlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9jb3JlLyIsInNvdXJjZXMiOlsic3JjL2Ntcy9zdG9yZS9jbXMtc3RhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0EsTUFBTSxDQUFDLElBQU0sV0FBVyxHQUFHLEtBQUssQ0FBQztBQUNqQyxNQUFNLENBQUMsSUFBTSx3QkFBd0IsR0FBRyx5QkFBeUIsQ0FBQztBQUNsRSxNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FBRyx3QkFBd0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENtc0NvbXBvbmVudCB9IGZyb20gJy4uLy4uL21vZGVsJztcclxuaW1wb3J0IHsgU3RhdGVVdGlscyB9IGZyb20gJy4uLy4uL3N0YXRlL2luZGV4JztcclxuaW1wb3J0IHsgTm9kZUl0ZW0gfSBmcm9tICcuLi9tb2RlbC9ub2RlLWl0ZW0ubW9kZWwnO1xyXG5pbXBvcnQgeyBQYWdlIH0gZnJvbSAnLi4vbW9kZWwvcGFnZS5tb2RlbCc7XHJcblxyXG5leHBvcnQgY29uc3QgQ01TX0ZFQVRVUkUgPSAnY21zJztcclxuZXhwb3J0IGNvbnN0IE5BVklHQVRJT05fREVUQUlMX0VOVElUWSA9ICdbQ21zXSBOYXZpZ2F0aW9uIEVudGl0eSc7XHJcbmV4cG9ydCBjb25zdCBDT01QT05FTlRfRU5USVRZID0gJ1tDbXNdIENvbXBvbmVudCBFbnRpdHknO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTdGF0ZVdpdGhDbXMge1xyXG4gIFtDTVNfRkVBVFVSRV06IENtc1N0YXRlO1xyXG59XHJcblxyXG5leHBvcnQgdHlwZSBDb21wb25lbnRzU3RhdGUgPSBTdGF0ZVV0aWxzLkVudGl0eVN0YXRlPENvbXBvbmVudHNDb250ZXh0PjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ29tcG9uZW50c0NvbnRleHQge1xyXG4gIGNvbXBvbmVudDogQ21zQ29tcG9uZW50O1xyXG4gIC8qKlxyXG4gICAqIFBhZ2UgY29udGV4dCBzdG9yZXMgYW4gaW5mb3JtYXRpb24gZm9yIHdoaWNoIGNvbnRleHQgZG9lcyB0aGUgY29tcG9uZW50IGV4aXN0LlxyXG4gICAqIEZvciBleGFtcGxlLCBpZiBgU2l0ZUxvZ29Db21wb25lbnRgIHdhcyBzdWNjZXNzZnVsbHkgbG9hZGVkIGZvciBhIHByb2R1Y3QgcGFnZSB3aXRoIGFuIElEIG9mIDE3NzY5NDgsIHRoZW4gdGhpcyBvYmplY3Qgd2lsbCBjb250YWluOlxyXG4gICAqXHJcbiAgICogYGBgdHNcclxuICAgKiBQcm9kdWN0UGFnZS0xNzc2OTQ4OiB7XHJcbiAgICogIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICogIGxvYWRpbmc6IGZhbHNlLFxyXG4gICAqICBlcnJvcjogZmFsc2UsXHJcbiAgICogIC8vIFRoZSBgdmFsdWVgIHByb3BlcnR5IGluZGljYXRlcyB0aGF0IHRoZSBjb21wb25lbnQgZXhpc3RzIGZvciB0aGUgZ2l2ZW4gcGFnZSBjb250ZXh0LlxyXG4gICAqICB2YWx1ZTogdHJ1ZVxyXG4gICAqIH1cclxuICAgKiBgYGBcclxuICAgKlxyXG4gICAqIElmIHRoZSBzYW1lIGBTaXRlTG9nb0NvbXBvbmVudGAgY29tcG9uZW50IHdhcyB0cmllZCB0byBiZSBsb2FkZWQgb24gaG9tZXBhZ2UgKHBhZ2UgY29udGV4dCBpZCBpcyBgaG9tZXBhZ2VgKSxcclxuICAgKiBhbmQgaXQgZG9lc24ndCBleGlzdCBmb3Igc29tZSByZWFzb24gKG1heWJlIGl0IGhhcyBhIHJlc3RyaWN0aW9uKSwgdGhlbiB0aGlzIG9iamVjdCB3aWxsIGNvbnRhaW46XHJcbiAgICpcclxuICAgKiBgYGB0c1xyXG4gICAqIFByb2R1Y3RQYWdlLTE3NzY5NDg6IHtcclxuICAgKiAgc3VjY2VzczogdHJ1ZSxcclxuICAgKiAgbG9hZGluZzogZmFsc2UsXHJcbiAgICogIGVycm9yOiBmYWxzZSxcclxuICAgKiAgLy8gVGhlIGB2YWx1ZWAgcHJvcGVydHkgaW5kaWNhdGVzIHRoYXQgdGhlIGNvbXBvbmVudCBleGlzdHMgZm9yIHRoZSBnaXZlbiBwYWdlIGNvbnRleHQuXHJcbiAgICogIHZhbHVlOiB0cnVlXHJcbiAgICogfSxcclxuICAgKiBDb250ZW50UGFnZS1ob21lcGFnZToge1xyXG4gICAqICBzdWNjZXNzOiB0cnVlLFxyXG4gICAqICBsb2FkaW5nOiBmYWxzZSxcclxuICAgKiAgZXJyb3I6IGZhbHNlLFxyXG4gICAqICAvLyBUaGUgYHZhbHVlYCBpbiB0aGlzIGNhc2UgaXMgYGZhbHNlYCBpbmRpY2F0aW5nIHRoYXQgdGhlIGNvbXBvbmVudCB3YXMgdHJpZWQgdG8gYmUgbG9hZGVkLCBidXQgaXQgZG9lc24ndCBleGlzdCBvciBoYXMgYSByZXN0cmljdGlvbi5cclxuICAgKiAgdmFsdWU6IGZhbHNlXHJcbiAgICogfVxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICovXHJcbiAgcGFnZUNvbnRleHQ6IHtcclxuICAgIFtjb250ZXh0OiBzdHJpbmddOiBTdGF0ZVV0aWxzLkxvYWRlclN0YXRlPGJvb2xlYW4+O1xyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIEluZGV4VHlwZSA9IHtcclxuICBjb250ZW50OiBTdGF0ZVV0aWxzLkVudGl0eUxvYWRlclN0YXRlPHN0cmluZz47XHJcbiAgcHJvZHVjdDogU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJTdGF0ZTxzdHJpbmc+O1xyXG4gIGNhdGVnb3J5OiBTdGF0ZVV0aWxzLkVudGl0eUxvYWRlclN0YXRlPHN0cmluZz47XHJcbiAgY2F0YWxvZzogU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJTdGF0ZTxzdHJpbmc+O1xyXG59O1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBOYXZpZ2F0aW9uTm9kZXMge1xyXG4gIFtub2RlSWQ6IHN0cmluZ106IE5vZGVJdGVtO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFBhZ2VTdGF0ZSB7XHJcbiAgcGFnZURhdGE6IFN0YXRlVXRpbHMuRW50aXR5U3RhdGU8UGFnZT47XHJcbiAgaW5kZXg6IEluZGV4VHlwZTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDbXNTdGF0ZSB7XHJcbiAgcGFnZTogUGFnZVN0YXRlO1xyXG4gIGNvbXBvbmVudHM6IENvbXBvbmVudHNTdGF0ZTtcclxuICBuYXZpZ2F0aW9uOiBTdGF0ZVV0aWxzLkVudGl0eUxvYWRlclN0YXRlPE5vZGVJdGVtPjtcclxufVxyXG4iXX0=