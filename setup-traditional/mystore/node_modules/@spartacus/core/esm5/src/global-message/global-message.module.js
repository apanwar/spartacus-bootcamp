import { __decorate, __read, __spread } from "tslib";
import { NgModule } from '@angular/core';
import { EffectsModule } from '@ngrx/effects';
import { errorHandlers, httpErrorInterceptors, } from './http-interceptors/index';
import { GlobalMessageStoreModule } from './store/global-message-store.module';
import { GlobalMessageEffect } from './store/effects/global-message.effect';
import { provideDefaultConfigFactory } from '../config/config.module';
import { defaultGlobalMessageConfigFactory } from './config/default-global-message-config';
var GlobalMessageModule = /** @class */ (function () {
    function GlobalMessageModule() {
    }
    GlobalMessageModule_1 = GlobalMessageModule;
    GlobalMessageModule.forRoot = function () {
        return {
            ngModule: GlobalMessageModule_1,
            providers: __spread(errorHandlers, httpErrorInterceptors),
        };
    };
    var GlobalMessageModule_1;
    GlobalMessageModule = GlobalMessageModule_1 = __decorate([
        NgModule({
            imports: [
                GlobalMessageStoreModule,
                EffectsModule.forFeature([GlobalMessageEffect]),
            ],
            providers: [provideDefaultConfigFactory(defaultGlobalMessageConfigFactory)],
        })
    ], GlobalMessageModule);
    return GlobalMessageModule;
}());
export { GlobalMessageModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLW1lc3NhZ2UubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9jb3JlLyIsInNvdXJjZXMiOlsic3JjL2dsb2JhbC1tZXNzYWdlL2dsb2JhbC1tZXNzYWdlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5QyxPQUFPLEVBQ0wsYUFBYSxFQUNiLHFCQUFxQixHQUN0QixNQUFNLDJCQUEyQixDQUFDO0FBQ25DLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBRTVFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBUzNGO0lBQUE7SUFPQSxDQUFDOzRCQVBZLG1CQUFtQjtJQUN2QiwyQkFBTyxHQUFkO1FBQ0UsT0FBTztZQUNMLFFBQVEsRUFBRSxxQkFBbUI7WUFDN0IsU0FBUyxXQUFNLGFBQWEsRUFBSyxxQkFBcUIsQ0FBQztTQUN4RCxDQUFDO0lBQ0osQ0FBQzs7SUFOVSxtQkFBbUI7UUFQL0IsUUFBUSxDQUFDO1lBQ1IsT0FBTyxFQUFFO2dCQUNQLHdCQUF3QjtnQkFDeEIsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUM7YUFDaEQ7WUFDRCxTQUFTLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO1NBQzVFLENBQUM7T0FDVyxtQkFBbUIsQ0FPL0I7SUFBRCwwQkFBQztDQUFBLEFBUEQsSUFPQztTQVBZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEVmZmVjdHNNb2R1bGUgfSBmcm9tICdAbmdyeC9lZmZlY3RzJztcclxuaW1wb3J0IHtcclxuICBlcnJvckhhbmRsZXJzLFxyXG4gIGh0dHBFcnJvckludGVyY2VwdG9ycyxcclxufSBmcm9tICcuL2h0dHAtaW50ZXJjZXB0b3JzL2luZGV4JztcclxuaW1wb3J0IHsgR2xvYmFsTWVzc2FnZVN0b3JlTW9kdWxlIH0gZnJvbSAnLi9zdG9yZS9nbG9iYWwtbWVzc2FnZS1zdG9yZS5tb2R1bGUnO1xyXG5pbXBvcnQgeyBHbG9iYWxNZXNzYWdlRWZmZWN0IH0gZnJvbSAnLi9zdG9yZS9lZmZlY3RzL2dsb2JhbC1tZXNzYWdlLmVmZmVjdCc7XHJcblxyXG5pbXBvcnQgeyBwcm92aWRlRGVmYXVsdENvbmZpZ0ZhY3RvcnkgfSBmcm9tICcuLi9jb25maWcvY29uZmlnLm1vZHVsZSc7XHJcbmltcG9ydCB7IGRlZmF1bHRHbG9iYWxNZXNzYWdlQ29uZmlnRmFjdG9yeSB9IGZyb20gJy4vY29uZmlnL2RlZmF1bHQtZ2xvYmFsLW1lc3NhZ2UtY29uZmlnJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgR2xvYmFsTWVzc2FnZVN0b3JlTW9kdWxlLFxyXG4gICAgRWZmZWN0c01vZHVsZS5mb3JGZWF0dXJlKFtHbG9iYWxNZXNzYWdlRWZmZWN0XSksXHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtwcm92aWRlRGVmYXVsdENvbmZpZ0ZhY3RvcnkoZGVmYXVsdEdsb2JhbE1lc3NhZ2VDb25maWdGYWN0b3J5KV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBHbG9iYWxNZXNzYWdlTW9kdWxlIHtcclxuICBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPEdsb2JhbE1lc3NhZ2VNb2R1bGU+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBHbG9iYWxNZXNzYWdlTW9kdWxlLFxyXG4gICAgICBwcm92aWRlcnM6IFsuLi5lcnJvckhhbmRsZXJzLCAuLi5odHRwRXJyb3JJbnRlcmNlcHRvcnNdLFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19