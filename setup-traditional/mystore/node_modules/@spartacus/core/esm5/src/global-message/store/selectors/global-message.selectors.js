import { createSelector } from '@ngrx/store';
import { getGlobalMessageState } from './feature.selector';
var ɵ0 = function (state) { return state.entities; };
export var getGlobalMessageEntities = createSelector(getGlobalMessageState, ɵ0);
export var getGlobalMessageEntitiesByType = function (type) {
    return createSelector(getGlobalMessageEntities, function (entities) { return entities && entities[type]; });
};
export var getGlobalMessageCountByType = function (type) {
    return createSelector(getGlobalMessageEntitiesByType(type), function (entities) { return entities && entities.length; });
};
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLW1lc3NhZ2Uuc2VsZWN0b3JzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9jb3JlLyIsInNvdXJjZXMiOlsic3JjL2dsb2JhbC1tZXNzYWdlL3N0b3JlL3NlbGVjdG9ycy9nbG9iYWwtbWVzc2FnZS5zZWxlY3RvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBb0IsTUFBTSxhQUFhLENBQUM7QUFRL0QsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7U0FPekQsVUFBQyxLQUF5QixJQUFLLE9BQUEsS0FBSyxDQUFDLFFBQVEsRUFBZCxDQUFjO0FBTC9DLE1BQU0sQ0FBQyxJQUFNLHdCQUF3QixHQUdqQyxjQUFjLENBQ2hCLHFCQUFxQixLQUV0QixDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sOEJBQThCLEdBQUcsVUFDNUMsSUFBdUI7SUFFdkIsT0FBTyxjQUFjLENBQ25CLHdCQUF3QixFQUN4QixVQUFDLFFBQVEsSUFBSyxPQUFBLFFBQVEsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQTFCLENBQTBCLENBQ3pDLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSwyQkFBMkIsR0FBRyxVQUN6QyxJQUF1QjtJQUV2QixPQUFPLGNBQWMsQ0FDbkIsOEJBQThCLENBQUMsSUFBSSxDQUFDLEVBQ3BDLFVBQUMsUUFBUSxJQUFLLE9BQUEsUUFBUSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEVBQTNCLENBQTJCLENBQzFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciwgTWVtb2l6ZWRTZWxlY3RvciB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcclxuaW1wb3J0IHsgVHJhbnNsYXRhYmxlIH0gZnJvbSAnLi4vLi4vLi4vaTE4bi90cmFuc2xhdGFibGUnO1xyXG5pbXBvcnQgeyBHbG9iYWxNZXNzYWdlVHlwZSB9IGZyb20gJy4uLy4uL21vZGVscy9nbG9iYWwtbWVzc2FnZS5tb2RlbCc7XHJcbmltcG9ydCB7XHJcbiAgR2xvYmFsTWVzc2FnZUVudGl0aWVzLFxyXG4gIEdsb2JhbE1lc3NhZ2VTdGF0ZSxcclxuICBTdGF0ZVdpdGhHbG9iYWxNZXNzYWdlLFxyXG59IGZyb20gJy4uL2dsb2JhbC1tZXNzYWdlLXN0YXRlJztcclxuaW1wb3J0IHsgZ2V0R2xvYmFsTWVzc2FnZVN0YXRlIH0gZnJvbSAnLi9mZWF0dXJlLnNlbGVjdG9yJztcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRHbG9iYWxNZXNzYWdlRW50aXRpZXM6IE1lbW9pemVkU2VsZWN0b3I8XHJcbiAgU3RhdGVXaXRoR2xvYmFsTWVzc2FnZSxcclxuICBHbG9iYWxNZXNzYWdlRW50aXRpZXNcclxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxyXG4gIGdldEdsb2JhbE1lc3NhZ2VTdGF0ZSxcclxuICAoc3RhdGU6IEdsb2JhbE1lc3NhZ2VTdGF0ZSkgPT4gc3RhdGUuZW50aXRpZXNcclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRHbG9iYWxNZXNzYWdlRW50aXRpZXNCeVR5cGUgPSAoXHJcbiAgdHlwZTogR2xvYmFsTWVzc2FnZVR5cGVcclxuKTogTWVtb2l6ZWRTZWxlY3RvcjxTdGF0ZVdpdGhHbG9iYWxNZXNzYWdlLCBUcmFuc2xhdGFibGVbXT4gPT4ge1xyXG4gIHJldHVybiBjcmVhdGVTZWxlY3RvcihcclxuICAgIGdldEdsb2JhbE1lc3NhZ2VFbnRpdGllcyxcclxuICAgIChlbnRpdGllcykgPT4gZW50aXRpZXMgJiYgZW50aXRpZXNbdHlwZV1cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEdsb2JhbE1lc3NhZ2VDb3VudEJ5VHlwZSA9IChcclxuICB0eXBlOiBHbG9iYWxNZXNzYWdlVHlwZVxyXG4pOiBNZW1vaXplZFNlbGVjdG9yPFN0YXRlV2l0aEdsb2JhbE1lc3NhZ2UsIG51bWJlcj4gPT4ge1xyXG4gIHJldHVybiBjcmVhdGVTZWxlY3RvcihcclxuICAgIGdldEdsb2JhbE1lc3NhZ2VFbnRpdGllc0J5VHlwZSh0eXBlKSxcclxuICAgIChlbnRpdGllcykgPT4gZW50aXRpZXMgJiYgZW50aXRpZXMubGVuZ3RoXHJcbiAgKTtcclxufTtcclxuIl19