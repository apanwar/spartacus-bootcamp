import { __assign } from "tslib";
import { InjectionToken } from '@angular/core';
import { AuthActions } from '../../../auth/store/actions/index';
import { loaderReducer } from '../../../state/utils/loader/loader.reducer';
import { CSAGENT_TOKEN_DATA, CUSTOMER_SEARCH_DATA, } from '../asm-state';
import * as fromAsmUiReducer from './asm-ui.reducer';
export function getReducers() {
    return {
        customerSearchResult: loaderReducer(CUSTOMER_SEARCH_DATA),
        asmUi: fromAsmUiReducer.reducer,
        csagentToken: loaderReducer(CSAGENT_TOKEN_DATA),
    };
}
export var reducerToken = new InjectionToken('AsmReducers');
export var reducerProvider = {
    provide: reducerToken,
    useFactory: getReducers,
};
export function clearCustomerSupportAgentAsmState(reducer) {
    return function (state, action) {
        if (action.type === AuthActions.LOGOUT_CUSTOMER_SUPPORT_AGENT) {
            state = __assign(__assign({}, state), { customerSearchResult: undefined, csagentToken: undefined });
        }
        return reducer(state, action);
    };
}
export var metaReducers = [
    clearCustomerSupportAgentAsmState,
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvYXNtL3N0b3JlL3JlZHVjZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBT3pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNoRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFFM0UsT0FBTyxFQUVMLGtCQUFrQixFQUNsQixvQkFBb0IsR0FDckIsTUFBTSxjQUFjLENBQUM7QUFDdEIsT0FBTyxLQUFLLGdCQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBR3JELE1BQU0sVUFBVSxXQUFXO0lBQ3pCLE9BQU87UUFDTCxvQkFBb0IsRUFBRSxhQUFhLENBQ2pDLG9CQUFvQixDQUNyQjtRQUNELEtBQUssRUFBRSxnQkFBZ0IsQ0FBQyxPQUFPO1FBQy9CLFlBQVksRUFBRSxhQUFhLENBQVksa0JBQWtCLENBQUM7S0FDM0QsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLENBQUMsSUFBTSxZQUFZLEdBRXBCLElBQUksY0FBYyxDQUE2QixhQUFhLENBQUMsQ0FBQztBQUVuRSxNQUFNLENBQUMsSUFBTSxlQUFlLEdBQWE7SUFDdkMsT0FBTyxFQUFFLFlBQVk7SUFDckIsVUFBVSxFQUFFLFdBQVc7Q0FDeEIsQ0FBQztBQUVGLE1BQU0sVUFBVSxpQ0FBaUMsQ0FDL0MsT0FBd0M7SUFFeEMsT0FBTyxVQUFVLEtBQUssRUFBRSxNQUFNO1FBQzVCLElBQUksTUFBTSxDQUFDLElBQUksS0FBSyxXQUFXLENBQUMsNkJBQTZCLEVBQUU7WUFDN0QsS0FBSyx5QkFDQSxLQUFLLEtBQ1Isb0JBQW9CLEVBQUUsU0FBUyxFQUMvQixZQUFZLEVBQUUsU0FBUyxHQUN4QixDQUFDO1NBQ0g7UUFDRCxPQUFPLE9BQU8sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxJQUFNLFlBQVksR0FBdUI7SUFDOUMsaUNBQWlDO0NBQ2xDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiwgUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICBBY3Rpb24sXHJcbiAgQWN0aW9uUmVkdWNlcixcclxuICBBY3Rpb25SZWR1Y2VyTWFwLFxyXG4gIE1ldGFSZWR1Y2VyLFxyXG59IGZyb20gJ0BuZ3J4L3N0b3JlJztcclxuaW1wb3J0IHsgQXV0aEFjdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9hdXRoL3N0b3JlL2FjdGlvbnMvaW5kZXgnO1xyXG5pbXBvcnQgeyBsb2FkZXJSZWR1Y2VyIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvbG9hZGVyL2xvYWRlci5yZWR1Y2VyJztcclxuaW1wb3J0IHsgQ3VzdG9tZXJTZWFyY2hQYWdlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2FzbS5tb2RlbHMnO1xyXG5pbXBvcnQge1xyXG4gIEFzbVN0YXRlLFxyXG4gIENTQUdFTlRfVE9LRU5fREFUQSxcclxuICBDVVNUT01FUl9TRUFSQ0hfREFUQSxcclxufSBmcm9tICcuLi9hc20tc3RhdGUnO1xyXG5pbXBvcnQgKiBhcyBmcm9tQXNtVWlSZWR1Y2VyIGZyb20gJy4vYXNtLXVpLnJlZHVjZXInO1xyXG5pbXBvcnQgeyBVc2VyVG9rZW4gfSBmcm9tICcuLi8uLi8uLi9hdXRoL21vZGVscy90b2tlbi10eXBlcy5tb2RlbCc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVkdWNlcnMoKTogQWN0aW9uUmVkdWNlck1hcDxBc21TdGF0ZT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBjdXN0b21lclNlYXJjaFJlc3VsdDogbG9hZGVyUmVkdWNlcjxDdXN0b21lclNlYXJjaFBhZ2U+KFxyXG4gICAgICBDVVNUT01FUl9TRUFSQ0hfREFUQVxyXG4gICAgKSxcclxuICAgIGFzbVVpOiBmcm9tQXNtVWlSZWR1Y2VyLnJlZHVjZXIsXHJcbiAgICBjc2FnZW50VG9rZW46IGxvYWRlclJlZHVjZXI8VXNlclRva2VuPihDU0FHRU5UX1RPS0VOX0RBVEEpLFxyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCByZWR1Y2VyVG9rZW46IEluamVjdGlvblRva2VuPEFjdGlvblJlZHVjZXJNYXA8XHJcbiAgQXNtU3RhdGVcclxuPj4gPSBuZXcgSW5qZWN0aW9uVG9rZW48QWN0aW9uUmVkdWNlck1hcDxBc21TdGF0ZT4+KCdBc21SZWR1Y2VycycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHJlZHVjZXJQcm92aWRlcjogUHJvdmlkZXIgPSB7XHJcbiAgcHJvdmlkZTogcmVkdWNlclRva2VuLFxyXG4gIHVzZUZhY3Rvcnk6IGdldFJlZHVjZXJzLFxyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyQ3VzdG9tZXJTdXBwb3J0QWdlbnRBc21TdGF0ZShcclxuICByZWR1Y2VyOiBBY3Rpb25SZWR1Y2VyPEFzbVN0YXRlLCBBY3Rpb24+XHJcbik6IEFjdGlvblJlZHVjZXI8QXNtU3RhdGUsIEFjdGlvbj4ge1xyXG4gIHJldHVybiBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikge1xyXG4gICAgaWYgKGFjdGlvbi50eXBlID09PSBBdXRoQWN0aW9ucy5MT0dPVVRfQ1VTVE9NRVJfU1VQUE9SVF9BR0VOVCkge1xyXG4gICAgICBzdGF0ZSA9IHtcclxuICAgICAgICAuLi5zdGF0ZSxcclxuICAgICAgICBjdXN0b21lclNlYXJjaFJlc3VsdDogdW5kZWZpbmVkLFxyXG4gICAgICAgIGNzYWdlbnRUb2tlbjogdW5kZWZpbmVkLFxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlZHVjZXIoc3RhdGUsIGFjdGlvbik7XHJcbiAgfTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IG1ldGFSZWR1Y2VyczogTWV0YVJlZHVjZXI8YW55PltdID0gW1xyXG4gIGNsZWFyQ3VzdG9tZXJTdXBwb3J0QWdlbnRBc21TdGF0ZSxcclxuXTtcclxuIl19