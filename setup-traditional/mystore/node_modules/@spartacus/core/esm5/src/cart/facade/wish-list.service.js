import { __decorate, __read } from "tslib";
import { Injectable } from '@angular/core';
import { select, Store } from '@ngrx/store';
import { combineLatest } from 'rxjs';
import { distinctUntilChanged, filter, map, switchMap, take, tap, withLatestFrom, } from 'rxjs/operators';
import { AuthService } from '../../auth/facade/auth.service';
import { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';
import { UserService } from '../../user/facade/user.service';
import { CartActions } from '../store/actions/index';
import { MultiCartSelectors } from '../store/selectors/index';
import { getWishlistName } from '../utils/utils';
import { MultiCartService } from './multi-cart.service';
import * as i0 from "@angular/core";
import * as i1 from "@ngrx/store";
import * as i2 from "../../auth/facade/auth.service";
import * as i3 from "../../user/facade/user.service";
import * as i4 from "./multi-cart.service";
var WishListService = /** @class */ (function () {
    function WishListService(store, authService, userService, multiCartService) {
        this.store = store;
        this.authService = authService;
        this.userService = userService;
        this.multiCartService = multiCartService;
    }
    WishListService.prototype.createWishList = function (userId, name, description) {
        this.store.dispatch(new CartActions.CreateWishList({ userId: userId, name: name, description: description }));
    };
    WishListService.prototype.getWishList = function () {
        var _this = this;
        return combineLatest([
            this.getWishListId(),
            this.userService.get(),
            this.authService.getOccUserId(),
        ]).pipe(distinctUntilChanged(), tap(function (_a) {
            var _b = __read(_a, 3), wishListId = _b[0], user = _b[1], userId = _b[2];
            if (!Boolean(wishListId) &&
                userId !== OCC_USER_ID_ANONYMOUS &&
                Boolean(user) &&
                Boolean(user.customerId)) {
                _this.loadWishList(userId, user.customerId);
            }
        }), filter(function (_a) {
            var _b = __read(_a, 1), wishListId = _b[0];
            return Boolean(wishListId);
        }), switchMap(function (_a) {
            var _b = __read(_a, 1), wishListId = _b[0];
            return _this.multiCartService.getCart(wishListId);
        }));
    };
    WishListService.prototype.loadWishList = function (userId, customerId) {
        this.store.dispatch(new CartActions.LoadWishList({
            userId: userId,
            customerId: customerId,
            tempCartId: getWishlistName(customerId),
        }));
    };
    WishListService.prototype.addEntry = function (productCode) {
        var _this = this;
        this.getWishListId()
            .pipe(distinctUntilChanged(), withLatestFrom(this.authService.getOccUserId(), this.userService.get()), tap(function (_a) {
            var _b = __read(_a, 3), wishListId = _b[0], userId = _b[1], user = _b[2];
            if (!Boolean(wishListId) &&
                Boolean(user) &&
                Boolean(user.customerId)) {
                _this.loadWishList(userId, user.customerId);
            }
        }), filter(function (_a) {
            var _b = __read(_a, 1), wishListId = _b[0];
            return Boolean(wishListId);
        }), take(1))
            .subscribe(function (_a) {
            var _b = __read(_a, 2), wishListId = _b[0], userId = _b[1];
            return _this.multiCartService.addEntry(userId, wishListId, productCode, 1);
        });
    };
    WishListService.prototype.removeEntry = function (entry) {
        var _this = this;
        this.getWishListId()
            .pipe(distinctUntilChanged(), withLatestFrom(this.authService.getOccUserId(), this.userService.get()), tap(function (_a) {
            var _b = __read(_a, 3), wishListId = _b[0], userId = _b[1], user = _b[2];
            if (!Boolean(wishListId) &&
                Boolean(user) &&
                Boolean(user.customerId)) {
                _this.loadWishList(userId, user.customerId);
            }
        }), filter(function (_a) {
            var _b = __read(_a, 1), wishListId = _b[0];
            return Boolean(wishListId);
        }), take(1))
            .subscribe(function (_a) {
            var _b = __read(_a, 2), wishListId = _b[0], userId = _b[1];
            return _this.multiCartService.removeEntry(userId, wishListId, entry.entryNumber);
        });
    };
    WishListService.prototype.getWishListLoading = function () {
        var _this = this;
        return this.getWishListId().pipe(switchMap(function (wishListId) {
            return _this.multiCartService
                .isStable(wishListId)
                .pipe(map(function (stable) { return !stable; }));
        }));
    };
    WishListService.prototype.getWishListId = function () {
        return this.store.pipe(select(MultiCartSelectors.getWishListId));
    };
    WishListService.ctorParameters = function () { return [
        { type: Store },
        { type: AuthService },
        { type: UserService },
        { type: MultiCartService }
    ]; };
    WishListService.ɵprov = i0.ɵɵdefineInjectable({ factory: function WishListService_Factory() { return new WishListService(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.UserService), i0.ɵɵinject(i4.MultiCartService)); }, token: WishListService, providedIn: "root" });
    WishListService = __decorate([
        Injectable({
            providedIn: 'root',
        })
    ], WishListService);
    return WishListService;
}());
export { WishListService };
//# sourceMappingURL=data:application/json;base64,