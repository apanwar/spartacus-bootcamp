import { createSelector } from '@ngrx/store';
import { getSiteContextState } from './site-context.selector';
var activeLanguageSelector = function (state) { return state.activeLanguage; };
var ɵ0 = activeLanguageSelector;
var languagesEntitiesSelector = function (state) { return state.entities; };
var ɵ1 = languagesEntitiesSelector;
var ɵ2 = function (state) { return state.languages; };
export var getLanguagesState = createSelector(getSiteContextState, ɵ2);
export var getLanguagesEntities = createSelector(getLanguagesState, languagesEntitiesSelector);
export var getActiveLanguage = createSelector(getLanguagesState, activeLanguageSelector);
var ɵ3 = function (entities) {
    return entities
        ? Object.keys(entities).map(function (isocode) { return entities[isocode]; })
        : null;
};
export var getAllLanguages = createSelector(getLanguagesEntities, ɵ3);
export { ɵ0, ɵ1, ɵ2, ɵ3 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2VzLnNlbGVjdG9ycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9zaXRlLWNvbnRleHQvc3RvcmUvc2VsZWN0b3JzL2xhbmd1YWdlcy5zZWxlY3RvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBb0IsTUFBTSxhQUFhLENBQUM7QUFRL0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFOUQsSUFBTSxzQkFBc0IsR0FBRyxVQUFDLEtBQXFCLElBQUssT0FBQSxLQUFLLENBQUMsY0FBYyxFQUFwQixDQUFvQixDQUFDOztBQUMvRSxJQUFNLHlCQUF5QixHQUFHLFVBQUMsS0FBcUIsSUFBSyxPQUFBLEtBQUssQ0FBQyxRQUFRLEVBQWQsQ0FBYyxDQUFDOztTQU8xRSxVQUFDLEtBQXVCLElBQUssT0FBQSxLQUFLLENBQUMsU0FBUyxFQUFmLENBQWU7QUFMOUMsTUFBTSxDQUFDLElBQU0saUJBQWlCLEdBRzFCLGNBQWMsQ0FDaEIsbUJBQW1CLEtBRXBCLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FHN0IsY0FBYyxDQUFDLGlCQUFpQixFQUFFLHlCQUF5QixDQUFDLENBQUM7QUFFakUsTUFBTSxDQUFDLElBQU0saUJBQWlCLEdBRzFCLGNBQWMsQ0FBQyxpQkFBaUIsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO1NBS3JCLFVBQUMsUUFBUTtJQUNoRCxPQUFPLFFBQVE7UUFDYixDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBQyxPQUFPLElBQUssT0FBQSxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQWpCLENBQWlCLENBQUM7UUFDM0QsQ0FBQyxDQUFDLElBQUksQ0FBQztBQUNYLENBQUM7QUFQRCxNQUFNLENBQUMsSUFBTSxlQUFlLEdBR3hCLGNBQWMsQ0FBQyxvQkFBb0IsS0FJckMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yLCBNZW1vaXplZFNlbGVjdG9yIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xyXG5pbXBvcnQgeyBMYW5ndWFnZSB9IGZyb20gJy4uLy4uLy4uL21vZGVsL21pc2MubW9kZWwnO1xyXG5pbXBvcnQge1xyXG4gIExhbmd1YWdlc0VudGl0aWVzLFxyXG4gIExhbmd1YWdlc1N0YXRlLFxyXG4gIFNpdGVDb250ZXh0U3RhdGUsXHJcbiAgU3RhdGVXaXRoU2l0ZUNvbnRleHQsXHJcbn0gZnJvbSAnLi4vc3RhdGUnO1xyXG5pbXBvcnQgeyBnZXRTaXRlQ29udGV4dFN0YXRlIH0gZnJvbSAnLi9zaXRlLWNvbnRleHQuc2VsZWN0b3InO1xyXG5cclxuY29uc3QgYWN0aXZlTGFuZ3VhZ2VTZWxlY3RvciA9IChzdGF0ZTogTGFuZ3VhZ2VzU3RhdGUpID0+IHN0YXRlLmFjdGl2ZUxhbmd1YWdlO1xyXG5jb25zdCBsYW5ndWFnZXNFbnRpdGllc1NlbGVjdG9yID0gKHN0YXRlOiBMYW5ndWFnZXNTdGF0ZSkgPT4gc3RhdGUuZW50aXRpZXM7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0TGFuZ3VhZ2VzU3RhdGU6IE1lbW9pemVkU2VsZWN0b3I8XHJcbiAgU3RhdGVXaXRoU2l0ZUNvbnRleHQsXHJcbiAgTGFuZ3VhZ2VzU3RhdGVcclxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxyXG4gIGdldFNpdGVDb250ZXh0U3RhdGUsXHJcbiAgKHN0YXRlOiBTaXRlQ29udGV4dFN0YXRlKSA9PiBzdGF0ZS5sYW5ndWFnZXNcclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRMYW5ndWFnZXNFbnRpdGllczogTWVtb2l6ZWRTZWxlY3RvcjxcclxuICBTdGF0ZVdpdGhTaXRlQ29udGV4dCxcclxuICBMYW5ndWFnZXNFbnRpdGllc1xyXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0TGFuZ3VhZ2VzU3RhdGUsIGxhbmd1YWdlc0VudGl0aWVzU2VsZWN0b3IpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEFjdGl2ZUxhbmd1YWdlOiBNZW1vaXplZFNlbGVjdG9yPFxyXG4gIFN0YXRlV2l0aFNpdGVDb250ZXh0LFxyXG4gIHN0cmluZ1xyXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0TGFuZ3VhZ2VzU3RhdGUsIGFjdGl2ZUxhbmd1YWdlU2VsZWN0b3IpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEFsbExhbmd1YWdlczogTWVtb2l6ZWRTZWxlY3RvcjxcclxuICBTdGF0ZVdpdGhTaXRlQ29udGV4dCxcclxuICBMYW5ndWFnZVtdXHJcbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRMYW5ndWFnZXNFbnRpdGllcywgKGVudGl0aWVzKSA9PiB7XHJcbiAgcmV0dXJuIGVudGl0aWVzXHJcbiAgICA/IE9iamVjdC5rZXlzKGVudGl0aWVzKS5tYXAoKGlzb2NvZGUpID0+IGVudGl0aWVzW2lzb2NvZGVdKVxyXG4gICAgOiBudWxsO1xyXG59KTtcclxuIl19