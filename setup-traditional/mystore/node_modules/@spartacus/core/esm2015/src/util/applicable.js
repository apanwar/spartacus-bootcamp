/**
 * Helper logic to resolve best matching Applicable
 *
 * Finding best match is a two step process:
 * 1. Find all matching applicables
 *    - all applicables for which hasMatch(...matchParams) will return true
 *    - all applicables without hasMatch method (implicit always match)
 * 2. Find the applicable with highest priority
 *    - applicable with highest getPriority(...priorityParams) will win
 *    - applicable without getPriority method is treated as Priotity.NORMAL or 0
 *    - applicables with the same priority are sorted by order of providers, the applicable that was provided later wins
 *
 * @param applicables - array or applicable-like instancese
 * @param matchParams - array of parameters passed for hasMatch calls
 * @param priorityParams - array of parameters passed for getPriority calls
 */
export function resolveApplicable(applicables = [], matchParams = [], priorityParams = []) {
    const matchedApplicables = applicables.filter((applicable) => !applicable.hasMatch || applicable.hasMatch(...matchParams));
    if (matchedApplicables.length < 2) {
        return matchedApplicables[0];
    }
    let lastPriority = -Infinity;
    return matchedApplicables.reduce((acc, curr) => {
        const currPriority = curr.getPriority
            ? curr.getPriority(...priorityParams)
            : 0 /* NORMAL */;
        if (lastPriority > currPriority) {
            return acc;
        }
        lastPriority = currPriority;
        return curr;
    }, undefined);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbGljYWJsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy91dGlsL2FwcGxpY2FibGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0NBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILE1BQU0sVUFBVSxpQkFBaUIsQ0FDL0IsY0FBbUIsRUFBRSxFQUNyQixjQUFxQixFQUFFLEVBQ3ZCLGlCQUF3QixFQUFFO0lBRTFCLE1BQU0sa0JBQWtCLEdBQUcsV0FBVyxDQUFDLE1BQU0sQ0FDM0MsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLFFBQVEsSUFBSSxVQUFVLENBQUMsUUFBUSxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQzVFLENBQUM7SUFFRixJQUFJLGtCQUFrQixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7UUFDakMsT0FBTyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM5QjtJQUVELElBQUksWUFBWSxHQUFHLENBQUMsUUFBUSxDQUFDO0lBQzdCLE9BQU8sa0JBQWtCLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFO1FBQzdDLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxXQUFXO1lBQ25DLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsY0FBYyxDQUFDO1lBQ3JDLENBQUMsZUFBZ0IsQ0FBQztRQUNwQixJQUFJLFlBQVksR0FBRyxZQUFZLEVBQUU7WUFDL0IsT0FBTyxHQUFHLENBQUM7U0FDWjtRQUNELFlBQVksR0FBRyxZQUFZLENBQUM7UUFDNUIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBlbnVtIFByaW9yaXR5IHtcclxuICAvKipcclxuICAgKiBVc2VkIGFzIGZhbGxiYWNrLCB3aGVuIHRoZXJlIGlzIG5vIG90aGVyIG1hdGNoZXNcclxuICAgKi9cclxuICBGQUxMQkFDSyA9IC01MCxcclxuICAvKipcclxuICAgKiBVc2VkIG1haW5seSBpbiBsaWJyYXJpZXMsIGVhc3kgb3ZlcnJpZGFibGVcclxuICAgKi9cclxuICBMT1cgPSAtMTAsXHJcbiAgLyoqXHJcbiAgICogRGVmYXVsdCBwcmlvcml0eVxyXG4gICAqL1xyXG4gIE5PUk1BTCA9IDAsXHJcbiAgLyoqXHJcbiAgICogSGlnaCBwcmlvcml0eSBmb3IgbWF0Y2hlcyB0aGF0IHNob3VsZCB0YWtlIHByZWNlZGVuY2VcclxuICAgKi9cclxuICBISUdIID0gMTAsXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBCYXNlIGludGVyZmFjZSBmb3IgaW1wbGVtZW50aW5nIGFwcGxpY2FibGVzIGluIGEgY29uc2lzdGVudCB3YXlcclxuICpcclxuICogQXBwbGljYWJsZXMgYXJlIG1haW5seSB1c2VkIHRvIGZpbmQgYmVzdCBtYXRjaGluZyBvbmUgZnJvbSBtdWx0aSBwcm92aWRlZFxyXG4gKiBjbGFzc2VzLCBsaWtlIGhhbmRsZXJzLCByZXNvbHZlcnMsIGV0Yy5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXBwbGljYWJsZSB7XHJcbiAgLyoqXHJcbiAgICogUmV0dXJucyB0cnVlIGlmIGFwcGxpY2FibGUgY2FuIGJlIHVzZWQgdG8gaGFuZGxlIHNwZWNpZmllZCBjb25kaXRpb25cclxuICAgKi9cclxuICBoYXNNYXRjaD8oLi4ucGFyYW1zKTogYm9vbGVhbjtcclxuXHJcbiAgLyoqXHJcbiAgICogUmV0dXJucyBwcmlvcml0eSBvciBzY29yZSBmb3Igc3BlY2lmaWVkIGFwcGxpY2FibGUuXHJcbiAgICpcclxuICAgKiBJZiBtdWx0aXBsZSBhcHBsaWNhYmxlcyBjYW4gYmUgYXBwbGllZCB0byBzcGVjaWZpZWQgY29uZGl0aW9uLCB0aGUgb25lXHJcbiAgICogd2l0aCBoaWdoZXN0IHByaW9yaXR5IG9yIHNjb3JlIHdpbnMuXHJcbiAgICovXHJcbiAgZ2V0UHJpb3JpdHk/KC4uLnBhcmFtcyk6IFByaW9yaXR5IHwgbnVtYmVyO1xyXG59XHJcblxyXG4vKipcclxuICogSGVscGVyIGxvZ2ljIHRvIHJlc29sdmUgYmVzdCBtYXRjaGluZyBBcHBsaWNhYmxlXHJcbiAqXHJcbiAqIEZpbmRpbmcgYmVzdCBtYXRjaCBpcyBhIHR3byBzdGVwIHByb2Nlc3M6XHJcbiAqIDEuIEZpbmQgYWxsIG1hdGNoaW5nIGFwcGxpY2FibGVzXHJcbiAqICAgIC0gYWxsIGFwcGxpY2FibGVzIGZvciB3aGljaCBoYXNNYXRjaCguLi5tYXRjaFBhcmFtcykgd2lsbCByZXR1cm4gdHJ1ZVxyXG4gKiAgICAtIGFsbCBhcHBsaWNhYmxlcyB3aXRob3V0IGhhc01hdGNoIG1ldGhvZCAoaW1wbGljaXQgYWx3YXlzIG1hdGNoKVxyXG4gKiAyLiBGaW5kIHRoZSBhcHBsaWNhYmxlIHdpdGggaGlnaGVzdCBwcmlvcml0eVxyXG4gKiAgICAtIGFwcGxpY2FibGUgd2l0aCBoaWdoZXN0IGdldFByaW9yaXR5KC4uLnByaW9yaXR5UGFyYW1zKSB3aWxsIHdpblxyXG4gKiAgICAtIGFwcGxpY2FibGUgd2l0aG91dCBnZXRQcmlvcml0eSBtZXRob2QgaXMgdHJlYXRlZCBhcyBQcmlvdGl0eS5OT1JNQUwgb3IgMFxyXG4gKiAgICAtIGFwcGxpY2FibGVzIHdpdGggdGhlIHNhbWUgcHJpb3JpdHkgYXJlIHNvcnRlZCBieSBvcmRlciBvZiBwcm92aWRlcnMsIHRoZSBhcHBsaWNhYmxlIHRoYXQgd2FzIHByb3ZpZGVkIGxhdGVyIHdpbnNcclxuICpcclxuICogQHBhcmFtIGFwcGxpY2FibGVzIC0gYXJyYXkgb3IgYXBwbGljYWJsZS1saWtlIGluc3RhbmNlc2VcclxuICogQHBhcmFtIG1hdGNoUGFyYW1zIC0gYXJyYXkgb2YgcGFyYW1ldGVycyBwYXNzZWQgZm9yIGhhc01hdGNoIGNhbGxzXHJcbiAqIEBwYXJhbSBwcmlvcml0eVBhcmFtcyAtIGFycmF5IG9mIHBhcmFtZXRlcnMgcGFzc2VkIGZvciBnZXRQcmlvcml0eSBjYWxsc1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVBcHBsaWNhYmxlPFQgZXh0ZW5kcyBBcHBsaWNhYmxlPihcclxuICBhcHBsaWNhYmxlczogVFtdID0gW10sXHJcbiAgbWF0Y2hQYXJhbXM6IGFueVtdID0gW10sXHJcbiAgcHJpb3JpdHlQYXJhbXM6IGFueVtdID0gW11cclxuKTogVCB8IHVuZGVmaW5lZCB7XHJcbiAgY29uc3QgbWF0Y2hlZEFwcGxpY2FibGVzID0gYXBwbGljYWJsZXMuZmlsdGVyKFxyXG4gICAgKGFwcGxpY2FibGUpID0+ICFhcHBsaWNhYmxlLmhhc01hdGNoIHx8IGFwcGxpY2FibGUuaGFzTWF0Y2goLi4ubWF0Y2hQYXJhbXMpXHJcbiAgKTtcclxuXHJcbiAgaWYgKG1hdGNoZWRBcHBsaWNhYmxlcy5sZW5ndGggPCAyKSB7XHJcbiAgICByZXR1cm4gbWF0Y2hlZEFwcGxpY2FibGVzWzBdO1xyXG4gIH1cclxuXHJcbiAgbGV0IGxhc3RQcmlvcml0eSA9IC1JbmZpbml0eTtcclxuICByZXR1cm4gbWF0Y2hlZEFwcGxpY2FibGVzLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiB7XHJcbiAgICBjb25zdCBjdXJyUHJpb3JpdHkgPSBjdXJyLmdldFByaW9yaXR5XHJcbiAgICAgID8gY3Vyci5nZXRQcmlvcml0eSguLi5wcmlvcml0eVBhcmFtcylcclxuICAgICAgOiBQcmlvcml0eS5OT1JNQUw7XHJcbiAgICBpZiAobGFzdFByaW9yaXR5ID4gY3VyclByaW9yaXR5KSB7XHJcbiAgICAgIHJldHVybiBhY2M7XHJcbiAgICB9XHJcbiAgICBsYXN0UHJpb3JpdHkgPSBjdXJyUHJpb3JpdHk7XHJcbiAgICByZXR1cm4gY3VycjtcclxuICB9LCB1bmRlZmluZWQpO1xyXG59XHJcbiJdfQ==