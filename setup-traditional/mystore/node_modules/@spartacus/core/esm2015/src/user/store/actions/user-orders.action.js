import { StateUtils } from '../../../state/utils/index';
import { USER_ORDERS } from '../user-state';
export const LOAD_USER_ORDERS = '[User] Load User Orders';
export const LOAD_USER_ORDERS_FAIL = '[User] Load User Orders Fail';
export const LOAD_USER_ORDERS_SUCCESS = '[User] Load User Orders Success';
export const CLEAR_USER_ORDERS = '[User] Clear User Orders';
export class LoadUserOrders extends StateUtils.LoaderLoadAction {
    constructor(payload) {
        super(USER_ORDERS);
        this.payload = payload;
        this.type = LOAD_USER_ORDERS;
    }
}
export class LoadUserOrdersFail extends StateUtils.LoaderFailAction {
    constructor(payload) {
        super(USER_ORDERS, payload);
        this.payload = payload;
        this.type = LOAD_USER_ORDERS_FAIL;
    }
}
export class LoadUserOrdersSuccess extends StateUtils.LoaderSuccessAction {
    constructor(payload) {
        super(USER_ORDERS);
        this.payload = payload;
        this.type = LOAD_USER_ORDERS_SUCCESS;
    }
}
export class ClearUserOrders extends StateUtils.LoaderResetAction {
    constructor() {
        super(USER_ORDERS);
        this.type = CLEAR_USER_ORDERS;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1vcmRlcnMuYWN0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9jb3JlLyIsInNvdXJjZXMiOlsic3JjL3VzZXIvc3RvcmUvYWN0aW9ucy91c2VyLW9yZGVycy5hY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFNUMsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcseUJBQXlCLENBQUM7QUFDMUQsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsOEJBQThCLENBQUM7QUFDcEUsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsaUNBQWlDLENBQUM7QUFDMUUsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsMEJBQTBCLENBQUM7QUFFNUQsTUFBTSxPQUFPLGNBQWUsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRTdELFlBQ1MsT0FLTjtRQUVELEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztRQVBaLFlBQU8sR0FBUCxPQUFPLENBS2I7UUFQTSxTQUFJLEdBQUcsZ0JBQWdCLENBQUM7SUFVakMsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLGtCQUFtQixTQUFRLFVBQVUsQ0FBQyxnQkFBZ0I7SUFFakUsWUFBbUIsT0FBWTtRQUM3QixLQUFLLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRFgsWUFBTyxHQUFQLE9BQU8sQ0FBSztRQUR0QixTQUFJLEdBQUcscUJBQXFCLENBQUM7SUFHdEMsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLHFCQUFzQixTQUFRLFVBQVUsQ0FBQyxtQkFBbUI7SUFFdkUsWUFBbUIsT0FBeUI7UUFDMUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBREYsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFEbkMsU0FBSSxHQUFHLHdCQUF3QixDQUFDO0lBR3pDLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxlQUFnQixTQUFRLFVBQVUsQ0FBQyxpQkFBaUI7SUFFL0Q7UUFDRSxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7UUFGWixTQUFJLEdBQUcsaUJBQWlCLENBQUM7SUFHbEMsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3JkZXJIaXN0b3J5TGlzdCB9IGZyb20gJy4uLy4uLy4uL21vZGVsL29yZGVyLm1vZGVsJztcclxuaW1wb3J0IHsgU3RhdGVVdGlscyB9IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2luZGV4JztcclxuaW1wb3J0IHsgVVNFUl9PUkRFUlMgfSBmcm9tICcuLi91c2VyLXN0YXRlJztcclxuXHJcbmV4cG9ydCBjb25zdCBMT0FEX1VTRVJfT1JERVJTID0gJ1tVc2VyXSBMb2FkIFVzZXIgT3JkZXJzJztcclxuZXhwb3J0IGNvbnN0IExPQURfVVNFUl9PUkRFUlNfRkFJTCA9ICdbVXNlcl0gTG9hZCBVc2VyIE9yZGVycyBGYWlsJztcclxuZXhwb3J0IGNvbnN0IExPQURfVVNFUl9PUkRFUlNfU1VDQ0VTUyA9ICdbVXNlcl0gTG9hZCBVc2VyIE9yZGVycyBTdWNjZXNzJztcclxuZXhwb3J0IGNvbnN0IENMRUFSX1VTRVJfT1JERVJTID0gJ1tVc2VyXSBDbGVhciBVc2VyIE9yZGVycyc7XHJcblxyXG5leHBvcnQgY2xhc3MgTG9hZFVzZXJPcmRlcnMgZXh0ZW5kcyBTdGF0ZVV0aWxzLkxvYWRlckxvYWRBY3Rpb24ge1xyXG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX1VTRVJfT1JERVJTO1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHVibGljIHBheWxvYWQ6IHtcclxuICAgICAgdXNlcklkOiBzdHJpbmc7XHJcbiAgICAgIHBhZ2VTaXplOiBudW1iZXI7XHJcbiAgICAgIGN1cnJlbnRQYWdlPzogbnVtYmVyO1xyXG4gICAgICBzb3J0Pzogc3RyaW5nO1xyXG4gICAgfVxyXG4gICkge1xyXG4gICAgc3VwZXIoVVNFUl9PUkRFUlMpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIExvYWRVc2VyT3JkZXJzRmFpbCBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyRmFpbEFjdGlvbiB7XHJcbiAgcmVhZG9ubHkgdHlwZSA9IExPQURfVVNFUl9PUkRFUlNfRkFJTDtcclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogYW55KSB7XHJcbiAgICBzdXBlcihVU0VSX09SREVSUywgcGF5bG9hZCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgTG9hZFVzZXJPcmRlcnNTdWNjZXNzIGV4dGVuZHMgU3RhdGVVdGlscy5Mb2FkZXJTdWNjZXNzQWN0aW9uIHtcclxuICByZWFkb25seSB0eXBlID0gTE9BRF9VU0VSX09SREVSU19TVUNDRVNTO1xyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBPcmRlckhpc3RvcnlMaXN0KSB7XHJcbiAgICBzdXBlcihVU0VSX09SREVSUyk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQ2xlYXJVc2VyT3JkZXJzIGV4dGVuZHMgU3RhdGVVdGlscy5Mb2FkZXJSZXNldEFjdGlvbiB7XHJcbiAgcmVhZG9ubHkgdHlwZSA9IENMRUFSX1VTRVJfT1JERVJTO1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoVVNFUl9PUkRFUlMpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHR5cGUgVXNlck9yZGVyc0FjdGlvbiA9XHJcbiAgfCBMb2FkVXNlck9yZGVyc1xyXG4gIHwgTG9hZFVzZXJPcmRlcnNGYWlsXHJcbiAgfCBMb2FkVXNlck9yZGVyc1N1Y2Nlc3NcclxuICB8IENsZWFyVXNlck9yZGVycztcclxuIl19