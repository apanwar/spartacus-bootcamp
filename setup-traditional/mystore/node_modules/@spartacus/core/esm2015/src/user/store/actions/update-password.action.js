import { PROCESS_FEATURE } from '../../../process/store/process-state';
import { StateUtils } from '../../../state/utils/index';
import { UPDATE_PASSWORD_PROCESS_ID } from '../user-state';
export const UPDATE_PASSWORD = '[User] Update Password';
export const UPDATE_PASSWORD_FAIL = '[User] Update Password Fail';
export const UPDATE_PASSWORD_SUCCESS = '[User] Update Password Success';
export const UPDATE_PASSWORD_RESET = '[User] Reset Update Password Process State';
export class UpdatePassword extends StateUtils.EntityLoadAction {
    constructor(payload) {
        super(PROCESS_FEATURE, UPDATE_PASSWORD_PROCESS_ID);
        this.payload = payload;
        this.type = UPDATE_PASSWORD;
    }
}
export class UpdatePasswordFail extends StateUtils.EntityFailAction {
    constructor(payload) {
        super(PROCESS_FEATURE, UPDATE_PASSWORD_PROCESS_ID, payload);
        this.payload = payload;
        this.type = UPDATE_PASSWORD_FAIL;
    }
}
export class UpdatePasswordSuccess extends StateUtils.EntitySuccessAction {
    constructor() {
        super(PROCESS_FEATURE, UPDATE_PASSWORD_PROCESS_ID);
        this.type = UPDATE_PASSWORD_SUCCESS;
    }
}
export class UpdatePasswordReset extends StateUtils.EntityLoaderResetAction {
    constructor() {
        super(PROCESS_FEATURE, UPDATE_PASSWORD_PROCESS_ID);
        this.type = UPDATE_PASSWORD_RESET;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBkYXRlLXBhc3N3b3JkLmFjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy91c2VyL3N0b3JlL2FjdGlvbnMvdXBkYXRlLXBhc3N3b3JkLmFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdkUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3hELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzRCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsd0JBQXdCLENBQUM7QUFDeEQsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsNkJBQTZCLENBQUM7QUFDbEUsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsZ0NBQWdDLENBQUM7QUFDeEUsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQ2hDLDRDQUE0QyxDQUFDO0FBRS9DLE1BQU0sT0FBTyxjQUFlLFNBQVEsVUFBVSxDQUFDLGdCQUFnQjtJQUU3RCxZQUNTLE9BQXFFO1FBRTVFLEtBQUssQ0FBQyxlQUFlLEVBQUUsMEJBQTBCLENBQUMsQ0FBQztRQUY1QyxZQUFPLEdBQVAsT0FBTyxDQUE4RDtRQUZyRSxTQUFJLEdBQUcsZUFBZSxDQUFDO0lBS2hDLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRWpFLFlBQW1CLE9BQVk7UUFDN0IsS0FBSyxDQUFDLGVBQWUsRUFBRSwwQkFBMEIsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUQzQyxZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRyxvQkFBb0IsQ0FBQztJQUdyQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8scUJBQXNCLFNBQVEsVUFBVSxDQUFDLG1CQUFtQjtJQUV2RTtRQUNFLEtBQUssQ0FBQyxlQUFlLEVBQUUsMEJBQTBCLENBQUMsQ0FBQztRQUY1QyxTQUFJLEdBQUcsdUJBQXVCLENBQUM7SUFHeEMsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLG1CQUFvQixTQUFRLFVBQVUsQ0FBQyx1QkFBdUI7SUFFekU7UUFDRSxLQUFLLENBQUMsZUFBZSxFQUFFLDBCQUEwQixDQUFDLENBQUM7UUFGNUMsU0FBSSxHQUFHLHFCQUFxQixDQUFDO0lBR3RDLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBST0NFU1NfRkVBVFVSRSB9IGZyb20gJy4uLy4uLy4uL3Byb2Nlc3Mvc3RvcmUvcHJvY2Vzcy1zdGF0ZSc7XHJcbmltcG9ydCB7IFN0YXRlVXRpbHMgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9pbmRleCc7XHJcbmltcG9ydCB7IFVQREFURV9QQVNTV09SRF9QUk9DRVNTX0lEIH0gZnJvbSAnLi4vdXNlci1zdGF0ZSc7XHJcblxyXG5leHBvcnQgY29uc3QgVVBEQVRFX1BBU1NXT1JEID0gJ1tVc2VyXSBVcGRhdGUgUGFzc3dvcmQnO1xyXG5leHBvcnQgY29uc3QgVVBEQVRFX1BBU1NXT1JEX0ZBSUwgPSAnW1VzZXJdIFVwZGF0ZSBQYXNzd29yZCBGYWlsJztcclxuZXhwb3J0IGNvbnN0IFVQREFURV9QQVNTV09SRF9TVUNDRVNTID0gJ1tVc2VyXSBVcGRhdGUgUGFzc3dvcmQgU3VjY2Vzcyc7XHJcbmV4cG9ydCBjb25zdCBVUERBVEVfUEFTU1dPUkRfUkVTRVQgPVxyXG4gICdbVXNlcl0gUmVzZXQgVXBkYXRlIFBhc3N3b3JkIFByb2Nlc3MgU3RhdGUnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFVwZGF0ZVBhc3N3b3JkIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlMb2FkQWN0aW9uIHtcclxuICByZWFkb25seSB0eXBlID0gVVBEQVRFX1BBU1NXT1JEO1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHVibGljIHBheWxvYWQ6IHsgdXNlcklkOiBzdHJpbmc7IG9sZFBhc3N3b3JkOiBzdHJpbmc7IG5ld1Bhc3N3b3JkOiBzdHJpbmcgfVxyXG4gICkge1xyXG4gICAgc3VwZXIoUFJPQ0VTU19GRUFUVVJFLCBVUERBVEVfUEFTU1dPUkRfUFJPQ0VTU19JRCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVXBkYXRlUGFzc3dvcmRGYWlsIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlGYWlsQWN0aW9uIHtcclxuICByZWFkb25seSB0eXBlID0gVVBEQVRFX1BBU1NXT1JEX0ZBSUw7XHJcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge1xyXG4gICAgc3VwZXIoUFJPQ0VTU19GRUFUVVJFLCBVUERBVEVfUEFTU1dPUkRfUFJPQ0VTU19JRCwgcGF5bG9hZCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVXBkYXRlUGFzc3dvcmRTdWNjZXNzIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlTdWNjZXNzQWN0aW9uIHtcclxuICByZWFkb25seSB0eXBlID0gVVBEQVRFX1BBU1NXT1JEX1NVQ0NFU1M7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcihQUk9DRVNTX0ZFQVRVUkUsIFVQREFURV9QQVNTV09SRF9QUk9DRVNTX0lEKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBVcGRhdGVQYXNzd29yZFJlc2V0IGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJSZXNldEFjdGlvbiB7XHJcbiAgcmVhZG9ubHkgdHlwZSA9IFVQREFURV9QQVNTV09SRF9SRVNFVDtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKFBST0NFU1NfRkVBVFVSRSwgVVBEQVRFX1BBU1NXT1JEX1BST0NFU1NfSUQpO1xyXG4gIH1cclxufVxyXG5cclxuLy8gYWN0aW9uIHR5cGVzXHJcbmV4cG9ydCB0eXBlIFVwZGF0ZVBhc3N3b3JkQWN0aW9uID1cclxuICB8IFVwZGF0ZVBhc3N3b3JkXHJcbiAgfCBVcGRhdGVQYXNzd29yZEZhaWxcclxuICB8IFVwZGF0ZVBhc3N3b3JkU3VjY2Vzc1xyXG4gIHwgVXBkYXRlUGFzc3dvcmRSZXNldDtcclxuIl19