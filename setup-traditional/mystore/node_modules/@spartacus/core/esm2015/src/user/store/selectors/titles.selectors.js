import { createSelector } from '@ngrx/store';
import { getUserState } from './feature.selector';
const ɵ0 = (state) => state.titles;
export const getTitlesState = createSelector(getUserState, ɵ0);
const ɵ1 = (state) => state.entities;
export const getTitlesEntites = createSelector(getTitlesState, ɵ1);
const ɵ2 = (entites) => Object.keys(entites).map((code) => entites[code]);
export const getAllTitles = createSelector(getTitlesEntites, ɵ2);
export const titleSelectorFactory = (code) => createSelector(getTitlesEntites, (entities) => Object.keys(entities).length !== 0 ? entities[code] : null);
export { ɵ0, ɵ1, ɵ2 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGl0bGVzLnNlbGVjdG9ycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy91c2VyL3N0b3JlL3NlbGVjdG9ycy90aXRsZXMuc2VsZWN0b3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQW9CLE1BQU0sYUFBYSxDQUFDO0FBUS9ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztXQUtqQixDQUFDLEtBQWdCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxNQUFNO0FBSG5FLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FHdkIsY0FBYyxDQUFDLFlBQVksS0FBcUMsQ0FBQztXQUtsQyxDQUFDLEtBQWtCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxRQUFRO0FBSHpFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUd6QixjQUFjLENBQUMsY0FBYyxLQUF5QyxDQUFDO1dBS3RDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FDL0MsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUpuRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBR3JCLGNBQWMsQ0FBQyxnQkFBZ0IsS0FFbEMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLENBQ2xDLElBQVksRUFDNEIsRUFBRSxDQUMxQyxjQUFjLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUM1QyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IsIE1lbW9pemVkU2VsZWN0b3IgfSBmcm9tICdAbmdyeC9zdG9yZSc7XHJcbmltcG9ydCB7IFRpdGxlIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvbWlzYy5tb2RlbCc7XHJcbmltcG9ydCB7XHJcbiAgU3RhdGVXaXRoVXNlcixcclxuICBUaXRsZUVudGl0aWVzLFxyXG4gIFRpdGxlc1N0YXRlLFxyXG4gIFVzZXJTdGF0ZSxcclxufSBmcm9tICcuLi91c2VyLXN0YXRlJztcclxuaW1wb3J0IHsgZ2V0VXNlclN0YXRlIH0gZnJvbSAnLi9mZWF0dXJlLnNlbGVjdG9yJztcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRUaXRsZXNTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcclxuICBTdGF0ZVdpdGhVc2VyLFxyXG4gIFRpdGxlc1N0YXRlXHJcbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRVc2VyU3RhdGUsIChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS50aXRsZXMpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldFRpdGxlc0VudGl0ZXM6IE1lbW9pemVkU2VsZWN0b3I8XHJcbiAgU3RhdGVXaXRoVXNlcixcclxuICBUaXRsZUVudGl0aWVzXHJcbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRUaXRsZXNTdGF0ZSwgKHN0YXRlOiBUaXRsZXNTdGF0ZSkgPT4gc3RhdGUuZW50aXRpZXMpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEFsbFRpdGxlczogTWVtb2l6ZWRTZWxlY3RvcjxcclxuICBTdGF0ZVdpdGhVc2VyLFxyXG4gIFRpdGxlW11cclxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldFRpdGxlc0VudGl0ZXMsIChlbnRpdGVzKSA9PlxyXG4gIE9iamVjdC5rZXlzKGVudGl0ZXMpLm1hcCgoY29kZSkgPT4gZW50aXRlc1tjb2RlXSlcclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCB0aXRsZVNlbGVjdG9yRmFjdG9yeSA9IChcclxuICBjb2RlOiBzdHJpbmdcclxuKTogTWVtb2l6ZWRTZWxlY3RvcjxTdGF0ZVdpdGhVc2VyLCBUaXRsZT4gPT5cclxuICBjcmVhdGVTZWxlY3RvcihnZXRUaXRsZXNFbnRpdGVzLCAoZW50aXRpZXMpID0+XHJcbiAgICBPYmplY3Qua2V5cyhlbnRpdGllcykubGVuZ3RoICE9PSAwID8gZW50aXRpZXNbY29kZV0gOiBudWxsXHJcbiAgKTtcclxuIl19