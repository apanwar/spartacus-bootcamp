import { createSelector } from '@ngrx/store';
import { getUserState } from './feature.selector';
import { StateUtils } from '../../../state/utils/index';
const ɵ0 = (state) => state.orderReturn;
export const getOrderReturnRequestState = createSelector(getUserState, ɵ0);
const ɵ1 = (state) => StateUtils.loaderValueSelector(state);
export const getOrderReturnRequest = createSelector(getOrderReturnRequestState, ɵ1);
const ɵ2 = (state) => StateUtils.loaderLoadingSelector(state);
export const getOrderReturnRequestLoading = createSelector(getOrderReturnRequestState, ɵ2);
const ɵ3 = (state) => StateUtils.loaderSuccessSelector(state) &&
    !StateUtils.loaderLoadingSelector(state);
export const getOrderReturnRequestSuccess = createSelector(getOrderReturnRequestState, ɵ3);
const ɵ4 = (state) => state.orderReturnList;
export const getOrderReturnRequestListState = createSelector(getUserState, ɵ4);
const ɵ5 = (state) => StateUtils.loaderValueSelector(state);
export const getOrderReturnRequestList = createSelector(getOrderReturnRequestListState, ɵ5);
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItcmV0dXJuLXJlcXVlc3Quc2VsZWN0b3JzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9jb3JlLyIsInNvdXJjZXMiOlsic3JjL3VzZXIvc3RvcmUvc2VsZWN0b3JzL29yZGVyLXJldHVybi1yZXF1ZXN0LnNlbGVjdG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFvQixNQUFNLGFBQWEsQ0FBQztBQUcvRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFbEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO1dBS3ZCLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLFdBQVc7QUFIeEUsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBR25DLGNBQWMsQ0FBQyxZQUFZLEtBQTBDLENBQUM7V0FPeEUsQ0FBQyxLQUFpQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDO0FBTDlFLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUc5QixjQUFjLENBQ2hCLDBCQUEwQixLQUUzQixDQUFDO1dBT0EsQ0FBQyxLQUFpQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO0FBTGhGLE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUdyQyxjQUFjLENBQ2hCLDBCQUEwQixLQUUzQixDQUFDO1dBT0EsQ0FBQyxLQUFpQyxFQUFFLEVBQUUsQ0FDcEMsVUFBVSxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQztJQUN2QyxDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUM7QUFQNUMsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBR3JDLGNBQWMsQ0FDaEIsMEJBQTBCLEtBSTNCLENBQUM7V0FLK0IsQ0FBQyxLQUFnQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsZUFBZTtBQUg1RSxNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FHdkMsY0FBYyxDQUFDLFlBQVksS0FBOEMsQ0FBQztXQU81RSxDQUFDLEtBQXFDLEVBQUUsRUFBRSxDQUN4QyxVQUFVLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDO0FBTnpDLE1BQU0sQ0FBQyxNQUFNLHlCQUF5QixHQUdsQyxjQUFjLENBQ2hCLDhCQUE4QixLQUcvQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IsIE1lbW9pemVkU2VsZWN0b3IgfSBmcm9tICdAbmdyeC9zdG9yZSc7XHJcbmltcG9ydCB7IFJldHVyblJlcXVlc3QsIFJldHVyblJlcXVlc3RMaXN0IH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvb3JkZXIubW9kZWwnO1xyXG5pbXBvcnQgeyBTdGF0ZVdpdGhVc2VyLCBVc2VyU3RhdGUgfSBmcm9tICcuLi91c2VyLXN0YXRlJztcclxuaW1wb3J0IHsgZ2V0VXNlclN0YXRlIH0gZnJvbSAnLi9mZWF0dXJlLnNlbGVjdG9yJztcclxuaW1wb3J0IHsgTG9hZGVyU3RhdGUgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9sb2FkZXIvbG9hZGVyLXN0YXRlJztcclxuaW1wb3J0IHsgU3RhdGVVdGlscyB9IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2luZGV4JztcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRPcmRlclJldHVyblJlcXVlc3RTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcclxuICBTdGF0ZVdpdGhVc2VyLFxyXG4gIExvYWRlclN0YXRlPFJldHVyblJlcXVlc3Q+XHJcbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRVc2VyU3RhdGUsIChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS5vcmRlclJldHVybik7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0OiBNZW1vaXplZFNlbGVjdG9yPFxyXG4gIFN0YXRlV2l0aFVzZXIsXHJcbiAgUmV0dXJuUmVxdWVzdFxyXG4+ID0gY3JlYXRlU2VsZWN0b3IoXHJcbiAgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0U3RhdGUsXHJcbiAgKHN0YXRlOiBMb2FkZXJTdGF0ZTxSZXR1cm5SZXF1ZXN0PikgPT4gU3RhdGVVdGlscy5sb2FkZXJWYWx1ZVNlbGVjdG9yKHN0YXRlKVxyXG4pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldE9yZGVyUmV0dXJuUmVxdWVzdExvYWRpbmc6IE1lbW9pemVkU2VsZWN0b3I8XHJcbiAgU3RhdGVXaXRoVXNlcixcclxuICBib29sZWFuXHJcbj4gPSBjcmVhdGVTZWxlY3RvcihcclxuICBnZXRPcmRlclJldHVyblJlcXVlc3RTdGF0ZSxcclxuICAoc3RhdGU6IExvYWRlclN0YXRlPFJldHVyblJlcXVlc3Q+KSA9PiBTdGF0ZVV0aWxzLmxvYWRlckxvYWRpbmdTZWxlY3RvcihzdGF0ZSlcclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRPcmRlclJldHVyblJlcXVlc3RTdWNjZXNzOiBNZW1vaXplZFNlbGVjdG9yPFxyXG4gIFN0YXRlV2l0aFVzZXIsXHJcbiAgYm9vbGVhblxyXG4+ID0gY3JlYXRlU2VsZWN0b3IoXHJcbiAgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0U3RhdGUsXHJcbiAgKHN0YXRlOiBMb2FkZXJTdGF0ZTxSZXR1cm5SZXF1ZXN0PikgPT5cclxuICAgIFN0YXRlVXRpbHMubG9hZGVyU3VjY2Vzc1NlbGVjdG9yKHN0YXRlKSAmJlxyXG4gICAgIVN0YXRlVXRpbHMubG9hZGVyTG9hZGluZ1NlbGVjdG9yKHN0YXRlKVxyXG4pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldE9yZGVyUmV0dXJuUmVxdWVzdExpc3RTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcclxuICBTdGF0ZVdpdGhVc2VyLFxyXG4gIExvYWRlclN0YXRlPFJldHVyblJlcXVlc3RMaXN0PlxyXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0VXNlclN0YXRlLCAoc3RhdGU6IFVzZXJTdGF0ZSkgPT4gc3RhdGUub3JkZXJSZXR1cm5MaXN0KTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRPcmRlclJldHVyblJlcXVlc3RMaXN0OiBNZW1vaXplZFNlbGVjdG9yPFxyXG4gIFN0YXRlV2l0aFVzZXIsXHJcbiAgUmV0dXJuUmVxdWVzdExpc3RcclxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxyXG4gIGdldE9yZGVyUmV0dXJuUmVxdWVzdExpc3RTdGF0ZSxcclxuICAoc3RhdGU6IExvYWRlclN0YXRlPFJldHVyblJlcXVlc3RMaXN0PikgPT5cclxuICAgIFN0YXRlVXRpbHMubG9hZGVyVmFsdWVTZWxlY3RvcihzdGF0ZSlcclxuKTtcclxuIl19