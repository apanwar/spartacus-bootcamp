var GlobalMessageModule_1;
import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { EffectsModule } from '@ngrx/effects';
import { errorHandlers, httpErrorInterceptors, } from './http-interceptors/index';
import { GlobalMessageStoreModule } from './store/global-message-store.module';
import { GlobalMessageEffect } from './store/effects/global-message.effect';
import { provideDefaultConfigFactory } from '../config/config.module';
import { defaultGlobalMessageConfigFactory } from './config/default-global-message-config';
let GlobalMessageModule = GlobalMessageModule_1 = class GlobalMessageModule {
    static forRoot() {
        return {
            ngModule: GlobalMessageModule_1,
            providers: [...errorHandlers, ...httpErrorInterceptors],
        };
    }
};
GlobalMessageModule = GlobalMessageModule_1 = __decorate([
    NgModule({
        imports: [
            GlobalMessageStoreModule,
            EffectsModule.forFeature([GlobalMessageEffect]),
        ],
        providers: [provideDefaultConfigFactory(defaultGlobalMessageConfigFactory)],
    })
], GlobalMessageModule);
export { GlobalMessageModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLW1lc3NhZ2UubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9jb3JlLyIsInNvdXJjZXMiOlsic3JjL2dsb2JhbC1tZXNzYWdlL2dsb2JhbC1tZXNzYWdlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUMsT0FBTyxFQUNMLGFBQWEsRUFDYixxQkFBcUIsR0FDdEIsTUFBTSwyQkFBMkIsQ0FBQztBQUNuQyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUU1RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQVMzRixJQUFhLG1CQUFtQiwyQkFBaEMsTUFBYSxtQkFBbUI7SUFDOUIsTUFBTSxDQUFDLE9BQU87UUFDWixPQUFPO1lBQ0wsUUFBUSxFQUFFLHFCQUFtQjtZQUM3QixTQUFTLEVBQUUsQ0FBQyxHQUFHLGFBQWEsRUFBRSxHQUFHLHFCQUFxQixDQUFDO1NBQ3hELENBQUM7SUFDSixDQUFDO0NBQ0YsQ0FBQTtBQVBZLG1CQUFtQjtJQVAvQixRQUFRLENBQUM7UUFDUixPQUFPLEVBQUU7WUFDUCx3QkFBd0I7WUFDeEIsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUM7U0FDaEQ7UUFDRCxTQUFTLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0tBQzVFLENBQUM7R0FDVyxtQkFBbUIsQ0FPL0I7U0FQWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBFZmZlY3RzTW9kdWxlIH0gZnJvbSAnQG5ncngvZWZmZWN0cyc7XHJcbmltcG9ydCB7XHJcbiAgZXJyb3JIYW5kbGVycyxcclxuICBodHRwRXJyb3JJbnRlcmNlcHRvcnMsXHJcbn0gZnJvbSAnLi9odHRwLWludGVyY2VwdG9ycy9pbmRleCc7XHJcbmltcG9ydCB7IEdsb2JhbE1lc3NhZ2VTdG9yZU1vZHVsZSB9IGZyb20gJy4vc3RvcmUvZ2xvYmFsLW1lc3NhZ2Utc3RvcmUubW9kdWxlJztcclxuaW1wb3J0IHsgR2xvYmFsTWVzc2FnZUVmZmVjdCB9IGZyb20gJy4vc3RvcmUvZWZmZWN0cy9nbG9iYWwtbWVzc2FnZS5lZmZlY3QnO1xyXG5cclxuaW1wb3J0IHsgcHJvdmlkZURlZmF1bHRDb25maWdGYWN0b3J5IH0gZnJvbSAnLi4vY29uZmlnL2NvbmZpZy5tb2R1bGUnO1xyXG5pbXBvcnQgeyBkZWZhdWx0R2xvYmFsTWVzc2FnZUNvbmZpZ0ZhY3RvcnkgfSBmcm9tICcuL2NvbmZpZy9kZWZhdWx0LWdsb2JhbC1tZXNzYWdlLWNvbmZpZyc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIEdsb2JhbE1lc3NhZ2VTdG9yZU1vZHVsZSxcclxuICAgIEVmZmVjdHNNb2R1bGUuZm9yRmVhdHVyZShbR2xvYmFsTWVzc2FnZUVmZmVjdF0pLFxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOiBbcHJvdmlkZURlZmF1bHRDb25maWdGYWN0b3J5KGRlZmF1bHRHbG9iYWxNZXNzYWdlQ29uZmlnRmFjdG9yeSldLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgR2xvYmFsTWVzc2FnZU1vZHVsZSB7XHJcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxHbG9iYWxNZXNzYWdlTW9kdWxlPiB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogR2xvYmFsTWVzc2FnZU1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbLi4uZXJyb3JIYW5kbGVycywgLi4uaHR0cEVycm9ySW50ZXJjZXB0b3JzXSxcclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==