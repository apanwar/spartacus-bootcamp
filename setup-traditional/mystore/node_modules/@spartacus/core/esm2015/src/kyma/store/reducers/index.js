import { InjectionToken } from '@angular/core';
import { AuthActions } from '../../../auth/store/actions/index';
import { loaderReducer } from '../../../state/utils/loader/loader.reducer';
import { OPEN_ID_TOKEN_DATA } from '../kyma-state';
export function getReducers() {
    return {
        openIdToken: loaderReducer(OPEN_ID_TOKEN_DATA),
    };
}
export const reducerToken = new InjectionToken('KymaReducers');
export const reducerProvider = {
    provide: reducerToken,
    useFactory: getReducers,
};
export function clearKymaState(reducer) {
    return function (state, action) {
        if (action.type === AuthActions.LOGOUT) {
            state = Object.assign(Object.assign({}, state), { openIdToken: undefined });
        }
        return reducer(state, action);
    };
}
export const metaReducers = [clearKymaState];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL2NvcmUvIiwic291cmNlcyI6WyJzcmMva3ltYS9zdG9yZS9yZWR1Y2Vycy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBT3pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNoRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFFM0UsT0FBTyxFQUFhLGtCQUFrQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlELE1BQU0sVUFBVSxXQUFXO0lBQ3pCLE9BQU87UUFDTCxXQUFXLEVBQUUsYUFBYSxDQUFjLGtCQUFrQixDQUFDO0tBQzVELENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUVwQixJQUFJLGNBQWMsQ0FBOEIsY0FBYyxDQUFDLENBQUM7QUFFckUsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFhO0lBQ3ZDLE9BQU8sRUFBRSxZQUFZO0lBQ3JCLFVBQVUsRUFBRSxXQUFXO0NBQ3hCLENBQUM7QUFFRixNQUFNLFVBQVUsY0FBYyxDQUM1QixPQUF5QztJQUV6QyxPQUFPLFVBQVUsS0FBSyxFQUFFLE1BQU07UUFDNUIsSUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLFdBQVcsQ0FBQyxNQUFNLEVBQUU7WUFDdEMsS0FBSyxtQ0FDQSxLQUFLLEtBQ1IsV0FBVyxFQUFFLFNBQVMsR0FDdkIsQ0FBQztTQUNIO1FBQ0QsT0FBTyxPQUFPLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2hDLENBQUMsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQXVCLENBQUMsY0FBYyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiwgUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICBBY3Rpb24sXHJcbiAgQWN0aW9uUmVkdWNlcixcclxuICBBY3Rpb25SZWR1Y2VyTWFwLFxyXG4gIE1ldGFSZWR1Y2VyLFxyXG59IGZyb20gJ0BuZ3J4L3N0b3JlJztcclxuaW1wb3J0IHsgQXV0aEFjdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9hdXRoL3N0b3JlL2FjdGlvbnMvaW5kZXgnO1xyXG5pbXBvcnQgeyBsb2FkZXJSZWR1Y2VyIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvbG9hZGVyL2xvYWRlci5yZWR1Y2VyJztcclxuaW1wb3J0IHsgT3BlbklkVG9rZW4gfSBmcm9tICcuLi8uLi9tb2RlbHMva3ltYS10b2tlbi10eXBlcy5tb2RlbCc7XHJcbmltcG9ydCB7IEt5bWFTdGF0ZSwgT1BFTl9JRF9UT0tFTl9EQVRBIH0gZnJvbSAnLi4va3ltYS1zdGF0ZSc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVkdWNlcnMoKTogQWN0aW9uUmVkdWNlck1hcDxLeW1hU3RhdGU+IHtcclxuICByZXR1cm4ge1xyXG4gICAgb3BlbklkVG9rZW46IGxvYWRlclJlZHVjZXI8T3BlbklkVG9rZW4+KE9QRU5fSURfVE9LRU5fREFUQSksXHJcbiAgfTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHJlZHVjZXJUb2tlbjogSW5qZWN0aW9uVG9rZW48QWN0aW9uUmVkdWNlck1hcDxcclxuICBLeW1hU3RhdGVcclxuPj4gPSBuZXcgSW5qZWN0aW9uVG9rZW48QWN0aW9uUmVkdWNlck1hcDxLeW1hU3RhdGU+PignS3ltYVJlZHVjZXJzJyk7XHJcblxyXG5leHBvcnQgY29uc3QgcmVkdWNlclByb3ZpZGVyOiBQcm92aWRlciA9IHtcclxuICBwcm92aWRlOiByZWR1Y2VyVG9rZW4sXHJcbiAgdXNlRmFjdG9yeTogZ2V0UmVkdWNlcnMsXHJcbn07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJLeW1hU3RhdGUoXHJcbiAgcmVkdWNlcjogQWN0aW9uUmVkdWNlcjxLeW1hU3RhdGUsIEFjdGlvbj5cclxuKTogQWN0aW9uUmVkdWNlcjxLeW1hU3RhdGUsIEFjdGlvbj4ge1xyXG4gIHJldHVybiBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikge1xyXG4gICAgaWYgKGFjdGlvbi50eXBlID09PSBBdXRoQWN0aW9ucy5MT0dPVVQpIHtcclxuICAgICAgc3RhdGUgPSB7XHJcbiAgICAgICAgLi4uc3RhdGUsXHJcbiAgICAgICAgb3BlbklkVG9rZW46IHVuZGVmaW5lZCxcclxuICAgICAgfTtcclxuICAgIH1cclxuICAgIHJldHVybiByZWR1Y2VyKHN0YXRlLCBhY3Rpb24pO1xyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBtZXRhUmVkdWNlcnM6IE1ldGFSZWR1Y2VyPGFueT5bXSA9IFtjbGVhckt5bWFTdGF0ZV07XHJcbiJdfQ==