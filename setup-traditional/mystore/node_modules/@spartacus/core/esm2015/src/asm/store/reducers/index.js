import { InjectionToken } from '@angular/core';
import { AuthActions } from '../../../auth/store/actions/index';
import { loaderReducer } from '../../../state/utils/loader/loader.reducer';
import { CSAGENT_TOKEN_DATA, CUSTOMER_SEARCH_DATA, } from '../asm-state';
import * as fromAsmUiReducer from './asm-ui.reducer';
export function getReducers() {
    return {
        customerSearchResult: loaderReducer(CUSTOMER_SEARCH_DATA),
        asmUi: fromAsmUiReducer.reducer,
        csagentToken: loaderReducer(CSAGENT_TOKEN_DATA),
    };
}
export const reducerToken = new InjectionToken('AsmReducers');
export const reducerProvider = {
    provide: reducerToken,
    useFactory: getReducers,
};
export function clearCustomerSupportAgentAsmState(reducer) {
    return function (state, action) {
        if (action.type === AuthActions.LOGOUT_CUSTOMER_SUPPORT_AGENT) {
            state = Object.assign(Object.assign({}, state), { customerSearchResult: undefined, csagentToken: undefined });
        }
        return reducer(state, action);
    };
}
export const metaReducers = [
    clearCustomerSupportAgentAsmState,
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvYXNtL3N0b3JlL3JlZHVjZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQVksTUFBTSxlQUFlLENBQUM7QUFPekQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUUzRSxPQUFPLEVBRUwsa0JBQWtCLEVBQ2xCLG9CQUFvQixHQUNyQixNQUFNLGNBQWMsQ0FBQztBQUN0QixPQUFPLEtBQUssZ0JBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFHckQsTUFBTSxVQUFVLFdBQVc7SUFDekIsT0FBTztRQUNMLG9CQUFvQixFQUFFLGFBQWEsQ0FDakMsb0JBQW9CLENBQ3JCO1FBQ0QsS0FBSyxFQUFFLGdCQUFnQixDQUFDLE9BQU87UUFDL0IsWUFBWSxFQUFFLGFBQWEsQ0FBWSxrQkFBa0IsQ0FBQztLQUMzRCxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FFcEIsSUFBSSxjQUFjLENBQTZCLGFBQWEsQ0FBQyxDQUFDO0FBRW5FLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBYTtJQUN2QyxPQUFPLEVBQUUsWUFBWTtJQUNyQixVQUFVLEVBQUUsV0FBVztDQUN4QixDQUFDO0FBRUYsTUFBTSxVQUFVLGlDQUFpQyxDQUMvQyxPQUF3QztJQUV4QyxPQUFPLFVBQVUsS0FBSyxFQUFFLE1BQU07UUFDNUIsSUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLFdBQVcsQ0FBQyw2QkFBNkIsRUFBRTtZQUM3RCxLQUFLLG1DQUNBLEtBQUssS0FDUixvQkFBb0IsRUFBRSxTQUFTLEVBQy9CLFlBQVksRUFBRSxTQUFTLEdBQ3hCLENBQUM7U0FDSDtRQUNELE9BQU8sT0FBTyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNoQyxDQUFDLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUF1QjtJQUM5QyxpQ0FBaUM7Q0FDbEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1xyXG4gIEFjdGlvbixcclxuICBBY3Rpb25SZWR1Y2VyLFxyXG4gIEFjdGlvblJlZHVjZXJNYXAsXHJcbiAgTWV0YVJlZHVjZXIsXHJcbn0gZnJvbSAnQG5ncngvc3RvcmUnO1xyXG5pbXBvcnQgeyBBdXRoQWN0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2F1dGgvc3RvcmUvYWN0aW9ucy9pbmRleCc7XHJcbmltcG9ydCB7IGxvYWRlclJlZHVjZXIgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9sb2FkZXIvbG9hZGVyLnJlZHVjZXInO1xyXG5pbXBvcnQgeyBDdXN0b21lclNlYXJjaFBhZ2UgfSBmcm9tICcuLi8uLi9tb2RlbHMvYXNtLm1vZGVscyc7XHJcbmltcG9ydCB7XHJcbiAgQXNtU3RhdGUsXHJcbiAgQ1NBR0VOVF9UT0tFTl9EQVRBLFxyXG4gIENVU1RPTUVSX1NFQVJDSF9EQVRBLFxyXG59IGZyb20gJy4uL2FzbS1zdGF0ZSc7XHJcbmltcG9ydCAqIGFzIGZyb21Bc21VaVJlZHVjZXIgZnJvbSAnLi9hc20tdWkucmVkdWNlcic7XHJcbmltcG9ydCB7IFVzZXJUb2tlbiB9IGZyb20gJy4uLy4uLy4uL2F1dGgvbW9kZWxzL3Rva2VuLXR5cGVzLm1vZGVsJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRSZWR1Y2VycygpOiBBY3Rpb25SZWR1Y2VyTWFwPEFzbVN0YXRlPiB7XHJcbiAgcmV0dXJuIHtcclxuICAgIGN1c3RvbWVyU2VhcmNoUmVzdWx0OiBsb2FkZXJSZWR1Y2VyPEN1c3RvbWVyU2VhcmNoUGFnZT4oXHJcbiAgICAgIENVU1RPTUVSX1NFQVJDSF9EQVRBXHJcbiAgICApLFxyXG4gICAgYXNtVWk6IGZyb21Bc21VaVJlZHVjZXIucmVkdWNlcixcclxuICAgIGNzYWdlbnRUb2tlbjogbG9hZGVyUmVkdWNlcjxVc2VyVG9rZW4+KENTQUdFTlRfVE9LRU5fREFUQSksXHJcbiAgfTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHJlZHVjZXJUb2tlbjogSW5qZWN0aW9uVG9rZW48QWN0aW9uUmVkdWNlck1hcDxcclxuICBBc21TdGF0ZVxyXG4+PiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxBY3Rpb25SZWR1Y2VyTWFwPEFzbVN0YXRlPj4oJ0FzbVJlZHVjZXJzJyk7XHJcblxyXG5leHBvcnQgY29uc3QgcmVkdWNlclByb3ZpZGVyOiBQcm92aWRlciA9IHtcclxuICBwcm92aWRlOiByZWR1Y2VyVG9rZW4sXHJcbiAgdXNlRmFjdG9yeTogZ2V0UmVkdWNlcnMsXHJcbn07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJDdXN0b21lclN1cHBvcnRBZ2VudEFzbVN0YXRlKFxyXG4gIHJlZHVjZXI6IEFjdGlvblJlZHVjZXI8QXNtU3RhdGUsIEFjdGlvbj5cclxuKTogQWN0aW9uUmVkdWNlcjxBc21TdGF0ZSwgQWN0aW9uPiB7XHJcbiAgcmV0dXJuIGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7XHJcbiAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEF1dGhBY3Rpb25zLkxPR09VVF9DVVNUT01FUl9TVVBQT1JUX0FHRU5UKSB7XHJcbiAgICAgIHN0YXRlID0ge1xyXG4gICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgIGN1c3RvbWVyU2VhcmNoUmVzdWx0OiB1bmRlZmluZWQsXHJcbiAgICAgICAgY3NhZ2VudFRva2VuOiB1bmRlZmluZWQsXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVkdWNlcihzdGF0ZSwgYWN0aW9uKTtcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgbWV0YVJlZHVjZXJzOiBNZXRhUmVkdWNlcjxhbnk+W10gPSBbXHJcbiAgY2xlYXJDdXN0b21lclN1cHBvcnRBZ2VudEFzbVN0YXRlLFxyXG5dO1xyXG4iXX0=