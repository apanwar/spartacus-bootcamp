import { createSelector } from '@ngrx/store';
import { getSiteContextState } from './site-context.selector';
const activeLanguageSelector = (state) => state.activeLanguage;
const ɵ0 = activeLanguageSelector;
const languagesEntitiesSelector = (state) => state.entities;
const ɵ1 = languagesEntitiesSelector;
const ɵ2 = (state) => state.languages;
export const getLanguagesState = createSelector(getSiteContextState, ɵ2);
export const getLanguagesEntities = createSelector(getLanguagesState, languagesEntitiesSelector);
export const getActiveLanguage = createSelector(getLanguagesState, activeLanguageSelector);
const ɵ3 = (entities) => {
    return entities
        ? Object.keys(entities).map((isocode) => entities[isocode])
        : null;
};
export const getAllLanguages = createSelector(getLanguagesEntities, ɵ3);
export { ɵ0, ɵ1, ɵ2, ɵ3 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2VzLnNlbGVjdG9ycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9zaXRlLWNvbnRleHQvc3RvcmUvc2VsZWN0b3JzL2xhbmd1YWdlcy5zZWxlY3RvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBb0IsTUFBTSxhQUFhLENBQUM7QUFRL0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFOUQsTUFBTSxzQkFBc0IsR0FBRyxDQUFDLEtBQXFCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUM7O0FBQy9FLE1BQU0seUJBQXlCLEdBQUcsQ0FBQyxLQUFxQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDOztXQU8xRSxDQUFDLEtBQXVCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxTQUFTO0FBTDlDLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUcxQixjQUFjLENBQ2hCLG1CQUFtQixLQUVwQixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBRzdCLGNBQWMsQ0FBQyxpQkFBaUIsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO0FBRWpFLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUcxQixjQUFjLENBQUMsaUJBQWlCLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztXQUtyQixDQUFDLFFBQVEsRUFBRSxFQUFFO0lBQ3BELE9BQU8sUUFBUTtRQUNiLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzNELENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDWCxDQUFDO0FBUEQsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUd4QixjQUFjLENBQUMsb0JBQW9CLEtBSXJDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciwgTWVtb2l6ZWRTZWxlY3RvciB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcclxuaW1wb3J0IHsgTGFuZ3VhZ2UgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9taXNjLm1vZGVsJztcclxuaW1wb3J0IHtcclxuICBMYW5ndWFnZXNFbnRpdGllcyxcclxuICBMYW5ndWFnZXNTdGF0ZSxcclxuICBTaXRlQ29udGV4dFN0YXRlLFxyXG4gIFN0YXRlV2l0aFNpdGVDb250ZXh0LFxyXG59IGZyb20gJy4uL3N0YXRlJztcclxuaW1wb3J0IHsgZ2V0U2l0ZUNvbnRleHRTdGF0ZSB9IGZyb20gJy4vc2l0ZS1jb250ZXh0LnNlbGVjdG9yJztcclxuXHJcbmNvbnN0IGFjdGl2ZUxhbmd1YWdlU2VsZWN0b3IgPSAoc3RhdGU6IExhbmd1YWdlc1N0YXRlKSA9PiBzdGF0ZS5hY3RpdmVMYW5ndWFnZTtcclxuY29uc3QgbGFuZ3VhZ2VzRW50aXRpZXNTZWxlY3RvciA9IChzdGF0ZTogTGFuZ3VhZ2VzU3RhdGUpID0+IHN0YXRlLmVudGl0aWVzO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldExhbmd1YWdlc1N0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxyXG4gIFN0YXRlV2l0aFNpdGVDb250ZXh0LFxyXG4gIExhbmd1YWdlc1N0YXRlXHJcbj4gPSBjcmVhdGVTZWxlY3RvcihcclxuICBnZXRTaXRlQ29udGV4dFN0YXRlLFxyXG4gIChzdGF0ZTogU2l0ZUNvbnRleHRTdGF0ZSkgPT4gc3RhdGUubGFuZ3VhZ2VzXHJcbik7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0TGFuZ3VhZ2VzRW50aXRpZXM6IE1lbW9pemVkU2VsZWN0b3I8XHJcbiAgU3RhdGVXaXRoU2l0ZUNvbnRleHQsXHJcbiAgTGFuZ3VhZ2VzRW50aXRpZXNcclxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldExhbmd1YWdlc1N0YXRlLCBsYW5ndWFnZXNFbnRpdGllc1NlbGVjdG9yKTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRBY3RpdmVMYW5ndWFnZTogTWVtb2l6ZWRTZWxlY3RvcjxcclxuICBTdGF0ZVdpdGhTaXRlQ29udGV4dCxcclxuICBzdHJpbmdcclxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldExhbmd1YWdlc1N0YXRlLCBhY3RpdmVMYW5ndWFnZVNlbGVjdG9yKTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRBbGxMYW5ndWFnZXM6IE1lbW9pemVkU2VsZWN0b3I8XHJcbiAgU3RhdGVXaXRoU2l0ZUNvbnRleHQsXHJcbiAgTGFuZ3VhZ2VbXVxyXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0TGFuZ3VhZ2VzRW50aXRpZXMsIChlbnRpdGllcykgPT4ge1xyXG4gIHJldHVybiBlbnRpdGllc1xyXG4gICAgPyBPYmplY3Qua2V5cyhlbnRpdGllcykubWFwKChpc29jb2RlKSA9PiBlbnRpdGllc1tpc29jb2RlXSlcclxuICAgIDogbnVsbDtcclxufSk7XHJcbiJdfQ==