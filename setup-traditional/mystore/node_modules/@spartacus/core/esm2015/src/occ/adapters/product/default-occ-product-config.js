import { ProductScope } from '../../../product/model/product-scope';
export const defaultOccProductConfig = {
    backend: {
        occ: {
            endpoints: {
                product: {
                    default: 'products/${productCode}?fields=DEFAULT,averageRating,images(FULL),classifications,manufacturer,numberOfReviews,categories(FULL),baseOptions,baseProduct,variantOptions,variantType',
                    list: 'products/${productCode}?fields=code,name,summary,price(formattedValue),images(DEFAULT,galleryIndex)',
                    details: 'products/${productCode}?fields=averageRating,stock(DEFAULT),description,availableForPickup,code,url,price(DEFAULT),numberOfReviews,manufacturer,categories(FULL),priceRange,multidimensional,configuratorType,configurable,tags,images(FULL)',
                    attributes: 'products/${productCode}?fields=classifications',
                    variants: 'products/${productCode}?fields=name,purchasable,baseOptions(DEFAULT),baseProduct,variantOptions(DEFAULT),variantType',
                },
                productReviews: 'products/${productCode}/reviews',
                // Uncomment this when occ gets configured
                // productReferences:
                //   'products/${productCode}/references?fields=DEFAULT,references(target(images(FULL)))&referenceType=${referenceType}',
                productReferences: 'products/${productCode}/references?fields=DEFAULT,references(target(images(FULL)))',
                // tslint:disable:max-line-length
                productSearch: 'products/search?fields=products(code,name,summary,price(FULL),images(DEFAULT),stock(FULL),averageRating,variantOptions),facets,breadcrumbs,pagination(DEFAULT),sorts(DEFAULT),freeTextSearch,currentQuery',
                // tslint:enable
                productSuggestions: 'products/suggestions',
            },
        },
        loadingScopes: {
            product: {
                details: {
                    include: [ProductScope.LIST, ProductScope.VARIANTS],
                },
            },
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1vY2MtcHJvZHVjdC1jb25maWcuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvb2NjL2FkYXB0ZXJzL3Byb2R1Y3QvZGVmYXVsdC1vY2MtcHJvZHVjdC1jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBR3BFLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFjO0lBQ2hELE9BQU8sRUFBRTtRQUNQLEdBQUcsRUFBRTtZQUNILFNBQVMsRUFBRTtnQkFDVCxPQUFPLEVBQUU7b0JBQ1AsT0FBTyxFQUNMLG9MQUFvTDtvQkFDdEwsSUFBSSxFQUNGLHFHQUFxRztvQkFDdkcsT0FBTyxFQUNMLDhPQUE4TztvQkFDaFAsVUFBVSxFQUFFLGdEQUFnRDtvQkFDNUQsUUFBUSxFQUNOLHNIQUFzSDtpQkFDekg7Z0JBQ0QsY0FBYyxFQUFFLGlDQUFpQztnQkFDakQsMENBQTBDO2dCQUMxQyxxQkFBcUI7Z0JBQ3JCLHlIQUF5SDtnQkFDekgsaUJBQWlCLEVBQ2Ysb0ZBQW9GO2dCQUN0RixpQ0FBaUM7Z0JBQ2pDLGFBQWEsRUFDWCwyTUFBMk07Z0JBQzdNLGdCQUFnQjtnQkFDaEIsa0JBQWtCLEVBQUUsc0JBQXNCO2FBQzNDO1NBQ0Y7UUFDRCxhQUFhLEVBQUU7WUFDYixPQUFPLEVBQUU7Z0JBQ1AsT0FBTyxFQUFFO29CQUNQLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsWUFBWSxDQUFDLFFBQVEsQ0FBQztpQkFDcEQ7YUFDRjtTQUNGO0tBQ0Y7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvZHVjdFNjb3BlIH0gZnJvbSAnLi4vLi4vLi4vcHJvZHVjdC9tb2RlbC9wcm9kdWN0LXNjb3BlJztcclxuaW1wb3J0IHsgT2NjQ29uZmlnIH0gZnJvbSAnLi4vLi4vY29uZmlnL29jYy1jb25maWcnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlZmF1bHRPY2NQcm9kdWN0Q29uZmlnOiBPY2NDb25maWcgPSB7XHJcbiAgYmFja2VuZDoge1xyXG4gICAgb2NjOiB7XHJcbiAgICAgIGVuZHBvaW50czoge1xyXG4gICAgICAgIHByb2R1Y3Q6IHtcclxuICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICdwcm9kdWN0cy8ke3Byb2R1Y3RDb2RlfT9maWVsZHM9REVGQVVMVCxhdmVyYWdlUmF0aW5nLGltYWdlcyhGVUxMKSxjbGFzc2lmaWNhdGlvbnMsbWFudWZhY3R1cmVyLG51bWJlck9mUmV2aWV3cyxjYXRlZ29yaWVzKEZVTEwpLGJhc2VPcHRpb25zLGJhc2VQcm9kdWN0LHZhcmlhbnRPcHRpb25zLHZhcmlhbnRUeXBlJyxcclxuICAgICAgICAgIGxpc3Q6XHJcbiAgICAgICAgICAgICdwcm9kdWN0cy8ke3Byb2R1Y3RDb2RlfT9maWVsZHM9Y29kZSxuYW1lLHN1bW1hcnkscHJpY2UoZm9ybWF0dGVkVmFsdWUpLGltYWdlcyhERUZBVUxULGdhbGxlcnlJbmRleCknLFxyXG4gICAgICAgICAgZGV0YWlsczpcclxuICAgICAgICAgICAgJ3Byb2R1Y3RzLyR7cHJvZHVjdENvZGV9P2ZpZWxkcz1hdmVyYWdlUmF0aW5nLHN0b2NrKERFRkFVTFQpLGRlc2NyaXB0aW9uLGF2YWlsYWJsZUZvclBpY2t1cCxjb2RlLHVybCxwcmljZShERUZBVUxUKSxudW1iZXJPZlJldmlld3MsbWFudWZhY3R1cmVyLGNhdGVnb3JpZXMoRlVMTCkscHJpY2VSYW5nZSxtdWx0aWRpbWVuc2lvbmFsLGNvbmZpZ3VyYXRvclR5cGUsY29uZmlndXJhYmxlLHRhZ3MsaW1hZ2VzKEZVTEwpJyxcclxuICAgICAgICAgIGF0dHJpYnV0ZXM6ICdwcm9kdWN0cy8ke3Byb2R1Y3RDb2RlfT9maWVsZHM9Y2xhc3NpZmljYXRpb25zJyxcclxuICAgICAgICAgIHZhcmlhbnRzOlxyXG4gICAgICAgICAgICAncHJvZHVjdHMvJHtwcm9kdWN0Q29kZX0/ZmllbGRzPW5hbWUscHVyY2hhc2FibGUsYmFzZU9wdGlvbnMoREVGQVVMVCksYmFzZVByb2R1Y3QsdmFyaWFudE9wdGlvbnMoREVGQVVMVCksdmFyaWFudFR5cGUnLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcHJvZHVjdFJldmlld3M6ICdwcm9kdWN0cy8ke3Byb2R1Y3RDb2RlfS9yZXZpZXdzJyxcclxuICAgICAgICAvLyBVbmNvbW1lbnQgdGhpcyB3aGVuIG9jYyBnZXRzIGNvbmZpZ3VyZWRcclxuICAgICAgICAvLyBwcm9kdWN0UmVmZXJlbmNlczpcclxuICAgICAgICAvLyAgICdwcm9kdWN0cy8ke3Byb2R1Y3RDb2RlfS9yZWZlcmVuY2VzP2ZpZWxkcz1ERUZBVUxULHJlZmVyZW5jZXModGFyZ2V0KGltYWdlcyhGVUxMKSkpJnJlZmVyZW5jZVR5cGU9JHtyZWZlcmVuY2VUeXBlfScsXHJcbiAgICAgICAgcHJvZHVjdFJlZmVyZW5jZXM6XHJcbiAgICAgICAgICAncHJvZHVjdHMvJHtwcm9kdWN0Q29kZX0vcmVmZXJlbmNlcz9maWVsZHM9REVGQVVMVCxyZWZlcmVuY2VzKHRhcmdldChpbWFnZXMoRlVMTCkpKScsXHJcbiAgICAgICAgLy8gdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoXHJcbiAgICAgICAgcHJvZHVjdFNlYXJjaDpcclxuICAgICAgICAgICdwcm9kdWN0cy9zZWFyY2g/ZmllbGRzPXByb2R1Y3RzKGNvZGUsbmFtZSxzdW1tYXJ5LHByaWNlKEZVTEwpLGltYWdlcyhERUZBVUxUKSxzdG9jayhGVUxMKSxhdmVyYWdlUmF0aW5nLHZhcmlhbnRPcHRpb25zKSxmYWNldHMsYnJlYWRjcnVtYnMscGFnaW5hdGlvbihERUZBVUxUKSxzb3J0cyhERUZBVUxUKSxmcmVlVGV4dFNlYXJjaCxjdXJyZW50UXVlcnknLFxyXG4gICAgICAgIC8vIHRzbGludDplbmFibGVcclxuICAgICAgICBwcm9kdWN0U3VnZ2VzdGlvbnM6ICdwcm9kdWN0cy9zdWdnZXN0aW9ucycsXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgbG9hZGluZ1Njb3Blczoge1xyXG4gICAgICBwcm9kdWN0OiB7XHJcbiAgICAgICAgZGV0YWlsczoge1xyXG4gICAgICAgICAgaW5jbHVkZTogW1Byb2R1Y3RTY29wZS5MSVNULCBQcm9kdWN0U2NvcGUuVkFSSUFOVFNdLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIH0sXHJcbn07XHJcbiJdfQ==