import { createSelector } from '@ngrx/store';
import { StateUtils } from '../../../state/utils/index';
import { getAnonymousConsentState } from './feature.selector';
const ɵ0 = (state) => state.templates;
export const getAnonymousConsentTemplatesState = createSelector(getAnonymousConsentState, ɵ0);
export const getAnonymousConsentTemplatesValue = createSelector(getAnonymousConsentTemplatesState, StateUtils.loaderValueSelector);
export const getAnonymousConsentTemplatesLoading = createSelector(getAnonymousConsentTemplatesState, StateUtils.loaderLoadingSelector);
export const getAnonymousConsentTemplatesSuccess = createSelector(getAnonymousConsentTemplatesState, StateUtils.loaderSuccessSelector);
export const getAnonymousConsentTemplatesError = createSelector(getAnonymousConsentTemplatesState, StateUtils.loaderErrorSelector);
export const getAnonymousConsentTemplate = (templateCode) => {
    return createSelector(getAnonymousConsentTemplatesValue, (templates) => {
        return templates
            ? templates.find((template) => template.id === templateCode)
            : null;
    });
};
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5vbnltb3VzLWNvbnNlbnQtdGVtcGxhdGVzLnNlbGVjdG9ycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9hbm9ueW1vdXMtY29uc2VudHMvc3RvcmUvc2VsZWN0b3JzL2Fub255bW91cy1jb25zZW50LXRlbXBsYXRlcy5zZWxlY3RvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBb0IsTUFBTSxhQUFhLENBQUM7QUFFL0QsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBR3hELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO1dBS2pCLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUztBQUh2RSxNQUFNLENBQUMsTUFBTSxpQ0FBaUMsR0FHMUMsY0FBYyxDQUFDLHdCQUF3QixLQUE2QixDQUFDO0FBRXpFLE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUcxQyxjQUFjLENBQ2hCLGlDQUFpQyxFQUNqQyxVQUFVLENBQUMsbUJBQW1CLENBQy9CLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxtQ0FBbUMsR0FHNUMsY0FBYyxDQUNoQixpQ0FBaUMsRUFDakMsVUFBVSxDQUFDLHFCQUFxQixDQUNqQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sbUNBQW1DLEdBRzVDLGNBQWMsQ0FDaEIsaUNBQWlDLEVBQ2pDLFVBQVUsQ0FBQyxxQkFBcUIsQ0FDakMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUcxQyxjQUFjLENBQ2hCLGlDQUFpQyxFQUNqQyxVQUFVLENBQUMsbUJBQW1CLENBQy9CLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRyxDQUN6QyxZQUFvQixFQUMyQyxFQUFFO0lBQ2pFLE9BQU8sY0FBYyxDQUFDLGlDQUFpQyxFQUFFLENBQUMsU0FBUyxFQUFFLEVBQUU7UUFDckUsT0FBTyxTQUFTO1lBQ2QsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEtBQUssWUFBWSxDQUFDO1lBQzVELENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDWCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yLCBNZW1vaXplZFNlbGVjdG9yIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xyXG5pbXBvcnQgeyBDb25zZW50VGVtcGxhdGUgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9jb25zZW50Lm1vZGVsJztcclxuaW1wb3J0IHsgU3RhdGVVdGlscyB9IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2luZGV4JztcclxuaW1wb3J0IHsgTG9hZGVyU3RhdGUgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9sb2FkZXIvbG9hZGVyLXN0YXRlJztcclxuaW1wb3J0IHsgU3RhdGVXaXRoQW5vbnltb3VzQ29uc2VudHMgfSBmcm9tICcuLi9hbm9ueW1vdXMtY29uc2VudHMtc3RhdGUnO1xyXG5pbXBvcnQgeyBnZXRBbm9ueW1vdXNDb25zZW50U3RhdGUgfSBmcm9tICcuL2ZlYXR1cmUuc2VsZWN0b3InO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEFub255bW91c0NvbnNlbnRUZW1wbGF0ZXNTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcclxuICBTdGF0ZVdpdGhBbm9ueW1vdXNDb25zZW50cyxcclxuICBMb2FkZXJTdGF0ZTxDb25zZW50VGVtcGxhdGVbXT5cclxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldEFub255bW91c0NvbnNlbnRTdGF0ZSwgKHN0YXRlKSA9PiBzdGF0ZS50ZW1wbGF0ZXMpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEFub255bW91c0NvbnNlbnRUZW1wbGF0ZXNWYWx1ZTogTWVtb2l6ZWRTZWxlY3RvcjxcclxuICBTdGF0ZVdpdGhBbm9ueW1vdXNDb25zZW50cyxcclxuICBDb25zZW50VGVtcGxhdGVbXVxyXG4+ID0gY3JlYXRlU2VsZWN0b3IoXHJcbiAgZ2V0QW5vbnltb3VzQ29uc2VudFRlbXBsYXRlc1N0YXRlLFxyXG4gIFN0YXRlVXRpbHMubG9hZGVyVmFsdWVTZWxlY3RvclxyXG4pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEFub255bW91c0NvbnNlbnRUZW1wbGF0ZXNMb2FkaW5nOiBNZW1vaXplZFNlbGVjdG9yPFxyXG4gIFN0YXRlV2l0aEFub255bW91c0NvbnNlbnRzLFxyXG4gIGJvb2xlYW5cclxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxyXG4gIGdldEFub255bW91c0NvbnNlbnRUZW1wbGF0ZXNTdGF0ZSxcclxuICBTdGF0ZVV0aWxzLmxvYWRlckxvYWRpbmdTZWxlY3RvclxyXG4pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEFub255bW91c0NvbnNlbnRUZW1wbGF0ZXNTdWNjZXNzOiBNZW1vaXplZFNlbGVjdG9yPFxyXG4gIFN0YXRlV2l0aEFub255bW91c0NvbnNlbnRzLFxyXG4gIGJvb2xlYW5cclxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxyXG4gIGdldEFub255bW91c0NvbnNlbnRUZW1wbGF0ZXNTdGF0ZSxcclxuICBTdGF0ZVV0aWxzLmxvYWRlclN1Y2Nlc3NTZWxlY3RvclxyXG4pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEFub255bW91c0NvbnNlbnRUZW1wbGF0ZXNFcnJvcjogTWVtb2l6ZWRTZWxlY3RvcjxcclxuICBTdGF0ZVdpdGhBbm9ueW1vdXNDb25zZW50cyxcclxuICBib29sZWFuXHJcbj4gPSBjcmVhdGVTZWxlY3RvcihcclxuICBnZXRBbm9ueW1vdXNDb25zZW50VGVtcGxhdGVzU3RhdGUsXHJcbiAgU3RhdGVVdGlscy5sb2FkZXJFcnJvclNlbGVjdG9yXHJcbik7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0QW5vbnltb3VzQ29uc2VudFRlbXBsYXRlID0gKFxyXG4gIHRlbXBsYXRlQ29kZTogc3RyaW5nXHJcbik6IE1lbW9pemVkU2VsZWN0b3I8U3RhdGVXaXRoQW5vbnltb3VzQ29uc2VudHMsIENvbnNlbnRUZW1wbGF0ZT4gPT4ge1xyXG4gIHJldHVybiBjcmVhdGVTZWxlY3RvcihnZXRBbm9ueW1vdXNDb25zZW50VGVtcGxhdGVzVmFsdWUsICh0ZW1wbGF0ZXMpID0+IHtcclxuICAgIHJldHVybiB0ZW1wbGF0ZXNcclxuICAgICAgPyB0ZW1wbGF0ZXMuZmluZCgodGVtcGxhdGUpID0+IHRlbXBsYXRlLmlkID09PSB0ZW1wbGF0ZUNvZGUpXHJcbiAgICAgIDogbnVsbDtcclxuICB9KTtcclxufTtcclxuIl19