import { DeferLoadingStrategy } from '@spartacus/core';
import { LaunchConfig } from '../launch-dialog/index';
import * as ɵngcc0 from '@angular/core';
export declare enum BREAKPOINT {
    xs = "xs",
    sm = "sm",
    md = "md",
    lg = "lg",
    xl = "xl"
}
export declare type LayoutSections = 'header' | 'footer' | 'LandingPage2Template' | string;
export declare type SlotConfig = {
    /** The cms page slots are mapped by the `slot.position`. */
    slots?: string[];
    /**
     * The page fold identifies the last expected page slot above-the-fold.
     * It's perfectly fine to specify this by idication, however a more
     * precise indication will have an positive impact on performance.
     */
    pageFold?: string;
};
export declare type SlotGroup = {
    /** The page slot configuration for large screens */
    [BREAKPOINT.lg]?: SlotConfig;
    /** The page slot configuration for medium screens */
    [BREAKPOINT.md]?: SlotConfig;
    /** The page slot configuration for small screens */
    [BREAKPOINT.sm]?: SlotConfig;
    /** The page slot configuration for extra small screens */
    [BREAKPOINT.xs]?: SlotConfig;
};
export declare type LayoutSlotConfig = {
    [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;
};
/**
 * The LayoutConfig supports the configuration of page slots by page templates
 * or page sections, such as headers and footers. The configuration also supports
 * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered
 * por a given breakpoint.
 */
export declare abstract class LayoutConfig {
    /** The breakpoint configuration is used when the DOM is (re)rendered in specific view.
     * This allows for adaptive rendering, so that the DOM is rendered for specific breakpoints. */
    breakpoints?: {
        [BREAKPOINT.xs]?: number;
        [BREAKPOINT.sm]?: number;
        [BREAKPOINT.md]?: number;
        [BREAKPOINT.lg]?: number;
    };
    layoutSlots?: LayoutSlotConfig;
    /**
     * Deferrred loading is a technique to hold of with the loading / creation
     * of DOM elements which are not not in the initial view port.
     * This technique wil increase performance.
     */
    deferredLoading?: {
        /**
         * The global strategy will be used as a fallback strategy for all DOM creation,
         * but can be overriden by local configuration, i.e. for cms components.
         */
        strategy?: DeferLoadingStrategy;
        /**
         * The intersection margin contains the offset used by the Intersection Observer
         * to observe elements outside the view port.
         *
         * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin
         */
        intersectionMargin?: string;
    };
    launch?: LaunchConfig;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LayoutConfig, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LWNvbmZpZy5kLnRzIiwic291cmNlcyI6WyJsYXlvdXQtY29uZmlnLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERlZmVyTG9hZGluZ1N0cmF0ZWd5IH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcclxuaW1wb3J0IHsgTGF1bmNoQ29uZmlnIH0gZnJvbSAnLi4vbGF1bmNoLWRpYWxvZy9pbmRleCc7XHJcbmV4cG9ydCBkZWNsYXJlIGVudW0gQlJFQUtQT0lOVCB7XHJcbiAgICB4cyA9IFwieHNcIixcclxuICAgIHNtID0gXCJzbVwiLFxyXG4gICAgbWQgPSBcIm1kXCIsXHJcbiAgICBsZyA9IFwibGdcIixcclxuICAgIHhsID0gXCJ4bFwiXHJcbn1cclxuZXhwb3J0IGRlY2xhcmUgdHlwZSBMYXlvdXRTZWN0aW9ucyA9ICdoZWFkZXInIHwgJ2Zvb3RlcicgfCAnTGFuZGluZ1BhZ2UyVGVtcGxhdGUnIHwgc3RyaW5nO1xyXG5leHBvcnQgZGVjbGFyZSB0eXBlIFNsb3RDb25maWcgPSB7XHJcbiAgICAvKiogVGhlIGNtcyBwYWdlIHNsb3RzIGFyZSBtYXBwZWQgYnkgdGhlIGBzbG90LnBvc2l0aW9uYC4gKi9cclxuICAgIHNsb3RzPzogc3RyaW5nW107XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBwYWdlIGZvbGQgaWRlbnRpZmllcyB0aGUgbGFzdCBleHBlY3RlZCBwYWdlIHNsb3QgYWJvdmUtdGhlLWZvbGQuXHJcbiAgICAgKiBJdCdzIHBlcmZlY3RseSBmaW5lIHRvIHNwZWNpZnkgdGhpcyBieSBpZGljYXRpb24sIGhvd2V2ZXIgYSBtb3JlXHJcbiAgICAgKiBwcmVjaXNlIGluZGljYXRpb24gd2lsbCBoYXZlIGFuIHBvc2l0aXZlIGltcGFjdCBvbiBwZXJmb3JtYW5jZS5cclxuICAgICAqL1xyXG4gICAgcGFnZUZvbGQ/OiBzdHJpbmc7XHJcbn07XHJcbmV4cG9ydCBkZWNsYXJlIHR5cGUgU2xvdEdyb3VwID0ge1xyXG4gICAgLyoqIFRoZSBwYWdlIHNsb3QgY29uZmlndXJhdGlvbiBmb3IgbGFyZ2Ugc2NyZWVucyAqL1xyXG4gICAgW0JSRUFLUE9JTlQubGddPzogU2xvdENvbmZpZztcclxuICAgIC8qKiBUaGUgcGFnZSBzbG90IGNvbmZpZ3VyYXRpb24gZm9yIG1lZGl1bSBzY3JlZW5zICovXHJcbiAgICBbQlJFQUtQT0lOVC5tZF0/OiBTbG90Q29uZmlnO1xyXG4gICAgLyoqIFRoZSBwYWdlIHNsb3QgY29uZmlndXJhdGlvbiBmb3Igc21hbGwgc2NyZWVucyAqL1xyXG4gICAgW0JSRUFLUE9JTlQuc21dPzogU2xvdENvbmZpZztcclxuICAgIC8qKiBUaGUgcGFnZSBzbG90IGNvbmZpZ3VyYXRpb24gZm9yIGV4dHJhIHNtYWxsIHNjcmVlbnMgKi9cclxuICAgIFtCUkVBS1BPSU5ULnhzXT86IFNsb3RDb25maWc7XHJcbn07XHJcbmV4cG9ydCBkZWNsYXJlIHR5cGUgTGF5b3V0U2xvdENvbmZpZyA9IHtcclxuICAgIFtzZWN0aW9uIGluIExheW91dFNlY3Rpb25zXTogU2xvdENvbmZpZyB8IFNsb3RHcm91cCB8IExheW91dFNsb3RDb25maWc7XHJcbn07XHJcbi8qKlxyXG4gKiBUaGUgTGF5b3V0Q29uZmlnIHN1cHBvcnRzIHRoZSBjb25maWd1cmF0aW9uIG9mIHBhZ2Ugc2xvdHMgYnkgcGFnZSB0ZW1wbGF0ZXNcclxuICogb3IgcGFnZSBzZWN0aW9ucywgc3VjaCBhcyBoZWFkZXJzIGFuZCBmb290ZXJzLiBUaGUgY29uZmlndXJhdGlvbiBhbHNvIHN1cHBvcnRzXHJcbiAqIGFkYXB0aXZlIGRlc2lnbiBwZXIgYnJlYWRwb2ludCAobm90IHBlciBkZXZpY2UgdHlwZSksIHNvIHRoYXQgdGhlIERPTSBpcyAocmUpcmVuZGVyZWRcclxuICogcG9yIGEgZ2l2ZW4gYnJlYWtwb2ludC5cclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGFic3RyYWN0IGNsYXNzIExheW91dENvbmZpZyB7XHJcbiAgICAvKiogVGhlIGJyZWFrcG9pbnQgY29uZmlndXJhdGlvbiBpcyB1c2VkIHdoZW4gdGhlIERPTSBpcyAocmUpcmVuZGVyZWQgaW4gc3BlY2lmaWMgdmlldy5cclxuICAgICAqIFRoaXMgYWxsb3dzIGZvciBhZGFwdGl2ZSByZW5kZXJpbmcsIHNvIHRoYXQgdGhlIERPTSBpcyByZW5kZXJlZCBmb3Igc3BlY2lmaWMgYnJlYWtwb2ludHMuICovXHJcbiAgICBicmVha3BvaW50cz86IHtcclxuICAgICAgICBbQlJFQUtQT0lOVC54c10/OiBudW1iZXI7XHJcbiAgICAgICAgW0JSRUFLUE9JTlQuc21dPzogbnVtYmVyO1xyXG4gICAgICAgIFtCUkVBS1BPSU5ULm1kXT86IG51bWJlcjtcclxuICAgICAgICBbQlJFQUtQT0lOVC5sZ10/OiBudW1iZXI7XHJcbiAgICB9O1xyXG4gICAgbGF5b3V0U2xvdHM/OiBMYXlvdXRTbG90Q29uZmlnO1xyXG4gICAgLyoqXHJcbiAgICAgKiBEZWZlcnJyZWQgbG9hZGluZyBpcyBhIHRlY2huaXF1ZSB0byBob2xkIG9mIHdpdGggdGhlIGxvYWRpbmcgLyBjcmVhdGlvblxyXG4gICAgICogb2YgRE9NIGVsZW1lbnRzIHdoaWNoIGFyZSBub3Qgbm90IGluIHRoZSBpbml0aWFsIHZpZXcgcG9ydC5cclxuICAgICAqIFRoaXMgdGVjaG5pcXVlIHdpbCBpbmNyZWFzZSBwZXJmb3JtYW5jZS5cclxuICAgICAqL1xyXG4gICAgZGVmZXJyZWRMb2FkaW5nPzoge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBnbG9iYWwgc3RyYXRlZ3kgd2lsbCBiZSB1c2VkIGFzIGEgZmFsbGJhY2sgc3RyYXRlZ3kgZm9yIGFsbCBET00gY3JlYXRpb24sXHJcbiAgICAgICAgICogYnV0IGNhbiBiZSBvdmVycmlkZW4gYnkgbG9jYWwgY29uZmlndXJhdGlvbiwgaS5lLiBmb3IgY21zIGNvbXBvbmVudHMuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc3RyYXRlZ3k/OiBEZWZlckxvYWRpbmdTdHJhdGVneTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGUgaW50ZXJzZWN0aW9uIG1hcmdpbiBjb250YWlucyB0aGUgb2Zmc2V0IHVzZWQgYnkgdGhlIEludGVyc2VjdGlvbiBPYnNlcnZlclxyXG4gICAgICAgICAqIHRvIG9ic2VydmUgZWxlbWVudHMgb3V0c2lkZSB0aGUgdmlldyBwb3J0LlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogU2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9JbnRlcnNlY3Rpb25PYnNlcnZlci9yb290TWFyZ2luXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgaW50ZXJzZWN0aW9uTWFyZ2luPzogc3RyaW5nO1xyXG4gICAgfTtcclxuICAgIGxhdW5jaD86IExhdW5jaENvbmZpZztcclxufVxyXG4iXX0=