{"version":3,"file":"spartacus-storefront.js","sources":["ng:/@spartacus/storefront/layout/launch-dialog/config/launch-config.ts","ng:/@spartacus/storefront/layout/config/layout-config.ts","ng:/@spartacus/storefront/layout/launch-dialog/services/launch-render.strategy.ts","ng:/@spartacus/storefront/layout/launch-dialog/services/inline-render.strategy.ts","ng:/@spartacus/storefront/layout/launch-dialog/services/launch-dialog.service.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet.model.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet.service.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet-renderer.service.ts","ng:/@spartacus/storefront/layout/loading/intersection.service.ts","ng:/@spartacus/storefront/layout/loading/defer-loader.service.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet.directive.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet.module.ts","ng:/@spartacus/storefront/layout/launch-dialog/services/outlet-render.strategy.ts","ng:/@spartacus/storefront/layout/launch-dialog/services/routing-render.strategy.ts","ng:/@spartacus/storefront/layout/launch-dialog/launch-dialog.module.ts","ng:/@spartacus/storefront/cms-components/anonymous-consent-management/anonymous-consent-launch-dialog.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/keyboard-focus.model.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/base/base-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/base/base-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/visible/visible-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/block/block-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/persist/persist-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/persist/persist-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/services/select-focus.util.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/escape/escape-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/escape/escape-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/autofocus/auto-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/autofocus/auto-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/tab/tab-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/tab/tab-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/trap/trap-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/trap/trap-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/lock/lock-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/lock/lock-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/services/keyboard-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/keyboard-focus.module.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/index.ts","ng:/@spartacus/storefront/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.ts","ng:/@spartacus/storefront/cms-components/misc/icon/icon.model.ts","ng:/@spartacus/storefront/cms-components/misc/icon/fontawesome-icon.config.ts","ng:/@spartacus/storefront/cms-components/misc/icon/icon-loader.service.ts","ng:/@spartacus/storefront/cms-components/misc/icon/icon.component.ts","ng:/@spartacus/storefront/cms-components/misc/icon/icon.module.ts","ng:/@spartacus/storefront/shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component.ts","ng:/@spartacus/storefront/cms-components/anonymous-consent-management/default-anonymous-consent-layout.config.ts","ng:/@spartacus/storefront/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.ts","ng:/@spartacus/storefront/cms-components/anonymous-consent-management/anonymous-consent-management.module.ts","ng:/@spartacus/storefront/shared/components/spinner/spinner.component.ts","ng:/@spartacus/storefront/shared/components/spinner/spinner.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-management.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/consent-management/consent-management.module.ts","ng:/@spartacus/storefront/shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module.ts","ng:/@spartacus/storefront/shared/components/card/card.component.ts","ng:/@spartacus/storefront/shared/components/card/card.module.ts","ng:/@spartacus/storefront/shared/components/carousel/carousel.service.ts","ng:/@spartacus/storefront/shared/components/carousel/carousel.component.ts","ng:/@spartacus/storefront/layout/breakpoint/breakpoint.service.ts","ng:/@spartacus/storefront/shared/components/media/media.service.ts","ng:/@spartacus/storefront/shared/components/media/media.component.ts","ng:/@spartacus/storefront/shared/components/media/media.module.ts","ng:/@spartacus/storefront/shared/components/carousel/carousel.module.ts","ng:/@spartacus/storefront/shared/components/form/form-errors/form-errors.component.ts","ng:/@spartacus/storefront/shared/components/form/form-errors/form-errors.module.ts","ng:/@spartacus/storefront/shared/components/generic-link/generic-link.component.ts","ng:/@spartacus/storefront/shared/components/generic-link/generic-link.module.ts","ng:/@spartacus/storefront/shared/components/item-counter/item-counter.component.ts","ng:/@spartacus/storefront/shared/components/item-counter/item-counter.module.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/config/default-pagination.config.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/config/pagination.config.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/pagination.model.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/pagination.builder.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/pagination.component.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/pagination.module.ts","ng:/@spartacus/storefront/shared/components/list-navigation/sorting/sorting.component.ts","ng:/@spartacus/storefront/shared/components/list-navigation/list-navigation.module.ts","ng:/@spartacus/storefront/shared/components/media/media.config.ts","ng:/@spartacus/storefront/shared/components/modal/modal-ref.ts","ng:/@spartacus/storefront/shared/components/modal/modal.service.ts","ng:/@spartacus/storefront/cms-components/misc/global-message/global-message.component.ts","ng:/@spartacus/storefront/cms-components/misc/global-message/global-message.module.ts","ng:/@spartacus/storefront/cms-components/misc/qualtrics/config/qualtrics-config.ts","ng:/@spartacus/storefront/cms-components/misc/qualtrics/qualtrics-loader.service.ts","ng:/@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.component.ts","ng:/@spartacus/storefront/cms-components/misc/qualtrics/config/default-qualtrics-config.ts","ng:/@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.module.ts","ng:/@spartacus/storefront/cms-components/misc/site-context-selector/language-currency.component.ts","ng:/@spartacus/storefront/cms-structure/page/model/cms-component-data.ts","ng:/@spartacus/storefront/cms-components/misc/site-context-selector/site-context-component.service.ts","ng:/@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.component.ts","ng:/@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.module.ts","ng:/@spartacus/storefront/cms-components/misc/site-context-selector/site-context.model.ts","ng:/@spartacus/storefront/shared/components/star-rating/star-rating.component.ts","ng:/@spartacus/storefront/shared/components/star-rating/star-rating.module.ts","ng:/@spartacus/storefront/shared/config/view-config.ts","ng:/@spartacus/storefront/shared/config/view-config.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.service.ts","ng:/@spartacus/storefront/shared/services/promotion/promotion.service.ts","ng:/@spartacus/storefront/shared/utils/validators/custom-form-validators.ts","ng:/@spartacus/storefront/shared/utils/forms/title-utils.ts","ng:/@spartacus/storefront/cms-structure/services/cms-components.service.ts","ng:/@spartacus/storefront/cms-structure/page/component/services/cms-injector.service.ts","ng:/@spartacus/storefront/cms-structure/page/component/handlers/component-handler.ts","ng:/@spartacus/storefront/cms-structure/page/component/services/component-handler.service.ts","ng:/@spartacus/storefront/cms-structure/page/component/component-wrapper.directive.ts","ng:/@spartacus/storefront/cms-structure/page/component/handlers/default-component.handler.ts","ng:/@spartacus/storefront/cms-structure/page/component/handlers/lazy-component.handler.ts","ng:/@spartacus/storefront/cms-structure/page/component/page-component.module.ts","ng:/@spartacus/storefront/cms-components/asm/asm-constants.ts","ng:/@spartacus/storefront/cms-components/asm/services/asm-enabler.service.ts","ng:/@spartacus/storefront/cms-components/asm/asm-loader.module.ts","ng:/@spartacus/storefront/cms-components/asm/services/asm-component.service.ts","ng:/@spartacus/storefront/cms-components/asm/asm-main-ui/asm-main-ui.component.ts","ng:/@spartacus/storefront/cms-components/asm/asm-session-timer/asm-session-timer.component.ts","ng:/@spartacus/storefront/cms-components/asm/asm-session-timer/format-timer.pipe.ts","ng:/@spartacus/storefront/cms-components/asm/asm-toggle-ui/asm-toggle-ui.component.ts","ng:/@spartacus/storefront/cms-components/asm/csagent-login-form/csagent-login-form.component.ts","ng:/@spartacus/storefront/cms-components/asm/customer-emulation/customer-emulation.component.ts","ng:/@spartacus/storefront/cms-components/asm/customer-selection/customer-selection.component.ts","ng:/@spartacus/storefront/cms-components/asm/default-asm-layout.config.ts","ng:/@spartacus/storefront/cms-components/asm/asm.module.ts","ng:/@spartacus/storefront/cms-components/product/current-product.service.ts","ng:/@spartacus/storefront/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.ts","ng:/@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/promotions/promotions.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/promotions/promotions.module.ts","ng:/@spartacus/storefront/cms-components/cart/cart-coupon/applied-coupons/applied-coupons.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.module.ts","ng:/@spartacus/storefront/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-shared/cart-item/cart-item.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-shared/order-summary/order-summary.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-shared/cart-shared.module.ts","ng:/@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.module.ts","ng:/@spartacus/storefront/cms-components/cart/cart-details/cart-details.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-details/cart-details.module.ts","ng:/@spartacus/storefront/cms-components/cart/cart-not-empty.guard.ts","ng:/@spartacus/storefront/cms-components/cart/cart-page-layout-handler.ts","ng:/@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.module.ts","ng:/@spartacus/storefront/cms-structure/page/page-layout/page-layout-handler.ts","ng:/@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.component.ts","ng:/@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.module.ts","ng:/@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.component.ts","ng:/@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.module.ts","ng:/@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.component.ts","ng:/@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.module.ts","ng:/@spartacus/storefront/cms-components/cart/cart.module.ts","ng:/@spartacus/storefront/cms-components/checkout/model/checkout-step.model.ts","ng:/@spartacus/storefront/cms-components/checkout/config/checkout-config.ts","ng:/@spartacus/storefront/cms-components/checkout/config/default-checkout-config.ts","ng:/@spartacus/storefront/cms-components/checkout/services/checkout-config.service.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/checkout-auth.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/services/checkout-details.service.ts","ng:/@spartacus/storefront/cms-components/checkout/services/express-checkout.service.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/checkout.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.module.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/shipping-address-set.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.module.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/delivery-mode-set.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/place-order/place-order.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/place-order/place-order.module.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/payment-details-set.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.module.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/checkout-details-loaded.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.module.ts","ng:/@spartacus/storefront/cms-components/checkout/checkout.module.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/not-checkout-auth.guard.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/config/skip-link.config.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/service/skip-link.service.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/component/skip-link.component.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/config/default-skip-link.config.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/directive/skip-link.directive.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/skip-link.module.ts","ng:/@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.service.ts","ng:/@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.component.ts","ng:/@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.module.ts","ng:/@spartacus/storefront/layout/layout.module.ts","ng:/@spartacus/storefront/cms-structure/page/slot/page-slot.component.ts","ng:/@spartacus/storefront/cms-structure/page/slot/page-slot.module.ts","ng:/@spartacus/storefront/cms-structure/page/page-layout/page-layout.service.ts","ng:/@spartacus/storefront/cms-structure/page/page-layout/page-layout.component.ts","ng:/@spartacus/storefront/cms-structure/page/page-layout/page-layout.module.ts","ng:/@spartacus/storefront/cms-structure/pwa/pwa.module-config.ts","ng:/@spartacus/storefront/cms-structure/pwa/services/add-to-home-screen.service.ts","ng:/@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen.component.ts","ng:/@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","ng:/@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","ng:/@spartacus/storefront/cms-structure/pwa/pwa.module.ts","ng:/@spartacus/storefront/cms-structure/seo/html-lang-provider.ts","ng:/@spartacus/storefront/cms-structure/seo/seo-meta.service.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/json-ld-script.factory.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/json-ld.directive.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/tokens.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/structured-data.factory.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/structured-data.module.ts","ng:/@spartacus/storefront/cms-structure/seo/seo.module.ts","ng:/@spartacus/storefront/layout/main/storefront.component.ts","ng:/@spartacus/storefront/layout/main/main.module.ts","ng:/@spartacus/storefront/cms-structure/services/cms-guards.service.ts","ng:/@spartacus/storefront/cms-structure/services/cms-i18n.service.ts","ng:/@spartacus/storefront/cms-structure/services/cms-routes-impl.service.ts","ng:/@spartacus/storefront/cms-structure/services/cms-routes.service.ts","ng:/@spartacus/storefront/cms-structure/guards/cms-page-guard.service.ts","ng:/@spartacus/storefront/cms-structure/guards/cms-page.guard.ts","ng:/@spartacus/storefront/cms-structure/routing/cms-route/add-cms-route.ts","ng:/@spartacus/storefront/cms-structure/routing/cms-route/cms-route.module.ts","ng:/@spartacus/storefront/cms-structure/routing/default-routing-config.ts","ng:/@spartacus/storefront/cms-structure/routing/routing.module.ts","ng:/@spartacus/storefront/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/breadcrumb/breadcrumb-schema.builder.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-base-product.builder.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-offer.builder.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-review.builder.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/product/product-schema.builder.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/json-ld-builder.module.ts","ng:/@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.component.ts","ng:/@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.module.ts","ng:/@spartacus/storefront/cms-components/content/banner/banner.component.ts","ng:/@spartacus/storefront/cms-components/content/banner/banner.module.ts","ng:/@spartacus/storefront/cms-components/content/link/link.component.ts","ng:/@spartacus/storefront/cms-components/content/link/link.module.ts","ng:/@spartacus/storefront/cms-components/content/paragraph/paragraph.component.ts","ng:/@spartacus/storefront/cms-components/content/paragraph/paragraph.module.ts","ng:/@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","ng:/@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/address-book/address-book.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/close-account/components/close-account-modal/close-account-modal.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/close-account/components/close-account/close-account.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/close-account/close-account.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.model.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.guard.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.guard.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-headline/order-detail-headline.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.model.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/tracking-events/tracking-events.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-actions/order-detail-actions.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-overview/return-request-overview.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-items/return-request-items.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-totals/return-request-totals.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-detail.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/reset-password/reset-password-form.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/reset-password/reset-password.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-email/update-email-form/update-email-form.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-email/update-email.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-email/update-email.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-password/components/update-password-form/update-password-form.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-password/components/update-password/update-password.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-password/update-password.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-profile/components/update-profile-form.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-claim/coupon-claim.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.module.ts","ng:/@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.component.ts","ng:/@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.module.ts","ng:/@spartacus/storefront/cms-components/navigation/navigation/navigation.service.ts","ng:/@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.component.ts","ng:/@spartacus/storefront/cms-components/navigation/navigation/navigation-ui.component.ts","ng:/@spartacus/storefront/cms-components/navigation/navigation/navigation.component.ts","ng:/@spartacus/storefront/cms-components/navigation/navigation/navigation.module.ts","ng:/@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.module.ts","ng:/@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.component.ts","ng:/@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.module.ts","ng:/@spartacus/storefront/cms-components/navigation/search-box/search-box-component.service.ts","ng:/@spartacus/storefront/cms-components/navigation/search-box/search-box.component.ts","ng:/@spartacus/storefront/cms-components/navigation/search-box/highlight.pipe.ts","ng:/@spartacus/storefront/cms-components/navigation/search-box/search-box.module.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/components/guest-register-form/guest-register-form.component.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/guards/order-confirmation.guard.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/order-confirmation.module.ts","ng:/@spartacus/storefront/cms-components/product/carousel/product-carousel.service.ts","ng:/@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.component.ts","ng:/@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.module.ts","ng:/@spartacus/storefront/cms-components/product/carousel/product-references/product-references.component.ts","ng:/@spartacus/storefront/cms-components/product/carousel/product-references/product-references.module.ts","ng:/@spartacus/storefront/cms-components/product/config/default-scroll-config.ts","ng:/@spartacus/storefront/cms-components/product/product-images/product-images.component.ts","ng:/@spartacus/storefront/cms-components/product/product-images/product-images.module.ts","ng:/@spartacus/storefront/cms-components/product/product-intro/product-intro.component.ts","ng:/@spartacus/storefront/cms-components/product/product-intro/product-intro.module.ts","ng:/@spartacus/storefront/cms-components/product/product-list/container/product-list-component.service.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-view/product-view.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/container/product-list.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/container/product-scroll/product-scroll.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet.model.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/services/product-facet.service.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/services/facet.service.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.module.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet/facet.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet/facet.module.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.module.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.module.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-list-item/product-list-item.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/product-variants.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.module.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.module.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.module.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.module.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/guards/product-variant.guard.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/product-variants.module.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-list.module.ts","ng:/@spartacus/storefront/cms-components/product/product-outlets.model.ts","ng:/@spartacus/storefront/cms-components/product/product-summary/product-summary.component.ts","ng:/@spartacus/storefront/cms-components/product/product-summary/product-summary.module.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-tabs.module.ts","ng:/@spartacus/storefront/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.ts","ng:/@spartacus/storefront/cms-components/product/stock-notification/stock-notification.component.ts","ng:/@spartacus/storefront/cms-components/product/stock-notification/stock-notification.module.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/schedule-component/schedule.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-grid/store-finder-grid.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-header/store-finder-header.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/abstract-store-item/abstract-store-item.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-list-item/store-finder-list-item.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-map/store-finder-map.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-pagination-details/store-finder-pagination-details.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-list/store-finder-list.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-search-result.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-search/store-finder-search.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-store-description/store-finder-store-description.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-stores-count/store-finder-stores-count.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder/store-finder.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-store/store-finder-store.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/store-finder.module.ts","ng:/@spartacus/storefront/cms-components/user/checkout-login/checkout-login.component.ts","ng:/@spartacus/storefront/cms-components/user/checkout-login/checkout-login.module.ts","ng:/@spartacus/storefront/cms-components/user/login-form/login-form.component.ts","ng:/@spartacus/storefront/cms-components/user/login-form/login-form.module.ts","ng:/@spartacus/storefront/cms-components/user/login/login.component.ts","ng:/@spartacus/storefront/cms-components/user/login/login.module.ts","ng:/@spartacus/storefront/cms-components/user/logout/logout-guard.ts","ng:/@spartacus/storefront/cms-components/user/logout/logout.module.ts","ng:/@spartacus/storefront/cms-components/user/register/register.component.ts","ng:/@spartacus/storefront/cms-components/user/register/register.module.ts","ng:/@spartacus/storefront/cms-components/user/user.module.ts","ng:/@spartacus/storefront/cms-components/wish-list/components/wish-list-item/wish-list-item.component.ts","ng:/@spartacus/storefront/cms-components/wish-list/components/wish-list/wish-list.component.ts","ng:/@spartacus/storefront/cms-components/wish-list/wish-list.module.ts","ng:/@spartacus/storefront/cms-components/cms-lib.module.ts","ng:/@spartacus/storefront/cms-pages/product-details-page/product-details-url-matcher.ts","ng:/@spartacus/storefront/cms-pages/product-details-page/product-details-page.module.ts","ng:/@spartacus/storefront/cms-pages/product-listing-page/product-listing-url-matcher.ts","ng:/@spartacus/storefront/cms-pages/product-listing-page/product-listing-page.module.ts","ng:/@spartacus/storefront/recipes/config/b2c-layout-config.ts","ng:/@spartacus/storefront/recipes/config/default-media.config.ts","ng:/@spartacus/storefront/recipes/config/static-cms-structure/default-header.config.ts","ng:/@spartacus/storefront/recipes/config/static-cms-structure/default-cms-content.config.ts","ng:/@spartacus/storefront/recipes/storefront-foundation.module.ts","ng:/@spartacus/storefront/recipes/storefront.module.ts","ng:/@spartacus/storefront/recipes/b2c-storefront.module.ts","ng:/@spartacus/storefront/public_api.ts","ng:/@spartacus/storefront/spartacus-storefront.ts"],"names":["AsmCoreModule","CoreRoutingModule"],"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","sourcesContent":["import { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\r\n\r\nexport interface LaunchConfig {\r\n  [key: string]: LaunchOptions;\r\n}\r\n\r\nexport type LaunchOptions =\r\n  | LaunchOutletDialog\r\n  | LaunchInlineDialog\r\n  | LaunchRoute;\r\n\r\n/**\r\n * Parent type for configurations that render components\r\n */\r\nexport interface LaunchDialog {\r\n  component: any;\r\n  /**\r\n   * Can the element be rendered multiple times\r\n   */\r\n  multi?: boolean;\r\n  /**\r\n   * Dialog type is used to apply CSS classes\r\n   */\r\n  dialogType?: DIALOG_TYPE;\r\n}\r\n\r\n/**\r\n * Configuration type to render a component in an outlet\r\n */\r\nexport interface LaunchOutletDialog extends LaunchDialog {\r\n  /**\r\n   * The outlet to render the element in\r\n   */\r\n  outlet: string;\r\n  /**\r\n   * Default: OutletPosition.BEFORE\r\n   */\r\n  position?: OutletPosition;\r\n}\r\n\r\n/**\r\n * Configuration type to render a component inline (next to the trigger)\r\n */\r\nexport interface LaunchInlineDialog extends LaunchDialog {\r\n  inline: boolean;\r\n}\r\n\r\n/**\r\n * Configuration type to render as link\r\n */\r\nexport interface LaunchRoute {\r\n  /**\r\n   * The route for the url\r\n   */\r\n  cxRoute: string;\r\n  /**\r\n   * The parameters for the route\r\n   */\r\n  params?: { [param: string]: any };\r\n}\r\n\r\n/**\r\n * Types of dialog openings supported\r\n */\r\nexport enum DIALOG_TYPE {\r\n  POPOVER = 'POPOVER',\r\n  DIALOG = 'DIALOG',\r\n  SIDEBAR_START = 'SIDEBAR_START',\r\n  SIDEBAR_END = 'SIDEBAR_END',\r\n}\r\n\r\n/**\r\n * List of available callers\r\n */\r\nexport enum LAUNCH_CALLER {\r\n  ASM = 'ASM',\r\n  SKIP_LINKS = 'SKIP_LINKS',\r\n  ANONYMOUS_CONSENT = 'ANONYMOUS_CONSENT',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config, DeferLoadingStrategy } from '@spartacus/core';\r\nimport { LaunchConfig } from '../launch-dialog/index';\r\n\r\nexport enum BREAKPOINT {\r\n  xs = 'xs',\r\n  sm = 'sm',\r\n  md = 'md',\r\n  lg = 'lg',\r\n  xl = 'xl',\r\n}\r\n\r\nexport type LayoutSections =\r\n  | 'header'\r\n  | 'footer'\r\n  | 'LandingPage2Template'\r\n  | string;\r\n\r\nexport type SlotConfig = {\r\n  /** The cms page slots are mapped by the `slot.position`. */\r\n  slots?: string[];\r\n\r\n  /**\r\n   * The page fold identifies the last expected page slot above-the-fold.\r\n   * It's perfectly fine to specify this by idication, however a more\r\n   * precise indication will have an positive impact on performance.\r\n   */\r\n  pageFold?: string;\r\n};\r\n\r\nexport type SlotGroup = {\r\n  /** The page slot configuration for large screens */\r\n  [BREAKPOINT.lg]?: SlotConfig;\r\n  /** The page slot configuration for medium screens */\r\n  [BREAKPOINT.md]?: SlotConfig;\r\n  /** The page slot configuration for small screens */\r\n  [BREAKPOINT.sm]?: SlotConfig;\r\n  /** The page slot configuration for extra small screens */\r\n  [BREAKPOINT.xs]?: SlotConfig;\r\n};\r\n\r\nexport type LayoutSlotConfig = {\r\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;\r\n};\r\n\r\n/**\r\n * The LayoutConfig supports the configuration of page slots by page templates\r\n * or page sections, such as headers and footers. The configuration also supports\r\n * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered\r\n * por a given breakpoint.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class LayoutConfig {\r\n  /** The breakpoint configuration is used when the DOM is (re)rendered in specific view.\r\n   * This allows for adaptive rendering, so that the DOM is rendered for specific breakpoints. */\r\n  breakpoints?: {\r\n    [BREAKPOINT.xs]?: number;\r\n    [BREAKPOINT.sm]?: number;\r\n    [BREAKPOINT.md]?: number;\r\n    [BREAKPOINT.lg]?: number;\r\n  };\r\n  layoutSlots?: LayoutSlotConfig;\r\n\r\n  /**\r\n   * Deferrred loading is a technique to hold of with the loading / creation\r\n   * of DOM elements which are not not in the initial view port.\r\n   * This technique wil increase performance.\r\n   */\r\n  deferredLoading?: {\r\n    /**\r\n     * The global strategy will be used as a fallback strategy for all DOM creation,\r\n     * but can be overriden by local configuration, i.e. for cms components.\r\n     */\r\n    strategy?: DeferLoadingStrategy;\r\n    /**\r\n     * The intersection margin contains the offset used by the Intersection Observer\r\n     * to observe elements outside the view port.\r\n     *\r\n     * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\r\n     */\r\n    intersectionMargin?: string;\r\n  };\r\n\r\n  launch?: LaunchConfig;\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ComponentRef,\r\n  Inject,\r\n  Renderer2,\r\n  RendererFactory2,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Applicable, Priority } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  DIALOG_TYPE,\r\n  LaunchDialog,\r\n  LaunchOptions,\r\n  LAUNCH_CALLER,\r\n} from '../config';\r\n\r\nexport abstract class LaunchRenderStrategy implements Applicable {\r\n  // List of called references; only used for rendered elements\r\n  protected renderedCallers: Array<{\r\n    caller: LAUNCH_CALLER | string;\r\n    element?: any;\r\n    component?: ComponentRef<any>;\r\n  }> = [];\r\n\r\n  /**\r\n   * Classes to apply to the component when the dialog is a DIALOG\r\n   */\r\n  protected dialogClasses = ['d-block', 'fade', 'modal', 'show'];\r\n  /**\r\n   * Classes to apply to the component when the dialog is a POPOVER\r\n   */\r\n  protected popoverClasses = ['cx-dialog-popover'];\r\n  /**\r\n   * Classes to apply to the component when the dialog is a SIDEBAR_END\r\n   */\r\n  protected sidebarEndClasses = ['cx-sidebar-end'];\r\n  /**\r\n   * Classes to apply to the component when the dialog is a SIDEBAR_START\r\n   */\r\n  protected sidebarStartClasses = ['cx-sidebar-start'];\r\n\r\n  protected renderer: Renderer2;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2\r\n  ) {\r\n    this.renderer = rendererFactory.createRenderer(null, null);\r\n  }\r\n\r\n  /**\r\n   * Render method to implement based on the strategy\r\n   *\r\n   * @param config Launch configuration\r\n   */\r\n  abstract render(\r\n    config: LaunchOptions,\r\n    caller: LAUNCH_CALLER | string,\r\n    vcr?: ViewContainerRef\r\n  ): void | Observable<ComponentRef<any>>;\r\n\r\n  /**\r\n   * Determines if the strategy is the right one for the provided configuration\r\n   *\r\n   * @param config\r\n   */\r\n  abstract hasMatch(config: LaunchOptions): boolean;\r\n\r\n  /**\r\n   * Determines if element should render\r\n   *\r\n   * @param caller\r\n   * @param config\r\n   */\r\n  protected shouldRender(\r\n    caller: LAUNCH_CALLER | string,\r\n    config: LaunchDialog\r\n  ): boolean {\r\n    return (\r\n      Boolean(config.component) &&\r\n      (this.renderedCallers.some((el) => el.caller === caller)\r\n        ? !!config.multi\r\n        : true)\r\n    );\r\n  }\r\n\r\n  protected applyClasses(\r\n    component: ComponentRef<any>,\r\n    dialogType: DIALOG_TYPE\r\n  ): void {\r\n    let classes = [];\r\n\r\n    // TODO: make classes configurable\r\n    switch (dialogType) {\r\n      case DIALOG_TYPE.DIALOG:\r\n        classes = this.dialogClasses;\r\n        this.renderer.addClass(this.document.body, 'modal-open');\r\n        break;\r\n      case DIALOG_TYPE.POPOVER:\r\n        classes = this.popoverClasses;\r\n        break;\r\n      case DIALOG_TYPE.SIDEBAR_END:\r\n        classes = this.sidebarEndClasses;\r\n        break;\r\n      case DIALOG_TYPE.SIDEBAR_START:\r\n        classes = this.sidebarStartClasses;\r\n        break;\r\n    }\r\n\r\n    for (const newClass of classes) {\r\n      this.renderer.addClass(component.location.nativeElement, newClass);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to call when rendered element is destroyed\r\n   * The element will be removed from the list of rendered elements\r\n   *\r\n   * @param caller\r\n   * @param _config optional parameters used in children strategies\r\n   */\r\n  public remove(caller: LAUNCH_CALLER | string, config: LaunchOptions): void {\r\n    this.renderedCallers = this.renderedCallers.filter(\r\n      (el) => el.caller !== caller\r\n    );\r\n\r\n    if ((config as LaunchDialog)?.dialogType === DIALOG_TYPE.DIALOG) {\r\n      this.renderer.removeClass(this.document.body, 'modal-open');\r\n    }\r\n  }\r\n\r\n  getPriority(): Priority {\r\n    return Priority.LOW; // low, as it's a default matcher\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  isDevMode,\r\n  RendererFactory2,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { LaunchInlineDialog, LAUNCH_CALLER } from '../config/index';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InlineRenderStrategy extends LaunchRenderStrategy {\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2,\r\n    protected componentFactoryResolver: ComponentFactoryResolver\r\n  ) {\r\n    super(document, rendererFactory);\r\n  }\r\n\r\n  /**\r\n   * Renders the component from the configuration in the view container ref\r\n   *\r\n   * @param config\r\n   * @param caller\r\n   * @param vcr\r\n   */\r\n  render(\r\n    config: LaunchInlineDialog,\r\n    caller: LAUNCH_CALLER | string,\r\n    vcr: ViewContainerRef\r\n  ): Observable<ComponentRef<any>> {\r\n    // Only render if a ViewContainerRef is provided\r\n    if (vcr && this.shouldRender(caller, config)) {\r\n      const template = this.componentFactoryResolver.resolveComponentFactory(\r\n        config.component\r\n      );\r\n\r\n      const component = vcr.createComponent(template);\r\n\r\n      if (config?.dialogType) {\r\n        this.applyClasses(component, config?.dialogType);\r\n      }\r\n\r\n      this.renderedCallers.push({ caller, element: vcr.element, component });\r\n\r\n      return of(component);\r\n    } else if (isDevMode()) {\r\n      if (!vcr) {\r\n        console.warn(`No view container ref provided for ${caller}`);\r\n      } else {\r\n        console.warn(\r\n          `Element for ${caller} already rendered. To allow multi rendering add property multi: true.`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  hasMatch(config: LaunchInlineDialog) {\r\n    return Boolean(config.inline);\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  isDevMode,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { resolveApplicable } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { LayoutConfig } from '../../config/layout-config';\r\nimport { LaunchOptions, LAUNCH_CALLER } from '../config/launch-config';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LaunchDialogService {\r\n  private _dialogClose = new BehaviorSubject<string>(undefined);\r\n\r\n  constructor(\r\n    @Inject(LaunchRenderStrategy)\r\n    protected renderStrategies: LaunchRenderStrategy[],\r\n    protected layoutConfig: LayoutConfig\r\n  ) {\r\n    this.renderStrategies = this.renderStrategies || [];\r\n  }\r\n\r\n  /**\r\n   * Render the element based on the strategy from the launch configuration\r\n   *\r\n   * @param caller LAUNCH_CALLER\r\n   * @param vcr View Container Ref of the container for inline rendering\r\n   */\r\n  launch(\r\n    caller: LAUNCH_CALLER | string,\r\n    vcr?: ViewContainerRef\r\n  ): void | Observable<ComponentRef<any>> {\r\n    const config = this.findConfiguration(caller);\r\n    if (config) {\r\n      const renderer = this.getStrategy(config);\r\n\r\n      // Render if the strategy exists\r\n      if (renderer) {\r\n        this._dialogClose.next(undefined);\r\n        return renderer.render(config, caller, vcr);\r\n      }\r\n    } else if (isDevMode()) {\r\n      console.warn('No configuration provided for caller ' + caller);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Util method to remove element from rendered elements list\r\n   *\r\n   * @param caller LAUNCH_CALLER\r\n   */\r\n  clear(caller: LAUNCH_CALLER | string): void {\r\n    const config = this.findConfiguration(caller);\r\n    const renderer = this.getStrategy(config);\r\n\r\n    // Render if the strategy exists\r\n    if (renderer) {\r\n      renderer.remove(caller, config);\r\n    }\r\n  }\r\n\r\n  get dialogClose(): Observable<string> {\r\n    return this._dialogClose.asObservable();\r\n  }\r\n\r\n  closeDialog(reason: string) {\r\n    this._dialogClose.next(reason);\r\n  }\r\n\r\n  /**\r\n   * Returns the configuration for the caller\r\n   *\r\n   * @param caller LAUNCH_CALLER\r\n   */\r\n  protected findConfiguration(caller: LAUNCH_CALLER | string): LaunchOptions {\r\n    if (this.layoutConfig?.launch) {\r\n      return this.layoutConfig.launch[caller];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Returns the render strategy based on the configuration\r\n   *\r\n   * @param config Configuration for launch\r\n   */\r\n  protected getStrategy(config: LaunchOptions): LaunchRenderStrategy {\r\n    return resolveApplicable(this.renderStrategies, [config]);\r\n  }\r\n}\r\n","export enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport const AVOID_STACKED_OUTLETS = false;\nexport const USE_STACKED_OUTLETS = true;\n","import { Injectable, TemplateRef } from '@angular/core';\r\nimport { AVOID_STACKED_OUTLETS, OutletPosition } from './outlet.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OutletService<T = TemplateRef<any>> {\r\n  private templatesRefs = new Map<string, T[]>();\r\n  private templatesRefsBefore = new Map<string, T[]>();\r\n  private templatesRefsAfter = new Map<string, T[]>();\r\n\r\n  /**\r\n   * Adds a template or ComponentFactory, so that UI outlets can be replaced dynamically.\r\n   * The UI position where this template or ComponentFactory is inserted is given by a\r\n   * string reference (called `outlet`) and optional `OutletPosition`. The `OutletPosition`\r\n   * is either before or after, or replaces the entire UI.\r\n   *\r\n   * @param outlet the UI location represented by a string\r\n   * @param template the `TemplateRef` that will be used to insert UI\r\n   * @param position the `OutletPosition` in the UI\r\n   */\r\n  add(outlet: string, template: T, position?: OutletPosition): void;\r\n  /**\r\n   * @param factory The `ComponentFactory` that will be dynamically added to the outlet UI\r\n   */\r\n  add(\r\n    outlet: string,\r\n    // tslint:disable-next-line: unified-signatures\r\n    factory: T,\r\n    position?: OutletPosition\r\n  ): void;\r\n  /**\r\n   * @param templateOrFactory A `ComponentFactory` that inserts a component dynamically.\r\n   */\r\n  add(\r\n    outlet: string,\r\n    templateOrFactory: T,\r\n    position: OutletPosition = OutletPosition.REPLACE\r\n  ): void {\r\n    if (position === OutletPosition.BEFORE) {\r\n      this.store(this.templatesRefsBefore, outlet, templateOrFactory);\r\n    }\r\n    if (position === OutletPosition.REPLACE) {\r\n      this.store(this.templatesRefs, outlet, templateOrFactory);\r\n    }\r\n    if (position === OutletPosition.AFTER) {\r\n      this.store(this.templatesRefsAfter, outlet, templateOrFactory);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Returns a single object or multiple objects for the given outlet reference,\r\n   * depending on the `stacked` argument.\r\n   *\r\n   * @param outlet The outlet reference\r\n   * @param position the outlet position, `OutletPosition.before`, `OutletPosition.AFTER` or `OutletPosition.REPLACE`\r\n   * @param stacked Indicates whether an array of outlet components is returned\r\n   */\r\n  get(\r\n    outlet: string,\r\n    position: OutletPosition = OutletPosition.REPLACE,\r\n    stacked = AVOID_STACKED_OUTLETS\r\n  ): T[] | T {\r\n    let templateRef: T[];\r\n    switch (position) {\r\n      case OutletPosition.BEFORE:\r\n        templateRef = this.templatesRefsBefore.get(outlet);\r\n        break;\r\n      case OutletPosition.AFTER:\r\n        templateRef = this.templatesRefsAfter.get(outlet);\r\n        break;\r\n      default:\r\n        templateRef = this.templatesRefs.get(outlet);\r\n    }\r\n    if (templateRef && !stacked) {\r\n      return templateRef[0];\r\n    }\r\n    return templateRef;\r\n  }\r\n\r\n  remove(\r\n    outlet: string,\r\n    position: OutletPosition = OutletPosition.REPLACE,\r\n    value?: T\r\n  ): void {\r\n    switch (position) {\r\n      case OutletPosition.BEFORE:\r\n        this.removeValueOrAll(this.templatesRefsBefore, outlet, value);\r\n        break;\r\n      case OutletPosition.AFTER:\r\n        this.removeValueOrAll(this.templatesRefsAfter, outlet, value);\r\n        break;\r\n      default:\r\n        this.removeValueOrAll(this.templatesRefs, outlet, value);\r\n    }\r\n  }\r\n\r\n  private store(store: Map<string, T[]>, outlet: string, value: T) {\r\n    const existing = store.get(outlet) || [];\r\n    const newValue: T[] = existing.concat([value]);\r\n    store.set(outlet, newValue);\r\n  }\r\n\r\n  protected removeValueOrAll(\r\n    store: Map<string, T[]>,\r\n    outlet: string,\r\n    value?: T\r\n  ): void {\r\n    if (!value && store.has(outlet)) {\r\n      store.delete(outlet);\r\n    } else if (value && store.has(outlet)) {\r\n      let existing = store.get(outlet);\r\n      existing = existing.filter((val) => val === value);\r\n      store.set(outlet, existing);\r\n    }\r\n  }\r\n}\r\n","import { Directive, TemplateRef, Input, OnInit } from '@angular/core';\n\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { OutletDirective } from './outlet.directive';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OutletRendererService {\r\n  private outletRefs = new BehaviorSubject(new Map<string, OutletDirective>());\r\n\r\n  /**\r\n   * Dynamically render the templates in the specified array\r\n   *\r\n   * @param outlet\r\n   */\r\n  render(outlet: string): void {\r\n    if (this.outletRefs.value.size !== 0) {\r\n      this.outletRefs.value.get(outlet).render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register outlet to be available to render dynamically\r\n   *\r\n   * @param cxOutlet\r\n   * @param context\r\n   */\r\n  register(cxOutlet: string, context: OutletDirective): void {\r\n    this.outletRefs.next(this.outletRefs.value.set(cxOutlet, context));\r\n  }\r\n  /**\r\n   * Returns map of outlets\r\n   *\r\n   */\r\n  getOutletRef(outlet: string): Observable<OutletDirective> {\r\n    return this.outletRefs.asObservable().pipe(\r\n      map((val) => val.get(outlet)),\r\n      filter((val) => Boolean(val))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, first, flatMap, map } from 'rxjs/operators';\r\nimport { LayoutConfig } from '../config/layout-config';\r\nimport { IntersectionOptions } from './intersection.model';\r\n\r\n/**\r\n * The IntersectionService uses the native IntersectionObserver (v2), which\r\n * can be used to implement pre-loading and deferred loading of DOM content.\r\n *\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IntersectionService {\r\n  constructor(protected config: LayoutConfig) {}\r\n\r\n  /**\r\n   * Returns an Observable that emits only once a boolean value whenever\r\n   * the given element has shown in the view port.\r\n   *\r\n   * The returned observable will only emit the first value. The\r\n   * observable must be cleaned up either way, since the value might never emit; it\r\n   *  depends on whether the element appears in the view port.\r\n   */\r\n  isIntersected(\r\n    element: HTMLElement,\r\n    options?: IntersectionOptions\r\n  ): Observable<boolean> {\r\n    return this.intersects(element, options).pipe(first((v) => v === true));\r\n  }\r\n\r\n  /**\r\n   * Indicates whenever the element intersects the view port. An optional margin\r\n   * is used to intersects before the element shows up in the viewport.\r\n   * A value is emitted each time the element intersects.\r\n   *\r\n   * This is private for now, but could be exposed as a public API\r\n   * to introduce additional (css) render effects to the UI.\r\n   */\r\n  private intersects(\r\n    element: HTMLElement,\r\n    options: IntersectionOptions = {}\r\n  ): Observable<boolean> {\r\n    const elementVisible$ = new Observable((observer) => {\r\n      const rootMargin = this.getRootMargin(options);\r\n      const intersectOptions = { rootMargin, threshold: options.threshold };\r\n      const intersectionObserver = new IntersectionObserver((entries) => {\r\n        observer.next(entries);\r\n      }, intersectOptions);\r\n      intersectionObserver.observe(element);\r\n      return () => {\r\n        intersectionObserver.disconnect();\r\n      };\r\n    }).pipe(\r\n      flatMap((entries: IntersectionObserverEntry[]) => entries),\r\n      map((entry: IntersectionObserverEntry) => entry.isIntersecting),\r\n      distinctUntilChanged()\r\n    );\r\n\r\n    return elementVisible$;\r\n  }\r\n\r\n  private getRootMargin(options: IntersectionOptions = {}): string {\r\n    if (options.rootMargin) {\r\n      return options.rootMargin;\r\n    }\r\n    const layoutConfig = this.config as LayoutConfig;\r\n    if (\r\n      layoutConfig.deferredLoading &&\r\n      layoutConfig.deferredLoading.intersectionMargin\r\n    ) {\r\n      return layoutConfig.deferredLoading.intersectionMargin;\r\n    }\r\n  }\r\n}\r\n","import { isPlatformServer } from '@angular/common';\r\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { DeferLoadingStrategy } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { LayoutConfig } from '../config/layout-config';\r\nimport { IntersectionOptions } from './intersection.model';\r\nimport { IntersectionService } from './intersection.service';\r\n\r\n/**\r\n * The defer loading serivce is used to defer loading of DOM elements\r\n * until the elements are required for the user experience.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeferLoaderService {\r\n  globalLoadStrategy: DeferLoadingStrategy;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    protected config: LayoutConfig,\r\n    protected intersectionService: IntersectionService\r\n  ) {\r\n    this.globalLoadStrategy = config.deferredLoading\r\n      ? config.deferredLoading.strategy\r\n      : DeferLoadingStrategy.INSTANT;\r\n  }\r\n\r\n  /**\r\n   * Defer loading till the element intersects the viewport.\r\n   *\r\n   * We evaluate whether we instantly load the element for different reasons:\r\n   * - we run in SSR mode\r\n   * - there's no global strategy given\r\n   * - the global loading strategy is set to INSTANT loading,\r\n   *   and the loading strategy in the given is not set to DEFER\r\n   * - the loading strategy in the given options is set to INSTANT\r\n   */\r\n  load(\r\n    element: HTMLElement,\r\n    options?: IntersectionOptions\r\n  ): Observable<boolean> {\r\n    if (this.shouldLoadInstantly((options || {}).deferLoading)) {\r\n      return of(true);\r\n    } else {\r\n      return this.intersectionService.isIntersected(element, options);\r\n    }\r\n  }\r\n\r\n  private shouldLoadInstantly(\r\n    elementLoadingStrategy: DeferLoadingStrategy\r\n  ): boolean {\r\n    return (\r\n      isPlatformServer(this.platformId) ||\r\n      elementLoadingStrategy === DeferLoadingStrategy.INSTANT ||\r\n      (elementLoadingStrategy !== DeferLoadingStrategy.DEFER &&\r\n        this.globalLoadStrategy === DeferLoadingStrategy.INSTANT)\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ComponentFactory,\r\n  ComponentRef,\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { DeferLoaderService } from '../../layout/loading/defer-loader.service';\r\nimport { IntersectionOptions } from '../../layout/loading/intersection.model';\r\nimport { OutletRendererService } from './outlet-renderer.service';\r\nimport { OutletPosition, USE_STACKED_OUTLETS } from './outlet.model';\r\nimport { OutletService } from './outlet.service';\r\n\r\n@Directive({\r\n  selector: '[cxOutlet]',\r\n})\r\nexport class OutletDirective implements OnDestroy, OnChanges {\r\n  private renderedTemplate = [];\r\n  public renderedComponents = new Map<\r\n    OutletPosition,\r\n    Array<ComponentRef<any> | EmbeddedViewRef<any>>\r\n  >();\r\n\r\n  @Input() cxOutlet: string;\r\n\r\n  @Input() cxOutletContext: any;\r\n\r\n  /**\r\n   * Defers loading options for the the templates of this outlet.\r\n   */\r\n  @Input() cxOutletDefer: IntersectionOptions;\r\n\r\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>(true);\r\n\r\n  subscription = new Subscription();\r\n\r\n  constructor(\r\n    private vcr: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private outletService: OutletService<\r\n      TemplateRef<any> | ComponentFactory<any>\r\n    >,\r\n    private deferLoaderService: DeferLoaderService,\r\n    private outletRendererService: OutletRendererService\r\n  ) {}\r\n\r\n  public render(): void {\r\n    this.vcr.clear();\r\n    this.renderedTemplate = [];\r\n    this.renderedComponents.clear();\r\n    this.subscription.unsubscribe();\r\n    this.subscription = new Subscription();\r\n\r\n    if (this.cxOutletDefer) {\r\n      this.deferLoading();\r\n    } else {\r\n      this.build();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.cxOutlet) {\r\n      this.render();\r\n      this.outletRendererService.register(this.cxOutlet, this);\r\n    }\r\n  }\r\n\r\n  private deferLoading(): void {\r\n    this.loaded.emit(false);\r\n    const hostElement = this.getHostElement(this.vcr.element.nativeElement);\r\n    // Although the deferLoaderService might emit only once, as long as the hostElement\r\n    // isn't being loaded, there's no value being emitted. Therefor we need to clean up\r\n    // the subscription on destroy.\r\n    this.subscription.add(\r\n      this.deferLoaderService\r\n        .load(hostElement, this.cxOutletDefer)\r\n        .subscribe(() => {\r\n          this.build();\r\n          this.loaded.emit(true);\r\n        })\r\n    );\r\n  }\r\n\r\n  private build() {\r\n    this.buildOutlet(OutletPosition.BEFORE);\r\n    this.buildOutlet(OutletPosition.REPLACE);\r\n    this.buildOutlet(OutletPosition.AFTER);\r\n  }\r\n\r\n  private buildOutlet(position: OutletPosition): void {\r\n    let templates: any[] = <any[]>(\r\n      this.outletService.get(this.cxOutlet, position, USE_STACKED_OUTLETS)\r\n    );\r\n\r\n    templates = templates?.filter((el) => !this.renderedTemplate.includes(el));\r\n\r\n    if (!templates && position === OutletPosition.REPLACE) {\r\n      templates = [this.templateRef];\r\n    }\r\n\r\n    // Just in case someone extended the `OutletService` and\r\n    // returns a singular object.\r\n    if (!Array.isArray(templates)) {\r\n      templates = [templates];\r\n    }\r\n\r\n    const components = [];\r\n    templates.forEach((obj) => {\r\n      const component = this.create(obj);\r\n      components.push(component);\r\n    });\r\n\r\n    this.renderedComponents.set(position, components);\r\n  }\r\n\r\n  private create(tmplOrFactory: any): ComponentRef<any> | EmbeddedViewRef<any> {\r\n    this.renderedTemplate.push(tmplOrFactory);\r\n\r\n    if (tmplOrFactory instanceof ComponentFactory) {\r\n      const component = this.vcr.createComponent(tmplOrFactory);\r\n      return component;\r\n    } else if (tmplOrFactory instanceof TemplateRef) {\r\n      const view = this.vcr.createEmbeddedView(\r\n        <TemplateRef<any>>tmplOrFactory,\r\n        {\r\n          $implicit: this.cxOutletContext,\r\n        }\r\n      );\r\n\r\n      // we do not know if content is created dynamically or not\r\n      // so we apply change detection anyway\r\n      view.markForCheck();\r\n      return view;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the closest `HtmlElement`, by iterating over the\r\n   * parent nodes of the given element.\r\n   *\r\n   * We avoid traversing the parent _elements_, as this is blocking\r\n   * ie11 implementations. One of the spare exclusions we make to not\r\n   * supporting ie11.\r\n   *\r\n   * @param element\r\n   */\r\n  private getHostElement(element: Node): HTMLElement {\r\n    if (element instanceof HTMLElement) {\r\n      return element;\r\n    }\r\n    return this.getHostElement(element.parentNode);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletService } from './outlet.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  providers: [OutletService],\n  exports: [OutletDirective],\n})\nexport class OutletModule {}\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  RendererFactory2,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport {\r\n  OutletPosition,\r\n  OutletService,\r\n} from '../../../cms-structure/outlet/index';\r\nimport { OutletRendererService } from '../../../cms-structure/outlet/outlet-renderer.service';\r\nimport { LaunchOutletDialog, LAUNCH_CALLER } from '../config/index';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OutletRenderStrategy extends LaunchRenderStrategy {\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2,\r\n    protected outletService: OutletService<ComponentFactory<any>>,\r\n    protected componentFactoryResolver: ComponentFactoryResolver,\r\n    protected outletRendererService: OutletRendererService\r\n  ) {\r\n    super(document, rendererFactory);\r\n  }\r\n\r\n  /**\r\n   * Renders the element in the configured outlet\r\n   *\r\n   * @param config\r\n   * @param caller\r\n   * @param vcr\r\n   */\r\n  render(\r\n    config: LaunchOutletDialog,\r\n    caller: LAUNCH_CALLER | string\r\n  ): Observable<ComponentRef<any>> {\r\n    if (this.shouldRender(caller, config)) {\r\n      const template = this.componentFactoryResolver.resolveComponentFactory(\r\n        config.component\r\n      );\r\n      this.outletService.add(\r\n        config.outlet,\r\n        template,\r\n        config.position ? config.position : OutletPosition.BEFORE\r\n      );\r\n      this.outletRendererService.render(config.outlet);\r\n      this.renderedCallers.push({ caller });\r\n\r\n      return this.outletRendererService.getOutletRef(config.outlet).pipe(\r\n        map((outletDirective) => {\r\n          const components = outletDirective.renderedComponents.get(\r\n            config.position ? config.position : OutletPosition.BEFORE\r\n          ) as ComponentRef<any>[];\r\n\r\n          return components\r\n            .reverse()\r\n            .find(\r\n              (component) => component.componentType === template.componentType\r\n            );\r\n        }),\r\n        tap((component) => {\r\n          if (config?.dialogType) {\r\n            this.applyClasses(component, config?.dialogType);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  hasMatch(config: LaunchOutletDialog) {\r\n    return Boolean(config.outlet);\r\n  }\r\n\r\n  remove(caller: LAUNCH_CALLER | string, config: LaunchOutletDialog): void {\r\n    const template = this.componentFactoryResolver.resolveComponentFactory(\r\n      config.component\r\n    );\r\n\r\n    this.outletService.remove(\r\n      config.outlet,\r\n      config.position ? config.position : OutletPosition.BEFORE,\r\n      template\r\n    );\r\n\r\n    super.remove(caller, config);\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable, RendererFactory2 } from '@angular/core';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { LaunchRoute, LAUNCH_CALLER } from '../config/index';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoutingRenderStrategy extends LaunchRenderStrategy {\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2,\r\n    protected routingService: RoutingService\r\n  ) {\r\n    super(document, rendererFactory);\r\n  }\r\n  /**\r\n   * Navigates to the route configured for the caller\r\n   */\r\n  render(config: LaunchRoute, _caller: LAUNCH_CALLER | string) {\r\n    this.routingService.go(config);\r\n  }\r\n\r\n  hasMatch(config: LaunchRoute) {\r\n    return Boolean(config.cxRoute);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\nimport { LayoutConfig } from '../config/layout-config';\r\nimport {\r\n  InlineRenderStrategy,\r\n  LaunchRenderStrategy,\r\n  OutletRenderStrategy,\r\n  RoutingRenderStrategy,\r\n} from './services/index';\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: LaunchRenderStrategy,\r\n      useExisting: OutletRenderStrategy,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: LaunchRenderStrategy,\r\n      useExisting: InlineRenderStrategy,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: LaunchRenderStrategy,\r\n      useExisting: RoutingRenderStrategy,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class LaunchDialogModule {\r\n  static forRoot(): ModuleWithProviders<LaunchDialogModule> {\r\n    return {\r\n      ngModule: LaunchDialogModule,\r\n      providers: [{ provide: LayoutConfig, useExisting: Config }],\r\n    };\r\n  }\r\n}\r\n","import { ElementRef, Injectable, ViewContainerRef } from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport {\r\n  LaunchDialogService,\r\n  LAUNCH_CALLER,\r\n} from '../../layout/launch-dialog/index';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AnonymousConsentLaunchDialogService {\r\n  constructor(protected launchDialogService: LaunchDialogService) {}\r\n\r\n  openDialog(\r\n    openElement?: ElementRef,\r\n    vcr?: ViewContainerRef\r\n  ): Observable<any> | undefined {\r\n    const component = this.launchDialogService.launch(\r\n      LAUNCH_CALLER.ANONYMOUS_CONSENT,\r\n      vcr\r\n    );\r\n\r\n    if (component) {\r\n      return combineLatest([\r\n        component,\r\n        this.launchDialogService.dialogClose,\r\n      ]).pipe(\r\n        filter(([, close]) => close && close !== undefined),\r\n        tap(([comp]) => {\r\n          openElement?.nativeElement.focus();\r\n          this.launchDialogService.clear(LAUNCH_CALLER.ANONYMOUS_CONSENT);\r\n          comp.destroy();\r\n        }),\r\n        map(([comp]) => comp)\r\n      );\r\n    }\r\n  }\r\n}\r\n","/** The element attribute used to store the focus state */\r\nexport const FOCUS_ATTR = 'data-cx-focus';\r\n/** The element attribute used to store the focus group state */\r\nexport const FOCUS_GROUP_ATTR = 'data-cx-focus-group';\r\n\r\nexport const enum MOVE_FOCUS {\r\n  NEXT = 1,\r\n  PREV = -1,\r\n}\r\n\r\n// tslint:disable-next-line: no-empty-interface\r\nexport interface BaseFocusConfig {}\r\n\r\nexport interface VisibleFocusConfig {\r\n  /**\r\n   * When set to true, the mouse-focus class is added to the host element,\r\n   * indicating that the element focus was not caused by the keyboard.\r\n   */\r\n  disableMouseFocus?: boolean;\r\n}\r\n\r\nexport interface BlockFocusConfig extends VisibleFocusConfig {\r\n  block?: boolean;\r\n}\r\n\r\nexport interface PersistFocusConfig extends BlockFocusConfig {\r\n  /**\r\n   * A key to maintain the focus of an element in case the component is\r\n   * recreated (which often is the case when an `*ngIf` or `*ngFor` is used).\r\n   */\r\n  key?: string;\r\n\r\n  /**\r\n   * Optional group identifier that can be used to persist the focus. This allows\r\n   * to have separate persisted focus available when the DOM is partially rebuild.\r\n   */\r\n  group?: string;\r\n}\r\n\r\nexport interface EscapeFocusConfig extends PersistFocusConfig {\r\n  focusOnEscape?: boolean;\r\n  /**\r\n   * Force an autofocus in case of double-escape\r\n   */\r\n  focusOnDoubleEscape?: boolean;\r\n}\r\n\r\nexport interface AutoFocusConfig extends EscapeFocusConfig {\r\n  /**\r\n   * Autofocus is enabled by default, and will try to focus an _autofocus_ element.\r\n   * In case the focus is explicitly set to `true`, the first accessible element\r\n   * is focussed in case there is no _autofocus_ element found.\r\n   * If the focus is set to false, autofocus will be disabled completely.\r\n   *\r\n   * If a string value is given, the autofocus will be restored based on the persisted\r\n   * focus group, which is driven by `PersistFocusConfig.key` and `PersistFocusConfig.group`.\r\n   *\r\n   * Defaults to `true`.\r\n   */\r\n  autofocus?: boolean | string;\r\n}\r\n\r\nexport interface TabFocusConfig extends AutoFocusConfig {\r\n  tab?: boolean | 'scroll' | string;\r\n}\r\n\r\n/**\r\n * The keyboard navigation (tab, shift-tab and up down keys) is _trapped_\r\n * for the nested focusable elements. This means that the focus can not\r\n * \"leave\" the elements. If the last element is focused, the keyboard will\r\n * navigate to the first element and visa versa.\r\n */\r\nexport interface TrapFocusConfig extends TabFocusConfig {\r\n  /** traps the focus */\r\n  trap?: boolean | 'start' | 'end';\r\n}\r\n\r\nexport interface LockFocusConfig extends TrapFocusConfig {\r\n  /**\r\n   * Indicates that the nested DOM is locked for keyboarding (`TAB`).\r\n   */\r\n  lock?: boolean;\r\n}\r\n\r\n// tslint:disable-next-line: no-empty-interface\r\nexport interface FocusConfig extends LockFocusConfig {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport abstract class BaseFocusService {}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { BaseFocusConfig } from '../keyboard-focus.model';\r\nimport { BaseFocusService } from './base-focus.service';\r\n\r\n/**\r\n * Abstract directive that provides a common interface for all focus directives:\r\n * - Block Focus\r\n * - Persist Focus\r\n * - Escape Focus\r\n * - Auto Focus\r\n * - Tab Focus\r\n * - Trap Focus\r\n * - Lock Focus\r\n */\r\n@Directive()\r\nexport abstract class BaseFocusDirective implements OnInit {\r\n  /**\r\n   * Optional configuration for the focus directive drives the behaviour of the keyboard\r\n   * focus directive.\r\n   */\r\n  protected config: BaseFocusConfig;\r\n\r\n  /**\r\n   * A default config can be provided for each directive if a specific focus directive\r\n   * is used directly. i.e. `<div cxAutoFocus></div>`\r\n   */\r\n  protected defaultConfig: BaseFocusConfig = {};\r\n\r\n  @Input() @HostBinding('attr.tabindex') tabindex: number;\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected service: BaseFocusService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.setDefaultConfiguration();\r\n    this.requiredTabindex = -1;\r\n  }\r\n\r\n  /**\r\n   * Override the (input) config if it undefined or an empty string, with the\r\n   * `defaultConfig`. The `defaultConfig` might be specified for each directive\r\n   * differently. If a specific directive is used (i.e. `cxAutoFocus`), the\r\n   * specific (inherited) defaultConfig will be used.\r\n   */\r\n  protected setDefaultConfiguration(): void {\r\n    if ((!this.config || this.config === '') && this.defaultConfig) {\r\n      this.config = this.defaultConfig;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Helper method to return the host element for the directive\r\n   * given by the `elementRef`.\r\n   */\r\n  protected get host(): HTMLElement {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Force a tabindex on the host element if it is _requried_ to make the element\r\n   * focusable. If the element is focusable by nature or by a given tabindex, the\r\n   * `tabindex` is not applied.\r\n   *\r\n   * Buttons, active links, etc. do no need an explicit tabindex to receive focus.\r\n   */\r\n  protected set requiredTabindex(tabindex: number) {\r\n    if (this.requiresExplicitTabIndex) {\r\n      this.tabindex = tabindex;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if the host element does not have a tabindex defined\r\n   * and it also doesn't get focus by browsers nature (i.e. button or\r\n   * active link).\r\n   */\r\n  protected get requiresExplicitTabIndex(): boolean {\r\n    return (\r\n      this.tabindex === undefined &&\r\n      ['button', 'input', 'select', 'textarea'].indexOf(\r\n        this.host.tagName.toLowerCase()\r\n      ) === -1 &&\r\n      !(\r\n        this.host.tagName === 'A' &&\r\n        (this.host.hasAttribute('href') || this.host.hasAttribute('routerlink'))\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Directive, HostBinding, HostListener } from '@angular/core';\r\nimport { BaseFocusDirective } from '../base/base-focus.directive';\r\nimport { VisibleFocusConfig } from '../keyboard-focus.model';\r\n\r\n/**\r\n * Directive implementation that adds a CSS class to the host element\r\n * when the moused is used to focus an element. As soon as the keyboard\r\n * is used, the class is removed.\r\n */\r\n@Directive() // selector: '[cxVisibleFocus]'\r\nexport class VisibleFocusDirective extends BaseFocusDirective {\r\n  protected defaultConfig: VisibleFocusConfig = { disableMouseFocus: true };\r\n\r\n  // @Input('cxVisibleFocus')\r\n  protected config: VisibleFocusConfig;\r\n\r\n  /** controls a polyfill class for the lacking focus-visible feature */\r\n  @HostBinding('class.mouse-focus') mouseFocus = false;\r\n\r\n  @HostListener('mousedown') handleMousedown() {\r\n    if (this.shouldFocusVisible) {\r\n      this.mouseFocus = true;\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown') handleKeydown() {\r\n    if (this.shouldFocusVisible) {\r\n      this.mouseFocus = false;\r\n    }\r\n  }\r\n\r\n  protected get shouldFocusVisible(): boolean {\r\n    return this.config?.disableMouseFocus;\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit } from '@angular/core';\r\nimport { BaseFocusService } from '../base/base-focus.service';\r\nimport { BlockFocusConfig } from '../keyboard-focus.model';\r\nimport { VisibleFocusDirective } from '../visible/visible-focus.directive';\r\n\r\n@Directive()\r\n// { selector: '[cxBlockFocus]' }\r\nexport class BlockFocusDirective extends VisibleFocusDirective\r\n  implements OnInit {\r\n  protected defaultConfig: BlockFocusConfig = { block: true };\r\n\r\n  // @Input('cxBlockFocus')\r\n  protected config: BlockFocusConfig = {};\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: BaseFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    if (this.config.block) {\r\n      this.tabindex = -1;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseFocusService } from '../base/base-focus.service';\r\nimport { FOCUS_GROUP_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\r\n\r\nconst GLOBAL_GROUP = '_g_';\r\n\r\n/**\r\n * Shared service to persist the focus for an element or a group\r\n * of elements. The persisted element focus can be used to persist\r\n * the focus for a DOM tree, so that the focus remains after a repaint\r\n * or reoccurs when a DOM tree is \"unlocked\".\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PersistFocusService extends BaseFocusService {\r\n  // this is going to fail as we have sub services. They will al have their own map.\r\n  // We must bring this to a singleton map.\r\n  protected focus = new Map<string, string>();\r\n\r\n  get(group?: string): string {\r\n    return this.focus.get(group || GLOBAL_GROUP);\r\n  }\r\n\r\n  /**\r\n   * Persist the keyboard focus state for the given key. The focus is stored globally\r\n   * or for the given group.\r\n   */\r\n  set(key: string, group?: string) {\r\n    if (key) {\r\n      this.focus.set(group || GLOBAL_GROUP, key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears the persisted keyboard focus state globally or for the given group.\r\n   */\r\n  clear(group?: string) {\r\n    this.focus.delete(group || GLOBAL_GROUP);\r\n  }\r\n\r\n  /**\r\n   * Returns the group for the host element based on the configured group or\r\n   * by the `data-cx-focus-group` attribute stored on the host.\r\n   */\r\n  getPersistenceGroup(host: HTMLElement, config?: PersistFocusConfig): string {\r\n    return config?.group ? config.group : host.getAttribute(FOCUS_GROUP_ATTR);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { BlockFocusDirective } from '../block/block-focus.directive';\r\nimport { FOCUS_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\r\nimport { PersistFocusService } from './persist-focus.service';\r\n\r\n/**\r\n * Directive that provides persistence of the focused state. This is useful\r\n * when a group of focusable elements got refocused or even recreated. That\r\n * happens often when the DOM is constructed with an `*ngIf` or `*ngFor`.\r\n *\r\n * The focus state is based on a configured _key_, which can be passed in the\r\n * config input, either by using a string primitive or `PersistFocusConfig.key`:\r\n *\r\n * ```html\r\n * <button cxPersistFocus=\"myKey\"></button>\r\n * <button cxFocus=\"myKey\"></button>\r\n * <button [cxFocus]=\"{{key:'myKey'}\"></button>\r\n * ```\r\n *\r\n * The focus state can be part of a focus _group_, so that the state is shared\r\n * and remember for the given group. In order to detect the persistence for a\r\n * given element, we store the persistence key as a data attribute (`data-cx-focus`):\r\n *\r\n * ```html\r\n * <button data-cx-focus=\"myKey\"></button>\r\n * ```\r\n *\r\n * Other keyboard focus directives can read the key to understand whether the element\r\n * should retrieve focus.\r\n *\r\n */\r\n@Directive() // selector: '[cxPersistFocus]',\r\nexport class PersistFocusDirective extends BlockFocusDirective\r\n  implements OnInit, AfterViewInit {\r\n  protected defaultConfig: PersistFocusConfig = {};\r\n\r\n  /**\r\n   * The persistence key can be passed directly or through the `FocusConfig.key`.\r\n   * While this could be considered a global key, the likeliness of conflicts\r\n   * is very small since the key is cleared when the focus is changed.\r\n   */\r\n  // @Input('cxPersistFocus')\r\n  protected config: PersistFocusConfig = {};\r\n\r\n  /**\r\n   * The persistence key is maintained in an element attribute for other\r\n   * implementations. This is needed to ensure that we can resolve the focus\r\n   * state in case of a repaint.\r\n   */\r\n  @HostBinding(`attr.${FOCUS_ATTR}`) attr: string;\r\n\r\n  @HostListener('focus', ['$event'])\r\n  handleFocus(event?: KeyboardEvent) {\r\n    this.service.set(this.key, this.group);\r\n\r\n    event?.preventDefault();\r\n    event?.stopPropagation();\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: PersistFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.attr = this.key ? this.key : undefined;\r\n  }\r\n\r\n  protected setDefaultConfiguration() {\r\n    if (typeof this.config === 'string' && this.config !== '') {\r\n      this.config = { key: this.config };\r\n    }\r\n    super.setDefaultConfiguration();\r\n  }\r\n\r\n  /**\r\n   * Focus the element explicitly if it was focused before.\r\n   */\r\n  ngAfterViewInit() {\r\n    if (this.isPersisted) {\r\n      this.host.focus({ preventScroll: true });\r\n    }\r\n  }\r\n\r\n  protected get isPersisted(): boolean {\r\n    return !!this.key && this.service.get(this.group) === this.key;\r\n  }\r\n\r\n  /**\r\n   * Returns the key for the host element, which is used to persist the\r\n   * focus state. This is useful in cases where the DOM is rebuild.\r\n   */\r\n  protected get key(): string {\r\n    return (this.config as PersistFocusConfig)?.key;\r\n  }\r\n\r\n  /**\r\n   * returns the persistence group (if any) for the focusable elements.\r\n   */\r\n  protected get group(): string {\r\n    return this.service.getPersistenceGroup(\r\n      this.host,\r\n      this.config as PersistFocusConfig\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AutoFocusConfig } from '../keyboard-focus.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SelectFocusUtility {\r\n  /**\r\n   * Query selectors used to query focusable child elements of the host element.\r\n   * The selectors are supplemented with `:not([disabled])` and `:not([hidden])`.\r\n   */\r\n  protected focusableSelectors: string[] = [\r\n    'a[href]',\r\n    'button',\r\n    '[tabindex]',\r\n    'input',\r\n    'select',\r\n    'textarea',\r\n  ];\r\n\r\n  // like to leave out the following as we don't use it, and make this list exensible.\r\n  //   `[contentEditable=true]`, // very unlikely to suport as we're not a business tool\r\n  //   `iframe`, // we really don't like iframes...\r\n  //   `area[href]`, // very debatable!\r\n\r\n  protected focusableSelectorSuffix = ':not([disabled]):not([hidden])';\r\n\r\n  query(host: HTMLElement, selector: string): HTMLElement[] {\r\n    if (!selector || selector === '') {\r\n      return [];\r\n    }\r\n    return Array.from(\r\n      host.querySelectorAll(selector) as NodeListOf<HTMLElement>\r\n    );\r\n  }\r\n\r\n  findFirstFocusable(\r\n    host: HTMLElement,\r\n    config: AutoFocusConfig = { autofocus: true }\r\n  ): HTMLElement {\r\n    const selector =\r\n      typeof config?.autofocus === 'string' ? config.autofocus : '[autofocus]';\r\n    // fallback to first focusable\r\n    return (\r\n      this.query(host, selector).find((el) => !this.isHidden(el)) ||\r\n      this.findFocusable(host).find((el) => Boolean(el))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * returns all focusable child elements of the host element. The element selectors\r\n   * are build from the `focusableSelectors`.\r\n   *\r\n   * @param host the `HTMLElement` used to query focusable elements\r\n   * @param locked indicates whether inactive (`tabindex=\"-1\"`) focusable elements should be returned\r\n   * @param invisible indicates whether hidden focusable elements should be returned\r\n   */\r\n  findFocusable(\r\n    host: HTMLElement,\r\n    locked = false,\r\n    invisible = false\r\n  ): HTMLElement[] {\r\n    let suffix = this.focusableSelectorSuffix;\r\n    if (!locked) {\r\n      suffix += `:not([tabindex='-1'])`;\r\n    }\r\n    const selector = this.focusableSelectors\r\n      .map((s) => (s += suffix))\r\n      .join(',');\r\n    return this.query(host, selector).filter((el) =>\r\n      !invisible ? !this.isHidden(el) : Boolean(el)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the element is hidden by CSS. There are various CSS rules and\r\n   * HTML structures which can lead to an hidden or invisible element. An `offsetParent`\r\n   * of null indicates that the element or any of it's decendants is hidden (`display:none`).\r\n   *\r\n   * Oother techniques use the visibility (`visibility: hidden`), opacity (`opacity`) or\r\n   * phyisical location on the element itself or any of it's anchestor elements. Those\r\n   * technique require to work with the _computed styles_, which will cause a performance\r\n   * downgrade. We don't do this in the standard implementaton.\r\n   */\r\n  protected isHidden(el: HTMLElement): boolean {\r\n    return el.offsetParent === null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\r\nimport { PersistFocusService } from '../persist/persist-focus.service';\r\nimport { SelectFocusUtility } from '../services/select-focus.util';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EscapeFocusService extends PersistFocusService {\r\n  constructor(protected selectFocusUtil: SelectFocusUtility) {\r\n    super();\r\n  }\r\n\r\n  shouldFocus(config: EscapeFocusConfig): boolean {\r\n    return !!config?.focusOnEscape;\r\n  }\r\n\r\n  handleEscape(\r\n    host: HTMLElement,\r\n    config: EscapeFocusConfig,\r\n    event: KeyboardEvent\r\n  ): void {\r\n    if (this.shouldFocus(config)) {\r\n      if (host !== event.target) {\r\n        host.focus({ preventScroll: true });\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      } else {\r\n        if (config?.focusOnDoubleEscape) {\r\n          this.selectFocusUtil\r\n            .findFirstFocusable(host, { autofocus: true })\r\n            ?.focus();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\r\nimport { PersistFocusDirective } from '../persist/persist-focus.directive';\r\nimport { EscapeFocusService } from './escape-focus.service';\r\n\r\n/**\r\n * Directive to focus the host element whenever the `escape` key is captured.\r\n * UiEvents bubble up by nature, which is why the `cxEscGroup` can be used\r\n * on a tree of elements. Each time the escape key is used, the focus will\r\n * move up in the DOM tree.\r\n *\r\n */\r\n@Directive() // selector: '[cxEscFocus]',\r\nexport class EscapeFocusDirective extends PersistFocusDirective\r\n  implements OnInit {\r\n  protected defaultConfig: EscapeFocusConfig = { focusOnEscape: true };\r\n\r\n  // @Input('cxEscFocus')\r\n  protected config: EscapeFocusConfig;\r\n\r\n  @Output() esc = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   * Handles the escape key event.\r\n   * @param event the native keyboard event which contains the escape keydown event\r\n   */\r\n  @HostListener('keydown.escape', ['$event'])\r\n  handleEscape(event: KeyboardEvent): void {\r\n    if (this.service.shouldFocus(this.config)) {\r\n      this.service.handleEscape(this.host, this.config, event);\r\n    }\r\n    this.esc.emit(this.service.shouldFocus(this.config));\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: EscapeFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.service.shouldFocus(this.config)) {\r\n      this.requiredTabindex = -1;\r\n    }\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EscapeFocusService } from '../escape/escape-focus.service';\r\nimport {\r\n  AutoFocusConfig,\r\n  FOCUS_ATTR,\r\n  PersistFocusConfig,\r\n} from '../keyboard-focus.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AutoFocusService extends EscapeFocusService {\r\n  /**\r\n   * Returns the first focusable child element of the host element.\r\n   */\r\n  findFirstFocusable(\r\n    host: HTMLElement,\r\n    config: AutoFocusConfig = { autofocus: true }\r\n  ): HTMLElement {\r\n    if (config?.autofocus === ':host') {\r\n      return host;\r\n    } else if (this.hasPersistedFocus(host, config)) {\r\n      return this.getPersisted(host, this.getPersistenceGroup(host, config));\r\n    } else {\r\n      return this.selectFocusUtil.findFirstFocusable(host, config) || host;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates whether any of the focusabe child elements is focused.\r\n   */\r\n  hasPersistedFocus(host: HTMLElement, config: PersistFocusConfig): boolean {\r\n    return !!this.getPersisted(host, this.getPersistenceGroup(host, config));\r\n  }\r\n\r\n  /**\r\n   * Returns the element that has a persisted focus state.\r\n   *\r\n   * @param host the `HTMLElement` used to query for focusable children\r\n   * @param group the optional group for the persistent state, to separate different focus\r\n   *   groups and remain the persistence\r\n   */\r\n  protected getPersisted(host: HTMLElement, group?: string): HTMLElement {\r\n    if (!this.get(group)) {\r\n      return;\r\n    }\r\n    const focussed = Array.from(\r\n      host.querySelectorAll(\r\n        `[${FOCUS_ATTR}='${this.get(group)}']`\r\n      ) as NodeListOf<HTMLElement>\r\n    );\r\n    return focussed.length > 0 ? focussed[0] : null;\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\r\nimport { EscapeFocusDirective } from '../escape/escape-focus.directive';\r\nimport { AutoFocusConfig } from '../keyboard-focus.model';\r\nimport { AutoFocusService } from './auto-focus.service';\r\n\r\n/**\r\n * Directive that focus the first nested _focusable_ element based on state and configuration:\r\n *\r\n * 1. focusable element that was left in a focused state (aka _persisted_ focus)\r\n * 2. focusable element selected by configured CSS selector (i.e. 'button[type=submit]')\r\n * 3. focusable element marked with the native HTML5 `autofocus` attribute\r\n * 4. first focusable element\r\n * 5. the host element, in case the configured CSS selector is `:host`.\r\n *\r\n * Example configurations:\r\n *\r\n * `<div cxAutoFocus>[...]</div>`\r\n *\r\n * `<div [cxAutoFocus]=\"{autofocus: false}\">[...]</div>`\r\n *\r\n * `<div [cxAutoFocus]=\"{autofocus: 'button.active'}\">[...]</div>`\r\n *\r\n * `<div [cxAutoFocus]=\"{autofocus: ':host'}\">[...]</div>`\r\n *\r\n */\r\n@Directive() // selector: '[cxAutoFocus]'\r\nexport class AutoFocusDirective extends EscapeFocusDirective\r\n  implements AfterViewInit {\r\n  /** The AutoFocusDirective will be using autofocus by default  */\r\n  protected defaultConfig: AutoFocusConfig = { autofocus: true };\r\n\r\n  // @Input('cxAutoFocus')\r\n  protected config: AutoFocusConfig;\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: AutoFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  /**\r\n   * Focus the element explicitly if it was focussed before.\r\n   */\r\n  ngAfterViewInit(): void {\r\n    if (this.shouldAutofocus) {\r\n      this.handleFocus();\r\n    }\r\n    if (!this.shouldAutofocus || this.hasPersistedFocus) {\r\n      super.ngAfterViewInit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mimic the focus without setting the actual focus on the host. The first\r\n   * focusable child element will be focussed.\r\n   */\r\n  handleFocus(event?: KeyboardEvent) {\r\n    if (this.shouldAutofocus) {\r\n      if (!event?.target || event.target === this.host) {\r\n        this.firstFocusable?.focus();\r\n      } else {\r\n        (event.target as HTMLElement).focus();\r\n      }\r\n    }\r\n    super.handleFocus(event);\r\n  }\r\n\r\n  /**\r\n   * Helper function to get the first focusable child element\r\n   */\r\n  protected get hasPersistedFocus() {\r\n    return this.service.hasPersistedFocus(this.host, this.config);\r\n  }\r\n\r\n  /**\r\n   * Helper function to indicate whether we should use autofocus for the\r\n   * child elements.\r\n   */\r\n  protected get shouldAutofocus(): boolean {\r\n    return !!this.config?.autofocus;\r\n  }\r\n\r\n  /**\r\n   * Helper function to get the first focusable child element.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private get firstFocusable(): HTMLElement {\r\n    return this.service.findFirstFocusable(this.host, this.config);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AutoFocusService } from '../autofocus/auto-focus.service';\r\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TabFocusService extends AutoFocusService {\r\n  /**\r\n   * Moves to the next (or previous) tab.\r\n   */\r\n  moveTab(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig,\r\n    increment: MOVE_FOCUS,\r\n    event: KeyboardEvent\r\n  ): void {\r\n    if (config?.tab) {\r\n      const next =\r\n        config.tab === 'scroll'\r\n          ? this.findNextScrollable(host, config, increment)\r\n          : this.findNext(host, config, increment);\r\n\r\n      next?.focus();\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * builds out virtual slides out of the full scrollable area, to allow\r\n   * for maximum flexibility for the underlying layout without using hardcoded\r\n   * slide sizes.\r\n   */\r\n  protected findNextScrollable(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig,\r\n    increment: MOVE_FOCUS\r\n  ): HTMLElement {\r\n    const active = this.getActiveChild(host, config);\r\n\r\n    if (!active) {\r\n      return;\r\n    }\r\n    // slide count\r\n    const virtualSlideCount = Math.round(host.scrollWidth / host.clientWidth);\r\n\r\n    // find current virtual slide\r\n    const currentVirtualSlide = Math.round(\r\n      active.offsetLeft / (host.scrollWidth / virtualSlideCount)\r\n    );\r\n\r\n    let nextVirtualSlide = currentVirtualSlide + increment;\r\n    if (\r\n      increment === MOVE_FOCUS.NEXT &&\r\n      nextVirtualSlide >= virtualSlideCount\r\n    ) {\r\n      nextVirtualSlide = 0;\r\n    }\r\n    if (increment === MOVE_FOCUS.PREV && nextVirtualSlide < 0) {\r\n      nextVirtualSlide = virtualSlideCount - 1;\r\n    }\r\n\r\n    const firstItemOnNextSlide = this.getChildren(host, config)?.find(\r\n      (tab) =>\r\n        tab.offsetLeft >=\r\n        (host.scrollWidth / virtualSlideCount) * nextVirtualSlide\r\n    );\r\n\r\n    return firstItemOnNextSlide;\r\n  }\r\n\r\n  protected findNext(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig,\r\n    increment: MOVE_FOCUS\r\n  ): HTMLElement {\r\n    const childs = this.getChildren(host, config);\r\n    let activeIndex = childs?.findIndex(\r\n      (c) => c === this.getActiveChild(host, config)\r\n    );\r\n\r\n    if (!activeIndex || activeIndex === -1) {\r\n      activeIndex = 0;\r\n    }\r\n    activeIndex += increment;\r\n\r\n    if (increment === MOVE_FOCUS.NEXT && activeIndex >= childs?.length) {\r\n      activeIndex = childs.length - 1;\r\n    }\r\n    if (increment === MOVE_FOCUS.PREV && activeIndex < 0) {\r\n      activeIndex = 0;\r\n    }\r\n    return childs ? childs[activeIndex] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Returns the active focusable child element. If there's no active\r\n   * focusable child element, the first focusable child is returned.\r\n   */\r\n  protected getActiveChild(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig\r\n  ): HTMLElement {\r\n    const persisted = this.getPersisted(host, config?.group);\r\n    if (persisted) {\r\n      return persisted;\r\n    }\r\n    const children = this.getChildren(host, config);\r\n    let index = children.findIndex((tab) => this.isActive(tab));\r\n    if (!index || index === -1) {\r\n      index = 0;\r\n    }\r\n    return children[index];\r\n  }\r\n\r\n  protected getChildren(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig\r\n  ): HTMLElement[] {\r\n    if (typeof config.tab === 'string' && config.tab !== 'scroll') {\r\n      return this.selectFocusUtil.query(host, config.tab);\r\n    } else {\r\n      return this.findFocusable(host, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns all focusable child elements of the host element.\r\n   *\r\n   * @param host The host element is used to query child focusable elements.\r\n   * @param locked Indicates if locked elements (tabindex=-1) should be returned, defaults to false.\r\n   * @param invisible Indicates if invisible child elements should be returned, defaults to false.\r\n   */\r\n  findFocusable(\r\n    host: HTMLElement,\r\n    locked = false,\r\n    invisible = false\r\n  ): HTMLElement[] {\r\n    return this.selectFocusUtil.findFocusable(host, locked, invisible);\r\n  }\r\n\r\n  protected isActive(el: HTMLElement): boolean {\r\n    const child = document.activeElement;\r\n    const selector = child.tagName;\r\n\r\n    return (\r\n      el === child ||\r\n      !!Array.from(el.querySelectorAll(selector)).find((e) => e === child)\r\n    );\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\nimport { AutoFocusDirective } from '../autofocus/auto-focus.directive';\r\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\r\nimport { TabFocusService } from './tab-focus.service';\r\n\r\n/**\r\n * Directive to move the focus of (\"locked\") child elements. This is useful\r\n * for a nested list of tabs, carousel slides or any group of elements that\r\n * requires horizontal navigation.\r\n */\r\n@Directive() // selector: '[cxTabFocus]'\r\nexport class TabFocusDirective extends AutoFocusDirective {\r\n  /** `tab` defaults to true if the directive `cxTabFocus` is used. */\r\n  protected defaultConfig: TabFocusConfig = { tab: true };\r\n\r\n  // @Input('cxTabFocus')\r\n  protected config: TabFocusConfig = {};\r\n\r\n  @HostListener('keydown.arrowRight', ['$event'])\r\n  handleNextTab(event: KeyboardEvent) {\r\n    if (this.config?.tab) {\r\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.NEXT, event);\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown.arrowLeft', ['$event'])\r\n  handlePreviousTab(event: KeyboardEvent) {\r\n    if (this.config?.tab) {\r\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.PREV, event);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: TabFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\r\nimport { TabFocusService } from '../tab/tab-focus.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrapFocusService extends TabFocusService {\r\n  /**\r\n   * Indicates whether any of the child elements of the host are focusable.\r\n   *\r\n   * @param host `HTMLElement` that is used to query the focusable elements.\r\n   */\r\n  hasFocusableChildren(host: HTMLElement): boolean {\r\n    return this.findFocusable(host).length > 0;\r\n  }\r\n\r\n  /**\r\n   * Focus the next or previous element of all available focusable elements.\r\n   * The focus is _trapped_ in case there's no next or previous available element.\r\n   * The focus will automatically move the start or end of the list.\r\n   */\r\n  moveFocus(\r\n    host: HTMLElement,\r\n    config: TrapFocusConfig,\r\n    increment: MOVE_FOCUS,\r\n    event: UIEvent\r\n  ): void {\r\n    const focusable: HTMLElement[] = this.findFocusable(host);\r\n\r\n    let index = focusable.findIndex((v) => v === event.target) + increment;\r\n\r\n    const shouldMoveFocus =\r\n      (index >= 0 && index < focusable.length) ||\r\n      (index < 0 && this.getTrapStart(config.trap)) ||\r\n      (index >= focusable.length && this.getTrapEnd(config.trap));\r\n\r\n    if (shouldMoveFocus) {\r\n      if (index >= focusable.length) {\r\n        index = 0;\r\n      }\r\n      if (index < 0) {\r\n        index = focusable.length - 1;\r\n      }\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      const el = focusable[index];\r\n\r\n      el.focus();\r\n    }\r\n  }\r\n\r\n  protected getTrapStart(trap: boolean | 'start' | 'end'): boolean {\r\n    return trap === true || trap === 'start';\r\n  }\r\n\r\n  protected getTrapEnd(trap: boolean | 'start' | 'end'): boolean {\r\n    return trap === true || trap === 'end';\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, OnInit } from '@angular/core';\r\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\r\nimport { TabFocusDirective } from '../tab/tab-focus.directive';\r\nimport { TrapFocusService } from './trap-focus.service';\r\n\r\n/**\r\n * Directive that keeps the focus inside the focussable child elements,\r\n * also known as a _focus trap_.\r\n */\r\n@Directive() // selector: '[cxTrapFocus]'\r\nexport class TrapFocusDirective extends TabFocusDirective implements OnInit {\r\n  protected defaultConfig: TrapFocusConfig = { trap: true };\r\n\r\n  // @Input('cxTrapFocus')\r\n  protected config: TrapFocusConfig = {};\r\n\r\n  @HostListener('keydown.arrowdown', ['$event'])\r\n  @HostListener('keydown.tab', ['$event'])\r\n  handleTrapDown = (event: KeyboardEvent) => {\r\n    if (!!this.config.trap) {\r\n      this.moveFocus(event, MOVE_FOCUS.NEXT);\r\n    }\r\n  };\r\n\r\n  @HostListener('keydown.arrowup', ['$event'])\r\n  @HostListener('keydown.shift.tab', ['$event'])\r\n  handleTrapUp = (event: KeyboardEvent) => {\r\n    if (!!this.config.trap) {\r\n      this.moveFocus(event, MOVE_FOCUS.PREV);\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: TrapFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  /**\r\n   * Moves the focus of the element reference up or down, depending on the increment.\r\n   * The focus of the element is trapped to avoid it from going out of the group.\r\n   *\r\n   * @param event UIEvent that is used to get the target element. The event is blocked\r\n   *   from standard execution and further bubbling.\r\n   * @param increment indicates whether the next or previous is focussed.\r\n   */\r\n  protected moveFocus(event: UIEvent, increment: number) {\r\n    if (this.service.hasFocusableChildren(this.host)) {\r\n      this.service.moveFocus(\r\n        this.host,\r\n        this.config,\r\n        increment,\r\n        event as UIEvent\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TrapFocusService } from '../trap/trap-focus.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LockFocusService extends TrapFocusService {}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { FOCUS_GROUP_ATTR, LockFocusConfig } from '../keyboard-focus.model';\r\nimport { TrapFocusDirective } from '../trap/trap-focus.directive';\r\nimport { LockFocusService } from './lock-focus.service';\r\n\r\n/**\r\n * Focusable elements exclude hidden elements by default, but this contradicts with\r\n * unlocking (hidden) elements.\r\n */\r\nconst UNLOCK_HIDDEN_ELEMENTS = true;\r\n/**\r\n * Directive that adds persistence for focussed element in case\r\n * the elements are being rebuild. This happens often when change\r\n * detection kicks in because of new data set from the backend.\r\n */\r\n@Directive() // selector: '[cxLockFocus]'\r\nexport class LockFocusDirective extends TrapFocusDirective\r\n  implements OnInit, AfterViewInit {\r\n  protected defaultConfig: LockFocusConfig = { lock: true };\r\n\r\n  // @Input('cxLockFocus')\r\n  protected config: LockFocusConfig = {};\r\n\r\n  /**\r\n   * Indicates that the host is configured to use locking. This is available as a\r\n   * CSS class `focus-lock`.\r\n   */\r\n  @HostBinding('class.focus-lock') shouldLock: boolean;\r\n\r\n  /**\r\n   * Indicates that the host is locked. This is available as a CSS class `is-locked`.\r\n   */\r\n  @HostBinding('class.is-locked') isLocked: boolean;\r\n\r\n  /**\r\n   * Emits an event when the host is unlocked.\r\n   */\r\n  @Output() unlock = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   * When the user selects enter or space, the focusable childs are\r\n   * unlocked, which means that the tabindex is set to 0.\r\n   */\r\n  @HostListener('keydown.enter', ['$event'])\r\n  @HostListener('keydown.space', ['$event'])\r\n  handleEnter(event: KeyboardEvent) {\r\n    if (this.shouldLock && this.host === (event.target as HTMLElement)) {\r\n      this.unlockFocus(event);\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * In case any of the children elements is touched by the mouse,\r\n   * we unlock the group to not break the mouse-experience.\r\n   */\r\n  @HostListener('click', ['$event'])\r\n  handleClick(event: UIEvent): void {\r\n    if (this.shouldLock && this.isLocked) {\r\n      this.unlockFocus(event);\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: LockFocusService,\r\n    protected renderer: Renderer2\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  protected lockFocus() {\r\n    this.addTabindexToChildren(-1);\r\n  }\r\n\r\n  protected unlockFocus(event?: UIEvent) {\r\n    this.unlock.emit(true);\r\n    this.addTabindexToChildren(0);\r\n    // we focus the host if the event was triggered from a child\r\n    if (event?.target === this.host) {\r\n      // we wait a few milliseconds, mainly because firefox will otherwise apply\r\n      // the mouse event on the new focused child element\r\n      setTimeout(() => {\r\n        super.handleFocus(event as KeyboardEvent);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.shouldLock = this.config?.lock;\r\n\r\n    if (this.shouldLock) {\r\n      this.tabindex = 0;\r\n\r\n      // Locked elements will be set to `autofocus` by default if it's not\r\n      // been configured. This will ensure that autofocus kicks in upon unlock.\r\n      if (!this.config.hasOwnProperty('autofocus')) {\r\n        this.config.autofocus = true;\r\n      }\r\n      // Locked elements will be set to `focusOnEscape` by default if it's not\r\n      // been configured. This will ensure that  the host gets locked again when\r\n      // `escape` is pressed.\r\n      if (!this.config.hasOwnProperty('focusOnEscape')) {\r\n        this.config.focusOnEscape = !(this.config?.focusOnEscape === false);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.shouldLock) {\r\n      /**\r\n       * If the component hosts a group of focusable children elements,\r\n       * we persist the group key to the children, so that they can taken this\r\n       * into account when they persist their focus state.\r\n       */\r\n      if (!!this.group) {\r\n        this.service.findFocusable(this.host).forEach((el) =>\r\n          // we must do this in after view init as\r\n          this.renderer.setAttribute(el, FOCUS_GROUP_ATTR, this.group)\r\n        );\r\n      }\r\n\r\n      if (this.shouldAutofocus) {\r\n        this.handleFocus();\r\n      }\r\n    }\r\n    super.ngAfterViewInit();\r\n  }\r\n\r\n  handleFocus(event?: KeyboardEvent): void {\r\n    if (this.shouldLock) {\r\n      if (this.shouldUnlockAfterAutofocus(event)) {\r\n        // Delay unlocking in case the host is using `ChangeDetectionStrategy.Default`\r\n        setTimeout(() => this.unlockFocus(event));\r\n      } else {\r\n        setTimeout(() => this.lockFocus());\r\n        event?.stopPropagation();\r\n        return;\r\n      }\r\n    }\r\n    super.handleFocus(event);\r\n  }\r\n\r\n  handleEscape(event: KeyboardEvent): void {\r\n    if (this.shouldLock) {\r\n      this.service.clear(this.config.group);\r\n    }\r\n    super.handleEscape(event);\r\n  }\r\n\r\n  /**\r\n   * When the handleFocus is called without an actual event, it's coming from Autofocus.\r\n   * In this case we unlock the focusable children in case there's a focusable child that\r\n   * was unlocked before.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private shouldUnlockAfterAutofocus(event?: KeyboardEvent) {\r\n    return !event && this.service.hasPersistedFocus(this.host, this.config);\r\n  }\r\n\r\n  /**\r\n   * Add the tabindex attribute to the focusable children elements\r\n   */\r\n  protected addTabindexToChildren(i = 0): void {\r\n    if (this.shouldLock) {\r\n      this.isLocked = i === -1;\r\n      if (!(this.hasFocusableChildren && i === 0) || i === 0) {\r\n        this.focusable.forEach((el) =>\r\n          this.renderer.setAttribute(el, 'tabindex', i.toString())\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Utility method, returns all focusable children for the host element.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private get hasFocusableChildren(): boolean {\r\n    return this.service.hasFocusableChildren(this.host);\r\n  }\r\n\r\n  /**\r\n   * Returns the focusable children of the host element. If the host element\r\n   * is configured to be locked, the query is restricted to child elements\r\n   * with a tabindex !== `-1`.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private get focusable(): HTMLElement[] {\r\n    return this.service.findFocusable(\r\n      this.host,\r\n      this.shouldLock,\r\n      UNLOCK_HIDDEN_ELEMENTS\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LockFocusService } from '../lock/lock-focus.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class KeyboardFocusService extends LockFocusService {}\r\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { FocusConfig } from './keyboard-focus.model';\r\nimport { LockFocusDirective } from './lock/lock-focus.directive';\r\nimport { KeyboardFocusService } from './services/keyboard-focus.service';\r\n\r\n@Directive({\r\n  selector: '[cxFocus]',\r\n})\r\nexport class FocusDirective extends LockFocusDirective {\r\n  protected defaultConfig: FocusConfig = {};\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('cxFocus') protected config: FocusConfig = {};\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: KeyboardFocusService,\r\n    protected renderer: Renderer2\r\n  ) {\r\n    super(elementRef, service, renderer);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FocusDirective } from './focus.directive';\r\n\r\nconst directives = [\r\n  // PersistFocusDirective,\r\n  // VisibleFocusDirective,\r\n  // BlockFocusDirective,\r\n  // AutoFocusDirective,\r\n  // EscapeFocusDirective,\r\n  // LockFocusDirective,\r\n  // TrapFocusDirective,\r\n  // TabFocusDirective,\r\n  FocusDirective,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [...directives],\r\n  exports: [...directives],\r\n})\r\nexport class KeyboardFocusModule {}\r\n","// given that we're likely going to refactor the directives, we're\r\n// NOT exposing all it to the public API.\r\nexport * from './focus.directive';\r\nexport { FocusConfig } from './keyboard-focus.model';\r\nexport * from './keyboard-focus.module';\r\nexport * from './services/index';\r\n\r\n// export * from './autofocus/index';\r\n// export * from './base/index';\r\n// export * from './block/index';\r\n// export * from './escape/index';\r\n// export * from './lock/index';\r\n// export * from './persist/index';\r\n// export * from './tab/index';\r\n// export * from './trap/index';\r\n// export * from './visible/index';\r\n// export * from './keyboard-focus.model';\r\n","import { Component, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { AnonymousConsentsService } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AnonymousConsentLaunchDialogService } from '../anonymous-consent-launch-dialog.service';\r\n\r\n@Component({\r\n  selector: 'cx-anonymous-consent-management-banner',\r\n  templateUrl: './anonymous-consent-management-banner.component.html',\r\n})\r\nexport class AnonymousConsentManagementBannerComponent implements OnDestroy {\r\n  private subscriptions = new Subscription();\r\n\r\n  bannerVisible$: Observable<\r\n    boolean\r\n  > = this.anonymousConsentsService.isBannerVisible();\r\n\r\n  constructor(\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected anonymousConsentLaunchDialogService: AnonymousConsentLaunchDialogService,\r\n    protected vcr: ViewContainerRef\r\n  ) {}\r\n\r\n  viewDetails(): void {\r\n    this.hideBanner();\r\n    const dialog = this.anonymousConsentLaunchDialogService.openDialog(\r\n      null,\r\n      this.vcr\r\n    );\r\n    if (dialog) {\r\n      this.subscriptions.add(dialog.subscribe());\r\n    }\r\n  }\r\n\r\n  allowAll(): void {\r\n    this.subscriptions.add(\r\n      this.anonymousConsentsService\r\n        .giveAllConsents()\r\n        .pipe(tap(() => this.hideBanner()))\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  hideBanner(): void {\r\n    this.anonymousConsentsService.toggleBannerDismissed(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\nexport enum ICON_TYPE {\r\n  STAR = 'STAR',\r\n  SEARCH = 'SEARCH',\r\n  CART = 'CART',\r\n  INFO = 'INFO',\r\n  GRID = 'GRID',\r\n  LIST = 'LIST',\r\n  CARET_DOWN = 'CARET_DOWN',\r\n  CARET_LEFT = 'CARET_LEFT',\r\n  CARET_RIGHT = 'CARET_RIGHT',\r\n  CLOSE = 'CLOSE',\r\n  ERROR = 'ERROR',\r\n  WARNING = 'WARNING',\r\n  SUCCESS = 'SUCCESS',\r\n  VISA = 'VISA',\r\n  MASTER_CARD = 'MASTER_CARD',\r\n  AMEX = 'AMEX',\r\n  DINERS_CLUB = 'DINERS_CLUB',\r\n  CREDIT_CARD = 'CREDIT_CARD',\r\n  EXPAND = 'EXPAND',\r\n  COLLAPSE = 'COLLAPSE',\r\n  RESET = 'RESET',\r\n  CIRCLE = 'CIRCLE',\r\n  HEART = 'HEART',\r\n  EMPTY_HEART = 'EMPTY_HEART',\r\n  FILTER = 'FILTER',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class IconConfig {\r\n  icon?: IconOptions;\r\n}\r\n\r\nexport interface IconOptions {\r\n  /**\r\n   * Each icon type can be configured with a so-called symbol. The symbol will\r\n   * be used to map the icon to an SVG `symbol` (id) or to the style classes of\r\n   * a font based icon. The following configuration would map to a fontawesome\r\n   * icon:\r\n   *\r\n   * icon: {\r\n   *   symbols: {\r\n   *     CART: 'fas fa-shopping-cart'\r\n   *   }\r\n   * }\r\n   */\r\n  symbols?: {\r\n    [ICON_TYPE: string]: string;\r\n  };\r\n\r\n  /**\r\n   * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\r\n   * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\r\n   * is used for the SVG xlink reference.\r\n   */\r\n  resources?: IconConfigResource[];\r\n}\r\n\r\nexport interface IconConfigResource {\r\n  type: IconResourceType | string;\r\n  url?: string;\r\n  types?: (ICON_TYPE | string)[];\r\n}\r\n\r\n/**\r\n * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.\r\n * The resources will be automitacally loaded in case they're required for the `ICON_TYPE`.\r\n */\r\nexport enum IconResourceType {\r\n  /**\r\n   * An svg based icon requires an SVG resource that must be loaded,\r\n   * this is typically a sprite svg file.\r\n   */\r\n  SVG = 'svg',\r\n\r\n  /**\r\n   * A font based ICON might require an additional CSS file to be loaded.\r\n   */\r\n  LINK = 'link',\r\n  /**\r\n   * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image\r\n   * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)\r\n   */\r\n  TEXT = 'text',\r\n}\r\n","import { IconConfig, IconResourceType } from './icon.model';\r\n\r\nexport const fontawesomeIconConfig: IconConfig = {\r\n  icon: {\r\n    symbols: {\r\n      SEARCH: 'fas fa-search',\r\n      CART: 'fas fa-shopping-cart',\r\n      INFO: 'fas fa-info-circle',\r\n      STAR: 'fas fa-star',\r\n      GRID: 'fas fa-th-large',\r\n      LIST: 'fas fa-bars',\r\n      CARET_DOWN: 'fas fa-angle-down',\r\n      CARET_RIGHT: 'fas fa-angle-right',\r\n      CARET_LEFT: 'fas fa-angle-left',\r\n      ERROR: 'fas fa-exclamation-circle',\r\n      WARNING: 'fas fa-exclamation-triangle',\r\n      SUCCESS: 'fas fa-check-circle',\r\n      CLOSE: 'fas fa-times',\r\n      VISA: 'fab fa-cc-visa',\r\n      MASTER_CARD: 'fab fa-cc-mastercard',\r\n      AMEX: 'fab fa-cc-amex',\r\n      DINERS_CLUB: 'fab fa-cc-diners-club',\r\n      CREDIT_CARD: 'fas fa-credit-card',\r\n      COLLAPSE: 'fas fa-minus',\r\n      EXPAND: 'fas fa-plus',\r\n      RESET: 'fas fa-times-circle',\r\n      CIRCLE: 'fas fa-circle',\r\n      HEART: 'fas fa-heart',\r\n      EMPTY_HEART: 'far fa-heart',\r\n      FILTER: 'fas fa-filter',\r\n    },\r\n    resources: [\r\n      {\r\n        type: IconResourceType.LINK,\r\n        url: 'https://use.fontawesome.com/releases/v5.8.1/css/all.css',\r\n      },\r\n    ],\r\n  },\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport {\r\n  IconConfig,\r\n  IconConfigResource,\r\n  IconOptions,\r\n  IconResourceType,\r\n  ICON_TYPE,\r\n} from './icon.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IconLoaderService {\r\n  private loadedResources = [];\r\n  constructor(\r\n    protected winRef: WindowRef,\r\n    protected iconConfig: IconConfig,\r\n    protected sanitizer: DomSanitizer\r\n  ) {}\r\n\r\n  /**\r\n   * Returns an html fragment which can be added to the DOM in a safe way.\r\n   */\r\n  getHtml(type: ICON_TYPE | string): SafeHtml {\r\n    if (this.isResourceType(type, IconResourceType.SVG)) {\r\n      return this.sanitizer.bypassSecurityTrustHtml(\r\n        `<svg><use xlink:href=\"${this.getSvgPath(type)}\"></use></svg>`\r\n      );\r\n    }\r\n    if (this.isResourceType(type, IconResourceType.TEXT)) {\r\n      return this.sanitizer.bypassSecurityTrustHtml(this.getSymbol(type));\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Returns the symbol class(es) for the icon type.\r\n   */\r\n  getStyleClasses(iconType: ICON_TYPE | string): string {\r\n    return this.getSymbol(iconType) || '';\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the given `ICON_TYPE` is configured for\r\n   * the given `IconResourceType`.\r\n   */\r\n  private isResourceType(\r\n    iconType: ICON_TYPE | string,\r\n    resourceType: IconResourceType\r\n  ): boolean {\r\n    return (\r\n      this.config.resources &&\r\n      !!this.config.resources.find(\r\n        (res) =>\r\n          res.types && res.type === resourceType && res.types.includes(iconType)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the path to the svg link. The link supports path names\r\n   * as well, if the config a[[s been setup to support a svg file path.\r\n   * Additionally, the icon prefix will be taken into account to prefix the\r\n   * icon IDs in the SVG.\r\n   */\r\n  private getSvgPath(iconType: ICON_TYPE | string): string {\r\n    const svgResource = this.config.resources.find(\r\n      (res) =>\r\n        res.type === IconResourceType.SVG &&\r\n        res.types &&\r\n        res.types.includes(iconType)\r\n    );\r\n    if (svgResource) {\r\n      return svgResource.url\r\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\r\n        : `#${this.getSymbol(iconType)}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads the resource url (if any) for the given icon.\r\n   * The icon will only be loaded once.\r\n   *\r\n   * NOTE: this is not working when the shadow is used as there's\r\n   * no head element available and the link must be loaded for every\r\n   * web component.\r\n   */\r\n  addLinkResource(iconType: ICON_TYPE | string): void {\r\n    const resource: IconConfigResource = this.findResource(\r\n      iconType,\r\n      IconResourceType.LINK\r\n    );\r\n    if (\r\n      resource &&\r\n      resource.url &&\r\n      !this.loadedResources.includes(resource.url)\r\n    ) {\r\n      this.loadedResources.push(resource.url);\r\n      const head = this.winRef.document.getElementsByTagName('head')[0];\r\n      const link = this.winRef.document.createElement('link');\r\n      link.rel = 'stylesheet';\r\n      link.type = 'text/css';\r\n      link.href = resource.url;\r\n      head.appendChild(link);\r\n    }\r\n  }\r\n\r\n  private findResource(\r\n    iconType: ICON_TYPE | string,\r\n    resourceType: IconResourceType\r\n  ): IconConfigResource {\r\n    if (!this.config.resources) {\r\n      return;\r\n    }\r\n\r\n    let resource = this.config.resources.find(\r\n      (res) =>\r\n        res.type === resourceType && res.types && res.types.includes(iconType)\r\n    );\r\n    // no specific resource found, let's try to find a one-size-fits-all resource\r\n    if (!resource) {\r\n      resource = this.config.resources.find(\r\n        (res) => (res.type === resourceType && !res.types) || res.types === []\r\n      );\r\n    }\r\n    return resource;\r\n  }\r\n\r\n  getSymbol(iconType: ICON_TYPE | string) {\r\n    if (this.config && this.config.symbols && this.config.symbols[iconType]) {\r\n      return this.config.symbols[iconType];\r\n    }\r\n  }\r\n\r\n  private get config(): IconOptions {\r\n    return this.iconConfig.icon;\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { IconLoaderService } from './icon-loader.service';\r\nimport { ICON_TYPE } from './icon.model';\r\n\r\n/**\r\n *\r\n * The icon component can be added in different ways:\r\n *\r\n * With the component selector:\r\n * `<cx-icon type=\"SEARCH\"></cx-icon>`\r\n *\r\n * With the attribute selector:\r\n * `<span cxIcon=\"STAR\"></span>`\r\n *\r\n * Additionally, content can be projected to the icon:\r\n *\r\n * `<button cxIcon=\"HAPPY\">happy label</button>`\r\n *\r\n * The above button would become (based on a TEXT resource type):\r\n * `<button>😊happy label</button>`\r\n *\r\n * While the content is projected, the icon itself doesn't require an\r\n * additional DOM node which is an advantage over the component selector.\r\n */\r\n@Component({\r\n  selector: 'cx-icon,[cxIcon]',\r\n  templateUrl: './icon.component.html',\r\n})\r\nexport class IconComponent {\r\n  /**\r\n   * The cxIcon directive is bound to the icon type. You can feed the `ICON_TYPE` to\r\n   * accomplish a configurable button in the UI.\r\n   */\r\n  @Input() set cxIcon(type: ICON_TYPE) {\r\n    this.setIcon(type);\r\n  }\r\n\r\n  /**\r\n   * The type input parameter is bound to the icon type. You can feed the `ICON_TYPE` to\r\n   * accomplish a configurable button in the UI.\r\n   */\r\n  @Input() set type(type: ICON_TYPE) {\r\n    this.setIcon(type);\r\n  }\r\n\r\n  /**\r\n   * the icon provides an html fragment that is used to add SVG or text based icons.\r\n   */\r\n  icon: SafeHtml;\r\n\r\n  /**\r\n   * Maintains the applied style classes so we can remove them when the\r\n   * icon type changes at run time.\r\n   */\r\n  protected styleClasses: string[];\r\n\r\n  constructor(\r\n    protected iconLoader: IconLoaderService,\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected renderer: Renderer2\r\n  ) {}\r\n\r\n  protected setIcon(type: ICON_TYPE): void {\r\n    if (!type || <string>type === '') {\r\n      return;\r\n    }\r\n    this.icon = this.iconLoader.getHtml(type);\r\n    this.addStyleClasses(type);\r\n    this.iconLoader.addLinkResource(type);\r\n  }\r\n\r\n  /**\r\n   * Adds the style classes and the link resource (if available).\r\n   */\r\n  protected addStyleClasses(type: ICON_TYPE): void {\r\n    this.renderer.addClass(this.host, 'cx-icon');\r\n\r\n    if (this.styleClasses) {\r\n      this.styleClasses.forEach((cls) =>\r\n        this.renderer.removeClass(this.host, cls)\r\n      );\r\n    }\r\n\r\n    this.styleClasses = this.iconLoader.getStyleClasses(type).split(' ');\r\n\r\n    this.styleClasses.forEach((cls) => {\r\n      if (cls !== '') {\r\n        this.renderer.addClass(this.host, cls);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected get host() {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { provideDefaultConfig } from '@spartacus/core';\r\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\r\nimport { IconComponent } from './icon.component';\r\n\r\n@NgModule({\r\n  declarations: [IconComponent],\r\n  imports: [CommonModule],\r\n  providers: [provideDefaultConfig(fontawesomeIconConfig)],\r\n  exports: [IconComponent],\r\n})\r\nexport class IconModule {}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  AnonymousConsent,\r\n  AnonymousConsentsConfig,\r\n  AnonymousConsentsService,\r\n  ConsentTemplate,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, take, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\r\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/index';\r\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\r\n\r\n@Component({\r\n  selector: 'cx-anonymous-consent-dialog',\r\n  templateUrl: './anonymous-consent-dialog.component.html',\r\n})\r\nexport class AnonymousConsentDialogComponent implements OnInit, OnDestroy {\r\n  @HostBinding('attr.role') role = 'dialog';\r\n  @HostBinding('attr.aria-modal') modal = true;\r\n\r\n  private subscriptions = new Subscription();\r\n\r\n  showLegalDescription = true;\r\n  iconTypes = ICON_TYPE;\r\n  requiredConsents: string[] = [];\r\n\r\n  loading$: Observable<boolean>;\r\n  templates$: Observable<ConsentTemplate[]>;\r\n  consents$: Observable<AnonymousConsent[]>;\r\n\r\n  focusConfig: FocusConfig = {\r\n    trap: true,\r\n    block: true,\r\n    autofocus: 'input[type=\"checkbox\"]',\r\n    focusOnEscape: true,\r\n  };\r\n\r\n  @HostListener('click', ['$event'])\r\n  handleClick(event: UIEvent): void {\r\n    // Close on click outside the dialog window\r\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\r\n      this.close('Cross click');\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected config: AnonymousConsentsConfig,\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected el: ElementRef,\r\n    protected launchDialogService: LaunchDialogService\r\n  ) {\r\n    if (Boolean(this.config.anonymousConsents)) {\r\n      this.showLegalDescription = this.config.anonymousConsents.showLegalDescriptionInDialog;\r\n      if (Boolean(this.config.anonymousConsents.requiredConsents)) {\r\n        this.requiredConsents = this.config.anonymousConsents.requiredConsents;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.templates$ = this.anonymousConsentsService.getTemplates();\r\n    this.consents$ = this.anonymousConsentsService.getConsents();\r\n    this.loading$ = this.anonymousConsentsService.getLoadTemplatesLoading();\r\n  }\r\n\r\n  close(reason?: any): void {\r\n    this.launchDialogService.closeDialog(reason);\r\n  }\r\n\r\n  rejectAll(): void {\r\n    this.subscriptions.add(\r\n      combineLatest([this.templates$, this.consents$])\r\n        .pipe(\r\n          take(1),\r\n          distinctUntilChanged(),\r\n          tap(([templates, consents]) =>\r\n            templates.forEach((template) => {\r\n              const consent = this.getCorrespondingConsent(template, consents);\r\n              if (this.anonymousConsentsService.isConsentGiven(consent)) {\r\n                if (this.isRequiredConsent(template)) {\r\n                  return;\r\n                }\r\n\r\n                this.anonymousConsentsService.withdrawConsent(template.id);\r\n              }\r\n            })\r\n          )\r\n        )\r\n        .subscribe()\r\n    );\r\n    this.close('rejectAll');\r\n  }\r\n\r\n  allowAll(): void {\r\n    this.subscriptions.add(\r\n      combineLatest([this.templates$, this.consents$])\r\n        .pipe(\r\n          take(1),\r\n          distinctUntilChanged(),\r\n          tap(([templates, consents]) =>\r\n            templates.forEach((template) => {\r\n              const consent = this.getCorrespondingConsent(template, consents);\r\n              if (\r\n                (consent && consent.consentState == null) ||\r\n                this.anonymousConsentsService.isConsentWithdrawn(consent)\r\n              ) {\r\n                if (this.isRequiredConsent(template)) {\r\n                  return;\r\n                }\r\n\r\n                this.anonymousConsentsService.giveConsent(template.id);\r\n              }\r\n            })\r\n          )\r\n        )\r\n        .subscribe()\r\n    );\r\n    this.close('allowAll');\r\n  }\r\n\r\n  private isRequiredConsent(template: ConsentTemplate): boolean {\r\n    return (\r\n      Boolean(this.config.anonymousConsents) &&\r\n      Boolean(this.config.anonymousConsents.requiredConsents) &&\r\n      this.config.anonymousConsents.requiredConsents.includes(template.id)\r\n    );\r\n  }\r\n\r\n  onConsentChange({\r\n    given,\r\n    template,\r\n  }: {\r\n    given: boolean;\r\n    template: ConsentTemplate;\r\n  }): void {\r\n    if (given) {\r\n      this.anonymousConsentsService.giveConsent(template.id);\r\n    } else {\r\n      this.anonymousConsentsService.withdrawConsent(template.id);\r\n    }\r\n  }\r\n\r\n  getCorrespondingConsent(\r\n    template: ConsentTemplate,\r\n    consents: AnonymousConsent[] = []\r\n  ): AnonymousConsent {\r\n    for (const consent of consents) {\r\n      if (template.id === consent.templateCode) {\r\n        return consent;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { LayoutConfig } from '../../layout/config/layout-config';\r\nimport { DIALOG_TYPE } from '../../layout/launch-dialog/index';\r\nimport { AnonymousConsentDialogComponent } from '../../shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component';\r\n\r\nexport const defaultAnonymousConsentLayoutConfig: LayoutConfig = {\r\n  launch: {\r\n    ANONYMOUS_CONSENT: {\r\n      inline: true,\r\n      component: AnonymousConsentDialogComponent,\r\n      dialogType: DIALOG_TYPE.DIALOG,\r\n    },\r\n  },\r\n};\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { AnonymousConsentLaunchDialogService } from '../anonymous-consent-launch-dialog.service';\r\n\r\n@Component({\r\n  selector: 'cx-anonymous-consent-open-dialog',\r\n  templateUrl: './anonymous-consent-open-dialog.component.html',\r\n})\r\nexport class AnonymousConsentOpenDialogComponent {\r\n  @ViewChild('open') openElement: ElementRef;\r\n\r\n  constructor(\r\n    protected vcr: ViewContainerRef,\r\n    protected anonymousConsentLaunchDialogService: AnonymousConsentLaunchDialogService\r\n  ) {}\r\n\r\n  openDialog(): void {\r\n    const dialog = this.anonymousConsentLaunchDialogService.openDialog(\r\n      this.openElement,\r\n      this.vcr\r\n    );\r\n    if (dialog) {\r\n      dialog.pipe(take(1)).subscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  CmsConfig,\r\n  DeferLoadingStrategy,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideConfig,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { KeyboardFocusModule } from '../../layout/a11y/keyboard-focus/index';\r\nimport { AnonymousConsentManagementBannerComponent } from './banner/anonymous-consent-management-banner.component';\r\nimport { defaultAnonymousConsentLayoutConfig } from './default-anonymous-consent-layout.config';\r\nimport { AnonymousConsentOpenDialogComponent } from './open-dialog/anonymous-consent-open-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    FeaturesConfigModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  providers: [\r\n    provideConfig(defaultAnonymousConsentLayoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AnonymousConsentManagementBannerComponent: {\r\n          component: AnonymousConsentManagementBannerComponent,\r\n          deferLoading: DeferLoadingStrategy.INSTANT,\r\n        },\r\n        AnonymousConsentOpenDialogComponent: {\r\n          component: AnonymousConsentOpenDialogComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [\r\n    AnonymousConsentManagementBannerComponent,\r\n    AnonymousConsentOpenDialogComponent,\r\n  ],\r\n  exports: [\r\n    AnonymousConsentManagementBannerComponent,\r\n    AnonymousConsentOpenDialogComponent,\r\n  ],\r\n  entryComponents: [\r\n    AnonymousConsentManagementBannerComponent,\r\n    AnonymousConsentOpenDialogComponent,\r\n  ],\r\n})\r\nexport class AnonymousConsentManagementBannerModule {}\r\n","import { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {\r\n  AnonymousConsent,\r\n  ANONYMOUS_CONSENT_STATUS,\r\n  ConsentTemplate,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-consent-management-form',\r\n  templateUrl: './consent-management-form.component.html',\r\n})\r\nexport class ConsentManagementFormComponent implements OnInit {\r\n  consentGiven = false;\r\n\r\n  @Input()\r\n  consentTemplate: ConsentTemplate;\r\n\r\n  @Input()\r\n  requiredConsents: string[] = [];\r\n\r\n  @Input()\r\n  consent: AnonymousConsent;\r\n\r\n  @Output()\r\n  consentChanged = new EventEmitter<{\r\n    given: boolean;\r\n    template: ConsentTemplate;\r\n  }>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.consent) {\r\n      this.consentGiven = Boolean(\r\n        this.consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN\r\n      );\r\n    } else {\r\n      if (this.consentTemplate && this.consentTemplate.currentConsent) {\r\n        if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\r\n          this.consentGiven = false;\r\n        } else if (this.consentTemplate.currentConsent.consentGivenDate) {\r\n          this.consentGiven = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onConsentChange(): void {\r\n    this.consentGiven = !this.consentGiven;\r\n\r\n    this.consentChanged.emit({\r\n      given: this.consentGiven,\r\n      template: this.consentTemplate,\r\n    });\r\n  }\r\n\r\n  isRequired(templateId: string): boolean {\r\n    return this.requiredConsents.includes(templateId);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  AnonymousConsentsConfig,\r\n  AnonymousConsentsService,\r\n  AuthService,\r\n  ConsentTemplate,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  UserConsentService,\r\n} from '@spartacus/core';\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  concat,\r\n  Observable,\r\n  Subscription,\r\n} from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  scan,\r\n  skipWhile,\r\n  tap,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-consent-management',\r\n  templateUrl: './consent-management.component.html',\r\n})\r\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\r\n  private subscriptions = new Subscription();\r\n  private allConsentsLoading = new BehaviorSubject<boolean>(false);\r\n\r\n  templateList$: Observable<ConsentTemplate[]>;\r\n  loading$: Observable<boolean>;\r\n\r\n  requiredConsents: string[] = [];\r\n\r\n  constructor(\r\n    protected userConsentService: UserConsentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected anonymousConsentsConfig: AnonymousConsentsConfig,\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = combineLatest([\r\n      this.userConsentService.getConsentsResultLoading(),\r\n      this.userConsentService.getGiveConsentResultLoading(),\r\n      this.userConsentService.getWithdrawConsentResultLoading(),\r\n      this.authService.isUserLoggedIn(),\r\n      this.allConsentsLoading,\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          consentLoading,\r\n          giveConsentLoading,\r\n          withdrawConsentLoading,\r\n          isUserLoggedIn,\r\n          allConsentsLoading,\r\n        ]) =>\r\n          consentLoading ||\r\n          giveConsentLoading ||\r\n          withdrawConsentLoading ||\r\n          !isUserLoggedIn ||\r\n          allConsentsLoading\r\n      )\r\n    );\r\n    this.consentListInit();\r\n    this.giveConsentInit();\r\n    this.withdrawConsentInit();\r\n  }\r\n\r\n  private consentListInit(): void {\r\n    this.templateList$ = this.userConsentService.getConsents().pipe(\r\n      withLatestFrom(\r\n        this.anonymousConsentsService.getTemplates(),\r\n        this.authService.isUserLoggedIn()\r\n      ),\r\n      filter(\r\n        ([_templateList, _anonymousTemplates, isUserLoggedIn]) => isUserLoggedIn\r\n      ),\r\n      tap(([templateList, _anonymousTemplates]) => {\r\n        if (!this.consentsExists(templateList)) {\r\n          this.userConsentService.loadConsents();\r\n        }\r\n      }),\r\n      map(([templateList, anonymousTemplates]) => {\r\n        if (Boolean(this.anonymousConsentsConfig.anonymousConsents)) {\r\n          if (\r\n            Boolean(\r\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents\r\n            )\r\n          ) {\r\n            this.requiredConsents = this.anonymousConsentsConfig.anonymousConsents.requiredConsents;\r\n          }\r\n          if (\r\n            Boolean(\r\n              this.anonymousConsentsConfig.anonymousConsents\r\n                .consentManagementPage\r\n            )\r\n          ) {\r\n            return this.hideAnonymousConsents(templateList, anonymousTemplates);\r\n          }\r\n        }\r\n\r\n        return templateList;\r\n      })\r\n    );\r\n  }\r\n\r\n  private hideAnonymousConsents(\r\n    templateList: ConsentTemplate[],\r\n    anonymousTemplates: ConsentTemplate[] = []\r\n  ): ConsentTemplate[] {\r\n    let hideTemplateIds: string[] = [];\r\n\r\n    if (\r\n      !this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\r\n        .showAnonymousConsents\r\n    ) {\r\n      hideTemplateIds = anonymousTemplates.map((template) => template.id);\r\n      return this.userConsentService.filterConsentTemplates(\r\n        templateList,\r\n        hideTemplateIds\r\n      );\r\n    }\r\n\r\n    if (\r\n      Boolean(\r\n        this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\r\n          .hideConsents\r\n      ) &&\r\n      this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\r\n        .hideConsents.length > 0\r\n    ) {\r\n      hideTemplateIds = this.anonymousConsentsConfig.anonymousConsents\r\n        .consentManagementPage.hideConsents;\r\n    }\r\n\r\n    return this.userConsentService.filterConsentTemplates(\r\n      templateList,\r\n      hideTemplateIds\r\n    );\r\n  }\r\n\r\n  private giveConsentInit(): void {\r\n    this.userConsentService.resetGiveConsentProcessState();\r\n    this.subscriptions.add(\r\n      this.userConsentService\r\n        .getGiveConsentResultSuccess()\r\n        .subscribe((success) => this.onConsentGivenSuccess(success))\r\n    );\r\n  }\r\n\r\n  private withdrawConsentInit(): void {\r\n    this.userConsentService.resetWithdrawConsentProcessState();\r\n    this.subscriptions.add(\r\n      this.userConsentService\r\n        .getWithdrawConsentResultLoading()\r\n        .pipe(\r\n          skipWhile(Boolean),\r\n          withLatestFrom(\r\n            this.userConsentService.getWithdrawConsentResultSuccess()\r\n          ),\r\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\r\n          tap((withdrawalSuccess) => {\r\n            if (withdrawalSuccess) {\r\n              this.userConsentService.loadConsents();\r\n            }\r\n          })\r\n        )\r\n        .subscribe((withdrawalSuccess) =>\r\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\r\n        )\r\n    );\r\n  }\r\n\r\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\r\n    return Boolean(templateList) && templateList.length > 0;\r\n  }\r\n\r\n  onConsentChange({\r\n    given,\r\n    template,\r\n  }: {\r\n    given: boolean;\r\n    template: ConsentTemplate;\r\n  }): void {\r\n    if (given) {\r\n      this.userConsentService.giveConsent(template.id, template.version);\r\n    } else {\r\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\r\n    }\r\n  }\r\n\r\n  private onConsentGivenSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.userConsentService.resetGiveConsentProcessState();\r\n      this.globalMessageService.add(\r\n        { key: 'consentManagementForm.message.success.given' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n    }\r\n  }\r\n\r\n  private onConsentWithdrawnSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.userConsentService.resetWithdrawConsentProcessState();\r\n      this.globalMessageService.add(\r\n        { key: 'consentManagementForm.message.success.withdrawn' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n    }\r\n  }\r\n\r\n  rejectAll(templates: ConsentTemplate[] = []): void {\r\n    const consentsToWithdraw: ConsentTemplate[] = [];\r\n    templates.forEach((template) => {\r\n      if (this.userConsentService.isConsentGiven(template.currentConsent)) {\r\n        if (this.isRequiredConsent(template)) {\r\n          return;\r\n        }\r\n        consentsToWithdraw.push(template);\r\n      }\r\n    });\r\n\r\n    this.allConsentsLoading.next(true);\r\n\r\n    this.subscriptions.add(\r\n      this.setupWithdrawalStream(consentsToWithdraw)\r\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private setupWithdrawalStream(\r\n    consentsToWithdraw: ConsentTemplate[] = []\r\n  ): Observable<number> {\r\n    const loading$ = concat(\r\n      this.userConsentService.getWithdrawConsentResultLoading()\r\n    ).pipe(\r\n      distinctUntilChanged(),\r\n      filter((loading) => !loading)\r\n    );\r\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\r\n    const withdraw$ = count$.pipe(\r\n      tap((i) => {\r\n        if (i < consentsToWithdraw.length) {\r\n          this.userConsentService.withdrawConsent(\r\n            consentsToWithdraw[i].currentConsent.code\r\n          );\r\n        }\r\n      })\r\n    );\r\n    const checkTimesLoaded$ = withdraw$.pipe(\r\n      filter((timesLoaded) => timesLoaded === consentsToWithdraw.length)\r\n    );\r\n\r\n    return checkTimesLoaded$;\r\n  }\r\n\r\n  allowAll(templates: ConsentTemplate[] = []): void {\r\n    const consentsToGive: ConsentTemplate[] = [];\r\n    templates.forEach((template) => {\r\n      if (this.userConsentService.isConsentWithdrawn(template.currentConsent)) {\r\n        if (this.isRequiredConsent(template)) {\r\n          return;\r\n        }\r\n\r\n        consentsToGive.push(template);\r\n      }\r\n    });\r\n\r\n    this.allConsentsLoading.next(true);\r\n\r\n    this.subscriptions.add(\r\n      this.setupGiveStream(consentsToGive)\r\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private setupGiveStream(\r\n    consentsToGive: ConsentTemplate[] = []\r\n  ): Observable<number> {\r\n    const loading$ = concat(\r\n      this.userConsentService.getGiveConsentResultLoading()\r\n    ).pipe(\r\n      distinctUntilChanged(),\r\n      filter((loading) => !loading)\r\n    );\r\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\r\n    const giveConsent$ = count$.pipe(\r\n      tap((i) => {\r\n        if (i < consentsToGive.length) {\r\n          this.userConsentService.giveConsent(\r\n            consentsToGive[i].id,\r\n            consentsToGive[i].version\r\n          );\r\n        }\r\n      })\r\n    );\r\n    const checkTimesLoaded$ = giveConsent$.pipe(\r\n      filter((timesLoaded) => timesLoaded === consentsToGive.length)\r\n    );\r\n\r\n    return checkTimesLoaded$;\r\n  }\r\n\r\n  private isRequiredConsent(template: ConsentTemplate): boolean {\r\n    return (\r\n      Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\r\n      Boolean(\r\n        this.anonymousConsentsConfig.anonymousConsents.requiredConsents\r\n      ) &&\r\n      this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\r\n        template.id\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.allConsentsLoading.unsubscribe();\r\n\r\n    this.userConsentService.resetGiveConsentProcessState();\r\n    this.userConsentService.resetWithdrawConsentProcessState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\r\nimport { ConsentManagementComponent } from './components/consent-management.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    IconModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ConsentManagementComponent: {\r\n          component: ConsentManagementComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\r\n  exports: [ConsentManagementComponent, ConsentManagementFormComponent],\r\n  entryComponents: [ConsentManagementComponent],\r\n})\r\nexport class ConsentManagementModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { ConsentManagementModule } from '../../../cms-components/myaccount/consent-management/consent-management.module';\r\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/index';\r\nimport { SpinnerModule } from '../spinner/spinner.module';\r\nimport { AnonymousConsentDialogComponent } from './anonymous-consent-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n    ConsentManagementModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [AnonymousConsentDialogComponent],\r\n  entryComponents: [AnonymousConsentDialogComponent],\r\n  exports: [AnonymousConsentDialogComponent],\r\n})\r\nexport class AnonymousConsentsDialogModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\n\r\nexport interface CardAction {\r\n  event: string;\r\n  name: string;\r\n}\r\n\r\nexport interface CardLinkAction {\r\n  link: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Card {\r\n  header?: string;\r\n  title?: string;\r\n  textBold?: string;\r\n  text?: Array<string>;\r\n  img?: string;\r\n  actions?: Array<CardAction | CardLinkAction>;\r\n  deleteMsg?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-card',\r\n  templateUrl: './card.component.html',\r\n})\r\nexport class CardComponent implements OnInit {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  @Output()\r\n  deleteCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  sendCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  editCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  cancelCard: EventEmitter<number> = new EventEmitter();\r\n\r\n  @Input()\r\n  border = false;\r\n\r\n  @Input()\r\n  editMode = false;\r\n\r\n  @Input()\r\n  isDefault = false;\r\n\r\n  @Input()\r\n  content: Card;\r\n  @Input()\r\n  fitToContainer = false;\r\n\r\n  // ACTIONS\r\n\r\n  setEditMode(): void {\r\n    this.editMode = true;\r\n  }\r\n\r\n  cancelEdit(): void {\r\n    this.editMode = false;\r\n    this.cancelCard.emit(5);\r\n  }\r\n\r\n  delete(): void {\r\n    this.deleteCard.emit(1);\r\n  }\r\n\r\n  setDefault(): void {\r\n    this.isDefault = true;\r\n    this.setDefaultCard.emit(2);\r\n  }\r\n\r\n  send(): void {\r\n    this.sendCard.emit(3);\r\n  }\r\n\r\n  edit(): void {\r\n    this.editCard.emit(4);\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { CardComponent } from './card.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, IconModule],\r\n  declarations: [CardComponent],\r\n  exports: [CardComponent],\r\n})\r\nexport class CardModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CarouselService {\r\n  constructor(private winRef: WindowRef) {}\r\n\r\n  /**\r\n   * The number of items per slide is calculated by the help of\r\n   * the item width and the available width of the host element.\r\n   * This appoach makes it possible to place the carousel in different\r\n   * layouts. Instead of using the page breakpoints, the host size is\r\n   * taken into account.\r\n   *\r\n   * Since there's no element resize API available, we use the\r\n   * window `resize` event, so that we can adjust the number of items\r\n   * whenever the window got resized.\r\n   */\r\n  getItemsPerSlide(\r\n    nativeElement: HTMLElement,\r\n    itemWidth: string\r\n  ): Observable<number> {\r\n    return this.winRef.resize$.pipe(\r\n      map(() => (nativeElement as HTMLElement).clientWidth),\r\n      map((totalWidth) => this.calculateItems(totalWidth, itemWidth))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Calculates the number of items per given hostSize.  calculated based on the given\r\n   * intended size in pixels or percentages. The\r\n   *\r\n   * @param availableWidth The available width in pixels for the carousel items.\r\n   * @param itemWidth The width per carousel item, in px or percentage.\r\n   */\r\n  private calculateItems(availableWidth: number, itemWidth: string) {\r\n    let calculatedItems = 0;\r\n    if (itemWidth.endsWith('px')) {\r\n      const num = itemWidth.substring(0, itemWidth.length - 2);\r\n      calculatedItems = availableWidth / <number>(<any>num);\r\n    }\r\n\r\n    if (itemWidth.endsWith('%')) {\r\n      const perc = itemWidth.substring(0, itemWidth.length - 1);\r\n      calculatedItems =\r\n        availableWidth / (availableWidth * (<number>(<any>perc) / 100));\r\n    }\r\n\r\n    return Math.floor(calculatedItems) || 1;\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  isDevMode,\r\n  OnInit,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\nimport { CarouselService } from './carousel.service';\r\n\r\n/**\r\n * Generic carousel component that can be used to render any carousel items,\r\n * such as products, images, banners, or any component. Carousel items are\r\n * rendered in so-called carousel slides, and the previous/next buttons as well as\r\n * the indicator-buttons can used to navigate the slides.\r\n *\r\n * The component uses an array of Observables (`items$`) as an input, to allow\r\n * for lazy loading of items.\r\n *\r\n * The number of items per slide is calculated with the `itemWidth`, which can given\r\n * in pixels or percentage.\r\n *\r\n * To allow for flexible rendering of items, the rendering is delegated to the\r\n * given `template`. This allows for maximum flexibility.\r\n */\r\n@Component({\r\n  selector: 'cx-carousel',\r\n  templateUrl: './carousel.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CarouselComponent implements OnInit {\r\n  /**\r\n   * The title is rendered as the carousel heading.\r\n   */\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * The items$ represent the carousel items. The items$ are\r\n   * observables so that the items can be loaded on demand.\r\n   */\r\n  items: Observable<any>[];\r\n  @Input('items')\r\n  set setItems(inputItems: Observable<any>[]) {\r\n    this.items = inputItems;\r\n    //Reset slider when changing products\r\n    this.activeSlide = 0;\r\n  }\r\n\r\n  /**\r\n   * The template is rendered for each item, so that the actual\r\n   * view can be given by the compoent that uses the `CarouselComponent`.\r\n   */\r\n  @Input() template: TemplateRef<any>;\r\n\r\n  /**\r\n   * Specifies the minimum size of the carousel item, either in px or %.\r\n   * This value is used for the calculation of numbers per carousel, so that\r\n   * the number of carousel items is dynamic. The calculation uses the `itemWidth`\r\n   * and the host element `clientWidth`, so that the carousel is reusable in\r\n   * different layouts (for example in a 50% grid).\r\n   */\r\n  @Input() itemWidth = '300px';\r\n\r\n  /**\r\n   * Indicates whether the visual indicators are used.\r\n   */\r\n  @Input() hideIndicators = false;\r\n\r\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\r\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\r\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\r\n\r\n  activeSlide: number;\r\n  size$: Observable<number>;\r\n\r\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\r\n\r\n  ngOnInit() {\r\n    if (!this.template && isDevMode()) {\r\n      console.error(\r\n        'No template reference provided to render the carousel items for the `cx-carousel`'\r\n      );\r\n      return;\r\n    }\r\n    this.size$ = this.service\r\n      .getItemsPerSlide(this.el.nativeElement, this.itemWidth)\r\n      .pipe(tap(() => (this.activeSlide = 0)));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { BREAKPOINT, LayoutConfig } from '../config/layout-config';\r\n\r\nconst DEFAULT_BREAKPOINTS = {\r\n  [BREAKPOINT.xs]: 576,\r\n  [BREAKPOINT.sm]: 768,\r\n  [BREAKPOINT.md]: 992,\r\n  [BREAKPOINT.lg]: 1200,\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BreakpointService {\r\n  constructor(private winRef: WindowRef, private config: LayoutConfig) {}\r\n\r\n  get breakpoint$(): Observable<BREAKPOINT> {\r\n    if (!this.window) {\r\n      return of(BREAKPOINT.xs);\r\n    }\r\n    return this.winRef.resize$.pipe(\r\n      map((event) => this.getBreakpoint((<Window>event.target).innerWidth)),\r\n      distinctUntilChanged()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the _maximum_ size for the breakpint, given by the `LayoutConfig.breakpoints`\r\n   * configuration. If no configuration is available for the given breakpoint, the\r\n   * method will return the default values:\r\n   * - xs: 567\r\n   * - sm: 768\r\n   * - md: 992\r\n   * - lg: 1200\r\n   */\r\n  getSize(breakpoint: BREAKPOINT): number {\r\n    return this.config.breakpoints?.hasOwnProperty(breakpoint)\r\n      ? this.config.breakpoints[breakpoint]\r\n      : DEFAULT_BREAKPOINTS[breakpoint];\r\n  }\r\n\r\n  /**\r\n   * Returns all available breakpoints for the system.\r\n   */\r\n  get breakpoints(): BREAKPOINT[] {\r\n    return [\r\n      BREAKPOINT.xs,\r\n      BREAKPOINT.sm,\r\n      BREAKPOINT.md,\r\n      BREAKPOINT.lg,\r\n      BREAKPOINT.xl,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the current screen size is smaller than the maximum size of the\r\n   * given breakpoint.\r\n   *\r\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\r\n   * window innerWidth is smaller than the configured size of `BREAKPOINT.md`.\r\n   */\r\n  isDown(breakpoint: BREAKPOINT): Observable<boolean> {\r\n    return this.breakpoint$.pipe(\r\n      map((br) =>\r\n        this.breakpoints\r\n          .slice(0, this.breakpoints.indexOf(breakpoint) + 1)\r\n          .includes(br)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the current screen size is larger than the minimum size of the\r\n   * given breakpoint.\r\n   *\r\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\r\n   * window innerWidth is larger than the configured size of `BREAKPOINT.sm`.\r\n   */\r\n  isUp(breakpoint: BREAKPOINT): Observable<boolean> {\r\n    return this.breakpoint$.pipe(\r\n      map((br) =>\r\n        this.breakpoints\r\n          .slice(this.breakpoints.indexOf(breakpoint))\r\n          .includes(br)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the current screen size fits to the given breakpoint\r\n   */\r\n  isEqual(breakpoint: BREAKPOINT): Observable<boolean> {\r\n    return this.breakpoint$.pipe(map((br) => br === breakpoint));\r\n  }\r\n\r\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\r\n    const breakpoint = this.getClosest(windowWidth);\r\n    return BREAKPOINT[breakpoint || BREAKPOINT.lg];\r\n  }\r\n\r\n  protected getClosest(windowWidth?: number): BREAKPOINT {\r\n    if (!windowWidth) {\r\n      windowWidth = this.window.innerWidth;\r\n    }\r\n\r\n    return windowWidth > this.getSize(BREAKPOINT.lg)\r\n      ? BREAKPOINT.xl\r\n      : this.breakpoints.find((br) => windowWidth <= this.getSize(br));\r\n  }\r\n\r\n  get window(): Window {\r\n    return this.winRef.nativeWindow;\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Config, Image, OccConfig } from '@spartacus/core';\r\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\r\nimport { StorefrontConfig } from '../../../storefront-config';\r\nimport { MediaConfig } from './media.config';\r\nimport { Media, MediaContainer, MediaFormatSize } from './media.model';\r\n\r\n/**\r\n * Service which generates media URLs. It leverage the MediaContainer and MediaFormats so\r\n * that URLs and sizes are generated for the same media. This helps to improve performance\r\n * across difference devices and layouts.\r\n *\r\n * Media formats are optional, but highly recommended. The format will help the browser to\r\n * identify the right media for the right experience.\r\n *\r\n * The MediaService will generate absolute URLs in case relative URLs are provided for the Media.\r\n * The baseUrl is read from the `occConfig.backend.media.baseUrl` or\r\n * `occConfig.backend.occ.baseUrl`.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MediaService {\r\n  /**\r\n   * The media formats sorted by size. The media format representing the smallest\r\n   * size is sorted on top.\r\n   */\r\n  private _sortedFormats: { code: string; size: MediaFormatSize }[];\r\n  private _reversedFormats: { code: string; size: MediaFormatSize }[];\r\n\r\n  constructor(\r\n    @Inject(Config) protected config: StorefrontConfig,\r\n    /**\r\n     * The BreakpointService is no longer used in version 2.0 as the different size formats are\r\n     * driven by configuration only. There's however a change that this service will play a role\r\n     * in the near future, which is why we keep the constructor as-is.\r\n     */\r\n    protected breakpointService: BreakpointService\r\n  ) {}\r\n\r\n  /**\r\n   * Returns a `Media` object with the main media (`src`) and various media (`src`)\r\n   * for specific formats.\r\n   */\r\n  getMedia(\r\n    mediaContainer: MediaContainer | Image,\r\n    format?: string,\r\n    alt?: string\r\n  ): Media {\r\n    if (!mediaContainer) {\r\n      return;\r\n    }\r\n\r\n    const mainMedia: Image = mediaContainer.url\r\n      ? mediaContainer\r\n      : this.resolveMedia(mediaContainer as MediaContainer, format);\r\n\r\n    return {\r\n      src: this.resolveAbsoluteUrl(mainMedia?.url),\r\n      alt: alt || mainMedia?.altText,\r\n      srcset: this.resolveSrcSet(mediaContainer),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates the media formats in a logical sorted order. The map contains the\r\n   * format key and the format size information. We do this only once for performance\r\n   * benefits.\r\n   */\r\n  protected get sortedFormats(): { code: string; size: MediaFormatSize }[] {\r\n    if (!this._sortedFormats) {\r\n      this._sortedFormats = Object.keys(\r\n        (this.config as MediaConfig).mediaFormats\r\n      )\r\n        .map((key) => ({\r\n          code: key,\r\n          size: (this.config as MediaConfig).mediaFormats[key],\r\n        }))\r\n        .sort((a, b) => (a.size.width > b.size.width ? 1 : -1));\r\n    }\r\n    return this._sortedFormats;\r\n  }\r\n\r\n  /**\r\n   * Creates the media formats in a reversed sorted order.\r\n   */\r\n  protected get reversedFormats(): { code: string; size: MediaFormatSize }[] {\r\n    if (!this._reversedFormats) {\r\n      this._reversedFormats = this.sortedFormats.slice().reverse();\r\n    }\r\n    return this._reversedFormats;\r\n  }\r\n\r\n  /**\r\n   * Resolves the right media for the given format. The fo\r\n   */\r\n  protected resolveMedia(media: MediaContainer, format?: string): Image {\r\n    return media[this.resolveFormat(media, format)];\r\n  }\r\n\r\n  /**\r\n   * Validates the format against the given mediaContainer. If there is no format available,\r\n   * or if the mediaContainer doesn't contain a media for the given media, the most optimal\r\n   * format is resolved. If even that is not possible, the first format is returned.\r\n   */\r\n  protected resolveFormat(\r\n    mediaContainer: MediaContainer,\r\n    format?: string\r\n  ): string {\r\n    if (format && mediaContainer[format]) {\r\n      return format;\r\n    }\r\n    return (\r\n      this.resolveBestFormat(mediaContainer) || Object.keys(mediaContainer)[0]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the media format code with the best size.\r\n   */\r\n  protected resolveBestFormat(media: MediaContainer | Image): string {\r\n    return this.reversedFormats.find((format) =>\r\n      media.hasOwnProperty(format.code)\r\n    )?.code;\r\n  }\r\n\r\n  /**\r\n   * Returns a set of media for the available media formats. Additionally, the congiured media\r\n   * format width is added to the srcset, so that browsers can select the appropriate media.\r\n   */\r\n  protected resolveSrcSet(media: MediaContainer | Image): string {\r\n    if (!media) {\r\n      return undefined;\r\n    }\r\n\r\n    const srcset = this.sortedFormats.reduce((set, format) => {\r\n      if (!!media[format.code]) {\r\n        if (set) {\r\n          set += ', ';\r\n        }\r\n        set += `${this.resolveAbsoluteUrl(media[format.code].url)} ${\r\n          format.size.width\r\n        }w`;\r\n      }\r\n      return set;\r\n    }, '');\r\n\r\n    return srcset === '' ? undefined : srcset;\r\n  }\r\n\r\n  /**\r\n   * Resolves the absolute URL for the given url. In most cases, this URL represents\r\n   * the relative URL on the backend. In that case, we prefix the url with the baseUrl.\r\n   */\r\n  protected resolveAbsoluteUrl(url: string): string {\r\n    if (!url) {\r\n      return null;\r\n    }\r\n    return url.startsWith('http') ? url : this.getBaseUrl() + url;\r\n  }\r\n\r\n  /**\r\n   * The base URL is either driven by a specific `backend.media.baseUrl`, or by the\r\n   * `backend.occ.baseUrl`.\r\n   *\r\n   * The `backend.media.baseUrl` can be used to load media from a different location.\r\n   *\r\n   * In Commerce Cloud, a differnt location could mean a different \"aspect\".\r\n   */\r\n  protected getBaseUrl(): string {\r\n    return (\r\n      (this.config as OccConfig).backend.media.baseUrl ||\r\n      (this.config as OccConfig).backend.occ.baseUrl ||\r\n      ''\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n} from '@angular/core';\r\nimport { Media, MediaContainer } from './media.model';\r\nimport { MediaService } from './media.service';\r\n\r\n@Component({\r\n  selector: 'cx-media',\r\n  templateUrl: './media.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MediaComponent implements OnChanges {\r\n  /**\r\n   * The media container can hold multiple media items, so that\r\n   * a specific media (by format) can be used or multiple media\r\n   * can be provided in a `srcset` so the browser will figure out\r\n   * the best media for the device.\r\n   */\r\n  @Input() container: MediaContainer;\r\n\r\n  /**\r\n   * if a media format is given, a media for the given format will be rendered\r\n   */\r\n  @Input() format: string;\r\n\r\n  /**\r\n   * A specific alt text for an image, which overrules the alt text\r\n   * from the container data.\r\n   */\r\n  @Input() alt: string;\r\n\r\n  /**\r\n   * Once the media is loaded, we emit an event.\r\n   */\r\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\r\n\r\n  /**\r\n   * The media contains the info for the UI to create the image. This media\r\n   * object might contain more info once other media types (i.e. video) is supported.\r\n   */\r\n  media: Media;\r\n\r\n  /**\r\n   * The `cx-media` component has an `is-initialized` class as long as the\r\n   * media is being initialized.\r\n   */\r\n  @HostBinding('class.is-initialized') isInitialized = false;\r\n\r\n  /**\r\n   * The `cx-media` component has a `is-loading` class as long as the\r\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\r\n   * is added.\r\n   */\r\n  @HostBinding('class.is-loading') isLoading = true;\r\n\r\n  /**\r\n   * When there's no media provided for the content, or in case an error\r\n   * happened during loading, we add the `is-missing` class. Visual effects\r\n   * can be controlled by CSS.\r\n   */\r\n  @HostBinding('class.is-missing') isMissing = false;\r\n\r\n  constructor(protected mediaService: MediaService) {}\r\n\r\n  ngOnChanges(): void {\r\n    this.create();\r\n  }\r\n\r\n  /**\r\n   * Creates the `Media` object\r\n   */\r\n  protected create(): void {\r\n    this.media = this.mediaService.getMedia(\r\n      this.container,\r\n      this.format,\r\n      this.alt\r\n    );\r\n    if (!this.media?.src) {\r\n      this.handleMissing();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This handler is called from the UI when the image is loaded.\r\n   */\r\n  loadHandler(): void {\r\n    this.isLoading = false;\r\n    this.isInitialized = true;\r\n    this.isMissing = false;\r\n    this.loaded.emit(true);\r\n  }\r\n\r\n  /**\r\n   * Whenever an error happens during load, we mark the component\r\n   * with css classes to have a missing media.\r\n   */\r\n  errorHandler(): void {\r\n    this.handleMissing();\r\n  }\r\n\r\n  protected handleMissing() {\r\n    this.isLoading = false;\r\n    this.isInitialized = true;\r\n    this.isMissing = true;\r\n    this.loaded.emit(false);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { MediaComponent } from './media.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [MediaComponent],\r\n  exports: [MediaComponent],\r\n})\r\nexport class MediaModule {\r\n  static forRoot(): ModuleWithProviders<MediaModule> {\r\n    return {\r\n      ngModule: MediaModule,\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, IconModule, MediaModule, UrlModule],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  HostBinding,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\n/**\r\n * This component renders form errors.\r\n */\r\n@Component({\r\n  selector: 'cx-form-errors',\r\n  templateUrl: './form-errors.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FormErrorsComponent {\r\n  _control: FormControl;\r\n  errors$: Observable<string[]>;\r\n\r\n  @Input()\r\n  set control(control: FormControl) {\r\n    this._control = control;\r\n\r\n    this.errors$ = control?.statusChanges.pipe(\r\n      startWith({}),\r\n      map(() => control.errors || {}),\r\n      map((errors) =>\r\n        Object.entries(errors)\r\n          .filter((error) => error[1])\r\n          .map((error) => error[0])\r\n      )\r\n    );\r\n  }\r\n\r\n  get control(): FormControl {\r\n    return this._control;\r\n  }\r\n\r\n  @HostBinding('class.control-invalid') get invalid() {\r\n    return this.control.invalid;\r\n  }\r\n  @HostBinding('class.control-dirty') get dirty() {\r\n    return this.control.dirty;\r\n  }\r\n  @HostBinding('class.control-touched') get touched() {\r\n    return this.control.touched;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormErrorsComponent } from './form-errors.component';\r\nimport { I18nModule } from '@spartacus/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule],\r\n  declarations: [FormErrorsComponent],\r\n  exports: [FormErrorsComponent],\r\n})\r\nexport class FormErrorsModule {}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Params, Router } from '@angular/router';\r\n\r\n// private\r\ninterface RouteParts {\r\n  /** Path in the Angular-like array format */\r\n  path?: string[];\r\n\r\n  /** Query params */\r\n  queryParams?: Params;\r\n\r\n  /** Hash fragment */\r\n  fragment?: string;\r\n}\r\n\r\n/**\r\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\r\n */\r\n@Component({\r\n  selector: 'cx-generic-link',\r\n  templateUrl: './generic-link.component.html',\r\n})\r\nexport class GenericLinkComponent implements OnChanges {\r\n  constructor(protected router: Router) {}\r\n\r\n  /**\r\n   * Pattern matching string starting with `http://` or `https://`.\r\n   */\r\n  private readonly PROTOCOL_REGEX: RegExp = /^https?:\\/\\//i;\r\n\r\n  /**\r\n   * Used to split url into 2 parts:\r\n   * 1. the path\r\n   * 2. query params + hash fragment\r\n   */\r\n  private readonly URL_SPLIT = /(^[^#?]*)(.*)/;\r\n\r\n  /**\r\n   * Parsed parts of the @Input `url`, when it's a local URL.\r\n   * It should not be used when the `url` is external.\r\n   * @see `url`\r\n   */\r\n  private routeParts: RouteParts = {};\r\n\r\n  @Input() url: string | any[];\r\n  @Input() target: string;\r\n  @Input() class: string;\r\n  @Input() id: string;\r\n  @Input() style: string;\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * Returns true when the @Input `url` is a string starting with `http://` or `https://`.\r\n   */\r\n  isExternalUrl(): boolean {\r\n    return typeof this.url === 'string' && this.PROTOCOL_REGEX.test(this.url);\r\n  }\r\n\r\n  get rel() {\r\n    return this.target === '_blank' ? 'noopener' : null;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['url']) {\r\n      this.setUrlParts(changes['url'].currentValue);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The part with the path of the local url.\r\n   */\r\n  get routerUrl(): any[] {\r\n    return this.routeParts.path;\r\n  }\r\n\r\n  /**\r\n   * The part with the query params of the local url.\r\n   */\r\n  get queryParams(): Params {\r\n    return this.routeParts.queryParams;\r\n  }\r\n\r\n  /**\r\n   * The part with the hash fragment of the local url.\r\n   */\r\n  get fragment(): string {\r\n    return this.routeParts.fragment;\r\n  }\r\n\r\n  /**\r\n   * Parses the given url and sets the property `urlParts` accordingly.\r\n   */\r\n  private setUrlParts(url: string | any[]) {\r\n    if (typeof url === 'string') {\r\n      url = this.getAbsoluteUrl(url); // string links in CMS sometimes don't have the leading slash, so fix it here\r\n      this.routeParts = this.splitUrl(url as string);\r\n    } else {\r\n      this.routeParts = { path: url };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses the given string into 3 parts:\r\n   * - string path (wrapped in an array to be compatible with Angular syntax for the `routerLink`)\r\n   * - query params (as an object)\r\n   * - hash fragment (string)\r\n   */\r\n  private splitUrl(url: string = ''): RouteParts {\r\n    const { queryParams, fragment } = this.router.parseUrl(url);\r\n    const [, path] = url.match(this.URL_SPLIT);\r\n\r\n    // wrap path in an array, to have the Angular-like path format\r\n    return { path: [path], queryParams, fragment };\r\n  }\r\n\r\n  /**\r\n   * Prepends a leading slash to the given URL string, in case it doesn't have it.\r\n   */\r\n  private getAbsoluteUrl(url: string): string {\r\n    return url.startsWith('/') ? url : '/' + url;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { startWith } from 'rxjs/operators';\r\n\r\n/**\r\n * Provides a UI to manage the count of the quantity, typically by using\r\n * increase and decrease functionality. The item counter expects an input `FormControl`\r\n * so that the state of the control can be managed outside of this component.\r\n */\r\n@Component({\r\n  selector: 'cx-item-counter',\r\n  templateUrl: './item-counter.component.html',\r\n  // do not use OnPush change detection strategy as we would not\r\n  // get updates of other form control state (disabled). We want to have a\r\n  // disabled state in order to ensure that the control cannot be used while\r\n  // the cart is updated.\r\n})\r\nexport class ItemCounterComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Holds the value of the counter, the state of the `FormControl`\r\n   * can be managed outside of the item counter.\r\n   */\r\n  @Input() control: FormControl;\r\n\r\n  /**\r\n   * This can be used in case an item has a minmum order quantity.\r\n   * @default 1\r\n   */\r\n  @Input() min = 1;\r\n\r\n  /**\r\n   * This can be used in case an item has a maximum order quantity.\r\n   */\r\n  @Input() max: number;\r\n\r\n  /**\r\n   * The step is used to increment the count. It is supposed to be a\r\n   * positive integer or float.\r\n   * @default 1\r\n   */\r\n  @Input() step = 1;\r\n\r\n  /**\r\n   * Indicates that the input can be manually set to zero,\r\n   * despite the fact that the input controls will be limited to\r\n   * the minimum. The zero value can be used to remove an item.\r\n   */\r\n  @Input() allowZero = false;\r\n\r\n  /**\r\n   * In readonly mode the item counter will only be shown as a label,\r\n   * the form controls are not rendered.\r\n   * Please not that readonly is different from the `disabled` form state.\r\n   * @default false\r\n   */\r\n  @HostBinding('class.readonly') @Input() readonly = false;\r\n\r\n  @ViewChild('qty') private input: ElementRef<HTMLInputElement>;\r\n\r\n  /**\r\n   * Subscription responsible for auto-correcting control's value when it's invalid.\r\n   */\r\n  private sub: Subscription;\r\n\r\n  @HostListener('click') handleClick() {\r\n    this.input.nativeElement.focus();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.control.valueChanges\r\n      .pipe(startWith(this.control.value))\r\n      .subscribe((value) =>\r\n        this.control.setValue(this.getValidCount(value), { emitEvent: false })\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  increment() {\r\n    // it's too early to use the `stepUp` and `stepDown` API...\r\n    // let's wait for FF: https://caniuse.com/#search=stepUp\r\n    this.control.setValue(this.control.value + this.step);\r\n    this.control.markAsDirty();\r\n  }\r\n\r\n  decrement() {\r\n    this.control.setValue(this.control.value - this.step);\r\n    this.control.markAsDirty();\r\n  }\r\n\r\n  /**\r\n   * Validate that the given value is in between\r\n   * the `min` and `max` value. If the value is out\r\n   * of  the min/max range, it will be altered.\r\n   * If `allowZero` is set to true, the 0 value is ignored.\r\n   *\r\n   */\r\n  private getValidCount(value: number) {\r\n    if (value < this.min && !(value === 0 && this.allowZero)) {\r\n      value = this.min;\r\n    }\r\n    if (this.max && value > this.max) {\r\n      value = this.max;\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ItemCounterComponent } from './item-counter.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  declarations: [ItemCounterComponent],\r\n  exports: [ItemCounterComponent],\r\n})\r\nexport class ItemCounterModule {}\r\n","import { PaginationConfig } from './pagination.config';\r\n\r\nexport const defaultPaginationConfig: PaginationConfig = {\r\n  pagination: {\r\n    addStart: true,\r\n    addEnd: true,\r\n  },\r\n};\r\n","import { PaginationOptions } from '../pagination.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class PaginationConfig {\r\n  pagination?: PaginationOptions;\r\n}\r\n","/**\r\n * Represents a page item for a pagination system. This is used\r\n * to store the model of each page.\r\n */\r\nexport interface PaginationItem {\r\n  label?: string;\r\n  type?: PaginationItemType;\r\n  /** The number is used when the type is {@link PaginationItemType.PAGE} */\r\n  number?: number;\r\n}\r\n\r\n/**\r\n * The item type is used to add semantic structure to the\r\n * PaginationItem, so that the UI understands the usage.\r\n */\r\nexport enum PaginationItemType {\r\n  GAP = 'gap',\r\n  FIRST = 'first',\r\n  LAST = 'last',\r\n  PREVIOUS = 'previous',\r\n  NEXT = 'next',\r\n  START = 'start',\r\n  END = 'end',\r\n  PAGE = 'page',\r\n}\r\n\r\nexport interface PaginationOptions {\r\n  /**\r\n   * The range of direct accessible pages in the pagination.\r\n   *\r\n   * `« 4 (5) 6 »`\r\n   *\r\n   * Defaults to 3.\r\n   */\r\n  rangeCount?: number;\r\n\r\n  /** Adds a link to skip to the start of the pages, defaults to false. */\r\n  addStart?: boolean;\r\n  /** A link to skip to the end of the pages, defaults to false. */\r\n  addEnd?: boolean;\r\n  /** A link to the previous page, defaults to false. */\r\n  addPrevious?: boolean;\r\n  /** A link to the previous page, defaults to false. */\r\n  addNext?: boolean;\r\n\r\n  navigationPosition?: PaginationNavigationPosition;\r\n\r\n  /** A link to the first page can be added in case it is not included already, defaults to false. */\r\n  addFirst?: boolean;\r\n  /** A link to the last page can be added in case it is not included already, defaults to false. */\r\n  addLast?: boolean;\r\n\r\n  /**\r\n   * Adds a gap before and after the pages. to visualize hidden pages. Defaults to false.\r\n   *\r\n   * `1 ...  4 (5) 6 ... 18`\r\n   *\r\n   * Defaults to false.\r\n   */\r\n  addDots?: boolean;\r\n\r\n  /**\r\n   * If the page dots only represents a single page, we rather add the page\r\n   * as this would take the same amount of space. Some UX might want to use\r\n   * the dots for consistency reasons, which why this option is configurable.\r\n   *\r\n   * This typically happens on the 4th page (in case the range is 3):\r\n   * Instead of having:\r\n   *\r\n   *  `1 ...  3 (4) 5`\r\n   *\r\n   * we'd have\r\n   *\r\n   * `1 2 3 (4) 5`.\r\n   *\r\n   * Defaults to false.\r\n   */\r\n  substituteDotsForSingularPage?: boolean;\r\n\r\n  /** Custom label for the start link, defaults to `«`. */\r\n  startLabel?: string;\r\n  /** Custom label for the previous link, defaults to `‹`. */\r\n  previousLabel?: string;\r\n  /** Custom label for the next link, defaults to `›`. */\r\n  nextLabel?: string;\r\n  /** Custom label for the end link, defaults to `»`. */\r\n  endLabel?: string;\r\n  /** Custom label for the dots, defaults to `...`. */\r\n  dotsLabel?: string;\r\n}\r\n\r\nexport enum PaginationNavigationPosition {\r\n  ASIDE = 'aside',\r\n  BEFORE = 'before',\r\n  AFTER = 'after',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PaginationConfig } from './config/pagination.config';\r\nimport {\r\n  PaginationItem,\r\n  PaginationItemType,\r\n  PaginationNavigationPosition,\r\n  PaginationOptions,\r\n} from './pagination.model';\r\n\r\nconst FALLBACK_PAGINATION_OPTIONS: PaginationOptions = {\r\n  rangeCount: 3,\r\n  dotsLabel: '...',\r\n  startLabel: '«',\r\n  previousLabel: '‹',\r\n  nextLabel: '›',\r\n  endLabel: '»',\r\n};\r\n\r\n/**\r\n * Builds a pagination structures based on a pageCount and current page number.\r\n * There are various {@link PaginationConfig} options which can be used to configure\r\n * the behaviour of the build. Alternatively, CSS can be used to further customise\r\n * the pagination.\r\n *\r\n * Examples:\r\n * The full blown pagination items contain the follow elements:\r\n *\r\n * `« ‹ 1 ... 4 (5) 6 ... 9 › »`\r\n *\r\n * This includes pagination items to the following pages:\r\n * - start page\r\n * - previous page\r\n * - first page\r\n * - page range\r\n * - last page\r\n * - next page\r\n * - end page\r\n *\r\n * All of those links are configurable, including the size of the page range.\r\n * The current page will always be centered in the page range to provide direct access\r\n * to the previous and next page.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PaginationBuilder {\r\n  constructor(protected paginationConfig: PaginationConfig) {}\r\n\r\n  /**\r\n   * Builds a list of `PaginationItem`. The give pageCount and current are used\r\n   * to build out the full pagination. There are various {@link PaginationConfig} options\r\n   * which can be used to configure the behaviour of the build. Alternatively, CSS\r\n   * can be used to further specialize visibility of the pagination.\r\n   *\r\n   * @param pageCount The total number of pages\r\n   * @param current The current page number, 0-index based\r\n   * @returns An array of `PaginationItem`\r\n   */\r\n  paginate(pageCount: number, current: number): PaginationItem[] {\r\n    const pages: PaginationItem[] = [];\r\n    if (pageCount < 2) {\r\n      return pages;\r\n    }\r\n    this.addPages(pages, pageCount, current);\r\n    this.addDots(pages, pageCount);\r\n    this.addFirstLast(pages, pageCount);\r\n    this.addNavigation(pages, pageCount, current);\r\n\r\n    return pages;\r\n  }\r\n\r\n  /**\r\n   * Returns the current page with surrounding pages (based on the `config.rangeCount`).\r\n   * The current page is always centered to provide direct access to the previous and next page.\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   * @param current The current page number, 0-index based\r\n   */\r\n  protected addPages(\r\n    pages: PaginationItem[],\r\n    pageCount: number,\r\n    current: number\r\n  ): void {\r\n    const start = this.getStartOfRange(pageCount, current);\r\n    const max = Math.min(this.config.rangeCount, pageCount);\r\n\r\n    Array.from(Array(max)).forEach((_, i) => {\r\n      pages.push({\r\n        number: i + start,\r\n        label: String(i + start + 1),\r\n        type: PaginationItemType.PAGE,\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds dots before and after the given pages, if configured (defaults to true).\r\n   * If the dots only represent a single page, the page number is added instead of\r\n   * the dots, unless the configuration requires dots always.\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   */\r\n  protected addDots(pages: PaginationItem[], pageCount: number): void {\r\n    if (!this.config.addDots) {\r\n      return;\r\n    }\r\n\r\n    const addFirstGap = () => {\r\n      const firstItemNumber = pages[0].number;\r\n      const gapNumber = this.config.addFirst ? 1 : 0;\r\n      if (firstItemNumber > gapNumber) {\r\n        const isGap =\r\n          !this.config.substituteDotsForSingularPage ||\r\n          firstItemNumber !== gapNumber + 1;\r\n        const isSubstitued =\r\n          this.config.addFirst &&\r\n          this.config.substituteDotsForSingularPage &&\r\n          gapNumber === 0;\r\n        const type = isGap\r\n          ? PaginationItemType.GAP\r\n          : isSubstitued\r\n          ? PaginationItemType.FIRST\r\n          : PaginationItemType.PAGE;\r\n        return [\r\n          Object.assign(\r\n            {\r\n              label: isGap ? this.config.dotsLabel : String(gapNumber + 1),\r\n              type,\r\n            },\r\n            isGap ? null : { number: gapNumber }\r\n          ),\r\n        ];\r\n      } else return [];\r\n    };\r\n\r\n    const addLastGap = () => {\r\n      const nextPageNumber = pages[pages.length - 1].number + 1;\r\n      const last = pageCount - (this.config.addLast ? 2 : 1);\r\n      if (nextPageNumber <= last) {\r\n        const isSubstitued =\r\n          this.config.addLast &&\r\n          this.config.substituteDotsForSingularPage &&\r\n          nextPageNumber === last;\r\n        const isGap =\r\n          nextPageNumber <\r\n          pageCount -\r\n            (this.config.substituteDotsForSingularPage ? 1 : 0) -\r\n            (this.config.addLast ? 1 : 0);\r\n\r\n        const type = isGap\r\n          ? PaginationItemType.GAP\r\n          : isSubstitued\r\n          ? PaginationItemType.LAST\r\n          : PaginationItemType.PAGE;\r\n        return [\r\n          Object.assign(\r\n            {\r\n              label: isGap ? this.config.dotsLabel : String(nextPageNumber + 1),\r\n              type,\r\n            },\r\n            isGap ? null : { number: nextPageNumber }\r\n          ),\r\n        ];\r\n      } else return [];\r\n    };\r\n\r\n    pages.unshift(...addFirstGap());\r\n    pages.push(...addLastGap());\r\n  }\r\n\r\n  /**\r\n   * Add links to the first and last page, if configured to do so.\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   *\r\n   */\r\n  protected addFirstLast(pages: PaginationItem[], pageCount: number) {\r\n    if (this.config.addFirst && pages[0].number !== 0) {\r\n      pages.unshift({\r\n        number: 0,\r\n        label: '1',\r\n        type: PaginationItemType.FIRST,\r\n      });\r\n    }\r\n    if (\r\n      this.config.addLast &&\r\n      pages[pages.length - 1].number !== pageCount - 1\r\n    ) {\r\n      pages.push({\r\n        number: pageCount - 1,\r\n        label: String(pageCount),\r\n        type: PaginationItemType.LAST,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add links to the start, previous, next and last page, if configured to do so.\r\n   * The order of the links can be configured by using the {@link PaginationConfig},\r\n   * using the `PaginationNavigationPosition` (`BEFORE` or `AFTER`).\r\n   * The `PaginationNavigationPosition` allows for 3 flavours:\r\n   *\r\n   * - by default the pagination starts with start and previous and ends with the next and end links\r\n   * - BEFORE – all navigation links are added in the front of the pagination list\r\n   * - AFTER – all navigation links are pushed to the end of the pagination list\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   * @param current The current page number, 0-index based\r\n   *\r\n   */\r\n  protected addNavigation(\r\n    pages: PaginationItem[],\r\n    pageCount: number,\r\n    current: number\r\n  ): void {\r\n    const before = this.getBeforeLinks(current);\r\n    const after = this.getAfter(pageCount, current);\r\n    const pos = this.config.navigationPosition;\r\n    if (!pos || pos === PaginationNavigationPosition.ASIDE) {\r\n      pages.unshift(...before);\r\n      pages.push(...after);\r\n    } else {\r\n      if (pos === PaginationNavigationPosition.BEFORE) {\r\n        pages.unshift(...before, ...after);\r\n      }\r\n      if (pos === PaginationNavigationPosition.AFTER) {\r\n        pages.push(...before, ...after);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the start and previous links, if applicable.\r\n   */\r\n  private getBeforeLinks(current: number): PaginationItem[] {\r\n    const list = [];\r\n\r\n    if (this.config.addStart) {\r\n      const start = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.startLabel,\r\n            type: PaginationItemType.START,\r\n          },\r\n          current > 0 ? { number: 0 } : null\r\n        );\r\n      };\r\n      list.push(start());\r\n    }\r\n    if (this.config.addPrevious) {\r\n      const previous = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.previousLabel,\r\n            type: PaginationItemType.PREVIOUS,\r\n          },\r\n          current > 0 ? { number: current - 1 } : null\r\n        );\r\n      };\r\n      list.push(previous());\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * Returns the next and end links, if applicable.\r\n   */\r\n  private getAfter(pageCount: number, current: number): PaginationItem[] {\r\n    const list = [];\r\n\r\n    if (this.config.addNext) {\r\n      const next = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.nextLabel,\r\n            type: PaginationItemType.NEXT,\r\n          },\r\n          current < pageCount - 1 ? { number: current + 1 } : null\r\n        );\r\n      };\r\n      list.push(next());\r\n    }\r\n    if (this.config.addEnd) {\r\n      const end = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.endLabel,\r\n            type: PaginationItemType.END,\r\n          },\r\n          current < pageCount - 1 ? { number: pageCount - 1 } : null\r\n        );\r\n      };\r\n      list.push(end());\r\n    }\r\n\r\n    return list;\r\n  }\r\n  /**\r\n   * Resolves the first page of the range we need to build.\r\n   * This is the page that is leading up to the range of the\r\n   * current page.\r\n   *\r\n   * @param pageCount The total number of pages.\r\n   * @param current The current page number, 0-index based.\r\n   */\r\n  private getStartOfRange(pageCount: number, current: number): number {\r\n    const count = this.config.rangeCount - 1;\r\n    // the least number of pages before and after the current\r\n    const delta = Math.round(count / 2);\r\n\r\n    // ensure that we start with at least the first page\r\n    const minStart = Math.max(0, current - delta);\r\n    // ensures that we start with at least 1 and do not pass the last range\r\n    const maxStart = Math.max(0, pageCount - count - 1);\r\n\r\n    // ensure that we get at least a full range at the end\r\n    return Math.min(maxStart, minStart);\r\n  }\r\n\r\n  private get config(): PaginationOptions {\r\n    return Object.assign(\r\n      FALLBACK_PAGINATION_OPTIONS,\r\n      this.paginationConfig.pagination\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { PaginationModel } from '@spartacus/core';\r\nimport { PaginationBuilder } from './pagination.builder';\r\nimport { PaginationItem, PaginationItemType } from './pagination.model';\r\n\r\n/**\r\n * The `PaginationComponent` is a generic component that is used for\r\n * all lists in Spartacus that require pagination. The component supports\r\n * all common features, which can be configured or hidden by CSS.\r\n */\r\n@Component({\r\n  selector: 'cx-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaginationComponent {\r\n  /** The (optional) pageRoute used for the anchor links created in the pagination   */\r\n  @Input() pageRoute: string;\r\n\r\n  /** The (optional) query parameter which is added to the page route.  */\r\n  @Input() queryParam: string;\r\n\r\n  /**\r\n   * Whenever there's a default page specified, the routing logic\r\n   * will omit the page number in routeLink or parameters.\r\n   */\r\n  @Input() defaultPage;\r\n\r\n  private _pagination: PaginationModel;\r\n  get pagination(): PaginationModel {\r\n    return this._pagination;\r\n  }\r\n  @Input() set pagination(value: PaginationModel) {\r\n    this._pagination = value;\r\n    this.render(value);\r\n  }\r\n\r\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  pages: PaginationItem[] = [];\r\n\r\n  constructor(\r\n    private paginationBuilder: PaginationBuilder,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  private render(pagination: PaginationModel) {\r\n    this.pages = this.paginationBuilder.paginate(\r\n      pagination.totalPages,\r\n      pagination.currentPage\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Inidicates whether the given item is the current item.\r\n   *\r\n   * @param item PaginationItem\r\n   * @returns boolean\r\n   */\r\n  isCurrent(item: PaginationItem): boolean {\r\n    return (\r\n      item.type === PaginationItemType.PAGE &&\r\n      item.number === this.pagination.currentPage\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the pagination item is inactive. This is used\r\n   * to disabled a link or set the tabindex to `-1`.\r\n   *\r\n   * Defaults to true\r\n   *\r\n   * @param item PaginationItem\r\n   * @returns returns -1 in case of a disabled\r\n   */\r\n  isInactive(item: PaginationItem): boolean {\r\n    return (\r\n      !item.hasOwnProperty('number') ||\r\n      item.number === this.pagination.currentPage\r\n    );\r\n  }\r\n\r\n  getQueryParams(item: PaginationItem): Params {\r\n    const queryParams = Object.assign(\r\n      {},\r\n      this.activatedRoute.snapshot.queryParams\r\n    );\r\n    if (\r\n      this.queryParam &&\r\n      item.number < this.pagination.totalPages &&\r\n      !this.isCurrent(item)\r\n    ) {\r\n      queryParams[this.queryParam] = item.number;\r\n    }\r\n    // omit the page number from the query parameters in case it's the default\r\n    // to clean up the experience and avoid unnecessary polluting of the URL\r\n    if (queryParams[this.queryParam] === this.defaultPage) {\r\n      delete queryParams[this.queryParam];\r\n    }\r\n    return queryParams;\r\n  }\r\n\r\n  pageChange(page: PaginationItem): void {\r\n    this.viewPageEvent.emit(page.number);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { provideDefaultConfig } from '@spartacus/core';\r\nimport { defaultPaginationConfig } from './config/index';\r\nimport { PaginationComponent } from './pagination.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule],\r\n  providers: [provideDefaultConfig(defaultPaginationConfig)],\r\n  declarations: [PaginationComponent],\r\n  exports: [PaginationComponent],\r\n})\r\nexport class PaginationModule {}\r\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[];\n  @Input()\n  selectedOption: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string };\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { PaginationComponent, PaginationModule } from './pagination/index';\r\nimport { SortingComponent } from './sorting/sorting.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, NgSelectModule, FormsModule, PaginationModule],\r\n  declarations: [SortingComponent],\r\n  exports: [SortingComponent, PaginationComponent],\r\n})\r\nexport class ListNavigationModule {}\r\n","import { MediaFormatSize } from './media.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n/**\r\n * Provides configuration specific to Media, such as images. This is used to optimize\r\n * rendering of the media, SEO and performance.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class MediaConfig {\r\n  /**\r\n   * Media _format_ configuration holds the size of the media's assigned to\r\n   * a format.\r\n   */\r\n  mediaFormats?: {\r\n    /**\r\n     * Represents the media format code, that is the key to distinguish different\r\n     * media in a container.\r\n     */\r\n    [format: string]: MediaFormatSize;\r\n  };\r\n}\r\n","import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * A reference to a newly opened modal\n *\n * @todo remove ngb dependency and create our own implementation of ModalRef\n */\nexport class ModalRef extends NgbModalRef {}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalRef } from './modal-ref';\nimport { ModalOptions } from './modal-options';\n\n/**\n * A service to handle modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: ModalRef[] = [];\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(content: any, options?: ModalOptions): ModalRef {\n    let activeModal: ModalRef;\n\n    activeModal = this.ngbModalService.open(content, options);\n    this.modals.push(activeModal);\n\n    return activeModal;\n  }\n\n  getActiveModal(): ModalRef {\n    const modal = this.modals[this.modals.length - 1];\n    return modal ? modal : null;\n  }\n\n  dismissActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.dismiss(reason);\n      this.modals.pop();\n    }\n  }\n\n  closeActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.close(reason);\n      this.modals.pop();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  GlobalMessageEntities,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-global-message',\r\n  templateUrl: './global-message.component.html',\r\n})\r\nexport class GlobalMessageComponent implements OnInit {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  messages$: Observable<GlobalMessageEntities>;\r\n  messageType: typeof GlobalMessageType = GlobalMessageType;\r\n\r\n  constructor(protected globalMessageService: GlobalMessageService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.messages$ = this.globalMessageService.get();\r\n  }\r\n\r\n  clear(type: GlobalMessageType, index: number): void {\r\n    this.globalMessageService.remove(type, index);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { GlobalMessageComponent } from './global-message.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule, IconModule, I18nModule],\r\n  declarations: [GlobalMessageComponent],\r\n  exports: [GlobalMessageComponent],\r\n})\r\nexport class GlobalMessageComponentModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n/**\r\n * Configuration options for the Qualtrics integration, which allows you to\r\n * specify the qualtrics project and deployment script.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class QualtricsConfig {\r\n  /**\r\n   * Holds the qualtrics integration options.\r\n   */\r\n  qualtrics?: {\r\n    /**\r\n     * Deployment script, loaded from a resource, to integrate the deployment of the qualtrics project.\r\n     * You would typically store the file in the local assets folder.\r\n     *\r\n     * Defaults to `assets/qualtricsIntegration.js`\r\n     */\r\n    scriptSource?: string;\r\n  };\r\n}\r\n","import {\r\n  Injectable,\r\n  isDevMode,\r\n  Renderer2,\r\n  RendererFactory2,\r\n} from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { fromEvent, Observable, of } from 'rxjs';\r\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\r\n\r\nexport const QUALTRICS_EVENT_NAME = 'qsi_js_loaded';\r\n\r\n/**\r\n * Service to integration Qualtrics.\r\n *\r\n * The integration observes the Qualtrics API, and when available, it runs the QSI API\r\n * to let Qualtrics evaluate the application.\r\n *\r\n * The service supports an additional _hook_ (`isDataLoaded()`) that can be used to load application\r\n * data before pulling the QSI API. This is beneficial in a single page application when additional\r\n * data is required before the Qualtrics _creatives_ run.\r\n *\r\n * This service also supports the creation of the Qualtrics deployment script. This is optional, as\r\n * the script can be added in alternatives ways.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QualtricsLoaderService {\r\n  /**\r\n   * Reference to the QSI API.\r\n   */\r\n  protected qsiApi: any;\r\n\r\n  /**\r\n   * QSI load event that happens when the QSI JS file is loaded.\r\n   */\r\n  private qsiLoaded$: Observable<any> = this.winRef?.nativeWindow\r\n    ? fromEvent(this.winRef.nativeWindow, QUALTRICS_EVENT_NAME)\r\n    : of();\r\n\r\n  /**\r\n   * Emits the Qualtrics Site Intercept (QSI) JavaScript API whenever available.\r\n   *\r\n   * The API is emitted when the JavaScript resource holding this API is fully loaded.\r\n   * The API is also stored locally in the service, in case it's required later on.\r\n   */\r\n  protected qsi$: Observable<any> = this.qsiLoaded$.pipe(\r\n    switchMap(() => this.isDataLoaded()),\r\n    map(() => this.winRef?.nativeWindow['QSI']),\r\n    filter((api) => Boolean(api)),\r\n    tap((qsi) => (this.qsiApi = qsi))\r\n  );\r\n\r\n  constructor(\r\n    protected winRef: WindowRef,\r\n    protected rendererFactory: RendererFactory2\r\n  ) {\r\n    this.initialize();\r\n  }\r\n\r\n  /**\r\n   * Starts observing the Qualtrics integration. The integration is based on a\r\n   * Qualtrics specific event (`qsi_js_loaded`). As soon as this events happens,\r\n   * we run the API.\r\n   */\r\n  protected initialize() {\r\n    this.qsi$.subscribe(() => this.run());\r\n  }\r\n\r\n  /**\r\n   * Evaluates the Qualtrics project code for the application.\r\n   *\r\n   * In order to reload the evaluation in Qualtrics, the API requires to unload the API before\r\n   * running it again. We don't do this by default, but offer a flag to conditionally unload the API.\r\n   */\r\n  protected run(reload = false): void {\r\n    if (!this.qsiApi?.API) {\r\n      if (isDevMode()) {\r\n        console.log('The QSI api is not available');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (reload) {\r\n      // Removes any currently displaying creatives\r\n      this.qsiApi.API.unload();\r\n    }\r\n\r\n    // Starts the intercept code evaluation right after loading the Site Intercept\r\n    // code for any defined intercepts or creatives\r\n    this.qsiApi.API.load().done(this.qsiApi.API.run());\r\n  }\r\n\r\n  /**\r\n   * Adds the deployment script to the DOM.\r\n   *\r\n   * The script will not be added twice if it was loaded before. In that case, we use\r\n   * the Qualtrics API directly to _unload_ and _run_ the project.\r\n   */\r\n  addScript(scriptSource: string): void {\r\n    if (this.hasScript(scriptSource)) {\r\n      this.run(true);\r\n    } else {\r\n      const script: HTMLScriptElement = this.renderer.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.defer = true;\r\n      script.src = scriptSource;\r\n      this.renderer.appendChild(this.winRef.document.body, script);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This logic exist in order to let the client(s) add their own logic to wait for any kind of page data.\r\n   * You can observe any data in this method.\r\n   *\r\n   * Defaults to true.\r\n   */\r\n  protected isDataLoaded(): Observable<boolean> {\r\n    return of(true);\r\n  }\r\n\r\n  /**\r\n   * Indicates if the script is already added to the DOM.\r\n   */\r\n  protected hasScript(source?: string): boolean {\r\n    return !!this.winRef.document.querySelector(`script[src=\"${source}\"]`);\r\n  }\r\n\r\n  protected get renderer(): Renderer2 {\r\n    return this.rendererFactory.createRenderer(null, null);\r\n  }\r\n}\r\n","import { Component, isDevMode } from '@angular/core';\r\nimport { QualtricsConfig } from './config/qualtrics-config';\r\nimport { QualtricsLoaderService } from './qualtrics-loader.service';\r\n/**\r\n * Adds the Qualtrics deployment script whenever the component is loaded. The\r\n * deployment script is loaded from the global configuration (`qualtrics.scriptSource`).\r\n */\r\n@Component({\r\n  selector: 'cx-qualtrics',\r\n  template: ``,\r\n})\r\nexport class QualtricsComponent {\r\n  constructor(\r\n    protected qualtricsLoader: QualtricsLoaderService,\r\n    protected config: QualtricsConfig\r\n  ) {\r\n    if (this.config.qualtrics?.scriptSource) {\r\n      this.qualtricsLoader.addScript(this.config.qualtrics.scriptSource);\r\n    } else if (isDevMode()) {\r\n      console.warn(\r\n        `We're unable to add the Qualtrics deployment code as there is no script source defined in config.qualtrics.scriptSource.`\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { QualtricsConfig } from './qualtrics-config';\n\nexport const defaultQualtricsConfig: QualtricsConfig = {\n  qualtrics: {},\n};\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { defaultQualtricsConfig } from './config/default-qualtrics-config';\r\nimport { QualtricsComponent } from './qualtrics.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule],\r\n  declarations: [QualtricsComponent],\r\n  entryComponents: [QualtricsComponent],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        QualtricsComponent: {\r\n          component: QualtricsComponent,\r\n        },\r\n      },\r\n    }),\r\n    provideDefaultConfig(defaultQualtricsConfig),\r\n  ],\r\n})\r\nexport class QualtricsModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector context=\"language\"></cx-site-context-selector>\n    <cx-site-context-selector context=\"currency\"></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","import { Injectable, Injector, Optional } from '@angular/core';\r\nimport {\r\n  CmsSiteContextSelectorComponent,\r\n  ContextServiceMap,\r\n  CURRENCY_CONTEXT_ID,\r\n  LANGUAGE_CONTEXT_ID,\r\n  SiteContext,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map, switchMap, take } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { SiteContextType } from './site-context.model';\r\n\r\nconst LABELS = {\r\n  [LANGUAGE_CONTEXT_ID]: 'Language',\r\n  [CURRENCY_CONTEXT_ID]: 'Currency',\r\n};\r\n\r\n@Injectable()\r\nexport class SiteContextComponentService {\r\n  constructor(\r\n    @Optional()\r\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\r\n    private contextServiceMap: ContextServiceMap,\r\n    protected injector: Injector\r\n  ) {}\r\n\r\n  getItems(context?: SiteContextType): Observable<any> {\r\n    return this.getService(context).pipe(\r\n      switchMap((service: SiteContext<any>) => service.getAll()),\r\n      switchMap((items) =>\r\n        this.getContext(context).pipe(\r\n          switchMap((ctx) => {\r\n            const itemsCopy = [];\r\n            for (const item of items) {\r\n              itemsCopy.push({\r\n                ...item,\r\n                label: this.getOptionLabel(item, ctx),\r\n              });\r\n            }\r\n            return of(itemsCopy);\r\n          })\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getActiveItem(context?: SiteContextType): Observable<string> {\r\n    return this.getService(context).pipe(\r\n      switchMap((service: SiteContext<any>) => service.getActive())\r\n    );\r\n  }\r\n\r\n  getLabel(context?: SiteContextType): Observable<any> {\r\n    return this.getContext(context).pipe(\r\n      map((ctx) => {\r\n        return LABELS[ctx];\r\n      })\r\n    );\r\n  }\r\n\r\n  setActive(value: string, context?: SiteContextType): void {\r\n    this.getService(context)\r\n      .pipe(take(1))\r\n      .subscribe((service) => {\r\n        service.setActive(value);\r\n      });\r\n  }\r\n\r\n  protected getService(\r\n    context?: SiteContextType\r\n  ): Observable<SiteContext<any>> {\r\n    return this.getContext(context).pipe(\r\n      map((ctx: string) => (ctx ? this.getInjectedService(ctx) : undefined)),\r\n      filter((s) => !!s)\r\n    );\r\n  }\r\n\r\n  protected getContext(context?: SiteContextType): Observable<string> {\r\n    if (context) {\r\n      return of(context);\r\n    } else if (this.componentData) {\r\n      return this.componentData.data$.pipe(\r\n        map((data) => data?.context),\r\n        map((ctx) => {\r\n          switch (ctx) {\r\n            case 'LANGUAGE':\r\n              return LANGUAGE_CONTEXT_ID;\r\n            case 'CURRENCY':\r\n              return CURRENCY_CONTEXT_ID;\r\n            default:\r\n              return ctx;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  protected getInjectedService(context: string): SiteContext<any> {\r\n    return this.injector.get<SiteContext<any>>(\r\n      this.contextServiceMap[context],\r\n      null\r\n    );\r\n  }\r\n\r\n  protected getOptionLabel(item: any, context?: string): string {\r\n    switch (context) {\r\n      case LANGUAGE_CONTEXT_ID:\r\n        return item.nativeName;\r\n      case CURRENCY_CONTEXT_ID:\r\n        return item.symbol + ' ' + item.isocode;\r\n      default:\r\n        return item.isocode;\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { Injector, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  ContextServiceMap,\r\n  provideDefaultConfig,\r\n  SiteContextModule,\r\n} from '@spartacus/core';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { IconModule } from '../icon/index';\r\nimport { LanguageCurrencyComponent } from './language-currency.component';\r\nimport { SiteContextComponentService } from './site-context-component.service';\r\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, SiteContextModule, IconModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSSiteContextComponent: {\r\n          component: SiteContextSelectorComponent,\r\n          providers: [\r\n            {\r\n              provide: SiteContextComponentService,\r\n              useClass: SiteContextComponentService,\r\n              deps: [CmsComponentData, ContextServiceMap, Injector],\r\n            },\r\n          ],\r\n        },\r\n        LanguageCurrencyComponent: {\r\n          component: LanguageCurrencyComponent,\r\n        },\r\n      },\r\n    }),\r\n    SiteContextComponentService,\r\n  ],\r\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\r\n  entryComponents: [SiteContextSelectorComponent, LanguageCurrencyComponent],\r\n  exports: [SiteContextSelectorComponent, LanguageCurrencyComponent],\r\n})\r\nexport class SiteContextSelectorModule {}\r\n","export enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\r\n\r\n@Component({\r\n  selector: 'cx-star-rating',\r\n  templateUrl: './star-rating.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class StarRatingComponent implements OnInit {\r\n  /**\r\n   * The rating component can be used in disabled mode,\r\n   * so that the interation is not provided.\r\n   */\r\n  @Input() @HostBinding('attr.disabled') disabled = false;\r\n\r\n  /**\r\n   * The rating will be used to render some colorful stars in the UI.\r\n   */\r\n  @Input() rating: number;\r\n\r\n  /**\r\n   * Emits the given rating when the user clicks on a star.\r\n   */\r\n  // tslint:disable-next-line:no-output-native\r\n  @Output() change = new EventEmitter<number>();\r\n\r\n  private initialRate = 0;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(protected el: ElementRef, protected renderer: Renderer2) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setRate(this.rating, true);\r\n  }\r\n\r\n  setRate(value: number, force?: boolean): void {\r\n    if (!this.disabled || force) {\r\n      this.renderer.setAttribute(\r\n        this.el.nativeElement,\r\n        'style',\r\n        `--star-fill:${value || this.initialRate};`\r\n      );\r\n    }\r\n  }\r\n\r\n  saveRate(rating: number): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    this.initialRate = rating;\r\n    this.setRate(rating);\r\n    this.change.emit(rating);\r\n  }\r\n\r\n  setRateOnEvent(event: any, rating: number) {\r\n    if (event.code === 'Space') {\r\n      event.preventDefault();\r\n      this.setRate(rating);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class ViewConfig {\r\n  view?: {\r\n    /**\r\n     * Configurations related to the view of the application\r\n     */\r\n    infiniteScroll?: {\r\n      active?: boolean;\r\n      productLimit?: number;\r\n      showMoreButton?: boolean;\r\n    };\r\n  };\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { provideDefaultConfig } from '@spartacus/core';\r\n\r\n@NgModule({})\r\nexport class ViewConfigModule {\r\n  static forRoot(): ModuleWithProviders<ViewConfigModule> {\r\n    return {\r\n      ngModule: ViewConfigModule,\r\n      providers: [\r\n        provideDefaultConfig({\r\n          view: {},\r\n        }),\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Order, RoutingService, UserOrderService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderDetailsService {\r\n  orderCode$: Observable<string>;\r\n  orderLoad$: Observable<{}>;\r\n\r\n  constructor(\r\n    private userOrderService: UserOrderService,\r\n    private routingService: RoutingService\r\n  ) {\r\n    this.orderCode$ = this.routingService\r\n      .getRouterState()\r\n      .pipe(map((routingData) => routingData.state.params.orderCode));\r\n\r\n    this.orderLoad$ = this.orderCode$.pipe(\r\n      tap((orderCode) => {\r\n        if (orderCode) {\r\n          this.userOrderService.loadOrderDetails(orderCode);\r\n        } else {\r\n          this.userOrderService.clearOrderDetails();\r\n        }\r\n      }),\r\n      shareReplay({ bufferSize: 1, refCount: true })\r\n    );\r\n  }\r\n\r\n  getOrderDetails(): Observable<Order> {\r\n    return this.orderLoad$.pipe(\r\n      switchMap(() => this.userOrderService.getOrderDetails())\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  CheckoutService,\r\n  Order,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../../../cms-components/myaccount/order/order-details/order-details.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PromotionService {\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected checkoutService: CheckoutService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  getOrderPromotions(\r\n    promotionLocation: PromotionLocation\r\n  ): Observable<PromotionResult[]> {\r\n    switch (promotionLocation) {\r\n      case PromotionLocation.ActiveCart:\r\n        return this.getOrderPromotionsFromCart();\r\n      case PromotionLocation.Checkout:\r\n        return this.getOrderPromotionsFromCheckout();\r\n      case PromotionLocation.Order:\r\n        return this.getOrderPromotionsFromOrder();\r\n      default:\r\n        return of([]);\r\n    }\r\n  }\r\n\r\n  getOrderPromotionsFromCart(): Observable<PromotionResult[]> {\r\n    return this.activeCartService\r\n      .getActive()\r\n      .pipe(map((cart) => this.getOrderPromotionsFromCartHelper(cart)));\r\n  }\r\n\r\n  private getOrderPromotionsFromCartHelper(cart: Cart): PromotionResult[] {\r\n    const potentialPromotions = [];\r\n    potentialPromotions.push(...(cart.potentialOrderPromotions || []));\r\n\r\n    const appliedPromotions = [];\r\n    appliedPromotions.push(...(cart.appliedOrderPromotions || []));\r\n\r\n    return [...potentialPromotions, ...appliedPromotions];\r\n  }\r\n\r\n  getOrderPromotionsFromCheckout(): Observable<PromotionResult[]> {\r\n    return this.checkoutService\r\n      .getOrderDetails()\r\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\r\n  }\r\n\r\n  getOrderPromotionsFromOrder(): Observable<PromotionResult[]> {\r\n    return this.orderDetailsService\r\n      .getOrderDetails()\r\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\r\n  }\r\n\r\n  private getOrderPromotionsFromOrderHelper(order: Order): PromotionResult[] {\r\n    const appliedOrderPromotions = [];\r\n    appliedOrderPromotions.push(...(order.appliedOrderPromotions || []));\r\n\r\n    return appliedOrderPromotions;\r\n  }\r\n\r\n  getProductPromotionForEntry(\r\n    item: OrderEntry,\r\n    promotionLocation: PromotionLocation\r\n  ): Observable<PromotionResult[]> {\r\n    switch (promotionLocation) {\r\n      case PromotionLocation.ActiveCart:\r\n        return this.activeCartService\r\n          .getActive()\r\n          .pipe(\r\n            map((cart) =>\r\n              this.getProductPromotion(\r\n                item,\r\n                cart.appliedProductPromotions || []\r\n              )\r\n            )\r\n          );\r\n      case PromotionLocation.Checkout:\r\n        return this.checkoutService\r\n          .getOrderDetails()\r\n          .pipe(\r\n            map((order) =>\r\n              this.getProductPromotion(\r\n                item,\r\n                order.appliedProductPromotions || []\r\n              )\r\n            )\r\n          );\r\n      case PromotionLocation.Order:\r\n        return this.orderDetailsService\r\n          .getOrderDetails()\r\n          .pipe(\r\n            map((order) =>\r\n              this.getProductPromotion(\r\n                item,\r\n                order.appliedProductPromotions || []\r\n              )\r\n            )\r\n          );\r\n    }\r\n  }\r\n\r\n  private getProductPromotion(\r\n    item: OrderEntry,\r\n    promotions: PromotionResult[]\r\n  ): PromotionResult[] {\r\n    const entryPromotions: PromotionResult[] = [];\r\n    if (promotions && promotions.length > 0) {\r\n      for (const promotion of promotions) {\r\n        if (\r\n          promotion.description &&\r\n          promotion.consumedEntries &&\r\n          promotion.consumedEntries.length > 0\r\n        ) {\r\n          for (const consumedEntry of promotion.consumedEntries) {\r\n            if (this.isConsumedByEntry(consumedEntry, item)) {\r\n              entryPromotions.push(promotion);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return entryPromotions;\r\n  }\r\n\r\n  private isConsumedByEntry(consumedEntry: any, entry: any): boolean {\r\n    const consumedEntryNumber = consumedEntry.orderEntryNumber;\r\n    if (entry.entries && entry.entries.length > 0) {\r\n      for (const subEntry of entry.entries) {\r\n        if (subEntry.entryNumber === consumedEntryNumber) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    } else {\r\n      return consumedEntryNumber === entry.entryNumber;\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl, ValidationErrors, FormGroup } from '@angular/forms';\r\nimport { EMAIL_PATTERN, PASSWORD_PATTERN } from '@spartacus/core';\r\n\r\nexport class CustomFormValidators {\r\n  /**\r\n   * Checks control's value with predefined email regexp\r\n   *\r\n   * NOTE: Use it as a control validator\r\n   *\r\n   * @static\r\n   * @param {AbstractControl} control\r\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidEmail' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\r\n    const email = control.value as string;\r\n\r\n    return !email.length || email.match(EMAIL_PATTERN)\r\n      ? null\r\n      : { cxInvalidEmail: true };\r\n  }\r\n\r\n  /**\r\n   * Checks control's value with predefined password regexp\r\n   *\r\n   * NOTE: Use it as a control validator\r\n   *\r\n   * @static\r\n   * @param {AbstractControl} control\r\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidPassword' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\r\n    const password = control.value as string;\r\n\r\n    return !password.length || password.match(PASSWORD_PATTERN)\r\n      ? null\r\n      : { cxInvalidPassword: true };\r\n  }\r\n\r\n  /**\r\n   * Checks if control's value is between 1 and 5\r\n   *\r\n   * NOTE: Use it as a control validator\r\n   *\r\n   * @static\r\n   * @param {AbstractControl} control\r\n   * @returns {(ValidationErrors | null)} Uses 'cxStarRatingEmpty' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static starRatingEmpty(control: AbstractControl): ValidationErrors | null {\r\n    const rating = control.value as number;\r\n\r\n    return rating >= 1 && rating <= 5 ? null : { cxStarRatingEmpty: true };\r\n  }\r\n\r\n  /**\r\n   * Checks if two password controls match\r\n   *\r\n   * NOTE: Use it as a form validator and pass password control names as parameters\r\n   *\r\n   * @static\r\n   * @param {string} password First password control name\r\n   * @param {string} passwordConfirmation Second password control name\r\n   * @returns Uses 'cxPasswordsMustMatch' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static passwordsMustMatch(\r\n    password: string,\r\n    passwordConfirmation: string\r\n  ): any {\r\n    const validator = (formGroup: FormGroup) =>\r\n      controlsMustMatch(\r\n        formGroup,\r\n        password,\r\n        passwordConfirmation,\r\n        'cxPasswordsMustMatch'\r\n      );\r\n\r\n    return validator;\r\n  }\r\n\r\n  /**\r\n   * Checks if two email controls match\r\n   *\r\n   * NOTE: Use it as a form validator and pass email control names as parameters\r\n   *\r\n   * @static\r\n   * @param {string} email First email control name\r\n   * @param {string} emailConfirmation Second email control name\r\n   * @returns Uses 'cxEmailsMustMatch' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static emailsMustMatch(email: string, emailConfirmation: string): any {\r\n    const validator = (formGroup: FormGroup) =>\r\n      controlsMustMatch(\r\n        formGroup,\r\n        email,\r\n        emailConfirmation,\r\n        'cxEmailsMustMatch'\r\n      );\r\n\r\n    return validator;\r\n  }\r\n}\r\n\r\n/**\r\n * Generic function for validators, which checks if two passed controls match.\r\n *\r\n * @param formGroup\r\n * @param firstControlName First control to check\r\n * @param secondControlName Second control to check\r\n * @param errorName Error which will be returned by validator\r\n */\r\nexport function controlsMustMatch(\r\n  formGroup: FormGroup,\r\n  firstControlName: string,\r\n  secondControlName: string,\r\n  errorName: string\r\n): void {\r\n  const firstControl = formGroup.controls[firstControlName];\r\n  const secondControl = formGroup.controls[secondControlName];\r\n\r\n  if (secondControl.errors && !secondControl.errors[errorName]) {\r\n    return;\r\n  }\r\n\r\n  secondControl.setErrors(\r\n    firstControl.value !== secondControl.value ? { [errorName]: true } : null\r\n  );\r\n}\r\n","import { Title } from '@spartacus/core';\n\nexport const titleScores = {\n  mr: 1,\n  mrs: 2,\n  miss: 3,\n  ms: 4,\n  dr: 5,\n  rev: 6,\n};\n\nexport function sortTitles(title1: Title, title2: Title) {\n  if (!titleScores[title1.code] || !titleScores[title2.code]) {\n    return 1;\n  } else {\n    return titleScores[title1.code] - titleScores[title2.code];\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport {\r\n  CmsComponentMapping,\r\n  CmsConfig,\r\n  DeferLoadingStrategy,\r\n} from '@spartacus/core';\r\nimport { Route } from '@angular/router';\r\nimport { isPlatformServer } from '@angular/common';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsComponentsService {\r\n  private missingComponents: string[] = [];\r\n\r\n  constructor(\r\n    protected config: CmsConfig,\r\n    @Inject(PLATFORM_ID) protected platformId: Object\r\n  ) {}\r\n\r\n  /**\r\n   * Should be called to make sure all component mappings are determined,\r\n   * especially lazy loaded ones.\r\n   *\r\n   * It's recommended way to make sure all other methods of CmsComponentService\r\n   * will be able to work synchronously for asked component types and avoid risk\r\n   * of potential errors that could be thrown otherwise.\r\n   */\r\n  determineMappings(componentTypes: string[]): Observable<string[]> {\r\n    return of(componentTypes);\r\n  }\r\n\r\n  /**\r\n   * Return collection of component mapping configuration for specified list of\r\n   * component types.\r\n   *\r\n   * If component mapping can't be determined synchronously, for example, lazy\r\n   * loaded one, it will throw an error.\r\n   *\r\n   * To make sure component mapping is available, determineMappings()\r\n   * should be called and completed first.\r\n   */\r\n  getMapping(componentType: string): CmsComponentMapping {\r\n    const componentConfig = this.config.cmsComponents?.[componentType];\r\n\r\n    if (!componentConfig) {\r\n      if (!this.missingComponents.includes(componentType)) {\r\n        this.missingComponents.push(componentType);\r\n        console.warn(\r\n          `No component implementation found for the CMS component type '${componentType}'.\\n`,\r\n          `Make sure you implement a component and register it in the mapper.`\r\n        );\r\n      }\r\n    }\r\n\r\n    return componentConfig;\r\n  }\r\n\r\n  /**\r\n   * Checks, if component should be rendered as some components\r\n   * could be disabled for server side renderings\r\n   */\r\n  shouldRender(componentType: string): boolean {\r\n    const isSSR = isPlatformServer(this.platformId);\r\n    return !(isSSR && this.getMapping(componentType)?.disableSSR);\r\n  }\r\n\r\n  /**\r\n   * Return DeferLoadingStrategy for component type.\r\n   */\r\n  getDeferLoadingStrategy(componentType: string): DeferLoadingStrategy {\r\n    return this.config.cmsComponents?.[componentType]?.deferLoading;\r\n  }\r\n\r\n  /**\r\n   * Get cms driven child routes for components\r\n   */\r\n  getChildRoutes(componentTypes: string[]): Route[] {\r\n    const routes = [];\r\n    for (const componentType of componentTypes) {\r\n      if (this.shouldRender(componentType)) {\r\n        routes.push(...(this.getMapping(componentType)?.childRoutes ?? []));\r\n      }\r\n    }\r\n    return routes;\r\n  }\r\n\r\n  /**\r\n   * Get cms driven guards for components\r\n   */\r\n  getGuards(componentTypes: string[]): any[] {\r\n    const guards = new Set<any>();\r\n    for (const componentType of componentTypes) {\r\n      this.getMapping(componentType)?.guards?.forEach((guard) =>\r\n        guards.add(guard)\r\n      );\r\n    }\r\n    return Array.from(guards);\r\n  }\r\n\r\n  /**\r\n   * Get i18n keys associated with components\r\n   */\r\n  getI18nKeys(componentTypes: string[]): string[] {\r\n    const i18nKeys = new Set<string>();\r\n    for (const componentType of componentTypes) {\r\n      if (this.shouldRender(componentType)) {\r\n        this.getMapping(componentType)?.i18nKeys?.forEach((key) =>\r\n          i18nKeys.add(key)\r\n        );\r\n      }\r\n    }\r\n    return Array.from(i18nKeys);\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { CmsComponentData } from '../../model';\r\nimport { CmsComponent, CmsService } from '@spartacus/core';\r\nimport { CmsComponentsService } from '../../../services/cms-components.service';\r\n\r\n/**\r\n * Used to prepare injector for CMS components.\r\n *\r\n * Injector will take into account configured providers and provides CmsComponentData\r\n * for specified component's uid\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsInjectorService {\r\n  constructor(\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected injector: Injector\r\n  ) {}\r\n\r\n  private getCmsData<T extends CmsComponent>(\r\n    uid: string,\r\n    parentInjector?: Injector\r\n  ): CmsComponentData<T> {\r\n    return {\r\n      uid: uid,\r\n      data$: (parentInjector ?? this.injector)\r\n        .get(CmsService)\r\n        .getComponentData<T>(uid),\r\n    };\r\n  }\r\n\r\n  public getInjector(\r\n    type: string,\r\n    uid: string,\r\n    parentInjector?: Injector\r\n  ): Injector {\r\n    const configProviders =\r\n      this.cmsComponentsService.getMapping(type)?.providers ?? [];\r\n    return Injector.create({\r\n      providers: [\r\n        {\r\n          provide: CmsComponentData,\r\n          useValue: this.getCmsData(uid),\r\n        },\r\n        ...configProviders,\r\n      ],\r\n      parent: parentInjector ?? this.injector,\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  ElementRef,\r\n  Injector,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Applicable, CmsComponentMapping, Priority } from '@spartacus/core';\r\n\r\n/**\r\n * ComponentHandler implementations can be used for instantiating and launching\r\n * different types of CMS mapped components\r\n */\r\nexport abstract class ComponentHandler implements Applicable {\r\n  /**\r\n   * Returns component resource - an observable stream used to launch and dispose\r\n   * component.\r\n   *\r\n   * Instantiate and launch component by subscribing to launcher.\r\n   * Successful component launch will be followed by emission of ElementRef\r\n   * (and in case of native Angular component, also ComponentRef).\r\n   * Unsubscribing from the launcher will remove and tear down the component.\r\n   *\r\n   * @param componentMapping\r\n   * @param viewContainerRef\r\n   * @param elementInjector\r\n   */\r\n  abstract launcher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }>;\r\n\r\n  abstract hasMatch(componentMapping: CmsComponentMapping): boolean;\r\n  abstract getPriority?(): Priority;\r\n}\r\n","import {\r\n  ComponentRef,\r\n  ElementRef,\r\n  Inject,\r\n  Injectable,\r\n  Injector,\r\n  isDevMode,\r\n  Optional,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ComponentHandler } from '../handlers/component-handler';\r\nimport { CmsComponentMapping, resolveApplicable } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * Responsible for obtaining component handler for specified component mapping\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComponentHandlerService {\r\n  constructor(\r\n    @Optional()\r\n    @Inject(ComponentHandler)\r\n    protected handlers: ComponentHandler[]\r\n  ) {}\r\n\r\n  protected invalidMappings = new Set<CmsComponentMapping>();\r\n\r\n  /**\r\n   * Get best matching component handler\r\n   *\r\n   * @param componentMapping\r\n   */\r\n  protected resolve(componentMapping: CmsComponentMapping): ComponentHandler {\r\n    const handler = resolveApplicable(this.handlers, [componentMapping]);\r\n\r\n    if (isDevMode() && !handler) {\r\n      if (!this.invalidMappings.has(componentMapping)) {\r\n        this.invalidMappings.add(componentMapping);\r\n        console.warn(\r\n          \"Can't resolve handler for component mapping: \",\r\n          componentMapping\r\n        );\r\n      }\r\n    }\r\n\r\n    return handler;\r\n  }\r\n\r\n  /**\r\n   * Get launcher for specified component mapping\r\n   *\r\n   * @param componentMapping\r\n   * @param viewContainerRef\r\n   * @param elementInjector\r\n   */\r\n  getLauncher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\r\n    return this.resolve(componentMapping)?.launcher(\r\n      componentMapping,\r\n      viewContainerRef,\r\n      elementInjector\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  Injector,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {\r\n  ContentSlotComponentData,\r\n  DynamicAttributeService,\r\n} from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CmsComponentsService } from '../../services/cms-components.service';\r\nimport { CmsInjectorService } from './services/cms-injector.service';\r\nimport { ComponentHandlerService } from './services/component-handler.service';\r\n\r\n/**\r\n * Directive used to facilitate instantiation of CMS driven dynamic components\r\n */\r\n@Directive({\r\n  selector: '[cxComponentWrapper]',\r\n})\r\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\r\n  @Input() cxComponentWrapper: ContentSlotComponentData;\r\n\r\n  /**\r\n   * @deprecated since 2.0\r\n   *\r\n   * This property in unsafe, i.e.\r\n   * - cmpRef can be set later because of lazy loading or deferred loading\r\n   * - cmpRef can be not set at all if for example, web components are used as cms components\r\n   */\r\n  cmpRef?: ComponentRef<any>;\r\n\r\n  private launcherResource?: Subscription;\r\n\r\n  constructor(\r\n    protected vcr: ViewContainerRef,\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected injector: Injector,\r\n    protected dynamicAttributeService: DynamicAttributeService,\r\n    protected renderer: Renderer2,\r\n    protected componentHandler: ComponentHandlerService,\r\n    protected cmsInjector: CmsInjectorService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.cmsComponentsService\r\n      .determineMappings([this.cxComponentWrapper.flexType])\r\n      .subscribe(() => {\r\n        if (\r\n          this.cmsComponentsService.shouldRender(\r\n            this.cxComponentWrapper.flexType\r\n          )\r\n        ) {\r\n          this.launchComponent();\r\n        }\r\n      });\r\n  }\r\n\r\n  private launchComponent() {\r\n    const componentMapping = this.cmsComponentsService.getMapping(\r\n      this.cxComponentWrapper.flexType\r\n    );\r\n\r\n    if (!componentMapping) {\r\n      return;\r\n    }\r\n\r\n    this.launcherResource = this.componentHandler\r\n      .getLauncher(\r\n        componentMapping,\r\n        this.vcr,\r\n        this.cmsInjector.getInjector(\r\n          this.cxComponentWrapper.flexType,\r\n          this.cxComponentWrapper.uid,\r\n          this.injector\r\n        )\r\n      )\r\n      ?.subscribe(({ elementRef, componentRef }) => {\r\n        this.cmpRef = componentRef;\r\n        this.decorate(elementRef);\r\n      });\r\n  }\r\n\r\n  private decorate(elementRef: ElementRef): void {\r\n    this.dynamicAttributeService.addDynamicAttributes(\r\n      elementRef.nativeElement,\r\n      this.renderer,\r\n      { componentData: this.cxComponentWrapper }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.launcherResource) {\r\n      this.launcherResource.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ElementRef,\r\n  Injectable,\r\n  Injector,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ComponentHandler } from './component-handler';\r\nimport { Observable } from 'rxjs';\r\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\r\n\r\n/**\r\n * Default component handler used for dynamically launching cms components implemented\r\n * as native Angular components.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DefaultComponentHandler implements ComponentHandler {\r\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\r\n    return typeof componentMapping.component === 'function';\r\n  }\r\n\r\n  getPriority(): Priority {\r\n    return Priority.FALLBACK;\r\n  }\r\n\r\n  launcher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\r\n    return new Observable<{\r\n      elementRef: ElementRef;\r\n      componentRef?: ComponentRef<any>;\r\n    }>((subscriber) => {\r\n      let componentRef: ComponentRef<any>;\r\n\r\n      const injector = elementInjector ?? viewContainerRef.injector;\r\n\r\n      const dispose = () => {\r\n        if (componentRef) {\r\n          componentRef.destroy();\r\n        }\r\n      };\r\n\r\n      const factory = this.getComponentFactory(\r\n        injector,\r\n        componentMapping.component\r\n      );\r\n\r\n      if (factory) {\r\n        componentRef = viewContainerRef.createComponent(\r\n          factory,\r\n          undefined,\r\n          injector\r\n        );\r\n        subscriber.next({ elementRef: componentRef.location, componentRef });\r\n      }\r\n\r\n      return dispose;\r\n    });\r\n  }\r\n\r\n  protected getComponentFactory(injector: Injector, component: any): any {\r\n    if (!component) {\r\n      return null;\r\n    }\r\n    const factory = injector\r\n      .get(ComponentFactoryResolver)\r\n      .resolveComponentFactory(component);\r\n\r\n    return factory;\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  ElementRef,\r\n  Injectable,\r\n  Injector,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\r\nimport { from, Observable } from 'rxjs';\r\nimport { DefaultComponentHandler } from './default-component.handler';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ComponentHandler } from './component-handler';\r\n\r\n/**\r\n * Lazy component handler used for launching lazy loaded cms components implemented\r\n * as native Angular components.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyComponentHandler implements ComponentHandler {\r\n  constructor(protected defaultHandler: DefaultComponentHandler) {}\r\n\r\n  /**\r\n   * We want to mach dynamic import signature () => import('')\r\n   */\r\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\r\n    return (\r\n      typeof componentMapping.component === 'function' &&\r\n      this.isNotClass(componentMapping.component)\r\n    );\r\n  }\r\n\r\n  private isNotClass(symbol: any): boolean {\r\n    const signature = symbol.toString().substr(0, 20).replace(' ', '');\r\n    return signature.startsWith('function()') || signature.startsWith('()=>');\r\n  }\r\n\r\n  getPriority(): Priority {\r\n    return Priority.LOW;\r\n  }\r\n\r\n  launcher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\r\n    return from(componentMapping.component()).pipe(\r\n      switchMap((component) =>\r\n        this.defaultHandler.launcher(\r\n          { ...componentMapping, component },\r\n          viewContainerRef,\r\n          elementInjector\r\n        )\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\r\nimport { ComponentHandler } from './handlers/component-handler';\r\nimport { DefaultComponentHandler } from './handlers/default-component.handler';\r\nimport { LazyComponentHandler } from './handlers/lazy-component.handler';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    {\r\n      provide: ComponentHandler,\r\n      useExisting: DefaultComponentHandler,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: ComponentHandler,\r\n      useExisting: LazyComponentHandler,\r\n      multi: true,\r\n    },\r\n  ],\r\n  declarations: [ComponentWrapperDirective],\r\n  exports: [ComponentWrapperDirective],\r\n})\r\nexport class PageComponentModule {}\r\n","export const ASM_ENABLED_LOCAL_STORAGE_KEY = 'asm_enabled';\n","import { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { LAUNCH_CALLER } from '../../../layout/launch-dialog/config/index';\r\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\r\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\r\n\r\n/**\r\n * The AsmEnablerService is used to enable ASM for those scenario's\r\n * where it's actually used. This service is added to avoid any polution\r\n * of the UI and runtime performance for the ordinary production user.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AsmEnablerService {\r\n  constructor(\r\n    protected location: Location,\r\n    protected winRef: WindowRef,\r\n    protected launchDialogService: LaunchDialogService\r\n  ) {}\r\n\r\n  /**\r\n   * Loads the ASM UI if needed. The ASM UI will be added based on the\r\n   * existence of a URL parameter or previous usage given by local storage.\r\n   */\r\n  load(): void {\r\n    if (this.isEnabled()) {\r\n      this.addUi();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the ASM module is enabled.\r\n   */\r\n  isEnabled(): boolean {\r\n    if (this.isLaunched() && !this.isUsedBefore()) {\r\n      if (this.winRef.localStorage) {\r\n        this.winRef.localStorage.setItem(ASM_ENABLED_LOCAL_STORAGE_KEY, 'true');\r\n      }\r\n    }\r\n    return this.isLaunched() || this.isUsedBefore();\r\n  }\r\n\r\n  /**\r\n   * Indicates whether ASM is launched through the URL,\r\n   * using the asm flag in the URL.\r\n   */\r\n  protected isLaunched(): boolean {\r\n    const params = this.location.path().split('?')[1];\r\n    return params && params.split('&').includes('asm=true');\r\n  }\r\n\r\n  /**\r\n   * Evaluates local storage where we persist the usage of ASM.\r\n   */\r\n  protected isUsedBefore(): boolean {\r\n    return (\r\n      this.winRef.localStorage &&\r\n      this.winRef.localStorage.getItem(ASM_ENABLED_LOCAL_STORAGE_KEY) === 'true'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Adds the ASM UI by using the `cx-storefront` outlet.\r\n   */\r\n  protected addUi(): void {\r\n    this.launchDialogService.launch(LAUNCH_CALLER.ASM);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\r\nimport { PageComponentModule } from '../../cms-structure/page/component/page-component.module';\r\nimport { AsmEnablerService } from './services/asm-enabler.service';\r\n\r\n/**\r\n * The ASM loader module takes care of loading the ASM UI\r\n * only in case there's a reason to do so.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PageComponentModule],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: asmFactory,\r\n      deps: [AsmEnablerService],\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class AsmLoaderModule {}\r\n\r\n/**\r\n *\r\n * We do not like to block the UI, which is why we delgate loading of ASM\r\n * to a real component; the router and state aren't available in an optimized\r\n * way during the APP_INITIALIZER.\r\n */\r\nexport function asmFactory(asmEnablerService: AsmEnablerService) {\r\n  const isReady = () => {\r\n    asmEnablerService.load();\r\n  };\r\n  return isReady;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  AsmAuthService,\r\n  AuthService,\r\n  RoutingService,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AsmComponentService {\r\n  constructor(\r\n    protected authService: AuthService,\r\n    protected asmAuthService: AsmAuthService,\r\n    protected routingService: RoutingService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  logoutCustomerSupportAgentAndCustomer(): void {\r\n    this.authService\r\n      .getUserToken()\r\n      .pipe(take(1))\r\n      .subscribe((token) => {\r\n        if (this.asmAuthService.isCustomerEmulationToken(token)) {\r\n          this.logoutCustomer();\r\n        }\r\n        this.asmAuthService.logoutCustomerSupportAgent();\r\n      });\r\n  }\r\n\r\n  logoutCustomer(): void {\r\n    this.authService.logout();\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  isCustomerEmulationSessionInProgress(): Observable<boolean> {\r\n    return this.authService\r\n      .getUserToken()\r\n      .pipe(\r\n        mergeMap((userToken) =>\r\n          of(this.asmAuthService.isCustomerEmulationToken(userToken))\r\n        )\r\n      );\r\n  }\r\n\r\n  /**\r\n   * We're currently only removing the persisted storage in the browser\r\n   * to ensure the ASM experience isn't loaded on the next visit. There are a few\r\n   * optimsiations we could think of:\r\n   * - drop the `asm` parameter from the URL, in case it's still there\r\n   * - remove the generated UI from the DOM (outlets currently do not support this)\r\n   */\r\n  unload() {\r\n    if (this.winRef.localStorage) {\r\n      this.winRef.localStorage.removeItem(ASM_ENABLED_LOCAL_STORAGE_KEY);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  HostBinding,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  AsmAuthService,\r\n  AsmService,\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  User,\r\n  UserService,\r\n  UserToken,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, take } from 'rxjs/operators';\r\nimport { AsmComponentService } from '../services/asm-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-asm-main-ui',\r\n  templateUrl: './asm-main-ui.component.html',\r\n  styleUrls: ['./asm-main-ui.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AsmMainUiComponent implements OnInit {\r\n  csAgentToken$: Observable<UserToken>;\r\n  csAgentTokenLoading$: Observable<boolean>;\r\n  customer$: Observable<User>;\r\n  isCollapsed$: Observable<boolean>;\r\n\r\n  @HostBinding('class.hidden') disabled = false;\r\n\r\n  private startingCustomerSession = false;\r\n\r\n  constructor(\r\n    protected authService: AuthService,\r\n    protected asmAuthService: AsmAuthService,\r\n    protected userService: UserService,\r\n    protected asmComponentService: AsmComponentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected routingService: RoutingService,\r\n    protected asmService: AsmService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.csAgentToken$ = this.asmAuthService.getCustomerSupportAgentToken();\r\n    this.csAgentTokenLoading$ = this.asmAuthService.getCustomerSupportAgentTokenLoading();\r\n    this.customer$ = this.authService.getUserToken().pipe(\r\n      switchMap((token) => {\r\n        if (token && !!token.access_token) {\r\n          this.handleCustomerSessionStartRedirection(token);\r\n          return this.userService.get();\r\n        } else {\r\n          return of(undefined);\r\n        }\r\n      })\r\n    );\r\n    this.isCollapsed$ = this.asmService\r\n      .getAsmUiState()\r\n      .pipe(map((uiState) => uiState.collapsed));\r\n  }\r\n\r\n  private handleCustomerSessionStartRedirection(token: UserToken): void {\r\n    if (\r\n      this.startingCustomerSession &&\r\n      this.asmAuthService.isCustomerEmulationToken(token)\r\n    ) {\r\n      this.startingCustomerSession = false;\r\n      this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\r\n      this.routingService.go('/');\r\n    }\r\n  }\r\n\r\n  loginCustomerSupportAgent({\r\n    userId,\r\n    password,\r\n  }: {\r\n    userId: string;\r\n    password: string;\r\n  }): void {\r\n    this.asmAuthService.authorizeCustomerSupportAgent(userId, password);\r\n  }\r\n\r\n  logout(): void {\r\n    this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\r\n  }\r\n\r\n  startCustomerEmulationSession({ customerId }: { customerId: string }): void {\r\n    this.asmAuthService\r\n      .getCustomerSupportAgentToken()\r\n      .pipe(take(1))\r\n      .subscribe((customerSupportAgentToken) =>\r\n        this.asmAuthService.startCustomerEmulationSession(\r\n          customerSupportAgentToken,\r\n          customerId\r\n        )\r\n      )\r\n      .unsubscribe();\r\n    this.startingCustomerSession = true;\r\n  }\r\n\r\n  hideUi(): void {\r\n    this.disabled = true;\r\n    this.asmComponentService.unload();\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { AsmConfig, AuthService, RoutingService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { AsmComponentService } from '../services/asm-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-asm-session-timer',\r\n  templateUrl: './asm-session-timer.component.html',\r\n  styleUrls: ['./asm-session-timer.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AsmSessionTimerComponent implements OnInit, OnDestroy {\r\n  private subscriptions = new Subscription();\r\n  private interval: any;\r\n  private maxStartDelayInSeconds = 60000;\r\n  timeLeft: number;\r\n\r\n  constructor(\r\n    private config: AsmConfig,\r\n    private asmComponentService: AsmComponentService,\r\n    private authService: AuthService,\r\n    private routingService: RoutingService,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.timeLeft = this.getTimerStartDelayInSeconds();\r\n    this.interval = setInterval(() => {\r\n      if (this.timeLeft > 0) {\r\n        this.timeLeft--;\r\n      } else {\r\n        clearInterval(this.interval);\r\n        this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\r\n      }\r\n      this.changeDetectorRef.markForCheck();\r\n    }, 1000);\r\n\r\n    this.resetOnNavigate();\r\n    this.resetOnCustomerSessionChange();\r\n  }\r\n\r\n  private resetOnNavigate(): void {\r\n    this.subscriptions.add(\r\n      this.routingService.isNavigating().subscribe((isNavigating) => {\r\n        if (isNavigating) {\r\n          this.resetTimer();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private resetOnCustomerSessionChange(): void {\r\n    this.subscriptions.add(\r\n      this.authService\r\n        .getOccUserId()\r\n        .pipe(distinctUntilChanged())\r\n        .subscribe(() => this.resetTimer())\r\n    );\r\n  }\r\n\r\n  resetTimer(): void {\r\n    if (this.timeLeft > 0) {\r\n      this.timeLeft = this.getTimerStartDelayInSeconds();\r\n    }\r\n  }\r\n\r\n  private getTimerStartDelayInSeconds(): number {\r\n    if (\r\n      this.config.asm.agentSessionTimer.startingDelayInSeconds >\r\n      this.maxStartDelayInSeconds\r\n    ) {\r\n      return this.maxStartDelayInSeconds;\r\n    } else {\r\n      return this.config.asm.agentSessionTimer.startingDelayInSeconds;\r\n    }\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatTimer',\n})\nexport class FormatTimerPipe implements PipeTransform {\n  transform(totalSeconds: number): string {\n    if (totalSeconds < 0) {\n      totalSeconds = 0;\n    }\n    const minutes: number = Math.floor(totalSeconds / 60);\n    const seconds: number = totalSeconds % 60;\n    let zeroPaddedMinutes: string;\n    if (minutes < 10) {\n      zeroPaddedMinutes = ('00' + minutes).slice(-2);\n    } else {\n      zeroPaddedMinutes = minutes + '';\n    }\n    const zeroPaddedSeconds: string = ('00' + seconds).slice(-2);\n    return `${zeroPaddedMinutes}:${zeroPaddedSeconds}`;\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AsmService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-asm-toggle-ui',\r\n  templateUrl: './asm-toggle-ui.component.html',\r\n  styleUrls: ['./asm-toggle-ui.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AsmToggleUiComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n  isCollapsed: boolean;\r\n\r\n  constructor(protected asmService: AsmService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.asmService.getAsmUiState().subscribe((uiState) => {\r\n        this.isCollapsed = uiState.collapsed;\r\n      })\r\n    );\r\n  }\r\n\r\n  toggleUi(): void {\r\n    this.asmService.updateAsmUiState({ collapsed: !this.isCollapsed });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'cx-csagent-login-form',\r\n  templateUrl: './csagent-login-form.component.html',\r\n  styleUrls: ['./csagent-login-form.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CSAgentLoginFormComponent implements OnInit {\r\n  csAgentLoginForm: FormGroup;\r\n\r\n  @Input()\r\n  csAgentTokenLoading = false;\r\n\r\n  @Output()\r\n  submitEvent = new EventEmitter<{ userId: string; password: string }>();\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.csAgentLoginForm = this.fb.group({\r\n      userId: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.csAgentLoginForm.valid) {\r\n      this.submitEvent.emit({\r\n        userId: this.csAgentLoginForm.get('userId').value,\r\n        password: this.csAgentLoginForm.get('password').value,\r\n      });\r\n    } else {\r\n      this.csAgentLoginForm.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { User, UserService } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AsmComponentService } from '../services/asm-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-customer-emulation',\r\n  templateUrl: './customer-emulation.component.html',\r\n  styleUrls: ['./customer-emulation.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CustomerEmulationComponent implements OnInit, OnDestroy {\r\n  customer: User;\r\n  isCustomerEmulationSessionInProgress$: Observable<boolean>;\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    protected asmComponentService: AsmComponentService,\r\n    protected userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.userService.get().subscribe((user) => (this.customer = user))\r\n    );\r\n    this.isCustomerEmulationSessionInProgress$ = this.asmComponentService.isCustomerEmulationSessionInProgress();\r\n  }\r\n\r\n  logoutCustomer() {\r\n    this.asmComponentService.logoutCustomer();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  AsmConfig,\r\n  AsmService,\r\n  CustomerSearchPage,\r\n  User,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-customer-selection',\r\n  templateUrl: './customer-selection.component.html',\r\n  styleUrls: ['./customer-selection.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  // tslint:disable-next-line:no-host-metadata-property\r\n  host: {\r\n    '(document:click)': 'onDocumentClick($event)',\r\n  },\r\n})\r\nexport class CustomerSelectionComponent implements OnInit, OnDestroy {\r\n  customerSelectionForm: FormGroup;\r\n  private subscription = new Subscription();\r\n  searchResultsLoading$: Observable<boolean>;\r\n  searchResults: Observable<CustomerSearchPage>;\r\n  selectedCustomer: User;\r\n\r\n  @Output()\r\n  submitEvent = new EventEmitter<{ customerId: string }>();\r\n\r\n  @ViewChild('resultList') resultList: ElementRef;\r\n  @ViewChild('searchTerm') searchTerm: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private asmService: AsmService,\r\n    private config: AsmConfig\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.customerSelectionForm = this.fb.group({\r\n      searchTerm: ['', Validators.required],\r\n    });\r\n    this.asmService.customerSearchReset();\r\n    this.searchResultsLoading$ = this.asmService.getCustomerSearchResultsLoading();\r\n    this.searchResults = this.asmService.getCustomerSearchResults();\r\n\r\n    this.subscription.add(\r\n      this.customerSelectionForm.controls.searchTerm.valueChanges\r\n        .pipe(debounceTime(300))\r\n        .subscribe((searchTermValue) => {\r\n          this.handleSearchTerm(searchTermValue);\r\n        })\r\n    );\r\n  }\r\n\r\n  private handleSearchTerm(searchTermValue: string) {\r\n    if (\r\n      Boolean(this.selectedCustomer) &&\r\n      searchTermValue !== this.selectedCustomer.name\r\n    ) {\r\n      this.selectedCustomer = undefined;\r\n    }\r\n    if (Boolean(this.selectedCustomer)) {\r\n      return;\r\n    }\r\n    this.asmService.customerSearchReset();\r\n    if (searchTermValue.trim().length >= 3) {\r\n      this.asmService.customerSearch({\r\n        query: searchTermValue,\r\n        pageSize: this.config.asm.customerSearch.maxResults,\r\n      });\r\n    }\r\n  }\r\n\r\n  selectCustomerFromList(customer: User) {\r\n    this.selectedCustomer = customer;\r\n    this.customerSelectionForm.controls.searchTerm.setValue(\r\n      this.selectedCustomer.name\r\n    );\r\n    this.asmService.customerSearchReset();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.customerSelectionForm.valid && Boolean(this.selectedCustomer)) {\r\n      this.submitEvent.emit({ customerId: this.selectedCustomer.customerId });\r\n    } else {\r\n      this.customerSelectionForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onDocumentClick(event) {\r\n    if (Boolean(this.resultList)) {\r\n      if (\r\n        this.resultList.nativeElement.contains(event.target) ||\r\n        this.searchTerm.nativeElement.contains(event.target)\r\n      ) {\r\n        return;\r\n      } else {\r\n        this.asmService.customerSearchReset();\r\n      }\r\n    }\r\n  }\r\n\r\n  closeResults() {\r\n    this.asmService.customerSearchReset();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n    this.asmService.customerSearchReset();\r\n  }\r\n}\r\n","import { LayoutConfig } from '../../layout/config/layout-config';\r\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\r\n\r\nexport const defaultAsmLayoutConfig: LayoutConfig = {\r\n  launch: {\r\n    ASM: {\r\n      outlet: 'cx-storefront',\r\n      component: AsmMainUiComponent,\r\n    },\r\n  },\r\n};\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AsmModule as AsmCoreModule,\r\n  I18nModule,\r\n  provideConfig,\r\n} from '@spartacus/core';\r\nimport { FormErrorsModule } from '../../shared/index';\r\nimport { AsmLoaderModule } from './asm-loader.module';\r\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\r\nimport { AsmSessionTimerComponent } from './asm-session-timer/asm-session-timer.component';\r\nimport { FormatTimerPipe } from './asm-session-timer/format-timer.pipe';\r\nimport { AsmToggleUiComponent } from './asm-toggle-ui/asm-toggle-ui.component';\r\nimport { CSAgentLoginFormComponent } from './csagent-login-form/csagent-login-form.component';\r\nimport { CustomerEmulationComponent } from './customer-emulation/customer-emulation.component';\r\nimport { CustomerSelectionComponent } from './customer-selection/customer-selection.component';\r\nimport { defaultAsmLayoutConfig } from './default-asm-layout.config';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    I18nModule,\r\n    AsmCoreModule.forRoot(),\r\n    AsmLoaderModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [\r\n    AsmMainUiComponent,\r\n    CSAgentLoginFormComponent,\r\n    CustomerSelectionComponent,\r\n    AsmSessionTimerComponent,\r\n    FormatTimerPipe,\r\n    CustomerEmulationComponent,\r\n    AsmToggleUiComponent,\r\n  ],\r\n  providers: [provideConfig(defaultAsmLayoutConfig)],\r\n  entryComponents: [AsmMainUiComponent],\r\n})\r\nexport class AsmModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Product,\r\n  ProductScope,\r\n  ProductService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CurrentProductService {\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private productService: ProductService\r\n  ) {}\r\n\r\n  protected readonly DEFAULT_PRODUCT_SCOPE = ProductScope.DETAILS;\r\n\r\n  /**\r\n   * Will emit current product or null, if there is no current product (i.e. we are not on PDP)\r\n   *\r\n   * @param scopes\r\n   */\r\n  getProduct(\r\n    scopes?: (ProductScope | string)[] | ProductScope | string\r\n  ): Observable<Product | null> {\r\n    return this.routingService.getRouterState().pipe(\r\n      map((state) => state.state.params['productCode']),\r\n      switchMap((productCode: string) => {\r\n        return productCode\r\n          ? this.productService.get(\r\n              productCode,\r\n              scopes || this.DEFAULT_PRODUCT_SCOPE\r\n            )\r\n          : of(null);\r\n      }),\r\n      filter((x) => x !== undefined),\r\n      distinctUntilChanged()\r\n    );\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport {\r\n  Cart,\r\n  ActiveCartService,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, startWith, switchMap, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\r\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\n@Component({\r\n  selector: 'cx-added-to-cart-dialog',\r\n  templateUrl: './added-to-cart-dialog.component.html',\r\n})\r\nexport class AddedToCartDialogComponent implements OnInit {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  entry$: Observable<OrderEntry>;\r\n  cart$: Observable<Cart>;\r\n  loaded$: Observable<boolean>;\r\n  increment: boolean;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  quantity = 0;\r\n  modalIsOpen = false;\r\n\r\n  @ViewChild('dialog', { read: ElementRef })\r\n  dialog: ElementRef;\r\n\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  private quantityControl$: Observable<FormControl>;\r\n\r\n  constructor(\r\n    protected modalService: ModalService,\r\n    protected cartService: ActiveCartService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n  /**\r\n   * Returns an observable formControl with the quantity of the cartEntry,\r\n   * but also updates the entry in case of a changed value.\r\n   * The quantity can be set to zero in order to remove the entry.\r\n   */\r\n  getQuantityControl(): Observable<FormControl> {\r\n    if (!this.quantityControl$) {\r\n      this.quantityControl$ = this.entry$.pipe(\r\n        filter((e) => !!e),\r\n        map((entry) => this.getFormControl(entry)),\r\n        switchMap(() =>\r\n          this.form.valueChanges.pipe(\r\n            // tslint:disable-next-line:deprecation\r\n            startWith(null),\r\n            tap((valueChange) => {\r\n              if (valueChange) {\r\n                this.cartService.updateEntry(\r\n                  valueChange.entryNumber,\r\n                  valueChange.quantity\r\n                );\r\n                if (valueChange.quantity === 0) {\r\n                  this.dismissModal('Removed');\r\n                }\r\n              } else {\r\n                this.form.markAsPristine();\r\n              }\r\n            })\r\n          )\r\n        ),\r\n        map(() => <FormControl>this.form.get('quantity'))\r\n      );\r\n    }\r\n    return this.quantityControl$;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  private getFormControl(entry: OrderEntry): FormControl {\r\n    if (!this.form.get('quantity')) {\r\n      const quantity = new FormControl(entry.quantity, { updateOn: 'blur' });\r\n      this.form.addControl('quantity', quantity);\r\n\r\n      const entryNumber = new FormControl(entry.entryNumber);\r\n      this.form.addControl('entryNumber', entryNumber);\r\n    }\r\n    return <FormControl>this.form.get('quantity');\r\n  }\r\n\r\n  dismissModal(reason?: any): void {\r\n    this.modalService.dismissActiveModal(reason);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActiveCartService, OrderEntry, Product } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ModalRef } from '../../../shared/components/modal/modal-ref';\r\nimport { ModalService } from '../../../shared/components/modal/modal.service';\r\nimport { CurrentProductService } from '../../product/current-product.service';\r\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\r\n\r\n@Component({\r\n  selector: 'cx-add-to-cart',\r\n  templateUrl: './add-to-cart.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddToCartComponent implements OnInit, OnDestroy {\r\n  @Input() productCode: string;\r\n  @Input() showQuantity = true;\r\n\r\n  /**\r\n   * As long as we do not support #5026, we require product input, as we need\r\n   *  a reference to the product model to fetch the stock data.\r\n   */\r\n  @Input() product: Product;\r\n\r\n  maxQuantity: number;\r\n  modalRef: ModalRef;\r\n\r\n  hasStock = false;\r\n  quantity = 1;\r\n  increment = false;\r\n  cartEntry$: Observable<OrderEntry>;\r\n\r\n  subscription: Subscription;\r\n\r\n  addToCartForm = new FormGroup({\r\n    quantity: new FormControl(1),\r\n  });\r\n\r\n  constructor(\r\n    protected modalService: ModalService,\r\n    protected currentProductService: CurrentProductService,\r\n    private cd: ChangeDetectorRef,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.product) {\r\n      this.productCode = this.product.code;\r\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\r\n      this.setStockInfo(this.product);\r\n      this.cd.markForCheck();\r\n    } else if (this.productCode) {\r\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\r\n      // force hasStock and quantity for the time being, as we do not have more info:\r\n      this.quantity = 1;\r\n      this.hasStock = true;\r\n      this.cd.markForCheck();\r\n    } else {\r\n      this.subscription = this.currentProductService\r\n        .getProduct()\r\n        .pipe(filter(Boolean))\r\n        .subscribe((product: Product) => {\r\n          this.productCode = product.code;\r\n          this.setStockInfo(product);\r\n          this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\r\n          this.cd.markForCheck();\r\n        });\r\n    }\r\n  }\r\n\r\n  private setStockInfo(product: Product): void {\r\n    this.quantity = 1;\r\n    this.hasStock =\r\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\r\n    if (this.hasStock && product.stock.stockLevel) {\r\n      this.maxQuantity = product.stock.stockLevel;\r\n    }\r\n  }\r\n\r\n  updateCount(value: number): void {\r\n    this.quantity = value;\r\n  }\r\n\r\n  addToCart() {\r\n    const quantity = this.addToCartForm.get('quantity').value;\r\n    if (!this.productCode || quantity <= 0) {\r\n      return;\r\n    }\r\n    // check item is already present in the cart\r\n    // so modal will have proper header text displayed\r\n    this.activeCartService\r\n      .getEntry(this.productCode)\r\n      .subscribe((entry) => {\r\n        if (entry) {\r\n          this.increment = true;\r\n        }\r\n        this.openModal();\r\n        this.activeCartService.addEntry(this.productCode, quantity);\r\n        this.increment = false;\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  private openModal() {\r\n    let modalInstance: any;\r\n    this.modalRef = this.modalService.open(AddedToCartDialogComponent, {\r\n      centered: true,\r\n      size: 'lg',\r\n    });\r\n\r\n    modalInstance = this.modalRef.componentInstance;\r\n    modalInstance.entry$ = this.cartEntry$;\r\n    modalInstance.cart$ = this.activeCartService.getActive();\r\n    modalInstance.loaded$ = this.activeCartService.isStable();\r\n    modalInstance.quantity = this.quantity;\r\n    modalInstance.increment = this.increment;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PromotionsComponent } from './promotions.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PromotionsComponent],\r\n  exports: [PromotionsComponent],\r\n})\r\nexport class PromotionsModule {}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Voucher, CartVoucherService } from '@spartacus/core';\r\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-applied-coupons',\r\n  templateUrl: './applied-coupons.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppliedCouponsComponent {\r\n  @Input()\r\n  vouchers: Voucher[];\r\n  @Input()\r\n  cartIsLoading = false;\r\n  @Input()\r\n  isReadOnly = false;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(private cartVoucherService: CartVoucherService) {}\r\n\r\n  public get sortedVouchers(): Voucher[] {\r\n    this.vouchers = this.vouchers || [];\r\n    return this.vouchers.slice().sort((a, b) => {\r\n      return a.code.localeCompare(b.code);\r\n    });\r\n  }\r\n\r\n  removeVoucher(voucherId: string) {\r\n    this.cartVoucherService.removeVoucher(voucherId);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  CartVoucherService,\r\n  CustomerCoupon,\r\n  CustomerCouponSearchResult,\r\n  CustomerCouponService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-cart-coupon',\r\n  templateUrl: './cart-coupon.component.html',\r\n})\r\nexport class CartCouponComponent implements OnInit, OnDestroy {\r\n  MAX_CUSTOMER_COUPON_PAGE = 100;\r\n  couponForm: FormGroup;\r\n  cartIsLoading$: Observable<boolean>;\r\n  cart$: Observable<Cart>;\r\n  cartId: string;\r\n  applicableCoupons: CustomerCoupon[];\r\n\r\n  private ignoreCloseEvent = false;\r\n\r\n  private subscription = new Subscription();\r\n\r\n  couponBoxIsActive = false;\r\n\r\n  constructor(\r\n    protected cartVoucherService: CartVoucherService,\r\n    protected formBuilder: FormBuilder,\r\n    protected customerCouponService: CustomerCouponService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.customerCouponService) {\r\n      this.customerCouponService.loadCustomerCoupons(\r\n        this.MAX_CUSTOMER_COUPON_PAGE\r\n      );\r\n    }\r\n\r\n    this.cart$ = combineLatest([\r\n      this.activeCartService.getActive(),\r\n      this.activeCartService.getActiveCartId(),\r\n      this.customerCouponService.getCustomerCoupons(\r\n        this.MAX_CUSTOMER_COUPON_PAGE\r\n      ),\r\n    ]).pipe(\r\n      tap(\r\n        ([cart, activeCardId, customerCoupons]: [\r\n          Cart,\r\n          string,\r\n          CustomerCouponSearchResult\r\n        ]) => {\r\n          this.cartId = activeCardId;\r\n          this.getApplicableCustomerCoupons(cart, customerCoupons.coupons);\r\n        }\r\n      ),\r\n      map(([cart]: [Cart, string, CustomerCouponSearchResult]) => cart)\r\n    );\r\n\r\n    this.cartIsLoading$ = this.activeCartService\r\n      .isStable()\r\n      .pipe(map((loaded) => !loaded));\r\n\r\n    this.cartVoucherService.resetAddVoucherProcessingState();\r\n\r\n    this.couponForm = this.formBuilder.group({\r\n      couponCode: ['', [Validators.required]],\r\n    });\r\n\r\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\r\n    this.subscription.add(\r\n      this.cartVoucherService\r\n        .getAddVoucherResultSuccess()\r\n        .subscribe((success) => {\r\n          this.onSuccess(success);\r\n        })\r\n    );\r\n\r\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\r\n    this.subscription.add(\r\n      this.cartVoucherService.getAddVoucherResultError().subscribe((error) => {\r\n        this.onError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  protected onError(error: boolean) {\r\n    if (error) {\r\n      this.customerCouponService.loadCustomerCoupons(\r\n        this.MAX_CUSTOMER_COUPON_PAGE\r\n      );\r\n      this.cartVoucherService.resetAddVoucherProcessingState();\r\n    }\r\n  }\r\n\r\n  onSuccess(success: boolean) {\r\n    if (success) {\r\n      this.couponForm.reset();\r\n      this.cartVoucherService.resetAddVoucherProcessingState();\r\n    }\r\n  }\r\n\r\n  protected getApplicableCustomerCoupons(\r\n    cart: Cart,\r\n    coupons: CustomerCoupon[]\r\n  ): void {\r\n    this.applicableCoupons = coupons || [];\r\n    if (cart.appliedVouchers) {\r\n      cart.appliedVouchers.forEach((appliedVoucher) => {\r\n        this.applicableCoupons = this.applicableCoupons.filter(\r\n          (coupon) => coupon.couponId !== appliedVoucher.code\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  applyVoucher(): void {\r\n    if (this.couponForm.valid) {\r\n      this.cartVoucherService.addVoucher(\r\n        this.couponForm.value.couponCode,\r\n        this.cartId\r\n      );\r\n    } else {\r\n      this.couponForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  applyCustomerCoupon(couponId: string): void {\r\n    this.cartVoucherService.addVoucher(couponId, this.cartId);\r\n    this.couponBoxIsActive = false;\r\n  }\r\n\r\n  close(event: UIEvent): void {\r\n    if (!this.ignoreCloseEvent) {\r\n      this.couponBoxIsActive = false;\r\n      if (event && event.target) {\r\n        (<HTMLElement>event.target).blur();\r\n      }\r\n    }\r\n    this.ignoreCloseEvent = false;\r\n  }\r\n\r\n  disableClose(): void {\r\n    this.ignoreCloseEvent = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.cartVoucherService.resetAddVoucherProcessingState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { AppliedCouponsComponent } from './applied-coupons/applied-coupons.component';\r\nimport { CartCouponComponent } from './cart-coupon.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  declarations: [CartCouponComponent, AppliedCouponsComponent],\r\n  exports: [CartCouponComponent, AppliedCouponsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    I18nModule,\r\n    IconModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CartApplyCouponComponent: {\r\n          component: CartCouponComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n\r\n  entryComponents: [CartCouponComponent],\r\n})\r\nexport class CartCouponModule {}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport {\r\n  ActiveCartService,\r\n  ConsignmentEntry,\r\n  PromotionLocation,\r\n  SelectiveCartService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport {\r\n  CartItemComponentOptions,\r\n  Item,\r\n} from '../cart-item/cart-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-cart-item-list',\r\n  templateUrl: './cart-item-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CartItemListComponent {\r\n  @Input() readonly = false;\r\n\r\n  @Input() hasHeader = true;\r\n\r\n  @Input() options: CartItemComponentOptions = {\r\n    isSaveForLater: false,\r\n    optionalBtn: null,\r\n  };\r\n\r\n  private _items: Item[] = [];\r\n  form: FormGroup;\r\n\r\n  @Input('items')\r\n  // TODO: currently we're getting a new array of items if the cart changes.\r\n  // pretty annoying as it forces a repaint on the screen,\r\n  // which is noticable in the UI.\r\n  set items(items: Item[]) {\r\n    this.resolveItems(items);\r\n    this.createForm();\r\n  }\r\n  get items(): Item[] {\r\n    return this._items;\r\n  }\r\n\r\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  @Input('cartIsLoading') set setLoading(value: boolean) {\r\n    if (!this.readonly) {\r\n      // Whenver the cart is loading, we disable the complete form\r\n      // to avoid any user interaction with the cart.\r\n      value\r\n        ? this.form.disable({ emitEvent: false })\r\n        : this.form.enable({ emitEvent: false });\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected activeCartService: ActiveCartService,\r\n    protected selectiveCartService: SelectiveCartService\r\n  ) {}\r\n\r\n  /**\r\n   * The items we're getting form the input do not have a consistent model.\r\n   * In case of a `consignmentEntry`, we need to normalize the data from the orderEntry.\r\n   */\r\n  private resolveItems(items: Item[]): void {\r\n    if (items.every((item) => item.hasOwnProperty('orderEntry'))) {\r\n      this._items = items.map((consignmentEntry) => {\r\n        const entry = Object.assign(\r\n          {},\r\n          (consignmentEntry as ConsignmentEntry).orderEntry\r\n        );\r\n        entry.quantity = consignmentEntry.quantity;\r\n        return entry;\r\n      });\r\n    } else {\r\n      this._items = items;\r\n    }\r\n  }\r\n\r\n  private createForm(): void {\r\n    this.form = new FormGroup({});\r\n    this._items.forEach((item) => {\r\n      const { code } = item.product;\r\n      const group = new FormGroup({\r\n        entryNumber: new FormControl((<any>item).entryNumber),\r\n        quantity: new FormControl(item.quantity, { updateOn: 'blur' }),\r\n      });\r\n      if (!item.updateable || this.readonly) {\r\n        group.disable();\r\n      }\r\n      this.form.addControl(code, group);\r\n    });\r\n  }\r\n\r\n  removeEntry(item: Item): void {\r\n    if (this.selectiveCartService && this.options.isSaveForLater) {\r\n      this.selectiveCartService.removeEntry(item);\r\n    } else {\r\n      this.activeCartService.removeEntry(item);\r\n    }\r\n    delete this.form.controls[item.product.code];\r\n  }\r\n\r\n  getControl(item: Item): Observable<FormGroup> {\r\n    return this.form.get(item.product.code).valueChanges.pipe(\r\n      // tslint:disable-next-line:deprecation\r\n      startWith(null),\r\n      map((value) => {\r\n        if (value && this.selectiveCartService && this.options.isSaveForLater) {\r\n          this.selectiveCartService.updateEntry(\r\n            value.entryNumber,\r\n            value.quantity\r\n          );\r\n        } else if (value) {\r\n          this.activeCartService.updateEntry(value.entryNumber, value.quantity);\r\n        }\r\n      }),\r\n      map(() => <FormGroup>this.form.get(item.product.code))\r\n    );\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { PromotionLocation, PromotionResult } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\nexport interface Item {\r\n  product?: any;\r\n  quantity?: any;\r\n  basePrice?: any;\r\n  totalPrice?: any;\r\n  updateable?: boolean;\r\n}\r\n\r\nexport interface CartItemComponentOptions {\r\n  isSaveForLater?: boolean;\r\n  optionalBtn?: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-cart-item',\r\n  templateUrl: './cart-item.component.html',\r\n})\r\nexport class CartItemComponent implements OnInit {\r\n  @Input() compact = false;\r\n  @Input() item: Item;\r\n  @Input() readonly = false;\r\n  @Input() quantityControl: FormControl;\r\n\r\n  @Output() view = new EventEmitter<any>();\r\n\r\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  // TODO: evaluate whether this is generic enough\r\n  @Input() options: CartItemComponentOptions = {\r\n    isSaveForLater: false,\r\n    optionalBtn: null,\r\n  };\r\n\r\n  appliedProductPromotions$: Observable<PromotionResult[]>;\r\n\r\n  constructor(protected promotionService: PromotionService) {}\r\n\r\n  ngOnInit() {\r\n    this.appliedProductPromotions$ = this.promotionService.getProductPromotionForEntry(\r\n      this.item,\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  isProductOutOfStock(product: any) {\r\n    // TODO Move stocklevelstatuses across the app to an enum\r\n    return (\r\n      product &&\r\n      product.stock &&\r\n      product.stock.stockLevelStatus === 'outOfStock'\r\n    );\r\n  }\r\n\r\n  removeItem() {\r\n    this.quantityControl.setValue(0);\r\n    this.quantityControl.markAsDirty();\r\n  }\r\n\r\n  viewItem() {\r\n    this.view.emit();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\nimport { Cart } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-summary',\n  templateUrl: './order-summary.component.html',\n})\nexport class OrderSummaryComponent {\n  @Input()\n  cart: Cart;\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FeaturesConfigModule, I18nModule, UrlModule } from '@spartacus/core';\r\nimport { ItemCounterModule } from '../../../shared/components/item-counter/item-counter.module';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\r\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\r\nimport { CartItemListComponent } from './cart-item-list/cart-item-list.component';\r\nimport { CartItemComponent } from './cart-item/cart-item.component';\r\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    CartCouponModule,\r\n    ReactiveFormsModule,\r\n    UrlModule,\r\n    NgbModule,\r\n    PromotionsModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    ItemCounterModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  declarations: [\r\n    CartItemComponent,\r\n    OrderSummaryComponent,\r\n    CartItemListComponent,\r\n  ],\r\n  exports: [CartItemComponent, CartItemListComponent, OrderSummaryComponent],\r\n})\r\nexport class CartSharedModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { ItemCounterModule, SpinnerModule } from '../../../shared/index';\r\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\r\nimport { CartSharedModule } from './../cart-shared/cart-shared.module';\r\nimport { AddToCartComponent } from './add-to-cart.component';\r\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    CartSharedModule,\r\n    RouterModule,\r\n    SpinnerModule,\r\n    PromotionsModule,\r\n    FeaturesConfigModule,\r\n    UrlModule,\r\n    IconModule,\r\n    I18nModule,\r\n    ItemCounterModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductAddToCartComponent: {\r\n          component: AddToCartComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [AddToCartComponent, AddedToCartDialogComponent],\r\n  entryComponents: [AddToCartComponent, AddedToCartDialogComponent],\r\n  exports: [AddToCartComponent, AddedToCartDialogComponent],\r\n})\r\nexport class AddToCartModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  AuthService,\r\n  Cart,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n  RoutingService,\r\n  SelectiveCartService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { PromotionService } from '../../../shared/services/promotion/promotion.service';\r\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-cart-details',\r\n  templateUrl: './cart-details.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CartDetailsComponent implements OnInit {\r\n  cart$: Observable<Cart>;\r\n  entries$: Observable<OrderEntry[]>;\r\n  cartLoaded$: Observable<boolean>;\r\n  loggedIn = false;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n  promotions$: Observable<PromotionResult[]>;\r\n  selectiveCartEnabled: boolean;\r\n\r\n  constructor(\r\n    protected activeCartService: ActiveCartService,\r\n    protected promotionService: PromotionService,\r\n    protected selectiveCartService: SelectiveCartService,\r\n    protected authService: AuthService,\r\n    protected routingService: RoutingService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.promotions$ = this.promotionService.getOrderPromotionsFromCart();\r\n\r\n    this.entries$ = this.activeCartService\r\n      .getEntries()\r\n      .pipe(filter((entries) => entries.length > 0));\r\n\r\n    this.selectiveCartEnabled = this.selectiveCartService.isEnabled();\r\n\r\n    this.cartLoaded$ = combineLatest([\r\n      this.activeCartService.isStable(),\r\n      this.selectiveCartEnabled\r\n        ? this.selectiveCartService.getLoaded()\r\n        : of(false),\r\n      this.authService.isUserLoggedIn(),\r\n    ]).pipe(\r\n      tap(([, , loggedIn]) => (this.loggedIn = loggedIn)),\r\n      map(([cartLoaded, sflLoaded, loggedIn]) =>\r\n        loggedIn && this.selectiveCartEnabled\r\n          ? cartLoaded && sflLoaded\r\n          : cartLoaded\r\n      )\r\n    );\r\n\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  saveForLater(item: Item) {\r\n    if (this.loggedIn) {\r\n      this.activeCartService.removeEntry(item);\r\n      this.selectiveCartService.addEntry(item.product.code, item.quantity);\r\n    } else {\r\n      this.routingService.go({ cxRoute: 'login' });\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\r\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\r\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\r\nimport { CartDetailsComponent } from './cart-details.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CartSharedModule,\r\n    CommonModule,\r\n    CartCouponModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    PromotionsModule,\r\n    FeaturesConfigModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CartComponent: {\r\n          component: CartDetailsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CartDetailsComponent],\r\n  exports: [CartDetailsComponent],\r\n  entryComponents: [CartDetailsComponent],\r\n})\r\nexport class CartDetailsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { ActiveCartService, Cart, RoutingService } from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CartNotEmptyGuard implements CanActivate {\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return combineLatest([\r\n      this.activeCartService.getActive(),\r\n      this.activeCartService.isStable(),\r\n    ]).pipe(\r\n      filter(([_, loaded]) => loaded),\r\n      map(([cart]) => {\r\n        if (this.isEmpty(cart)) {\r\n          this.routingService.go({ cxRoute: 'home' });\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  private isEmpty(cart: Cart): boolean {\r\n    return cart && !cart.totalItems;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActiveCartService, Cart, SelectiveCartService } from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PageLayoutHandler } from '../../cms-structure/page/page-layout/page-layout-handler';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CartPageLayoutHandler implements PageLayoutHandler {\r\n  constructor(\r\n    protected activeCartService: ActiveCartService,\r\n    protected selectiveCartService: SelectiveCartService\r\n  ) {}\r\n\r\n  handle(\r\n    slots$: Observable<string[]>,\r\n    pageTemplate?: string,\r\n    section?: string\r\n  ) {\r\n    if (pageTemplate === 'CartPageTemplate' && !section) {\r\n      return combineLatest([\r\n        slots$,\r\n        this.activeCartService.getActive(),\r\n        this.selectiveCartService.isEnabled()\r\n          ? this.selectiveCartService.getCart()\r\n          : of({} as Cart),\r\n        this.activeCartService.getLoading(),\r\n      ]).pipe(\r\n        map(([slots, cart, selectiveCart, loadingCart]) => {\r\n          const exclude = (arr, args) =>\r\n            arr.filter((item) => args.every((arg) => arg !== item));\r\n          return Object.keys(cart).length === 0 && loadingCart\r\n            ? exclude(slots, [\r\n                'TopContent',\r\n                'CenterRightContentSlot',\r\n                'EmptyCartMiddleContent',\r\n              ])\r\n            : cart.totalItems\r\n            ? exclude(slots, ['EmptyCartMiddleContent'])\r\n            : selectiveCart.totalItems\r\n            ? exclude(slots, [\r\n                'EmptyCartMiddleContent',\r\n                'CenterRightContentSlot',\r\n              ])\r\n            : exclude(slots, ['TopContent', 'CenterRightContentSlot']);\r\n        })\r\n      );\r\n    }\r\n    return slots$;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActiveCartService, Cart, OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-cart-totals',\r\n  templateUrl: './cart-totals.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CartTotalsComponent implements OnInit {\r\n  cart$: Observable<Cart>;\r\n  entries$: Observable<OrderEntry[]>;\r\n\r\n  constructor(protected activeCartService: ActiveCartService) {}\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.entries$ = this.activeCartService\r\n      .getEntries()\r\n      .pipe(filter((entries) => entries.length > 0));\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\r\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\r\nimport { CartTotalsComponent } from './cart-totals.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    CartSharedModule,\r\n    I18nModule,\r\n    CartCouponModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CartTotalsComponent: {\r\n          component: CartTotalsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CartTotalsComponent],\r\n  exports: [CartTotalsComponent],\r\n  entryComponents: [CartTotalsComponent],\r\n})\r\nexport class CartTotalsModule {}\r\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler[]>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActiveCartService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, startWith } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-mini-cart',\r\n  templateUrl: './mini-cart.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MiniCartComponent {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  quantity$: Observable<number> = this.activeCartService.getActive().pipe(\r\n    startWith({ deliveryItemsQuantity: 0 }),\r\n    map((cart) => cart.deliveryItemsQuantity || 0)\r\n  );\r\n\r\n  total$: Observable<string> = this.activeCartService.getActive().pipe(\r\n    filter((cart) => !!cart.totalPrice),\r\n    map((cart) => cart.totalPrice.formattedValue)\r\n  );\r\n\r\n  constructor(protected activeCartService: ActiveCartService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { MiniCartComponent } from './mini-cart.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, UrlModule, IconModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        MiniCartComponent: {\r\n          component: MiniCartComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [MiniCartComponent],\r\n  exports: [MiniCartComponent],\r\n  entryComponents: [MiniCartComponent],\r\n})\r\nexport class MiniCartModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport {\r\n  AuthService,\r\n  OrderEntry,\r\n  Product,\r\n  WishListService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\nimport { CurrentProductService } from '../../product/current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-add-to-wishlist',\r\n  templateUrl: './add-to-wish-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddToWishListComponent {\r\n  product$: Observable<Product> = this.currentProductService.getProduct().pipe(\r\n    filter((product) => Boolean(product)),\r\n    tap((product) => this.setStockInfo(product))\r\n  );\r\n\r\n  wishListEntries$: Observable<\r\n    OrderEntry[]\r\n  > = this.wishListService.getWishList().pipe(\r\n    filter((wishlist) => Boolean(wishlist)),\r\n    map((wishList) => wishList.entries)\r\n  );\r\n\r\n  userLoggedIn$: Observable<boolean> = this.authService.isUserLoggedIn();\r\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\r\n\r\n  hasStock = false;\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(\r\n    protected wishListService: WishListService,\r\n    protected currentProductService: CurrentProductService,\r\n    protected authService: AuthService\r\n  ) {}\r\n\r\n  add(product: Product): void {\r\n    this.wishListService.addEntry(product.code);\r\n  }\r\n\r\n  remove(entry: OrderEntry): void {\r\n    this.wishListService.removeEntry(entry);\r\n  }\r\n\r\n  getProductInWishList(product: Product, entries: OrderEntry[]): OrderEntry {\r\n    const item = entries.find((entry) => entry.product.code === product.code);\r\n    return item;\r\n  }\r\n\r\n  private setStockInfo(product: Product): void {\r\n    this.hasStock =\r\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { AddToWishListComponent } from './add-to-wish-list.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, IconModule, RouterModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AddToWishListComponent: {\r\n          component: AddToWishListComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [AddToWishListComponent],\r\n  entryComponents: [AddToWishListComponent],\r\n  exports: [AddToWishListComponent],\r\n})\r\nexport class AddToWishListModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  CmsParagraphComponent,\r\n  CmsService,\r\n  OrderEntry,\r\n  SelectiveCartService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-save-for-later',\r\n  templateUrl: './save-for-later.component.html',\r\n})\r\nexport class SaveForLaterComponent implements OnInit {\r\n  saveForLater$: Observable<Cart>;\r\n  cart$: Observable<Cart>;\r\n  entries$: Observable<OrderEntry[]>;\r\n  cartLoaded$: Observable<boolean>;\r\n  data$: Observable<CmsParagraphComponent>;\r\n  isCartEmpty$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected cmsService: CmsService,\r\n    protected cartService: ActiveCartService,\r\n    protected selectiveCartService: SelectiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isCartEmpty$ = this.cartService\r\n      .getActive()\r\n      .pipe(map((cart) => !(cart && cart.totalItems && cart.totalItems > 0)));\r\n    this.saveForLater$ = this.selectiveCartService.getCart();\r\n    this.entries$ = this.selectiveCartService\r\n      .getEntries()\r\n      .pipe(filter((entries) => entries.length > 0));\r\n    this.cartLoaded$ = combineLatest([\r\n      this.cartService.isStable(),\r\n      this.selectiveCartService.getLoaded(),\r\n    ]).pipe(map(([cartLoaded, sflLoaded]) => cartLoaded && sflLoaded));\r\n    this.data$ = this.cmsService.getComponentData(\r\n      'EmptyCartParagraphComponent'\r\n    );\r\n  }\r\n\r\n  moveToCart(item: Item) {\r\n    this.selectiveCartService.removeEntry(item);\r\n    this.cartService.addEntry(item.product.code, item.quantity);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\r\nimport { SaveForLaterComponent } from './save-for-later.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, CartSharedModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\r\n      cmsComponents: {\r\n        SaveForLaterComponent: {\r\n          component: SaveForLaterComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [SaveForLaterComponent],\r\n  exports: [SaveForLaterComponent],\r\n  entryComponents: [SaveForLaterComponent],\r\n})\r\nexport class SaveForLaterModule {}\r\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartModule } from '@spartacus/core';\nimport { PAGE_LAYOUT_HANDLER } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { AddToCartModule } from './add-to-cart/add-to-cart.module';\nimport { CartDetailsModule } from './cart-details/cart-details.module';\nimport { CartPageLayoutHandler } from './cart-page-layout-handler';\nimport { CartSharedModule } from './cart-shared/cart-shared.module';\nimport { CartTotalsModule } from './cart-totals/cart-totals.module';\nimport { MiniCartModule } from './mini-cart/mini-cart.module';\nimport { AddToWishListModule } from './add-to-wishlist/add-to-wish-list.module';\nimport { SaveForLaterModule } from './save-for-later/save-for-later.module';\n@NgModule({\n  imports: [\n    NgbModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    SaveForLaterModule,\n  ],\n  exports: [\n    AddToWishListModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    AddToCartModule,\n    MiniCartModule,\n    CartModule,\n    SaveForLaterModule,\n  ],\n  declarations: [],\n  providers: [\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useExisting: CartPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CartComponentModule {}\n","export enum CheckoutStepType {\n  SHIPPING_ADDRESS = 'shippingAddress',\n  DELIVERY_MODE = 'deliveryMode',\n  PAYMENT_DETAILS = 'paymentDetails',\n  REVIEW_ORDER = 'reviewOrder',\n}\n\nexport interface CheckoutStep {\n  id: string;\n  name: string;\n  routeName: string;\n  type: Array<CheckoutStepType>;\n}\n","import { CheckoutStep } from '../model/checkout-step.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\nexport enum DeliveryModePreferences {\r\n  FREE = 'FREE',\r\n  LEAST_EXPENSIVE = 'LEAST_EXPENSIVE', // but not free\r\n  MOST_EXPENSIVE = 'MOST_EXPENSIVE',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class CheckoutConfig {\r\n  checkout?: {\r\n    /**\r\n     * Set checkout steps as ordered array of pages.\r\n     */\r\n    steps?: Array<CheckoutStep>;\r\n    /**\r\n     * Allow for express checkout when default shipping method and payment method are available.\r\n     */\r\n    express?: boolean;\r\n    /**\r\n     * Default delivery mode for i.a. express checkout. Set preferences in order with general preferences (eg. DeliveryModePreferences.LEAST_EXPENSIVE) or specific delivery codes.\r\n     */\r\n    defaultDeliveryMode?: Array<DeliveryModePreferences | string>;\r\n    /**\r\n     * Allow for guest checkout.\r\n     */\r\n    guest?: boolean;\r\n  };\r\n}\r\n","import { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfig, DeliveryModePreferences } from './checkout-config';\n\nexport const defaultCheckoutConfig: CheckoutConfig = {\n  checkout: {\n    steps: [\n      {\n        id: 'shippingAddress',\n        name: 'checkoutProgress.shippingAddress',\n        routeName: 'checkoutShippingAddress',\n        type: [CheckoutStepType.SHIPPING_ADDRESS],\n      },\n      {\n        id: 'deliveryMode',\n        name: 'checkoutProgress.deliveryMode',\n        routeName: 'checkoutDeliveryMode',\n        type: [CheckoutStepType.DELIVERY_MODE],\n      },\n      {\n        id: 'paymentDetails',\n        name: 'checkoutProgress.paymentDetails',\n        routeName: 'checkoutPaymentDetails',\n        type: [CheckoutStepType.PAYMENT_DETAILS],\n      },\n      {\n        id: 'reviewOrder',\n        name: 'checkoutProgress.reviewOrder',\n        routeName: 'checkoutReviewOrder',\n        type: [CheckoutStepType.REVIEW_ORDER],\n      },\n    ],\n    express: false,\n    defaultDeliveryMode: [DeliveryModePreferences.FREE],\n    guest: false,\n  },\n};\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DeliveryMode, RoutingConfigService } from '@spartacus/core';\r\nimport {\r\n  CheckoutConfig,\r\n  DeliveryModePreferences,\r\n} from '../config/checkout-config';\r\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutConfigService {\r\n  steps: CheckoutStep[] = this.checkoutConfig.checkout.steps;\r\n  private express: boolean = this.checkoutConfig.checkout.express;\r\n  private guest: boolean = this.checkoutConfig.checkout.guest;\r\n  private defaultDeliveryMode: Array<DeliveryModePreferences | string> =\r\n    this.checkoutConfig.checkout.defaultDeliveryMode || [];\r\n\r\n  constructor(\r\n    private checkoutConfig: CheckoutConfig,\r\n    private routingConfigService: RoutingConfigService\r\n  ) {}\r\n\r\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep {\r\n    return this.steps[this.getCheckoutStepIndex('type', currentStepType)];\r\n  }\r\n\r\n  getCheckoutStepRoute(currentStepType: CheckoutStepType): string {\r\n    return this.getCheckoutStep(currentStepType).routeName;\r\n  }\r\n\r\n  getFirstCheckoutStepRoute(): string {\r\n    return this.steps[0].routeName;\r\n  }\r\n\r\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\r\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\r\n\r\n    return stepIndex >= 0 && this.steps[stepIndex + 1]\r\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex + 1].routeName)\r\n      : null;\r\n  }\r\n\r\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\r\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\r\n\r\n    return stepIndex >= 0 && this.steps[stepIndex - 1]\r\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex - 1].routeName)\r\n      : null;\r\n  }\r\n\r\n  getCurrentStepIndex(activatedRoute: ActivatedRoute): number | null {\r\n    const currentStepUrl: string = this.getStepUrlFromActivatedRoute(\r\n      activatedRoute\r\n    );\r\n\r\n    let stepIndex: number;\r\n    let index = 0;\r\n    for (const step of this.steps) {\r\n      if (\r\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\r\n      ) {\r\n        stepIndex = index;\r\n      } else {\r\n        index++;\r\n      }\r\n    }\r\n\r\n    return stepIndex >= 0 ? stepIndex : null;\r\n  }\r\n\r\n  protected compareDeliveryCost(\r\n    deliveryMode1: DeliveryMode,\r\n    deliveryMode2: DeliveryMode\r\n  ): number {\r\n    if (deliveryMode1.deliveryCost.value > deliveryMode2.deliveryCost.value) {\r\n      return 1;\r\n    } else if (\r\n      deliveryMode1.deliveryCost.value < deliveryMode2.deliveryCost.value\r\n    ) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  protected findMatchingDeliveryMode(\r\n    deliveryModes: DeliveryMode[],\r\n    index = 0\r\n  ): string {\r\n    switch (this.defaultDeliveryMode[index]) {\r\n      case DeliveryModePreferences.FREE:\r\n        if (deliveryModes[0].deliveryCost.value === 0) {\r\n          return deliveryModes[0].code;\r\n        }\r\n        break;\r\n      case DeliveryModePreferences.LEAST_EXPENSIVE:\r\n        const leastExpensiveFound = deliveryModes.find(\r\n          (deliveryMode) => deliveryMode.deliveryCost.value !== 0\r\n        );\r\n        if (leastExpensiveFound) {\r\n          return leastExpensiveFound.code;\r\n        }\r\n        break;\r\n      case DeliveryModePreferences.MOST_EXPENSIVE:\r\n        return deliveryModes[deliveryModes.length - 1].code;\r\n      default:\r\n        const codeFound = deliveryModes.find(\r\n          (deliveryMode) =>\r\n            deliveryMode.code === this.defaultDeliveryMode[index]\r\n        );\r\n        if (codeFound) {\r\n          return codeFound.code;\r\n        }\r\n    }\r\n    const lastMode = this.defaultDeliveryMode.length - 1 <= index;\r\n    return lastMode\r\n      ? deliveryModes[0].code\r\n      : this.findMatchingDeliveryMode(deliveryModes, index + 1);\r\n  }\r\n\r\n  getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string {\r\n    deliveryModes.sort(this.compareDeliveryCost);\r\n    return this.findMatchingDeliveryMode(deliveryModes);\r\n  }\r\n\r\n  isExpressCheckout(): boolean {\r\n    return this.express;\r\n  }\r\n\r\n  isGuestCheckout(): boolean {\r\n    return this.guest;\r\n  }\r\n\r\n  private getStepUrlFromActivatedRoute(\r\n    activatedRoute: ActivatedRoute\r\n  ): string | null {\r\n    return activatedRoute &&\r\n      activatedRoute.snapshot &&\r\n      activatedRoute.snapshot.url\r\n      ? `/${activatedRoute.snapshot.url.join('/')}`\r\n      : null;\r\n  }\r\n\r\n  private getStepUrlFromStepRoute(stepRoute: string): string {\r\n    return this.routingConfigService.getRouteConfig(stepRoute).paths[0];\r\n  }\r\n\r\n  private getCheckoutStepIndex(key: string, value: any): number | null {\r\n    return key && value\r\n      ? this.steps.findIndex((step: CheckoutStep) => step[key].includes(value))\r\n      : null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  AuthRedirectService,\r\n  AuthService,\r\n  RoutingService,\r\n  User,\r\n  UserToken,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CheckoutConfigService } from '../services/checkout-config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutAuthGuard implements CanActivate {\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected authService: AuthService,\r\n    protected authRedirectService: AuthRedirectService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return combineLatest([\r\n      this.authService.getUserToken(),\r\n      this.activeCartService.getAssignedUser(),\r\n    ]).pipe(\r\n      map(([token, user]: [UserToken, User]) => {\r\n        if (!token.access_token) {\r\n          if (this.activeCartService.isGuestCart()) {\r\n            return Boolean(user);\r\n          }\r\n          if (this.checkoutConfigService.isGuestCheckout()) {\r\n            this.routingService.go({ cxRoute: 'login' }, { forced: true });\r\n          } else {\r\n            this.routingService.go({ cxRoute: 'login' });\r\n          }\r\n          this.authRedirectService.reportAuthGuard();\r\n        }\r\n        return !!token.access_token;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  CheckoutService,\r\n  OCC_USER_ID_ANONYMOUS,\r\n  PaymentDetails,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  filter,\r\n  map,\r\n  shareReplay,\r\n  skipWhile,\r\n  switchMap,\r\n  tap,\r\n} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutDetailsService {\r\n  cartId$: Observable<string>;\r\n  getCheckoutDetailsLoaded$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {\r\n    this.cartId$ = this.activeCartService.getActive().pipe(\r\n      map((cartData) => {\r\n        if (\r\n          (cartData.user && cartData.user.uid === OCC_USER_ID_ANONYMOUS) ||\r\n          this.activeCartService.isGuestCart()\r\n        ) {\r\n          return cartData.guid;\r\n        }\r\n        return cartData.code;\r\n      }),\r\n      filter((cartId) => !!cartId)\r\n    );\r\n\r\n    this.getCheckoutDetailsLoaded$ = this.cartId$.pipe(\r\n      tap((cartId) => this.checkoutService.loadCheckoutDetails(cartId)),\r\n      shareReplay(1),\r\n      switchMap(() => this.checkoutService.getCheckoutDetailsLoaded()),\r\n      skipWhile((loaded) => !loaded)\r\n    );\r\n  }\r\n\r\n  getDeliveryAddress(): Observable<Address> {\r\n    return this.getCheckoutDetailsLoaded$.pipe(\r\n      switchMap(() => this.checkoutDeliveryService.getDeliveryAddress())\r\n    );\r\n  }\r\n\r\n  getSelectedDeliveryModeCode(): Observable<string> {\r\n    return this.getCheckoutDetailsLoaded$.pipe(\r\n      switchMap(() =>\r\n        this.checkoutDeliveryService.getSelectedDeliveryModeCode()\r\n      )\r\n    );\r\n  }\r\n\r\n  getPaymentDetails(): Observable<PaymentDetails> {\r\n    return this.getCheckoutDetailsLoaded$.pipe(\r\n      switchMap(() => this.checkoutPaymentService.getPaymentDetails())\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { combineLatest, of, Observable } from 'rxjs';\r\nimport { filter, map, switchMap, tap, debounceTime } from 'rxjs/operators';\r\n\r\nimport {\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  UserAddressService,\r\n  UserPaymentService,\r\n  PaymentDetails,\r\n  DeliveryMode,\r\n  CheckoutPaymentService,\r\n  StateUtils,\r\n} from '@spartacus/core';\r\nimport { CheckoutConfigService } from './checkout-config.service';\r\nimport { CheckoutDetailsService } from './checkout-details.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExpressCheckoutService {\r\n  private shippingAddressSet$: Observable<boolean>;\r\n  private deliveryModeSet$: Observable<boolean>;\r\n  private paymentMethodSet$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected userAddressService: UserAddressService,\r\n    protected userPaymentService: UserPaymentService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected checkoutDetailsService: CheckoutDetailsService,\r\n    protected checkoutConfigService: CheckoutConfigService\r\n  ) {\r\n    this.setShippingAddress();\r\n    this.setDeliveryMode();\r\n    this.setPaymentMethod();\r\n  }\r\n\r\n  protected setShippingAddress() {\r\n    this.shippingAddressSet$ = combineLatest([\r\n      this.userAddressService.getAddresses(),\r\n      this.userAddressService.getAddressesLoadedSuccess(),\r\n      this.checkoutDeliveryService.getSetDeliveryAddressProcess(),\r\n    ]).pipe(\r\n      debounceTime(0),\r\n      tap(\r\n        ([, addressesLoadedSuccess]: [\r\n          Address[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          if (!addressesLoadedSuccess) {\r\n            this.userAddressService.loadAddresses();\r\n          }\r\n        }\r\n      ),\r\n      filter(\r\n        ([, addressesLoadedSuccess]: [\r\n          Address[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => addressesLoadedSuccess\r\n      ),\r\n      switchMap(\r\n        ([addresses, , setDeliveryAddressProcess]: [\r\n          Address[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          const defaultAddress =\r\n            addresses.find((address) => address.defaultAddress) || addresses[0];\r\n          if (defaultAddress && Object.keys(defaultAddress).length) {\r\n            if (\r\n              !(\r\n                setDeliveryAddressProcess.success ||\r\n                setDeliveryAddressProcess.error ||\r\n                setDeliveryAddressProcess.loading\r\n              )\r\n            ) {\r\n              this.checkoutDeliveryService.setDeliveryAddress(defaultAddress);\r\n            }\r\n            return of(setDeliveryAddressProcess).pipe(\r\n              filter(\r\n                (\r\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  return (\r\n                    (setDeliveryAddressProcessState.success ||\r\n                      setDeliveryAddressProcessState.error) &&\r\n                    !setDeliveryAddressProcessState.loading\r\n                  );\r\n                }\r\n              ),\r\n              switchMap(\r\n                (\r\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  if (setDeliveryAddressProcessState.success) {\r\n                    return this.checkoutDetailsService.getDeliveryAddress();\r\n                  }\r\n                  return of(false);\r\n                }\r\n              ),\r\n              map((data) => Boolean(data && Object.keys(data).length))\r\n            );\r\n          }\r\n          return of(false);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  protected setPaymentMethod() {\r\n    this.paymentMethodSet$ = combineLatest([\r\n      this.userPaymentService.getPaymentMethods(),\r\n      this.userPaymentService.getPaymentMethodsLoadedSuccess(),\r\n      this.checkoutPaymentService.getSetPaymentDetailsResultProcess(),\r\n    ]).pipe(\r\n      debounceTime(0),\r\n      tap(\r\n        ([, paymentMethodsLoadedSuccess]: [\r\n          PaymentDetails[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          if (!paymentMethodsLoadedSuccess) {\r\n            this.userPaymentService.loadPaymentMethods();\r\n          }\r\n        }\r\n      ),\r\n      filter(\r\n        ([, success]: [\r\n          PaymentDetails[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => success\r\n      ),\r\n      switchMap(\r\n        ([payments, , setPaymentDetailsProcess]: [\r\n          PaymentDetails[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          const defaultPayment =\r\n            payments.find((address) => address.defaultPayment) || payments[0];\r\n          if (defaultPayment && Object.keys(defaultPayment).length) {\r\n            if (\r\n              !(\r\n                setPaymentDetailsProcess.success ||\r\n                setPaymentDetailsProcess.error ||\r\n                setPaymentDetailsProcess.loading\r\n              )\r\n            ) {\r\n              this.checkoutPaymentService.setPaymentDetails(defaultPayment);\r\n            }\r\n            return of(setPaymentDetailsProcess).pipe(\r\n              filter(\r\n                (\r\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  return (\r\n                    (setPaymentDetailsProcessState.success ||\r\n                      setPaymentDetailsProcessState.error) &&\r\n                    !setPaymentDetailsProcessState.loading\r\n                  );\r\n                }\r\n              ),\r\n              switchMap(\r\n                (\r\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  if (setPaymentDetailsProcessState.success) {\r\n                    return this.checkoutDetailsService.getPaymentDetails();\r\n                  }\r\n                  return of(false);\r\n                }\r\n              ),\r\n              map((data) => Boolean(data && Object.keys(data).length))\r\n            );\r\n          }\r\n          return of(false);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  protected setDeliveryMode() {\r\n    this.deliveryModeSet$ = combineLatest([\r\n      this.shippingAddressSet$,\r\n      this.checkoutDeliveryService.getSupportedDeliveryModes(),\r\n      this.checkoutDeliveryService.getSetDeliveryModeProcess(),\r\n      this.checkoutDeliveryService.getLoadSupportedDeliveryModeProcess(),\r\n    ]).pipe(\r\n      debounceTime(0),\r\n      switchMap(\r\n        ([\r\n          addressSet,\r\n          supportedDeliveryModes,\r\n          setDeliveryModeStatusFlag,\r\n          loadSupportedDeliveryModeStatus,\r\n        ]: [\r\n          boolean,\r\n          DeliveryMode[],\r\n          StateUtils.LoaderState<void>,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          if (addressSet) {\r\n            return of([\r\n              supportedDeliveryModes,\r\n              setDeliveryModeStatusFlag,\r\n              loadSupportedDeliveryModeStatus,\r\n            ]).pipe(\r\n              filter(\r\n                ([, , supportedDeliveryModeStatus]: [\r\n                  DeliveryMode[],\r\n                  StateUtils.LoaderState<void>,\r\n                  StateUtils.LoaderState<void>\r\n                ]) => supportedDeliveryModeStatus.success\r\n              ),\r\n              switchMap(\r\n                ([deliveryModes, setDeliveryModeStatus, ,]: [\r\n                  DeliveryMode[],\r\n                  StateUtils.LoaderState<void>,\r\n                  StateUtils.LoaderState<void>\r\n                ]) => {\r\n                  if (Boolean(deliveryModes.length)) {\r\n                    const preferredDeliveryMode = this.checkoutConfigService.getPreferredDeliveryMode(\r\n                      deliveryModes\r\n                    );\r\n                    return of([\r\n                      preferredDeliveryMode,\r\n                      setDeliveryModeStatus,\r\n                    ]).pipe(\r\n                      tap(\r\n                        ([deliveryMode, deliveryModeLoadingStatus]: [\r\n                          string,\r\n                          StateUtils.LoaderState<void>\r\n                        ]) => {\r\n                          if (\r\n                            deliveryMode &&\r\n                            !(\r\n                              deliveryModeLoadingStatus.success ||\r\n                              deliveryModeLoadingStatus.error ||\r\n                              deliveryModeLoadingStatus.loading\r\n                            )\r\n                          ) {\r\n                            this.checkoutDeliveryService.setDeliveryMode(\r\n                              deliveryMode\r\n                            );\r\n                          }\r\n                        }\r\n                      ),\r\n                      filter(\r\n                        ([, deliveryModeLoadingStatus]: [\r\n                          string,\r\n                          StateUtils.LoaderState<void>\r\n                        ]) => {\r\n                          return (\r\n                            (deliveryModeLoadingStatus.success ||\r\n                              deliveryModeLoadingStatus.error) &&\r\n                            !deliveryModeLoadingStatus.loading\r\n                          );\r\n                        }\r\n                      ),\r\n                      switchMap(\r\n                        ([, deliveryModeLoadingStatus]: [\r\n                          string,\r\n                          StateUtils.LoaderState<void>\r\n                        ]) => {\r\n                          if (deliveryModeLoadingStatus.success) {\r\n                            return this.checkoutDetailsService.getSelectedDeliveryModeCode();\r\n                          }\r\n                          return of(false);\r\n                        }\r\n                      ),\r\n                      map((data) => Boolean(data))\r\n                    );\r\n                  }\r\n                  return of(false);\r\n                }\r\n              )\r\n            );\r\n          } else {\r\n            return of(false);\r\n          }\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  protected resetCheckoutProcesses() {\r\n    this.checkoutDeliveryService.resetSetDeliveryAddressProcess();\r\n    this.checkoutPaymentService.resetSetPaymentDetailsProcess();\r\n    this.checkoutDeliveryService.resetSetDeliveryModeProcess();\r\n  }\r\n\r\n  public trySetDefaultCheckoutDetails(): Observable<boolean> {\r\n    this.resetCheckoutProcesses();\r\n    return combineLatest([this.deliveryModeSet$, this.paymentMethodSet$]).pipe(\r\n      map(([deliveryModeSet, paymentMethodSet]) =>\r\n        Boolean(deliveryModeSet && paymentMethodSet)\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, UrlTree } from '@angular/router';\r\nimport { ActiveCartService, RoutingConfigService } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { CheckoutStepType } from '../model/checkout-step.model';\r\nimport { CheckoutConfigService } from '../services/checkout-config.service';\r\nimport { ExpressCheckoutService } from '../services/express-checkout.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutGuard implements CanActivate {\r\n  private readonly firstStep$: Observable<UrlTree>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected routingConfigService: RoutingConfigService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected expressCheckoutService: ExpressCheckoutService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {\r\n    this.firstStep$ = of(\r\n      this.router.parseUrl(\r\n        this.routingConfigService.getRouteConfig(\r\n          this.checkoutConfigService.getFirstCheckoutStepRoute()\r\n        ).paths[0]\r\n      )\r\n    );\r\n  }\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    if (\r\n      this.checkoutConfigService.isExpressCheckout() &&\r\n      !this.activeCartService.isGuestCart()\r\n    ) {\r\n      return this.expressCheckoutService.trySetDefaultCheckoutDetails().pipe(\r\n        switchMap((expressCheckoutPossible: boolean) => {\r\n          return expressCheckoutPossible\r\n            ? of(\r\n                this.router.parseUrl(\r\n                  this.routingConfigService.getRouteConfig(\r\n                    this.checkoutConfigService.getCheckoutStepRoute(\r\n                      CheckoutStepType.REVIEW_ORDER\r\n                    )\r\n                  ).paths[0]\r\n                )\r\n              )\r\n            : this.firstStep$;\r\n        })\r\n      );\r\n    }\r\n    return this.firstStep$;\r\n  }\r\n}\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  templateUrl: './checkout-orchestrator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { CheckoutGuard } from '../../guards/checkout.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutOrchestrator: {\r\n          component: CheckoutOrchestratorComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutOrchestratorComponent],\r\n  entryComponents: [CheckoutOrchestratorComponent],\r\n  exports: [CheckoutOrchestratorComponent],\r\n})\r\nexport class CheckoutOrchestratorModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActiveCartService, Cart } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n@Component({\r\n  selector: 'cx-checkout-order-summary',\r\n  templateUrl: './checkout-order-summary.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CheckoutOrderSummaryComponent {\r\n  cart$: Observable<Cart>;\r\n\r\n  constructor(protected activeCartService: ActiveCartService) {\r\n    this.cart$ = this.activeCartService.getActive();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\r\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CartSharedModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutOrderSummary: {\r\n          component: CheckoutOrderSummaryComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutOrderSummaryComponent],\r\n  entryComponents: [CheckoutOrderSummaryComponent],\r\n  exports: [CheckoutOrderSummaryComponent],\r\n})\r\nexport class CheckoutOrderSummaryModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RoutingService, RoutingConfigService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CheckoutConfig } from '../../../config/checkout-config';\r\nimport { CheckoutStep } from '../../../model/checkout-step.model';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-progress-mobile-bottom',\r\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\r\n})\r\nexport class CheckoutProgressMobileBottomComponent implements OnInit {\r\n  constructor(\r\n    protected config: CheckoutConfig,\r\n    protected routingService: RoutingService,\r\n    protected routingConfigService: RoutingConfigService\r\n  ) {}\r\n\r\n  steps: Array<CheckoutStep>;\r\n  routerState$: Observable<any>;\r\n  activeStepIndex: number;\r\n  activeStepUrl: string;\r\n\r\n  ngOnInit() {\r\n    this.steps = this.config.checkout.steps;\r\n    this.routerState$ = this.routingService.getRouterState().pipe(\r\n      tap((router) => {\r\n        this.activeStepUrl = router.state.context.id;\r\n\r\n        this.steps.forEach((step, index) => {\r\n          const routeUrl = `/${\r\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\r\n          }`;\r\n          if (routeUrl === this.activeStepUrl) {\r\n            this.activeStepIndex = index;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\r\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutProgressMobileBottom: {\r\n          component: CheckoutProgressMobileBottomComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutProgressMobileBottomComponent],\r\n  entryComponents: [CheckoutProgressMobileBottomComponent],\r\n  exports: [CheckoutProgressMobileBottomComponent],\r\n})\r\nexport class CheckoutProgressMobileBottomModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  RoutingConfigService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CheckoutConfig } from '../../../config/checkout-config';\r\nimport { CheckoutStep } from '../../../model/checkout-step.model';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-progress-mobile-top',\r\n  templateUrl: './checkout-progress-mobile-top.component.html',\r\n})\r\nexport class CheckoutProgressMobileTopComponent implements OnInit {\r\n  constructor(\r\n    protected config: CheckoutConfig,\r\n    protected routingService: RoutingService,\r\n    protected routingConfigService: RoutingConfigService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  steps: Array<CheckoutStep>;\r\n  routerState$: Observable<any>;\r\n  cart$: Observable<Cart>;\r\n  activeStepIndex: number;\r\n  activeStepUrl: string;\r\n\r\n  ngOnInit(): void {\r\n    this.steps = this.config.checkout.steps;\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.routerState$ = this.routingService.getRouterState().pipe(\r\n      tap((router) => {\r\n        this.activeStepUrl = router.state.context.id;\r\n\r\n        this.steps.forEach((step, index) => {\r\n          const routeUrl = `/${\r\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\r\n          }`;\r\n          if (routeUrl === this.activeStepUrl) {\r\n            this.activeStepIndex = index;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\r\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutProgressMobileTop: {\r\n          component: CheckoutProgressMobileTopComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutProgressMobileTopComponent],\r\n  entryComponents: [CheckoutProgressMobileTopComponent],\r\n  exports: [CheckoutProgressMobileTopComponent],\r\n})\r\nexport class CheckoutProgressMobileTopModule {}\r\n","import { RoutingService, RoutingConfigService } from '@spartacus/core';\r\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\nimport { CheckoutConfig } from '../../config/checkout-config';\r\nimport { CheckoutStep } from '../../model/checkout-step.model';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-progress',\r\n  templateUrl: './checkout-progress.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CheckoutProgressComponent implements OnInit {\r\n  constructor(\r\n    protected config: CheckoutConfig,\r\n    protected routingService: RoutingService,\r\n    protected routingConfigService: RoutingConfigService\r\n  ) {}\r\n\r\n  steps: Array<CheckoutStep>;\r\n  routerState$: Observable<any>;\r\n  activeStepIndex: number;\r\n  activeStepUrl: string;\r\n\r\n  ngOnInit(): void {\r\n    this.steps = this.config.checkout.steps;\r\n    this.routerState$ = this.routingService.getRouterState().pipe(\r\n      tap((router) => {\r\n        this.activeStepUrl = router.state.context.id;\r\n\r\n        this.steps.forEach((step, index) => {\r\n          const routeUrl = `/${\r\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\r\n          }`;\r\n          if (routeUrl === this.activeStepUrl) {\r\n            this.activeStepIndex = index;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  getTabIndex(stepIndex: number): number {\r\n    return !this.isActive(stepIndex) && !this.isDisabled(stepIndex) ? 0 : -1;\r\n  }\r\n\r\n  isActive(index: number): boolean {\r\n    return index === this.activeStepIndex;\r\n  }\r\n\r\n  isDisabled(index: number): boolean {\r\n    return index > this.activeStepIndex;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutProgressComponent } from './checkout-progress.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\r\n  declarations: [CheckoutProgressComponent],\r\n  entryComponents: [CheckoutProgressComponent],\r\n  exports: [CheckoutProgressComponent],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutProgress: {\r\n          component: CheckoutProgressComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n})\r\nexport class CheckoutProgressModule {}\r\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Address, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShippingAddressSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.SHIPPING_ADDRESS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.SHIPPING_ADDRESS} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getDeliveryAddress()\n      .pipe(\n        map((deliveryAddress: Address) =>\n          deliveryAddress && Object.keys(deliveryAddress).length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  CheckoutDeliveryService,\r\n  DeliveryMode,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, withLatestFrom } from 'rxjs/operators';\r\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\r\n\r\n@Component({\r\n  selector: 'cx-delivery-mode',\r\n  templateUrl: './delivery-mode.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DeliveryModeComponent implements OnInit, OnDestroy {\r\n  supportedDeliveryModes$: Observable<DeliveryMode[]>;\r\n  selectedDeliveryMode$: Observable<DeliveryMode>;\r\n  currentDeliveryModeId: string;\r\n  checkoutStepUrlNext: string;\r\n  checkoutStepUrlPrevious: string;\r\n  private allowRedirect = false;\r\n\r\n  deliveryModeSub: Subscription;\r\n\r\n  mode: FormGroup = this.fb.group({\r\n    deliveryModeId: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private checkoutDeliveryService: CheckoutDeliveryService,\r\n    private routingService: RoutingService,\r\n    private checkoutConfigService: CheckoutConfigService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n\r\n    this.supportedDeliveryModes$ = this.checkoutDeliveryService.getSupportedDeliveryModes();\r\n\r\n    this.deliveryModeSub = this.supportedDeliveryModes$\r\n      .pipe(\r\n        withLatestFrom(\r\n          this.checkoutDeliveryService\r\n            .getSelectedDeliveryMode()\r\n            .pipe(\r\n              map((deliveryMode: DeliveryMode) =>\r\n                deliveryMode && deliveryMode.code ? deliveryMode.code : null\r\n              )\r\n            )\r\n        )\r\n      )\r\n      .subscribe(([deliveryModes, code]: [DeliveryMode[], string]) => {\r\n        if (!code && deliveryModes && deliveryModes.length) {\r\n          code = this.checkoutConfigService.getPreferredDeliveryMode(\r\n            deliveryModes\r\n          );\r\n        }\r\n        if (\r\n          this.allowRedirect &&\r\n          !!code &&\r\n          code === this.currentDeliveryModeId\r\n        ) {\r\n          this.routingService.go(this.checkoutStepUrlNext);\r\n        }\r\n        if (code) {\r\n          this.mode.controls['deliveryModeId'].setValue(code);\r\n          if (code !== this.currentDeliveryModeId) {\r\n            this.checkoutDeliveryService.setDeliveryMode(code);\r\n          }\r\n        }\r\n        this.currentDeliveryModeId = code;\r\n      });\r\n  }\r\n\r\n  changeMode(code: string): void {\r\n    if (code !== this.currentDeliveryModeId) {\r\n      this.checkoutDeliveryService.setDeliveryMode(code);\r\n      this.currentDeliveryModeId = code;\r\n    }\r\n  }\r\n\r\n  next(): void {\r\n    this.allowRedirect = true;\r\n    if (this.mode.valid && this.mode.value) {\r\n      if (!this.currentDeliveryModeId) {\r\n        this.currentDeliveryModeId = this.mode.value.deliveryModeId;\r\n      }\r\n      this.checkoutDeliveryService.setDeliveryMode(this.currentDeliveryModeId);\r\n    }\r\n  }\r\n\r\n  back(): void {\r\n    this.routingService.go(this.checkoutStepUrlPrevious);\r\n  }\r\n\r\n  get deliveryModeInvalid(): boolean {\r\n    return this.mode.controls['deliveryModeId'].invalid;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.deliveryModeSub) {\r\n      this.deliveryModeSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { DeliveryModeComponent } from './delivery-mode.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, I18nModule, SpinnerModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutDeliveryMode: {\r\n          component: DeliveryModeComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            ShippingAddressSetGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [DeliveryModeComponent],\r\n  entryComponents: [DeliveryModeComponent],\r\n  exports: [DeliveryModeComponent],\r\n})\r\nexport class DeliveryModeModule {}\r\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryModeSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.DELIVERY_MODE\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.DELIVERY_MODE} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { ModalService } from '../../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  constructor(protected modalService: ModalService) {}\n\n  @Input()\n  suggestedAddresses: Address[];\n  @Input()\n  enteredAddress: Address;\n\n  selectedAddress: Address;\n\n  ngOnInit(): void {\n    this.selectedAddress = this.suggestedAddresses.length\n      ? this.suggestedAddresses[0]\n      : this.enteredAddress;\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  Address,\r\n  AddressValidation,\r\n  CardType,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  Country,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  Region,\r\n  StateUtils,\r\n  UserAddressService,\r\n  UserPaymentService,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { Card } from '../../../../../shared/components/card/card.component'; // tslint:disable-line\r\nimport {\r\n  ModalRef,\r\n  ModalService,\r\n} from '../../../../../shared/components/modal/index';\r\nimport { ICON_TYPE } from '../../../../misc/icon/index';\r\nimport { SuggestedAddressDialogComponent } from '../../shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component'; // tslint:disable-line\r\n\r\n@Component({\r\n  selector: 'cx-payment-form',\r\n  templateUrl: './payment-form.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaymentFormComponent implements OnInit, OnDestroy {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  private addressVerifySub: Subscription;\r\n  suggestedAddressModalRef: ModalRef;\r\n  months: string[] = [];\r\n  years: number[] = [];\r\n\r\n  cardTypes$: Observable<CardType[]>;\r\n  shippingAddress$: Observable<Address>;\r\n  countries$: Observable<Country[]>;\r\n  loading$: Observable<StateUtils.LoaderState<void>>;\r\n  sameAsShippingAddress = true;\r\n  regions$: Observable<Region[]>;\r\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n  showSameAsShippingAddressCheckbox$: Observable<boolean>;\r\n\r\n  @Input()\r\n  setAsDefaultField: boolean;\r\n\r\n  @Input()\r\n  paymentMethodsCount: number;\r\n\r\n  @Output()\r\n  goBack = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  closeForm = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  setPaymentDetails = new EventEmitter<any>();\r\n\r\n  paymentForm: FormGroup = this.fb.group({\r\n    cardType: this.fb.group({\r\n      code: [null, Validators.required],\r\n    }),\r\n    accountHolderName: ['', Validators.required],\r\n    cardNumber: ['', Validators.required],\r\n    expiryMonth: [null, Validators.required],\r\n    expiryYear: [null, Validators.required],\r\n    cvn: ['', Validators.required],\r\n    defaultPayment: [false],\r\n  });\r\n\r\n  billingAddressForm: FormGroup = this.fb.group({\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    line1: ['', Validators.required],\r\n    line2: [''],\r\n    town: ['', Validators.required],\r\n    region: this.fb.group({\r\n      isocodeShort: [null, Validators.required],\r\n    }),\r\n    country: this.fb.group({\r\n      isocode: [null, Validators.required],\r\n    }),\r\n    postalCode: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected userPaymentService: UserPaymentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected fb: FormBuilder,\r\n    protected modalService: ModalService,\r\n    protected userAddressService: UserAddressService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.expMonthAndYear();\r\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\r\n      tap((countries) => {\r\n        // If the store is empty fetch countries. This is also used when changing language.\r\n        if (Object.keys(countries).length === 0) {\r\n          this.userPaymentService.loadBillingCountries();\r\n        }\r\n      })\r\n    );\r\n\r\n    this.cardTypes$ = this.checkoutPaymentService.getCardTypes().pipe(\r\n      tap((cardTypes) => {\r\n        if (Object.keys(cardTypes).length === 0) {\r\n          this.checkoutPaymentService.loadSupportedCardTypes();\r\n        }\r\n      })\r\n    );\r\n\r\n    this.shippingAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\r\n    this.loading$ = this.checkoutPaymentService.getSetPaymentDetailsResultProcess();\r\n\r\n    this.showSameAsShippingAddressCheckbox$ = combineLatest([\r\n      this.countries$,\r\n      this.shippingAddress$,\r\n    ]).pipe(\r\n      map(([countries, address]) => {\r\n        return (\r\n          address?.country &&\r\n          !!countries.filter(\r\n            (country: Country): boolean =>\r\n              country.isocode === address.country.isocode\r\n          ).length\r\n        );\r\n      }),\r\n      tap((shouldShowCheckbox) => {\r\n        this.sameAsShippingAddress = shouldShowCheckbox;\r\n      })\r\n    );\r\n\r\n    // verify the new added address\r\n    this.addressVerifySub = this.checkoutDeliveryService\r\n      .getAddressVerificationResults()\r\n      .subscribe((results: AddressValidation) => {\r\n        if (results.decision === 'FAIL') {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'ACCEPT') {\r\n          this.next();\r\n        } else if (results.decision === 'REJECT') {\r\n          this.globalMessageService.add(\r\n            { key: 'addressForm.invalidAddress' },\r\n            GlobalMessageType.MSG_TYPE_ERROR\r\n          );\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'REVIEW') {\r\n          this.openSuggestedAddress(results);\r\n        }\r\n      });\r\n\r\n    this.regions$ = this.selectedCountry$.pipe(\r\n      switchMap((country) => this.userAddressService.getRegions(country)),\r\n      tap((regions) => {\r\n        const regionControl = this.billingAddressForm.get(\r\n          'region.isocodeShort'\r\n        );\r\n        if (regions.length > 0) {\r\n          regionControl.enable();\r\n        } else {\r\n          regionControl.disable();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  expMonthAndYear(): void {\r\n    const year = new Date().getFullYear();\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      this.years.push(year + i);\r\n    }\r\n\r\n    for (let j = 1; j <= 12; j++) {\r\n      if (j < 10) {\r\n        this.months.push(`0${j}`);\r\n      } else {\r\n        this.months.push(j.toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleDefaultPaymentMethod(): void {\r\n    this.paymentForm.value.defaultPayment = !this.paymentForm.value\r\n      .defaultPayment;\r\n  }\r\n\r\n  toggleSameAsShippingAddress(): void {\r\n    this.sameAsShippingAddress = !this.sameAsShippingAddress;\r\n  }\r\n\r\n  getAddressCardContent(address: Address): Card {\r\n    let region = '';\r\n    if (address.region && address.region.isocode) {\r\n      region = address.region.isocode + ', ';\r\n    }\r\n\r\n    return {\r\n      textBold: address.firstName + ' ' + address.lastName,\r\n      text: [\r\n        address.line1,\r\n        address.line2,\r\n        address.town + ', ' + region + address.country.isocode,\r\n        address.postalCode,\r\n        address.phone,\r\n      ],\r\n    };\r\n  }\r\n\r\n  openSuggestedAddress(results: AddressValidation): void {\r\n    if (!this.suggestedAddressModalRef) {\r\n      this.suggestedAddressModalRef = this.modalService.open(\r\n        SuggestedAddressDialogComponent,\r\n        { centered: true, size: 'lg' }\r\n      );\r\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.billingAddressForm.value;\r\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\r\n        results.suggestedAddresses;\r\n      this.suggestedAddressModalRef.result\r\n        .then(() => {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          this.suggestedAddressModalRef = null;\r\n        })\r\n        .catch(() => {\r\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          this.suggestedAddressModalRef = null;\r\n        });\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    this.closeForm.emit();\r\n  }\r\n\r\n  back(): void {\r\n    this.goBack.emit();\r\n  }\r\n\r\n  verifyAddress(): void {\r\n    if (this.sameAsShippingAddress) {\r\n      this.next();\r\n    } else {\r\n      this.checkoutDeliveryService.verifyAddress(this.billingAddressForm.value);\r\n    }\r\n  }\r\n\r\n  countrySelected(country: Country): void {\r\n    this.billingAddressForm.get('country.isocode').setValue(country.isocode);\r\n    this.selectedCountry$.next(country.isocode);\r\n  }\r\n\r\n  next(): void {\r\n    if (this.paymentForm.valid) {\r\n      if (this.sameAsShippingAddress) {\r\n        this.setPaymentDetails.emit({\r\n          paymentDetails: this.paymentForm.value,\r\n          billingAddress: null,\r\n        });\r\n      } else {\r\n        if (this.billingAddressForm.valid) {\r\n          this.setPaymentDetails.emit({\r\n            paymentDetails: this.paymentForm.value,\r\n            billingAddress: this.billingAddressForm.value,\r\n          });\r\n        } else {\r\n          this.billingAddressForm.markAllAsTouched();\r\n        }\r\n      }\r\n    } else {\r\n      this.paymentForm.markAllAsTouched();\r\n\r\n      if (!this.sameAsShippingAddress) {\r\n        this.billingAddressForm.markAllAsTouched();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.addressVerifySub) {\r\n      this.addressVerifySub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { CardModule } from '../../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../../shared/components/spinner/spinner.module';\r\nimport { IconModule } from '../../../../misc/icon/icon.module';\r\nimport { PaymentFormComponent } from './payment-form.component';\r\nimport { FormErrorsModule } from '../../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    CardModule,\r\n    I18nModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [PaymentFormComponent],\r\n  entryComponents: [PaymentFormComponent],\r\n  exports: [PaymentFormComponent],\r\n})\r\nexport class PaymentFormModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  CheckoutService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  PaymentDetails,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserPaymentService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\nimport { ICON_TYPE } from '../../../misc/icon';\r\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\r\n\r\n@Component({\r\n  selector: 'cx-payment-method',\r\n  templateUrl: './payment-method.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaymentMethodComponent implements OnInit, OnDestroy {\r\n  iconTypes = ICON_TYPE;\r\n  existingPaymentMethods$: Observable<PaymentDetails[]>;\r\n  isLoading$: Observable<boolean>;\r\n  cards$: Observable<{ content: Card; paymentMethod: PaymentDetails }[]>;\r\n  selectedMethod$: Observable<PaymentDetails>;\r\n  isGuestCheckout = false;\r\n  newPaymentFormManuallyOpened = false;\r\n\r\n  protected shouldRedirect: boolean;\r\n  protected deliveryAddress: Address;\r\n  protected checkoutStepUrlNext: string;\r\n  protected checkoutStepUrlPrevious: string;\r\n\r\n  constructor(\r\n    protected userPaymentService: UserPaymentService,\r\n    protected checkoutService: CheckoutService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected routingService: RoutingService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected translation: TranslationService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.shouldRedirect = false;\r\n    this.isLoading$ = this.userPaymentService.getPaymentMethodsLoading();\r\n\r\n    if (!this.activeCartService.isGuestCart()) {\r\n      this.userPaymentService.loadPaymentMethods();\r\n    } else {\r\n      this.isGuestCheckout = true;\r\n    }\r\n\r\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n\r\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n\r\n    this.checkoutDeliveryService\r\n      .getDeliveryAddress()\r\n      .pipe(take(1))\r\n      .subscribe((address: Address) => {\r\n        this.deliveryAddress = address;\r\n      });\r\n\r\n    this.existingPaymentMethods$ = this.userPaymentService.getPaymentMethods();\r\n\r\n    this.selectedMethod$ = this.checkoutPaymentService.getPaymentDetails().pipe(\r\n      tap((paymentInfo) => {\r\n        if (paymentInfo && !!Object.keys(paymentInfo).length) {\r\n          if (paymentInfo['hasError']) {\r\n            Object.keys(paymentInfo).forEach((key) => {\r\n              if (key.startsWith('InvalidField')) {\r\n                this.sendPaymentMethodFailGlobalMessage(paymentInfo[key]);\r\n              }\r\n            });\r\n            this.checkoutService.clearCheckoutStep(3);\r\n          } else if (this.shouldRedirect) {\r\n            this.routingService.go(this.checkoutStepUrlNext);\r\n          }\r\n        }\r\n      })\r\n    );\r\n\r\n    this.cards$ = combineLatest([\r\n      this.existingPaymentMethods$.pipe(\r\n        switchMap((methods) => {\r\n          return !methods?.length\r\n            ? of([])\r\n            : combineLatest(\r\n                methods.map((method) =>\r\n                  combineLatest([\r\n                    of(method),\r\n                    this.translation.translate('paymentCard.expires', {\r\n                      month: method.expiryMonth,\r\n                      year: method.expiryYear,\r\n                    }),\r\n                  ]).pipe(\r\n                    map(([payment, translation]) => ({\r\n                      payment,\r\n                      expiryTranslation: translation,\r\n                    }))\r\n                  )\r\n                )\r\n              );\r\n        })\r\n      ),\r\n      this.selectedMethod$,\r\n      this.translation.translate('paymentForm.useThisPayment'),\r\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\r\n      this.translation.translate('paymentCard.selected'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          paymentMethods,\r\n          selectedMethod,\r\n          textUseThisPayment,\r\n          textDefaultPaymentMethod,\r\n          textSelected,\r\n        ]) => {\r\n          if (\r\n            paymentMethods.length &&\r\n            (!selectedMethod || Object.keys(selectedMethod).length === 0)\r\n          ) {\r\n            const defaultPaymentMethod = paymentMethods.find(\r\n              (paymentMethod) => paymentMethod.payment.defaultPayment\r\n            );\r\n            if (defaultPaymentMethod) {\r\n              selectedMethod = defaultPaymentMethod.payment;\r\n              this.checkoutPaymentService.setPaymentDetails(selectedMethod);\r\n            }\r\n          }\r\n          return paymentMethods.map((payment) => ({\r\n            content: this.createCard(\r\n              payment.payment,\r\n              {\r\n                textExpires: payment.expiryTranslation,\r\n                textUseThisPayment,\r\n                textDefaultPaymentMethod,\r\n                textSelected,\r\n              },\r\n              selectedMethod\r\n            ),\r\n            paymentMethod: payment.payment,\r\n          }));\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  selectPaymentMethod(paymentDetails: PaymentDetails): void {\r\n    this.checkoutPaymentService.setPaymentDetails(paymentDetails);\r\n  }\r\n\r\n  showNewPaymentForm(): void {\r\n    this.newPaymentFormManuallyOpened = true;\r\n  }\r\n\r\n  hideNewPaymentForm(): void {\r\n    this.newPaymentFormManuallyOpened = false;\r\n  }\r\n\r\n  setPaymentDetails({\r\n    paymentDetails,\r\n    billingAddress,\r\n  }: {\r\n    paymentDetails: PaymentDetails;\r\n    billingAddress?: Address;\r\n  }): void {\r\n    const details: PaymentDetails = { ...paymentDetails };\r\n    details.billingAddress = billingAddress || this.deliveryAddress;\r\n    this.checkoutPaymentService.createPaymentDetails(details);\r\n    this.shouldRedirect = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.checkoutPaymentService.paymentProcessSuccess();\r\n  }\r\n\r\n  protected getCardIcon(code: string): string {\r\n    let ccIcon: string;\r\n    if (code === 'visa') {\r\n      ccIcon = this.iconTypes.VISA;\r\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\r\n      ccIcon = this.iconTypes.MASTER_CARD;\r\n    } else if (code === 'diners') {\r\n      ccIcon = this.iconTypes.DINERS_CLUB;\r\n    } else if (code === 'amex') {\r\n      ccIcon = this.iconTypes.AMEX;\r\n    } else {\r\n      ccIcon = this.iconTypes.CREDIT_CARD;\r\n    }\r\n\r\n    return ccIcon;\r\n  }\r\n\r\n  protected sendPaymentMethodFailGlobalMessage(field: string) {\r\n    this.globalMessageService.add(\r\n      {\r\n        key: 'paymentMethods.invalidField',\r\n        params: { field },\r\n      },\r\n      GlobalMessageType.MSG_TYPE_ERROR\r\n    );\r\n  }\r\n\r\n  protected createCard(\r\n    paymentDetails: PaymentDetails,\r\n    cardLabels: {\r\n      textDefaultPaymentMethod: string;\r\n      textExpires: string;\r\n      textUseThisPayment: string;\r\n      textSelected: string;\r\n    },\r\n    selected: PaymentDetails\r\n  ): Card {\r\n    return {\r\n      title: paymentDetails.defaultPayment\r\n        ? cardLabels.textDefaultPaymentMethod\r\n        : '',\r\n      textBold: paymentDetails.accountHolderName,\r\n      text: [paymentDetails.cardNumber, cardLabels.textExpires],\r\n      img: this.getCardIcon(paymentDetails.cardType.code),\r\n      actions: [{ name: cardLabels.textUseThisPayment, event: 'send' }],\r\n      header:\r\n        selected?.id === paymentDetails.id\r\n          ? cardLabels.textSelected\r\n          : undefined,\r\n    };\r\n  }\r\n\r\n  goNext(): void {\r\n    this.routingService.go(this.checkoutStepUrlNext);\r\n  }\r\n\r\n  goPrevious(): void {\r\n    this.routingService.go(this.checkoutStepUrlPrevious);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\r\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { PaymentFormModule } from './payment-form/payment-form.module';\r\nimport { PaymentMethodComponent } from './payment-method.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    PaymentFormModule,\r\n    CardModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutPaymentDetails: {\r\n          component: PaymentMethodComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            ShippingAddressSetGuard,\r\n            DeliveryModeSetGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [PaymentMethodComponent],\r\n  entryComponents: [PaymentMethodComponent],\r\n  exports: [PaymentMethodComponent],\r\n})\r\nexport class PaymentMethodModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CheckoutService, RoutingService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-place-order',\r\n  templateUrl: './place-order.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PlaceOrderComponent implements OnInit, OnDestroy {\r\n  placeOrderSubscription: Subscription;\r\n\r\n  checkoutSubmitForm: FormGroup = this.fb.group({\r\n    termsAndConditions: [false, Validators.requiredTrue],\r\n  });\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    protected routingService: RoutingService,\r\n    protected fb: FormBuilder\r\n  ) {}\r\n\r\n  submitForm(): void {\r\n    if (this.checkoutSubmitForm.valid) {\r\n      this.checkoutService.placeOrder();\r\n    } else {\r\n      this.checkoutSubmitForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.placeOrderSubscription = this.checkoutService\r\n      .getOrderDetails()\r\n      .pipe(filter((order) => Object.keys(order).length !== 0))\r\n      .subscribe(() => {\r\n        this.routingService.go({ cxRoute: 'orderConfirmation' });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.placeOrderSubscription) {\r\n      this.placeOrderSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CartNotEmptyGuard } from '../../../cart/cart-not-empty.guard';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { PlaceOrderComponent } from './place-order.component';\r\nimport { FormErrorsModule } from '../../../../shared/index';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    ReactiveFormsModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutPlaceOrder: {\r\n          component: PlaceOrderComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [PlaceOrderComponent],\r\n  entryComponents: [PlaceOrderComponent],\r\n  exports: [PlaceOrderComponent],\r\n})\r\nexport class PlaceOrderModule {}\r\n","import { Injectable, isDevMode } from '@angular/core';\r\nimport { CanActivate, Router, UrlTree } from '@angular/router';\r\nimport { RoutingConfigService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\r\nimport { CheckoutConfigService } from '../services/checkout-config.service';\r\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PaymentDetailsSetGuard implements CanActivate {\r\n  constructor(\r\n    private checkoutDetailsService: CheckoutDetailsService,\r\n    private checkoutConfigService: CheckoutConfigService,\r\n    private routingConfigService: RoutingConfigService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\r\n      CheckoutStepType.PAYMENT_DETAILS\r\n    );\r\n\r\n    if (!checkoutStep && isDevMode()) {\r\n      console.warn(\r\n        `Missing step with type ${CheckoutStepType.PAYMENT_DETAILS} in checkout configuration.`\r\n      );\r\n    }\r\n\r\n    return this.checkoutDetailsService\r\n      .getPaymentDetails()\r\n      .pipe(\r\n        map((paymentDetails) =>\r\n          paymentDetails && Object.keys(paymentDetails).length !== 0\r\n            ? true\r\n            : this.router.parseUrl(\r\n                checkoutStep &&\r\n                  this.routingConfigService.getRouteConfig(\r\n                    checkoutStep.routeName\r\n                  ).paths[0]\r\n              )\r\n        )\r\n      );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n  Address,\r\n  Cart,\r\n  ActiveCartService,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  Country,\r\n  DeliveryMode,\r\n  OrderEntry,\r\n  PaymentDetails,\r\n  TranslationService,\r\n  UserAddressService,\r\n  PromotionResult,\r\n  PromotionLocation,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\nimport { CheckoutStepType } from '../../model/index';\r\nimport { CheckoutConfigService } from '../../services/index';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\n@Component({\r\n  selector: 'cx-review-submit',\r\n  templateUrl: './review-submit.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReviewSubmitComponent implements OnInit {\r\n  checkoutStepType = CheckoutStepType;\r\n  entries$: Observable<OrderEntry[]>;\r\n  cart$: Observable<Cart>;\r\n  deliveryMode$: Observable<DeliveryMode>;\r\n  countryName$: Observable<string>;\r\n  deliveryAddress$: Observable<Address>;\r\n  paymentDetails$: Observable<PaymentDetails>;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  constructor(\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected userAddressService: UserAddressService,\r\n    protected activeCartService: ActiveCartService,\r\n    protected translation: TranslationService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.entries$ = this.activeCartService.getEntries();\r\n    this.deliveryAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\r\n    this.paymentDetails$ = this.checkoutPaymentService.getPaymentDetails();\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n\r\n    this.deliveryMode$ = this.checkoutDeliveryService\r\n      .getSelectedDeliveryMode()\r\n      .pipe(\r\n        tap((selected: DeliveryMode) => {\r\n          if (selected === null) {\r\n            this.checkoutDeliveryService.loadSupportedDeliveryModes();\r\n          }\r\n        })\r\n      );\r\n\r\n    this.countryName$ = this.deliveryAddress$.pipe(\r\n      switchMap((address: Address) =>\r\n        this.userAddressService.getCountry(address.country.isocode)\r\n      ),\r\n      tap((country: Country) => {\r\n        if (country === null) {\r\n          this.userAddressService.loadDeliveryCountries();\r\n        }\r\n      }),\r\n      map((country: Country) => country && country.name)\r\n    );\r\n  }\r\n\r\n  getShippingAddressCard(\r\n    deliveryAddress: Address,\r\n    countryName: string\r\n  ): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('addressCard.shipTo'),\r\n    ]).pipe(\r\n      map(([textTitle]) => {\r\n        if (!countryName) {\r\n          countryName = deliveryAddress.country.isocode;\r\n        }\r\n\r\n        let region = '';\r\n        if (deliveryAddress.region && deliveryAddress.region.isocode) {\r\n          region = deliveryAddress.region.isocode + ', ';\r\n        }\r\n\r\n        return {\r\n          title: textTitle,\r\n          textBold: deliveryAddress.firstName + ' ' + deliveryAddress.lastName,\r\n          text: [\r\n            deliveryAddress.line1,\r\n            deliveryAddress.line2,\r\n            deliveryAddress.town + ', ' + region + countryName,\r\n            deliveryAddress.postalCode,\r\n            deliveryAddress.phone,\r\n          ],\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('checkoutShipping.shippingMethod'),\r\n    ]).pipe(\r\n      map(([textTitle]) => {\r\n        return {\r\n          title: textTitle,\r\n          textBold: deliveryMode.name,\r\n          text: [deliveryMode.description],\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('paymentForm.payment'),\r\n      this.translation.translate('paymentCard.expires', {\r\n        month: paymentDetails.expiryMonth,\r\n        year: paymentDetails.expiryYear,\r\n      }),\r\n    ]).pipe(\r\n      map(([textTitle, textExpires]) => {\r\n        return {\r\n          title: textTitle,\r\n          textBold: paymentDetails.accountHolderName,\r\n          text: [paymentDetails.cardNumber, textExpires],\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  getCheckoutStepUrl(stepType: CheckoutStepType): string {\r\n    const step = this.checkoutConfigService.getCheckoutStep(stepType);\r\n    return step && step.routeName;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\r\nimport { PaymentDetailsSetGuard } from '../../guards/payment-details-set.guard';\r\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { ReviewSubmitComponent } from './review-submit.component';\r\nimport { PromotionsModule } from '../promotions/promotions.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardModule,\r\n    CartSharedModule,\r\n    I18nModule,\r\n    UrlModule,\r\n    RouterModule,\r\n    PromotionsModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutReviewOrder: {\r\n          component: ReviewSubmitComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            ShippingAddressSetGuard,\r\n            DeliveryModeSetGuard,\r\n            PaymentDetailsSetGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ReviewSubmitComponent],\r\n  entryComponents: [ReviewSubmitComponent],\r\n  exports: [ReviewSubmitComponent],\r\n})\r\nexport class ReviewSubmitModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  Address,\r\n  AddressValidation,\r\n  CheckoutDeliveryService,\r\n  Country,\r\n  ErrorModel,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  Region,\r\n  Title,\r\n  UserAddressService,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport {\r\n  ModalRef,\r\n  ModalService,\r\n} from '../../../../../shared/components/modal/index';\r\nimport { sortTitles } from '../../../../../shared/utils/forms/title-utils';\r\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\r\n\r\n@Component({\r\n  selector: 'cx-address-form',\r\n  templateUrl: './address-form.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddressFormComponent implements OnInit, OnDestroy {\r\n  countries$: Observable<Country[]>;\r\n  titles$: Observable<Title[]>;\r\n  regions$: Observable<Region[]>;\r\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n  @Input()\r\n  addressData: Address;\r\n\r\n  @Input()\r\n  actionBtnLabel: string;\r\n\r\n  @Input()\r\n  cancelBtnLabel: string;\r\n\r\n  @Input()\r\n  setAsDefaultField = true;\r\n\r\n  @Input()\r\n  showTitleCode: boolean;\r\n\r\n  @Input()\r\n  showCancelBtn = true;\r\n\r\n  @Output()\r\n  submitAddress = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  backToAddress = new EventEmitter<any>();\r\n\r\n  addressVerifySub: Subscription;\r\n  regionsSub: Subscription;\r\n  suggestedAddressModalRef: ModalRef;\r\n\r\n  addressForm: FormGroup = this.fb.group({\r\n    country: this.fb.group({\r\n      isocode: [null, Validators.required],\r\n    }),\r\n    titleCode: [''],\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    line1: ['', Validators.required],\r\n    line2: [''],\r\n    town: ['', Validators.required],\r\n    region: this.fb.group({\r\n      isocode: [null, Validators.required],\r\n    }),\r\n    postalCode: ['', Validators.required],\r\n    phone: '',\r\n    defaultAddress: [false],\r\n  });\r\n\r\n  constructor(\r\n    protected fb: FormBuilder,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected userService: UserService,\r\n    protected userAddressService: UserAddressService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected modalService: ModalService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // Fetching countries\r\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\r\n      tap((countries: Country[]) => {\r\n        if (Object.keys(countries).length === 0) {\r\n          this.userAddressService.loadDeliveryCountries();\r\n        }\r\n      })\r\n    );\r\n\r\n    // Fetching titles\r\n    this.titles$ = this.userService.getTitles().pipe(\r\n      tap((titles: Title[]) => {\r\n        if (Object.keys(titles).length === 0) {\r\n          this.userService.loadTitles();\r\n        }\r\n      }),\r\n      map((titles) => {\r\n        titles.sort(sortTitles);\r\n        const noneTitle = { code: '', name: 'Title' };\r\n        return [noneTitle, ...titles];\r\n      })\r\n    );\r\n\r\n    // Fetching regions\r\n    this.regions$ = this.selectedCountry$.pipe(\r\n      switchMap((country) => this.userAddressService.getRegions(country)),\r\n      tap((regions: Region[]) => {\r\n        const regionControl = this.addressForm.get('region.isocode');\r\n        if (regions && regions.length > 0) {\r\n          regionControl.enable();\r\n        } else {\r\n          regionControl.disable();\r\n        }\r\n      })\r\n    );\r\n\r\n    // verify the new added address\r\n    this.addressVerifySub = this.checkoutDeliveryService\r\n      .getAddressVerificationResults()\r\n      .subscribe((results: AddressValidation) => {\r\n        if (results.decision === 'FAIL') {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'ACCEPT') {\r\n          this.submitAddress.emit(this.addressForm.value);\r\n        } else if (results.decision === 'REJECT') {\r\n          // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\r\n          if (\r\n            results.errors.errors.some(\r\n              (error: ErrorModel) => error.subject === 'titleCode'\r\n            )\r\n          ) {\r\n            this.globalMessageService.add(\r\n              { key: 'addressForm.titleRequired' },\r\n              GlobalMessageType.MSG_TYPE_ERROR\r\n            );\r\n          } else {\r\n            this.globalMessageService.add(\r\n              { key: 'addressForm.invalidAddress' },\r\n              GlobalMessageType.MSG_TYPE_ERROR\r\n            );\r\n          }\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'REVIEW') {\r\n          this.openSuggestedAddress(results);\r\n        }\r\n      });\r\n\r\n    if (this.addressData && Object.keys(this.addressData).length !== 0) {\r\n      this.addressForm.patchValue(this.addressData);\r\n\r\n      this.countrySelected(this.addressData.country);\r\n      if (this.addressData.region) {\r\n        this.regionSelected(this.addressData.region);\r\n      }\r\n    }\r\n  }\r\n\r\n  countrySelected(country: Country): void {\r\n    this.addressForm['controls'].country['controls'].isocode.setValue(\r\n      country.isocode\r\n    );\r\n    this.selectedCountry$.next(country.isocode);\r\n  }\r\n\r\n  regionSelected(region: Region): void {\r\n    this.addressForm['controls'].region['controls'].isocode.setValue(\r\n      region.isocode\r\n    );\r\n  }\r\n\r\n  toggleDefaultAddress(): void {\r\n    this.addressForm['controls'].defaultAddress.setValue(\r\n      this.addressForm.value.defaultAddress\r\n    );\r\n  }\r\n\r\n  back(): void {\r\n    this.backToAddress.emit();\r\n  }\r\n\r\n  verifyAddress(): void {\r\n    if (this.addressForm.valid) {\r\n      if (this.addressForm.get('region').value.isocode) {\r\n        this.regionsSub = this.regions$.pipe(take(1)).subscribe((regions) => {\r\n          const obj = regions.find(\r\n            (region) =>\r\n              region.isocode ===\r\n              this.addressForm.controls['region'].value.isocode\r\n          );\r\n          Object.assign(this.addressForm.value.region, {\r\n            isocodeShort: obj.isocodeShort,\r\n          });\r\n        });\r\n      }\r\n\r\n      if (this.addressForm.dirty) {\r\n        this.checkoutDeliveryService.verifyAddress(this.addressForm.value);\r\n      } else {\r\n        // address form value not changed\r\n        // ignore duplicate address\r\n        this.submitAddress.emit(undefined);\r\n      }\r\n    } else {\r\n      this.addressForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  openSuggestedAddress(results: AddressValidation): void {\r\n    if (!this.suggestedAddressModalRef) {\r\n      this.suggestedAddressModalRef = this.modalService.open(\r\n        SuggestedAddressDialogComponent,\r\n        { centered: true, size: 'lg' }\r\n      );\r\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.addressForm.value;\r\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\r\n        results.suggestedAddresses;\r\n      this.suggestedAddressModalRef.result\r\n        .then((address) => {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          if (address) {\r\n            address = Object.assign(\r\n              {\r\n                titleCode: this.addressForm.value.titleCode,\r\n                phone: this.addressForm.value.phone,\r\n                selected: true,\r\n              },\r\n              address\r\n            );\r\n            this.submitAddress.emit(address);\r\n          }\r\n          this.suggestedAddressModalRef = null;\r\n        })\r\n        .catch(() => {\r\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          const address = Object.assign(\r\n            {\r\n              selected: true,\r\n            },\r\n            this.addressForm.value\r\n          );\r\n          this.submitAddress.emit(address);\r\n          this.suggestedAddressModalRef = null;\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutDeliveryService.clearAddressVerificationResults();\r\n\r\n    if (this.addressVerifySub) {\r\n      this.addressVerifySub.unsubscribe();\r\n    }\r\n\r\n    if (this.regionsSub) {\r\n      this.regionsSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../../misc/icon/index';\r\nimport { AddressFormComponent } from './address-form.component';\r\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\r\nimport { FormErrorsModule } from '../../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    NgSelectModule,\r\n    IconModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\r\n  entryComponents: [SuggestedAddressDialogComponent],\r\n  exports: [AddressFormComponent, SuggestedAddressDialogComponent],\r\n})\r\nexport class AddressFormModule {}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsLoadedGuard implements CanActivate {\n  constructor(private checkoutDetailsService: CheckoutDetailsService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.checkoutDetailsService.getCheckoutDetailsLoaded$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserAddressService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, take, filter } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\r\n\r\nexport interface CardWithAddress {\r\n  card: Card;\r\n  address: Address;\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-shipping-address',\r\n  templateUrl: './shipping-address.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShippingAddressComponent implements OnInit {\r\n  existingAddresses$: Observable<Address[]>;\r\n  newAddressFormManuallyOpened = false;\r\n  isLoading$: Observable<boolean>;\r\n  cards$: Observable<CardWithAddress[]>;\r\n  selectedAddress$: Observable<Address>;\r\n  forceLoader = false; // this helps with smoother steps transition\r\n  isGuestCheckout = false;\r\n\r\n  constructor(\r\n    protected userAddressService: UserAddressService,\r\n    protected routingService: RoutingService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected translation: TranslationService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading$ = this.userAddressService.getAddressesLoading();\r\n    this.existingAddresses$ = this.userAddressService.getAddresses();\r\n    this.selectedAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\r\n\r\n    this.cards$ = combineLatest([\r\n      this.existingAddresses$,\r\n      this.selectedAddress$,\r\n      this.translation.translate('checkoutAddress.defaultShippingAddress'),\r\n      this.translation.translate('checkoutAddress.shipToThisAddress'),\r\n      this.translation.translate('addressCard.selected'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          addresses,\r\n          selected,\r\n          textDefaultShippingAddress,\r\n          textShipToThisAddress,\r\n          textSelected,\r\n        ]) => {\r\n          // Select default address if none selected\r\n          if (\r\n            addresses.length &&\r\n            (!selected || Object.keys(selected).length === 0)\r\n          ) {\r\n            const defaultAddress = addresses.find(\r\n              (address) => address.defaultAddress\r\n            );\r\n            selected = defaultAddress;\r\n            this.selectAddress(defaultAddress);\r\n          }\r\n          return addresses.map((address) => {\r\n            const card = this.getCardContent(\r\n              address,\r\n              selected,\r\n              textDefaultShippingAddress,\r\n              textShipToThisAddress,\r\n              textSelected\r\n            );\r\n            return {\r\n              address,\r\n              card,\r\n            };\r\n          });\r\n        }\r\n      )\r\n    );\r\n\r\n    if (!this.activeCartService.isGuestCart()) {\r\n      this.userAddressService.loadAddresses();\r\n    } else {\r\n      this.isGuestCheckout = true;\r\n    }\r\n  }\r\n\r\n  getCardContent(\r\n    address: Address,\r\n    selected: any,\r\n    textDefaultShippingAddress: string,\r\n    textShipToThisAddress: string,\r\n    textSelected: string\r\n  ): Card {\r\n    let region = '';\r\n\r\n    if (address.region && address.region.isocode) {\r\n      region = address.region.isocode + ', ';\r\n    }\r\n\r\n    return {\r\n      title: address.defaultAddress ? textDefaultShippingAddress : '',\r\n      textBold: address.firstName + ' ' + address.lastName,\r\n      text: [\r\n        address.line1,\r\n        address.line2,\r\n        address.town + ', ' + region + address.country.isocode,\r\n        address.postalCode,\r\n        address.phone,\r\n      ],\r\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\r\n      header: selected && selected.id === address.id ? textSelected : '',\r\n    };\r\n  }\r\n\r\n  selectAddress(address: Address): void {\r\n    this.checkoutDeliveryService.setDeliveryAddress(address);\r\n  }\r\n\r\n  addAddress(address: Address): void {\r\n    this.selectedAddress$\r\n      .pipe(\r\n        filter((selected) => !!selected?.shippingAddress),\r\n        take(1)\r\n      )\r\n      .subscribe(() => this.goNext());\r\n\r\n    this.forceLoader = true;\r\n\r\n    this.existingAddresses$.pipe(take(1)).subscribe((addresses) => {\r\n      addresses.includes(address)\r\n        ? this.selectAddress(address)\r\n        : this.checkoutDeliveryService.createAndSetAddress(address);\r\n    });\r\n  }\r\n\r\n  showNewAddressForm(): void {\r\n    this.newAddressFormManuallyOpened = true;\r\n  }\r\n\r\n  hideNewAddressForm(goPrevious: boolean = false): void {\r\n    this.newAddressFormManuallyOpened = false;\r\n    if (goPrevious) {\r\n      this.goPrevious();\r\n    }\r\n  }\r\n\r\n  goNext(): void {\r\n    this.routingService.go(\r\n      this.checkoutConfigService.getNextCheckoutStepUrl(this.activatedRoute)\r\n    );\r\n  }\r\n\r\n  goPrevious(): void {\r\n    this.routingService.go(\r\n      this.checkoutConfigService.getPreviousCheckoutStepUrl(\r\n        this.activatedRoute\r\n      ) || 'cart'\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CheckoutProgressMobileBottomModule } from '../checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\r\nimport { CheckoutProgressMobileTopModule } from '../checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { AddressFormModule } from './address-form/address-form.module';\r\nimport { CheckoutDetailsLoadedGuard } from '../../guards/checkout-details-loaded.guard';\r\nimport { ShippingAddressComponent } from './shipping-address.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    AddressFormModule,\r\n    CardModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    CheckoutProgressMobileTopModule,\r\n    CheckoutProgressMobileBottomModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutShippingAddress: {\r\n          component: ShippingAddressComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            CheckoutDetailsLoadedGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ShippingAddressComponent],\r\n  entryComponents: [ShippingAddressComponent],\r\n  exports: [ShippingAddressComponent],\r\n})\r\nexport class ShippingAddressModule {}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutOrchestratorModule } from './components/checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './components/checkout-order-summary/checkout-order-summary.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileBottomModule } from './components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileTopModule } from './components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './components/checkout-progress/checkout-progress.module';\nimport { DeliveryModeModule } from './components/delivery-mode/delivery-mode.module';\nimport { PaymentMethodModule } from './components/payment-method/payment-method.module';\nimport { PlaceOrderModule } from './components/place-order/place-order.module';\nimport { PromotionsModule } from './components/promotions/promotions.module';\nimport { ReviewSubmitModule } from './components/review-submit/review-submit.module';\nimport { ShippingAddressModule } from './components/shipping-address/shipping-address.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    DeliveryModeModule,\n    PaymentMethodModule,\n    PlaceOrderModule,\n    PromotionsModule,\n    ReviewSubmitModule,\n    ShippingAddressModule,\n  ],\n})\nexport class CheckoutComponentModule {}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  AuthService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NotCheckoutAuthGuard implements CanActivate {\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected authService: AuthService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.authService.getUserToken().pipe(\r\n      map((token) => {\r\n        if (token.access_token) {\r\n          this.routingService.go({ cxRoute: 'home' });\r\n        } else if (this.activeCartService.isGuestCart()) {\r\n          this.routingService.go({ cxRoute: 'cart' });\r\n          return false;\r\n        }\r\n        return !token.access_token;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class SkipLinkConfig {\r\n  skipLinks?: SkipLink[];\r\n}\r\n\r\nexport abstract class SkipLink {\r\n  key: string;\r\n  i18nKey: string;\r\n  target?: HTMLElement;\r\n  position?: SkipLinkScrollPosition;\r\n}\r\n\r\nexport enum SkipLinkScrollPosition {\r\n  BEFORE = 'BEFORE',\r\n  AFTER = 'AFTER',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { KeyboardFocusService } from '../../keyboard-focus/services/keyboard-focus.service';\r\nimport { SkipLink, SkipLinkConfig } from '../config/skip-link.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SkipLinkService {\r\n  private skipLinks$ = new BehaviorSubject<SkipLink[]>([]);\r\n\r\n  constructor(\r\n    protected config: SkipLinkConfig,\r\n    protected keyboardFocusService: KeyboardFocusService\r\n  ) {}\r\n\r\n  getSkipLinks(): Observable<SkipLink[]> {\r\n    return this.skipLinks$;\r\n  }\r\n\r\n  add(key: string, target: HTMLElement): void {\r\n    const found: SkipLink = this.config.skipLinks.find(\r\n      (skipLink) => skipLink.key === key\r\n    );\r\n\r\n    if (found) {\r\n      const existing: SkipLink[] = this.skipLinks$.value;\r\n      existing.splice(this.getSkipLinkIndexInArray(key), 0, {\r\n        target,\r\n        i18nKey: found.i18nKey,\r\n        position: found.position,\r\n        key,\r\n      });\r\n      this.skipLinks$.next(existing);\r\n    }\r\n  }\r\n\r\n  remove(key: string): void {\r\n    const found: SkipLink = this.config.skipLinks.find(\r\n      (skipLink) => skipLink.key === key\r\n    );\r\n\r\n    if (found) {\r\n      let existing: SkipLink[] = this.skipLinks$.value;\r\n      existing = existing.filter((skipLink) => skipLink.key !== key);\r\n      this.skipLinks$.next(existing);\r\n    }\r\n  }\r\n\r\n  scrollToTarget(skipLink: SkipLink): void {\r\n    const target =\r\n      skipLink.target instanceof HTMLElement\r\n        ? skipLink.target\r\n        : (skipLink.target as Element).parentElement;\r\n\r\n    // focus first focusable element in the\r\n    const firstFocusable =\r\n      this.keyboardFocusService.findFirstFocusable(target) || target;\r\n\r\n    // we force a tabindex if not available, to ensure we can focus into the element\r\n    const hasTabindex = firstFocusable.hasAttribute('tabindex');\r\n    if (!hasTabindex) {\r\n      firstFocusable.setAttribute('tabindex', '-1');\r\n    }\r\n\r\n    firstFocusable.focus();\r\n\r\n    // drop the tmp tabindex\r\n    if (!hasTabindex) {\r\n      firstFocusable.removeAttribute('tabindex');\r\n    }\r\n  }\r\n\r\n  protected getSkipLinkIndexInArray(key: string): number {\r\n    let index: number = this.config.skipLinks.findIndex(\r\n      (skipLink) => skipLink.key === key\r\n    );\r\n\r\n    while (index > 0) {\r\n      index--;\r\n      const previous: SkipLink = this.config.skipLinks[index];\r\n      if (previous) {\r\n        const existing: SkipLink[] = this.skipLinks$.value;\r\n        const found: number = existing.findIndex(\r\n          (skipLink) => skipLink.key === previous.key\r\n        );\r\n        if (found > -1) {\r\n          return found + 1;\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { SkipLink } from '../config/skip-link.config';\r\nimport { SkipLinkService } from '../service/skip-link.service';\r\n\r\n@Component({\r\n  selector: 'cx-skip-link',\r\n  templateUrl: './skip-link.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SkipLinkComponent {\r\n  skipLinks$: Observable<SkipLink[]> = this.skipLinkService.getSkipLinks();\r\n\r\n  constructor(private skipLinkService: SkipLinkService) {}\r\n\r\n  scrollToTarget(skipLink: SkipLink): void {\r\n    this.skipLinkService.scrollToTarget(skipLink);\r\n  }\r\n}\r\n","import { SkipLinkConfig } from './skip-link.config';\r\n\r\nexport const defaultSkipLinkConfig: SkipLinkConfig = {\r\n  skipLinks: [\r\n    {\r\n      key: 'cx-header',\r\n      i18nKey: 'skipLink.labels.header',\r\n    },\r\n    {\r\n      key: 'cx-main',\r\n      i18nKey: 'skipLink.labels.main',\r\n    },\r\n    { key: 'cx-footer', i18nKey: 'skipLink.labels.footer' },\r\n  ],\r\n};\r\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { SkipLinkService } from '../service/skip-link.service';\r\n\r\n@Directive({\r\n  selector: '[cxSkipLink]',\r\n})\r\nexport class SkipLinkDirective implements OnInit, OnDestroy {\r\n  @Input() cxSkipLink: string;\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected skipLinkService: SkipLinkService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.skipLinkService.add(this.cxSkipLink, this.elementRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.skipLinkService.remove(this.cxSkipLink);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  APP_INITIALIZER,\r\n  ComponentFactoryResolver,\r\n  NgModule,\r\n} from '@angular/core';\r\nimport {\r\n  ConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\r\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\r\nimport { KeyboardFocusModule } from '../keyboard-focus/keyboard-focus.module';\r\nimport { SkipLinkComponent } from './component/skip-link.component';\r\nimport { defaultSkipLinkConfig } from './config/default-skip-link.config';\r\nimport { SkipLinkDirective } from './directive/skip-link.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    ConfigModule.withConfig(defaultSkipLinkConfig),\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [SkipLinkComponent, SkipLinkDirective],\r\n  exports: [SkipLinkDirective],\r\n  entryComponents: [SkipLinkComponent],\r\n\r\n  providers: [\r\n    provideDefaultConfig(defaultSkipLinkConfig),\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: skipLinkFactory,\r\n      deps: [ComponentFactoryResolver, OutletService],\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class SkipLinkModule {}\r\n\r\n/**\r\n * Adds the skip link component before the cx-storefront.\r\n */\r\nexport function skipLinkFactory(\r\n  componentFactoryResolver: ComponentFactoryResolver,\r\n  outletService: OutletService\r\n) {\r\n  const isReady = () => {\r\n    const factory = componentFactoryResolver.resolveComponentFactory(\r\n      SkipLinkComponent\r\n    );\r\n    outletService.add('cx-storefront', <any>factory, OutletPosition.BEFORE);\r\n  };\r\n  return isReady;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HamburgerMenuService {\r\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  constructor(router: Router) {\r\n    router.events\r\n      .pipe(filter((event) => event instanceof NavigationStart))\r\n      .subscribe(() => {\r\n        this.toggle(true);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * toggles the expand state of the hamburger menu\r\n   */\r\n  toggle(forceCollapse?: boolean): void {\r\n    if (forceCollapse) {\r\n      this.isExpanded.next(false);\r\n    } else {\r\n      this.isExpanded.next(!this.isExpanded.value);\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        HamburgerMenuComponent: {\r\n          component: HamburgerMenuComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [HamburgerMenuComponent],\r\n  exports: [HamburgerMenuComponent],\r\n  entryComponents: [HamburgerMenuComponent],\r\n})\r\nexport class HamburgerMenuModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { OutletRefModule } from '../cms-structure/outlet/outlet-ref/outlet-ref.module';\r\nimport { LaunchDialogModule } from './launch-dialog/index';\r\n\r\n@NgModule({\r\n  imports: [OutletRefModule, LaunchDialogModule.forRoot()],\r\n  exports: [OutletRefModule],\r\n})\r\nexport class LayoutModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport {\r\n  CmsService,\r\n  ContentSlotComponentData,\r\n  ContentSlotData,\r\n  DynamicAttributeService,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\r\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\r\nimport { CmsComponentsService } from '../../services/cms-components.service';\r\n\r\n/**\r\n * The `PageSlotComponent` is used to render the CMS page slot and it's components.\r\n *\r\n * The Page slot host element will be supplemented with css classes so that the layout\r\n * can be fully controlled by customers:\r\n * - The page slot _position_ is added as a css class by default.\r\n * - The `cx-pending` is added for as long as the slot hasn't start loading.\r\n * - The `page-fold` style class is added for the page slot which is configured as the page fold.\r\n */\r\n@Component({\r\n  selector: 'cx-page-slot,[cx-page-slot]',\r\n  templateUrl: './page-slot.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PageSlotComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * The position represents the unique key for a page slot on a single page, but can\r\n   * be reused cross pages.\r\n   *\r\n   * The position is used to find the CMS components for the page slot. It is also\r\n   * added as an additional CSS class so that layoutt can be applied.\r\n   */\r\n  @Input() set position(value: string) {\r\n    this.position$.next(value);\r\n  }\r\n  get position(): string {\r\n    return this.position$.value;\r\n  }\r\n\r\n  /**\r\n   * Maintains css classes introduced by the host and adds additional classes.\r\n   */\r\n  @Input() @HostBinding() class: string;\r\n\r\n  /**\r\n   * Indicates that the page slot is the last page slot above the fold.\r\n   */\r\n  @HostBinding('class.page-fold') @Input() isPageFold = false;\r\n\r\n  /**\r\n   * Indicates that the components of the page slot haven't been loaded as long\r\n   * as the isPending state is true.\r\n   */\r\n  @HostBinding('class.cx-pending') isPending = true;\r\n\r\n  /**\r\n   * Indicates that the page slot doesn't contain any components. This is no\r\n   * longer used in spartacus, but kept for backwards compatibility.\r\n   */\r\n  @HostBinding('class.has-components') @Input() hasComponents = false;\r\n\r\n  protected position$: BehaviorSubject<string> = new BehaviorSubject(undefined);\r\n\r\n  components: ContentSlotComponentData[];\r\n\r\n  protected slot$: Observable<ContentSlotData> = this.position$.pipe(\r\n    switchMap((position) => this.cmsService.getContentSlot(position)),\r\n    distinctUntilChanged(this.isDistinct)\r\n  );\r\n\r\n  /** Observes the components for the given page slot. */\r\n  components$: Observable<ContentSlotComponentData[]> = this.slot$.pipe(\r\n    map((slot) => slot?.components ?? [])\r\n  );\r\n\r\n  protected subscription: Subscription = new Subscription();\r\n\r\n  /** Keeps track of the pending components that must be loaded for the page slot */\r\n  private pendingComponentCount = 0;\r\n\r\n  /** Tracks the last used position, in case the page slot is used dynamically */\r\n  private lastPosition: string;\r\n  constructor(\r\n    protected cmsService: CmsService,\r\n    protected dynamicAttributeService: DynamicAttributeService,\r\n    protected renderer: Renderer2,\r\n    protected elementRef: ElementRef,\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.slot$.pipe(tap((slot) => this.decorate(slot))).subscribe((value) => {\r\n        this.components = value?.components || [];\r\n        this.cd.markForCheck();\r\n      })\r\n    );\r\n  }\r\n\r\n  protected decorate(slot: ContentSlotData): void {\r\n    let cls = this.class || '';\r\n\r\n    if (this.lastPosition && cls.indexOf(this.lastPosition) > -1) {\r\n      cls = cls.replace(this.lastPosition, '');\r\n    }\r\n    if (this.position$.value) {\r\n      cls += ` ${this.position$.value}`;\r\n      this.lastPosition = this.position$.value;\r\n    }\r\n\r\n    // host bindings\r\n    this.pending = slot?.components?.length || 0;\r\n    this.hasComponents = slot?.components?.length > 0;\r\n    if (cls && cls !== this.class) {\r\n      this.class = cls;\r\n    }\r\n\r\n    this.addSmartEditSlotClass(slot);\r\n  }\r\n\r\n  /**\r\n   * Sets the pending count for the page slot components. Once all pending components are\r\n   * loaded, the `isPending` flag is updated, so that the associated class can be updated\r\n   */\r\n  protected set pending(count: number) {\r\n    this.pendingComponentCount = count;\r\n    this.isPending = this.pendingComponentCount > 0;\r\n  }\r\n\r\n  protected get pending(): number {\r\n    return this.pendingComponentCount;\r\n  }\r\n\r\n  /*\r\n   * Is triggered when a component is added to the view. This is used to\r\n   * update the pending count\r\n   */\r\n  isLoaded(loadState: boolean) {\r\n    if (loadState) {\r\n      this.pending--;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The `DeferLoadingStrategy` indicates whether the component should be\r\n   * rendered instantly or whether it should be deferred.\r\n   */\r\n  getComponentDeferOptions(componentType: string): IntersectionOptions {\r\n    const deferLoading = this.cmsComponentsService.getDeferLoadingStrategy(\r\n      componentType\r\n    );\r\n    return { deferLoading };\r\n  }\r\n\r\n  protected isDistinct(old: ContentSlotData, current: ContentSlotData) {\r\n    return (\r\n      current.components &&\r\n      old.components?.length === current.components.length &&\r\n      !old.components.find(\r\n        (el, index) => el.uid !== current.components[index].uid\r\n      )\r\n    );\r\n  }\r\n\r\n  private addSmartEditSlotClass(slot: ContentSlotData): void {\r\n    if (slot) {\r\n      this.dynamicAttributeService.addDynamicAttributes(\r\n        this.elementRef.nativeElement,\r\n        this.renderer,\r\n        { slotData: slot }\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription?.unsubscribe();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { OutletModule } from '../../outlet/outlet.module';\r\nimport { PageComponentModule } from '../component/page-component.module';\r\nimport { PageSlotComponent } from './page-slot.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OutletModule, PageComponentModule],\r\n  providers: [],\r\n  declarations: [PageSlotComponent],\r\n  exports: [PageSlotComponent],\r\n})\r\nexport class PageSlotModule {}\r\n","import { Inject, Injectable, isDevMode, Optional } from '@angular/core';\r\nimport { CmsService, Page } from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\r\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\r\nimport {\r\n  BREAKPOINT,\r\n  LayoutConfig,\r\n  LayoutSlotConfig,\r\n  SlotConfig,\r\n} from '../../../layout/config/layout-config';\r\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PageLayoutService {\r\n  constructor(\r\n    private cms: CmsService,\r\n    private config: LayoutConfig,\r\n    private breakpointService: BreakpointService,\r\n    @Optional()\r\n    @Inject(PAGE_LAYOUT_HANDLER)\r\n    private handlers: PageLayoutHandler[]\r\n  ) {}\r\n\r\n  // Prints warn messages for missing layout configs.\r\n  // The warnings are only printed once per config\r\n  // to not pollute the console log.\r\n  private warnLogMessages = {};\r\n  private logSlots = {};\r\n\r\n  getSlots(section?: string): Observable<string[]> {\r\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\r\n      map(([page, breakpoint]) => {\r\n        const pageTemplate = page.template;\r\n        const slots = this.resolveSlots(page, section, breakpoint);\r\n        return { slots, pageTemplate, breakpoint };\r\n      }),\r\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\r\n        let result = of(slots);\r\n        for (const handler of this.handlers || []) {\r\n          result = handler.handle(result, pageTemplate, section, breakpoint);\r\n        }\r\n        return result;\r\n      }),\r\n      distinctUntilChanged((a, b) => {\r\n        if (a.length !== b.length) {\r\n          return false;\r\n        }\r\n        for (let i = 0; i < a.length; i++) {\r\n          if (a[i] !== b[i]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns an observable with the last page slot above-the-fold\r\n   * for the given pageTemplate / breakpoint.\r\n   *\r\n   * The page fold is configurable in the `LayoutConfig` for each page layout.\r\n   */\r\n  getPageFoldSlot(pageTemplate: string): Observable<string> {\r\n    return this.breakpointService.breakpoint$.pipe(\r\n      map((breakpoint) => {\r\n        if (!this.config.layoutSlots) {\r\n          // no layout config available\r\n          return null;\r\n        }\r\n        const pageTemplateConfig = this.config.layoutSlots[pageTemplate];\r\n        const config = this.getResponsiveSlotConfig(\r\n          <LayoutSlotConfig>pageTemplateConfig,\r\n          'pageFold',\r\n          breakpoint\r\n        );\r\n        return config ? config.pageFold : null;\r\n      })\r\n    );\r\n  }\r\n\r\n  private resolveSlots(page, section, breakpoint): string[] {\r\n    const config = this.getSlotConfig(\r\n      page.template,\r\n      'slots',\r\n      section,\r\n      breakpoint\r\n    );\r\n    if (config && config.slots) {\r\n      const pageSlots = Object.keys(page.slots);\r\n      return config.slots.filter((slot) => pageSlots.includes(slot));\r\n    } else if (!section) {\r\n      this.logMissingLayoutConfig(page);\r\n      return Object.keys(page.slots);\r\n    } else {\r\n      this.logMissingLayoutConfig(page, section);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  get page$(): Observable<Page> {\r\n    return this.cms.getCurrentPage().pipe(filter((page) => !!page));\r\n  }\r\n\r\n  get templateName$(): Observable<string> {\r\n    return this.page$.pipe(\r\n      filter((page) => !!page.template),\r\n      map((page: Page) => page.template)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * load slots from the layout configuration. The breakpoint is used\r\n   * to load a specific configuration for the given breakpoint. If there's\r\n   * no configuration available for the given breakpoint the default slot\r\n   * configuration is returned.\r\n   */\r\n  protected getSlotConfig(\r\n    templateUid: string,\r\n    configAttribute: string,\r\n    section?: string,\r\n    breakpoint?: BREAKPOINT\r\n  ): SlotConfig {\r\n    if (!this.config.layoutSlots) {\r\n      return null;\r\n    }\r\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\r\n\r\n    if (section) {\r\n      return this.getSlotConfigForSection(\r\n        templateUid,\r\n        configAttribute,\r\n        section,\r\n        breakpoint\r\n      );\r\n    }\r\n\r\n    if (pageTemplateConfig) {\r\n      return this.getResponsiveSlotConfig(\r\n        <LayoutSlotConfig>pageTemplateConfig,\r\n        configAttribute,\r\n        breakpoint\r\n      );\r\n    }\r\n  }\r\n\r\n  protected getSlotConfigForSection(\r\n    templateUid: string,\r\n    configAttribute: string,\r\n    section?: string,\r\n    breakpoint?: BREAKPOINT\r\n  ): SlotConfig {\r\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\r\n\r\n    if (!pageTemplateConfig) {\r\n      return null;\r\n    }\r\n\r\n    // if there's no section config on the page layout\r\n    // we fall back to the global section config\r\n    const sectionConfig = pageTemplateConfig[section]\r\n      ? pageTemplateConfig[section]\r\n      : this.config.layoutSlots[section];\r\n\r\n    if (!sectionConfig) {\r\n      return null;\r\n    }\r\n\r\n    const responsiveConfig = this.getResponsiveSlotConfig(\r\n      <LayoutSlotConfig>sectionConfig,\r\n      configAttribute,\r\n      breakpoint\r\n    );\r\n\r\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\r\n      return responsiveConfig;\r\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\r\n      return pageTemplateConfig[section];\r\n    } else if (this.config.layoutSlots[section]) {\r\n      return <SlotConfig>this.config.layoutSlots[section];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a list of slots for a breakpoint specific configuratoin\r\n   * If there's no specific configuration for the breakpoint,\r\n   * the closest available configuration will be returned.\r\n   */\r\n  protected getResponsiveSlotConfig(\r\n    layoutSlotConfig: LayoutSlotConfig,\r\n    configAttribute: string,\r\n    breakpoint?: BREAKPOINT\r\n  ): SlotConfig {\r\n    let slotConfig = <SlotConfig>layoutSlotConfig;\r\n\r\n    // fallback to default slot config\r\n    if (!layoutSlotConfig || !breakpoint) {\r\n      return slotConfig;\r\n    }\r\n\r\n    // we have a config for the specific breakpoint\r\n    if (\r\n      layoutSlotConfig[breakpoint] &&\r\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\r\n    ) {\r\n      return <SlotConfig>layoutSlotConfig[breakpoint];\r\n    }\r\n\r\n    // find closest config\r\n    const all = this.breakpointService.breakpoints;\r\n\r\n    for (const br of all.splice(0, all.indexOf(breakpoint))) {\r\n      if (\r\n        layoutSlotConfig[br] &&\r\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\r\n      ) {\r\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\r\n      }\r\n    }\r\n    return slotConfig;\r\n  }\r\n\r\n  /**\r\n   * In order to help developers, we print some detailed log information in\r\n   * case there's no layout configuration available for the given page template\r\n   * or section. Additionally, the slot positions are printed in the console\r\n   * in a format that can be copied / paste to the configuration.\r\n   */\r\n  private logMissingLayoutConfig(page: Page, section?: string): void {\r\n    if (!isDevMode()) {\r\n      return;\r\n    }\r\n    if (!this.logSlots[page.template]) {\r\n      // the info log is not printed in production\r\n      // tslint:disable-next-line: no-console\r\n      console.info(\r\n        `Available CMS page slots: '${Object.keys(page.slots).join(`','`)}'`\r\n      );\r\n      this.logSlots[page.template] = true;\r\n    }\r\n\r\n    const cacheKey = section || page.template;\r\n    if (!this.warnLogMessages[cacheKey]) {\r\n      console.warn(\r\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\r\n      );\r\n      this.warnLogMessages[cacheKey] = true;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { PageLayoutService } from './page-layout.service';\r\n\r\n@Component({\r\n  selector: 'cx-page-layout',\r\n  templateUrl: './page-layout.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PageLayoutComponent {\r\n  @Input() set section(value: string) {\r\n    this.section$.next(value);\r\n  }\r\n  readonly section$: BehaviorSubject<string> = new BehaviorSubject(undefined);\r\n  readonly templateName$: Observable<string> = this.pageLayoutService\r\n    .templateName$;\r\n\r\n  readonly layoutName$: Observable<string> = this.section$.pipe(\r\n    switchMap((section) => (section ? of(section) : this.templateName$)),\r\n    tap((name) => {\r\n      this.styleClass = name;\r\n    })\r\n  );\r\n\r\n  readonly slots$: Observable<string[]> = this.section$.pipe(\r\n    switchMap((section) => this.pageLayoutService.getSlots(section))\r\n  );\r\n\r\n  readonly pageFoldSlot$: Observable<string> = this.templateName$.pipe(\r\n    switchMap((templateName) =>\r\n      this.pageLayoutService.getPageFoldSlot(templateName)\r\n    ),\r\n    distinctUntilChanged()\r\n  );\r\n\r\n  private currentClass;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private pageLayoutService: PageLayoutService\r\n  ) {}\r\n\r\n  set styleClass(cls: string) {\r\n    if (this.currentClass) {\r\n      this.renderer.removeClass(this.el.nativeElement, this.currentClass);\r\n    }\r\n    this.renderer.addClass(this.el.nativeElement, cls);\r\n    this.currentClass = cls;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\r\nimport { OutletModule } from '../../outlet/outlet.module';\r\nimport { PageLayoutComponent } from './page-layout.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OutletModule, PageSlotModule],\r\n  declarations: [PageLayoutComponent],\r\n  exports: [PageLayoutComponent],\r\n})\r\nexport class PageLayoutModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class PWAModuleConfig {\r\n  pwa?: {\r\n    enabled?: boolean;\r\n    addToHomeScreen?: boolean;\r\n  };\r\n}\r\n\r\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\r\n  pwa: {\r\n    enabled: false,\r\n    addToHomeScreen: false,\r\n  },\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { PWAModuleConfig } from '../pwa.module-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AddToHomeScreenService {\r\n  private deferredEvent: any;\r\n\r\n  private canPrompt = new BehaviorSubject<boolean>(false);\r\n\r\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\r\n\r\n  constructor(\r\n    private config: PWAModuleConfig,\r\n    private globalMessageService: GlobalMessageService,\r\n    private winRef: WindowRef\r\n  ) {\r\n    if (this.config.pwa.addToHomeScreen) {\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  init() {\r\n    if (this.winRef.nativeWindow) {\r\n      this.winRef.nativeWindow.addEventListener(\r\n        'beforeinstallprompt',\r\n        (event) => {\r\n          event.preventDefault();\r\n          this.deferredEvent = event;\r\n          this.enableAddToHomeScreen();\r\n        }\r\n      );\r\n\r\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\r\n        this.globalMessageService.add(\r\n          { key: 'pwa.addedToHomeScreen' },\r\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n        );\r\n\r\n        this.disableAddToHomeScreen();\r\n        this.deferredEvent = null;\r\n      });\r\n    }\r\n  }\r\n\r\n  enableAddToHomeScreen(): void {\r\n    this.canPrompt.next(true);\r\n  }\r\n\r\n  disableAddToHomeScreen(): void {\r\n    this.canPrompt.next(false);\r\n  }\r\n\r\n  firePrompt(): void {\r\n    if (this.deferredEvent) {\r\n      this.deferredEvent.prompt();\r\n    }\r\n  }\r\n}\r\n","import { OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { APP_INITIALIZER, isDevMode, NgModule } from '@angular/core';\r\nimport {\r\n  ServiceWorkerModule,\r\n  SwRegistrationOptions,\r\n} from '@angular/service-worker';\r\nimport { Config, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\r\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\r\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\r\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\r\n\r\nexport function pwaConfigurationFactory(\r\n  pwaConfig: PWAModuleConfig\r\n): SwRegistrationOptions {\r\n  return { enabled: (!isDevMode() && pwaConfig.pwa.enabled) || false };\r\n}\r\n\r\nexport function pwaFactory(addToHomeScreenService): any {\r\n  const result = () => addToHomeScreenService;\r\n  return result;\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ServiceWorkerModule.register('/ngsw-worker.js'),\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(defaultPWAModuleConfig),\r\n    {\r\n      provide: SwRegistrationOptions,\r\n      useFactory: pwaConfigurationFactory,\r\n      deps: [Config],\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: pwaFactory,\r\n      deps: [AddToHomeScreenService],\r\n      multi: true,\r\n    },\r\n  ],\r\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\r\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\r\n})\r\nexport class PwaModule {}\r\n","import { APP_INITIALIZER, Provider } from '@angular/core';\r\nimport { LanguageService, WindowRef } from '@spartacus/core';\r\n\r\nexport const htmlLangProvider: Provider = {\r\n  provide: APP_INITIALIZER,\r\n  multi: true,\r\n  useFactory: setHtmlLangAttribute,\r\n  deps: [WindowRef, LanguageService],\r\n};\r\n\r\n/**\r\n * Sets active language in <html lang=\"\">\r\n */\r\nexport function setHtmlLangAttribute(\r\n  winRef: WindowRef,\r\n  languageService: LanguageService\r\n) {\r\n  const result = () => {\r\n    languageService.getActive().subscribe((lang) => {\r\n      winRef.document.documentElement.lang = lang.replace(/_/g, '-');\r\n    });\r\n  };\r\n  return result;\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\r\nimport { PageMeta, PageMetaService, PageRobotsMeta } from '@spartacus/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SeoMetaService implements OnDestroy {\r\n  constructor(\r\n    protected ngTitle: Title,\r\n    protected ngMeta: Meta,\r\n    protected pageMetaService: PageMetaService\r\n  ) {}\r\n\r\n  private subscription: Subscription;\r\n\r\n  init() {\r\n    this.subscription = this.pageMetaService\r\n      .getMeta()\r\n      .pipe(filter(Boolean))\r\n      .subscribe((meta: PageMeta) => (this.meta = meta));\r\n  }\r\n\r\n  protected set meta(meta: PageMeta) {\r\n    this.title = meta.title;\r\n    this.description = meta.description;\r\n    this.image = meta.image;\r\n    this.robots = meta.robots || [PageRobotsMeta.INDEX, PageRobotsMeta.FOLLOW];\r\n  }\r\n\r\n  protected set title(title: string) {\r\n    this.ngTitle.setTitle(title || '');\r\n  }\r\n\r\n  protected set description(value: string) {\r\n    this.addTag({ name: 'description', content: value });\r\n  }\r\n\r\n  protected set image(imageUrl: string) {\r\n    if (imageUrl) {\r\n      this.addTag({ name: 'og:image', content: imageUrl });\r\n    }\r\n  }\r\n\r\n  protected set robots(value: PageRobotsMeta[]) {\r\n    if (value) {\r\n      this.addTag({ name: 'robots', content: value.join(', ') });\r\n    }\r\n  }\r\n\r\n  protected addTag(meta: MetaDefinition) {\r\n    if (meta.content) {\r\n      this.ngMeta.updateTag(meta);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  PLATFORM_ID,\n  Renderer2,\n  RendererFactory2,\n  SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdScriptFactory {\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: string,\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  build(schema: {}[]): void {\n    if (schema && this.isJsonLdRequired()) {\n      this.createJsonLdScriptElement().innerHTML = this.sanitize(schema);\n    }\n  }\n\n  /**\n   * Only return schema data in case of SSR or development mode,\n   * to not waste memory unnecessary.\n   */\n  isJsonLdRequired(): boolean {\n    return !isPlatformBrowser(this.platformId) || isDevMode();\n  }\n\n  private createJsonLdScriptElement(): HTMLScriptElement {\n    const id = 'json-ld';\n    let scriptElement: HTMLScriptElement = <HTMLScriptElement>(\n      this.winRef.document.getElementById(id)\n    );\n\n    if (!scriptElement) {\n      const renderer: Renderer2 = this.rendererFactory.createRenderer(\n        null,\n        null\n      );\n      const script: HTMLScriptElement = renderer.createElement('script');\n      script.id = id;\n      script.type = 'application/ld+json';\n      renderer.appendChild(this.winRef.document.body, script);\n      scriptElement = script;\n    }\n    return scriptElement;\n  }\n\n  /**\n   * Sanitizes the given json-ld schema by leveraging the angular HTML sanitizer.\n   *\n   * The given schema is not trusted, as malicious code could be injected (XSS)\n   * into the json-ld script.\n   */\n  sanitize(schema: {}): string {\n    return JSON.stringify(schema, (_key, value) =>\n      typeof value === 'string'\n        ? this.sanitizer.sanitize(SecurityContext.HTML, value)\n        : value\n    );\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Low level directive that adds a json-ld script tag to the component.\n * This code bypasses the strict XSS security, as otherwise we're not able\n * to append a script tag with JS inside.\n */\n@Directive({\n  selector: '[cxJsonLd]',\n})\nexport class JsonLdDirective {\n  @Input() set cxJsonLd(schema: string | number) {\n    this.writeJsonLd(schema);\n  }\n\n  @HostBinding('innerHTML') jsonLD: SafeHtml;\n\n  constructor(\n    protected jsonLdScriptFactory: JsonLdScriptFactory,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  private writeJsonLd(schema: {}) {\n    if (schema && this.jsonLdScriptFactory.isJsonLdRequired()) {\n      const sanitizedSchema = this.jsonLdScriptFactory.sanitize(schema);\n      const html = `<script type=\"application/ld+json\">${sanitizedSchema}</script>`;\n      this.jsonLD = this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Injection token to extend schema builders for adding structural data (json-ld).\n *\n * Some builders (i.e. `JSONLD_PRODUCT_BUILDER`) might have additional\n * lowever level builder to further extend the schema.\n */\nexport const SCHEMA_BUILDER = new InjectionToken('SchemaBuilderToken');\n\n/**\n * Injection token to add specific json-ld builders for product related schema's.\n * See see https://schema.org/product for more information.\n */\nexport const JSONLD_PRODUCT_BUILDER = new InjectionToken(\n  'JsonLdProductBuilderToken'\n);\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\r\nimport { combineLatest, Observable, of, Subscription } from 'rxjs';\r\nimport { SchemaBuilder } from './builders/schema.interface';\r\nimport { SCHEMA_BUILDER } from './builders/tokens';\r\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StructuredDataFactory implements OnDestroy {\r\n  constructor(\r\n    private scriptBuilder: JsonLdScriptFactory,\r\n    @Optional()\r\n    @Inject(SCHEMA_BUILDER)\r\n    private builders: SchemaBuilder[]\r\n  ) {}\r\n\r\n  private subscription: Subscription;\r\n\r\n  build() {\r\n    this.subscription = this.collectSchemas().subscribe((schema: {}[]) => {\r\n      this.scriptBuilder.build(schema);\r\n    });\r\n  }\r\n\r\n  private collectSchemas(): Observable<any[]> {\r\n    if (!this.scriptBuilder.isJsonLdRequired() || !this.builders) {\r\n      return of();\r\n    }\r\n    return combineLatest(\r\n      this.builders.map((builder) => builder.build())\r\n    ).pipe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { JsonLdDirective } from './json-ld.directive';\nimport { StructuredDataFactory } from './structured-data.factory';\n\n/**\n * Factory to build the structure data\n * without any interaction with the UI.\n */\nexport function getStructuredDataFactory(injector: Injector) {\n  const result = () => {\n    const factory = injector.get(StructuredDataFactory);\n    factory.build();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [JsonLdDirective],\n  exports: [JsonLdDirective],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getStructuredDataFactory,\n      deps: [Injector],\n      multi: true,\n    },\n  ],\n})\nexport class StructuredDataModule {}\n","import { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { htmlLangProvider } from './html-lang-provider';\nimport { SeoMetaService } from './seo-meta.service';\nimport { StructuredDataModule } from './structured-data/structured-data.module';\n\nexport function initSeoService(injector: Injector) {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [StructuredDataModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport {\r\n  FocusConfig,\r\n  KeyboardFocusService,\r\n} from '../a11y/keyboard-focus/index';\r\nimport { SkipLinkComponent } from '../a11y/skip-link/index';\r\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\r\n\r\n@Component({\r\n  selector: 'cx-storefront',\r\n  templateUrl: './storefront.component.html',\r\n})\r\nexport class StorefrontComponent implements OnInit, OnDestroy {\r\n  navigateSubscription: Subscription;\r\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\r\n\r\n  @HostBinding('class.start-navigating') startNavigating;\r\n  @HostBinding('class.stop-navigating') stopNavigating;\r\n\r\n  // required by esc focus\r\n  @HostBinding('tabindex') tabindex = '0';\r\n\r\n  @ViewChild(SkipLinkComponent) child: SkipLinkComponent;\r\n\r\n  private keyboardFocusConfig: FocusConfig = {\r\n    focusOnEscape: true,\r\n    focusOnDoubleEscape: true,\r\n  };\r\n\r\n  @HostListener('keydown.escape', ['$event'])\r\n  handleEscape(event: KeyboardEvent): void {\r\n    this.keyboardFocusService.handleEscape(\r\n      this.elementRef.nativeElement,\r\n      this.keyboardFocusConfig,\r\n      event\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private hamburgerMenuService: HamburgerMenuService,\r\n    private routingService: RoutingService,\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected keyboardFocusService: KeyboardFocusService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.navigateSubscription = this.routingService\r\n      .isNavigating()\r\n      .subscribe((val) => {\r\n        this.startNavigating = val === true;\r\n        this.stopNavigating = val === false;\r\n      });\r\n  }\r\n\r\n  collapseMenuIfClickOutside(event: MouseEvent) {\r\n    if ((<HTMLElement>event.target).className.includes('is-expanded')) {\r\n      this.collapseMenu();\r\n    }\r\n  }\r\n\r\n  collapseMenu(): void {\r\n    this.hamburgerMenuService.toggle(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.navigateSubscription) {\r\n      this.navigateSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FeaturesConfigModule } from '@spartacus/core';\r\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\r\nimport { OutletRefModule } from '../../cms-structure/outlet/outlet-ref/outlet-ref.module';\r\nimport { OutletModule } from '../../cms-structure/outlet/outlet.module';\r\nimport { PageLayoutModule } from '../../cms-structure/page/page-layout/page-layout.module';\r\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\r\nimport { PwaModule } from '../../cms-structure/pwa/pwa.module';\r\nimport { SeoModule } from '../../cms-structure/seo/seo.module';\r\nimport { AnonymousConsentsDialogModule } from '../../shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module';\r\nimport { KeyboardFocusModule } from '../a11y/keyboard-focus/keyboard-focus.module';\r\nimport { SkipLinkModule } from '../a11y/skip-link/skip-link.module';\r\nimport { StorefrontComponent } from './storefront.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    GlobalMessageComponentModule,\r\n    OutletModule,\r\n    OutletRefModule,\r\n    PwaModule,\r\n    PageLayoutModule,\r\n    SeoModule,\r\n    PageSlotModule,\r\n    AnonymousConsentsDialogModule,\r\n    FeaturesConfigModule,\r\n\r\n    SkipLinkModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [StorefrontComponent],\r\n  exports: [StorefrontComponent],\r\n})\r\nexport class MainModule {}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { CmsActivatedRouteSnapshot } from '@spartacus/core';\r\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\r\nimport { endWith, first, skipWhile } from 'rxjs/operators';\r\nimport { CmsComponentsService } from './cms-components.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsGuardsService {\r\n  constructor(\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected injector: Injector\r\n  ) {}\r\n\r\n  cmsPageCanActivate(\r\n    componentTypes: string[],\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    const guards = this.cmsComponentsService.getGuards(componentTypes);\r\n\r\n    if (guards.length) {\r\n      const canActivateObservables = guards.map((guardClass) => {\r\n        const guard = this.injector.get<CanActivate>(guardClass, null);\r\n        if (isCanActivate(guard)) {\r\n          return wrapIntoObservable(guard.canActivate(route, state)).pipe(\r\n            first()\r\n          );\r\n        } else {\r\n          throw new Error('Invalid CanActivate guard in cmsMapping');\r\n        }\r\n      });\r\n\r\n      return concat(...canActivateObservables).pipe(\r\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\r\n        endWith(true),\r\n        first()\r\n      );\r\n    } else {\r\n      return of(true);\r\n    }\r\n  }\r\n}\r\n\r\nfunction wrapIntoObservable<T>(\r\n  value: T | Promise<T> | Observable<T>\r\n): Observable<T> {\r\n  if (isObservable(value)) {\r\n    return value;\r\n  }\r\n\r\n  if (isPromise(value)) {\r\n    return from(Promise.resolve(value));\r\n  }\r\n\r\n  return of(value);\r\n}\r\n\r\nfunction isPromise(obj: any): obj is Promise<any> {\r\n  return !!obj && typeof obj.then === 'function';\r\n}\r\n\r\nfunction isCanActivate(guard: any): guard is CanActivate {\r\n  return guard && isFunction<CanActivate>(guard.canActivate);\r\n}\r\n\r\nfunction isFunction<T>(v: any): v is T {\r\n  return typeof v === 'function';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslationChunkService, TranslationService } from '@spartacus/core';\r\nimport { CmsComponentsService } from './cms-components.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsI18nService {\r\n  constructor(\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected translation: TranslationService,\r\n    protected translationChunk: TranslationChunkService\r\n  ) {}\r\n\r\n  loadForComponents(componentTypes: string[]) {\r\n    const i18nKeys = this.cmsComponentsService.getI18nKeys(componentTypes);\r\n    const i18nChunks = new Set<string>();\r\n    for (const key of i18nKeys) {\r\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\r\n    }\r\n    this.translation.loadChunks(Array.from(i18nChunks));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\nimport { CmsRoute, PageContext, PageType } from '@spartacus/core';\r\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\r\nimport { CmsComponentsService } from './cms-components.service';\r\n\r\n// This service should be exposed in public API only after the refactor planned in https://github.com/SAP/spartacus/issues/7070\r\n@Injectable({ providedIn: 'root' })\r\nexport class CmsRoutesImplService {\r\n  constructor(\r\n    private router: Router,\r\n    private cmsComponentsService: CmsComponentsService\r\n  ) {}\r\n\r\n  private cmsRouteExists(url: string): boolean {\r\n    const isCmsDrivenRoute = url.startsWith('/');\r\n\r\n    if (!isCmsDrivenRoute) {\r\n      return false;\r\n    }\r\n\r\n    const routePath = url.substr(1);\r\n\r\n    return (\r\n      isCmsDrivenRoute &&\r\n      !!this.router.config.find(\r\n        (route: CmsRoute) =>\r\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\r\n   *\r\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\r\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\r\n   *\r\n   * @param pageContext\r\n   * @param currentUrl\r\n   */\r\n  handleCmsRoutesInGuard(\r\n    pageContext: PageContext,\r\n    componentTypes: string[],\r\n    currentUrl: string,\r\n    currentPageLabel: string\r\n  ): boolean {\r\n    if (this.cmsRouteExists(currentPageLabel)) {\r\n      return true;\r\n    }\r\n\r\n    const componentRoutes = this.cmsComponentsService.getChildRoutes(\r\n      componentTypes\r\n    );\r\n    if (componentRoutes.length) {\r\n      if (this.updateRouting(pageContext, currentPageLabel, componentRoutes)) {\r\n        this.router.navigateByUrl(currentUrl);\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private updateRouting(\r\n    pageContext: PageContext,\r\n    pageLabel: string,\r\n    routes: Route[]\r\n  ): boolean {\r\n    if (\r\n      pageContext.type === PageType.CONTENT_PAGE &&\r\n      pageLabel.startsWith('/') &&\r\n      pageLabel.length > 1\r\n    ) {\r\n      const newRoute: CmsRoute = {\r\n        path: pageLabel.substr(1),\r\n        component: PageLayoutComponent,\r\n        children: routes,\r\n        data: {\r\n          cxCmsRouteContext: {\r\n            type: pageContext.type,\r\n            id: pageLabel,\r\n          },\r\n        },\r\n      };\r\n\r\n      this.router.resetConfig([newRoute, ...this.router.config]);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PageContext } from '@spartacus/core';\r\nimport { CmsRoutesImplService } from './cms-routes-impl.service';\r\n\r\n// Public injection token for the private implementation of the service `CmsRoutesImplService`.\r\n// After #7070, this class should be replaced with a real implementation.\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: CmsRoutesImplService,\r\n})\r\nexport abstract class CmsRoutesService {\r\n  abstract handleCmsRoutesInGuard(\r\n    pageContext: PageContext,\r\n    componentTypes: string[],\r\n    currentUrl: string,\r\n    currentPageLabel: string\r\n  ): boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport {\r\n  CmsActivatedRouteSnapshot,\r\n  CmsService,\r\n  Page,\r\n  PageContext,\r\n  PageType,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport {\r\n  filter,\r\n  map,\r\n  switchMap,\r\n  take,\r\n  tap,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\nimport { CmsGuardsService } from '../services/cms-guards.service';\r\nimport { CmsI18nService } from '../services/cms-i18n.service';\r\nimport { CmsRoutesService } from '../services/cms-routes.service';\r\nimport { CmsComponentsService } from '../services';\r\n\r\n/**\r\n * Helper service for `CmsPageGuard`\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsPageGuardService {\r\n  constructor(\r\n    protected semanticPathService: SemanticPathService,\r\n    protected cmsService: CmsService,\r\n    protected cmsRoutes: CmsRoutesService,\r\n    protected cmsI18n: CmsI18nService,\r\n    protected cmsGuards: CmsGuardsService,\r\n    protected cmsComponentsService: CmsComponentsService\r\n  ) {}\r\n\r\n  /**\r\n   * Takes CMS components types in the current CMS page, triggers (configurable) side effects and returns a boolean - whether the route can be activated.\r\n   *\r\n   * Based on `cmsComponents` config for the components in the page:\r\n   * - Evaluates components' guards; if one of them emits false or UrlTree - the route cannot be activated or redirects to the given UrlTree, respectively.\r\n   * - If all components' guards emitted true, then the route can be activated\r\n   * - Then we trigger loading of configured i18n chunks in parallel\r\n   * - And we register the configured children routes of cms components\r\n   *\r\n   * @param pageContext current cms page context\r\n   * @param pageData cms page data\r\n   * @param route activated route snapshot\r\n   * @param state router state snapshot\r\n   *\r\n   * @returns boolean observable - whether the route can be activated\r\n   */\r\n  canActivatePage(\r\n    pageContext: PageContext,\r\n    pageData: Page,\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\r\n      take(1),\r\n      switchMap((componentTypes) =>\r\n        this.cmsComponentsService.determineMappings(componentTypes)\r\n      ),\r\n      switchMap((componentTypes) =>\r\n        this.cmsGuards\r\n          .cmsPageCanActivate(componentTypes, route, state)\r\n          .pipe(withLatestFrom(of(componentTypes)))\r\n      ),\r\n      tap(([canActivate, componentTypes]) => {\r\n        if (canActivate === true) {\r\n          this.cmsI18n.loadForComponents(componentTypes);\r\n        }\r\n      }),\r\n      map(([canActivate, componentTypes]) => {\r\n        const pageLabel = pageData.label || pageContext.id; // for content pages the page label returned from backend can be different than ID initially assumed from route\r\n        if (canActivate === true && !route?.data?.cxCmsRouteContext) {\r\n          return this.cmsRoutes.handleCmsRoutesInGuard(\r\n            pageContext,\r\n            componentTypes,\r\n            state.url,\r\n            pageLabel\r\n          );\r\n        }\r\n        return canActivate;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Activates the \"NOT FOUND\" cms page.\r\n   *\r\n   * It loads cms page data for the \"NOT FOUND\" page and puts it in the state of the the requested page label.\r\n   * Then it processes its CMS components with the method `canActivatePage()` of this service. For more, see its docs.\r\n   */\r\n  canActivateNotFoundPage(\r\n    pageContext: PageContext,\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    const notFoundCmsPageContext: PageContext = {\r\n      type: PageType.CONTENT_PAGE,\r\n      id: this.semanticPathService.get('notFound'),\r\n    };\r\n\r\n    return this.cmsService.getPage(notFoundCmsPageContext).pipe(\r\n      switchMap((notFoundPage) => {\r\n        if (notFoundPage) {\r\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\r\n            tap((notFoundIndex) => {\r\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\r\n            }),\r\n            switchMap((notFoundIndex) =>\r\n              this.cmsService.getPageIndex(pageContext).pipe(\r\n                // we have to wait for page index update\r\n                filter((index) => index === notFoundIndex)\r\n              )\r\n            ),\r\n            switchMap(() =>\r\n              this.canActivatePage(pageContext, notFoundPage, route, state)\r\n            )\r\n          );\r\n        }\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport {\r\n  CmsActivatedRouteSnapshot,\r\n  CmsService,\r\n  ProtectedRoutesGuard,\r\n  RouteLoadStrategy,\r\n  RoutingConfigService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { first, switchMap } from 'rxjs/operators';\r\nimport { CmsPageGuardService } from './cms-page-guard.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsPageGuard implements CanActivate {\r\n  static guardName = 'CmsPageGuard';\r\n\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected cmsService: CmsService,\r\n    protected protectedRoutesGuard: ProtectedRoutesGuard,\r\n    protected service: CmsPageGuardService,\r\n    protected routingConfig: RoutingConfigService\r\n  ) {}\r\n\r\n  /**\r\n   * Tries to load the CMS page data for the anticipated route and returns:\r\n   * - `true` - if it can be activated\r\n   * - `false` - if it cannot be activated\r\n   * - `UrlTree` - if user should be redirected to a given `UrlTree`\r\n   *\r\n   * If the route can be activated, it fires additional calculations on the CMS components present on this CMS page,\r\n   * based on their configuration (`cmsComponents` config).\r\n   *\r\n   * For more, see docs of the `CmsPageGuardService.canActivatePage`.\r\n   */\r\n  canActivate(\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    return this.protectedRoutesGuard.canActivate(route).pipe(\r\n      switchMap((canActivate) =>\r\n        canActivate\r\n          ? this.routingService.getNextPageContext().pipe(\r\n              switchMap((pageContext) =>\r\n                this.cmsService.getPage(pageContext, this.shouldReload()).pipe(\r\n                  first(),\r\n                  switchMap((pageData) =>\r\n                    pageData\r\n                      ? this.service.canActivatePage(\r\n                          pageContext,\r\n                          pageData,\r\n                          route,\r\n                          state\r\n                        )\r\n                      : this.service.canActivateNotFoundPage(\r\n                          pageContext,\r\n                          route,\r\n                          state\r\n                        )\r\n                  )\r\n                )\r\n              )\r\n            )\r\n          : of(false)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns whether we should reload the CMS page data, even when it was loaded before.\r\n   */\r\n  private shouldReload(): boolean {\r\n    return this.routingConfig.getLoadStrategy() !== RouteLoadStrategy.ONCE;\r\n  }\r\n}\r\n","import { Injector } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../page/page-layout/page-layout.component';\r\n\r\nconst cmsRoute: Route = {\r\n  path: '**',\r\n  canActivate: [CmsPageGuard],\r\n  component: PageLayoutComponent,\r\n};\r\n\r\nexport function addCmsRoute(injector: Injector) {\r\n  const result = () => {\r\n    const router = injector.get(Router);\r\n    router.config.push(cmsRoute);\r\n  };\r\n  return result;\r\n}\r\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","import { RoutesConfig, RoutingConfig } from '@spartacus/core';\r\n\r\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\r\n  home: { paths: [''] },\r\n  notFound: { paths: ['not-found'] },\r\n  cart: { paths: ['cart'] },\r\n\r\n  // semantic links for login related pages\r\n  login: { paths: ['login'], protected: false },\r\n  register: { paths: ['login/register'], protected: false },\r\n  forgotPassword: { paths: ['login/forgot-password'], protected: false },\r\n  resetPassword: { paths: ['login/pw/change'], protected: false },\r\n  logout: { paths: ['logout'] },\r\n  checkoutLogin: { paths: ['checkout-login'] },\r\n\r\n  checkout: { paths: ['checkout'] },\r\n  checkoutShippingAddress: { paths: ['checkout/shipping-address'] },\r\n  checkoutDeliveryMode: { paths: ['checkout/delivery-mode'] },\r\n  checkoutPaymentDetails: { paths: ['checkout/payment-details'] },\r\n  checkoutReviewOrder: { paths: ['checkout/review-order'] },\r\n  orderConfirmation: { paths: ['order-confirmation'] },\r\n\r\n  // plp routes\r\n  search: { paths: ['search/:query'] },\r\n  category: {\r\n    paths: ['category/:categoryCode'],\r\n    paramsMapping: { categoryCode: 'code' },\r\n  },\r\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\r\n\r\n  // pdp routes\r\n  product: {\r\n    paths: ['product/:productCode/:name'],\r\n    paramsMapping: { productCode: 'code' },\r\n  },\r\n\r\n  termsAndConditions: { paths: ['terms-and-conditions'] },\r\n  orders: {\r\n    paths: ['my-account/orders'],\r\n  },\r\n  orderDetails: {\r\n    paths: ['my-account/order/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderGuest: {\r\n    paths: ['guest/order/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderReturn: {\r\n    paths: ['my-account/order/return/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderReturnConfirmation: {\r\n    paths: ['my-account/order/return/confirmation/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderCancel: {\r\n    paths: ['my-account/order/cancel/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderCancelConfirmation: {\r\n    paths: ['my-account/order/cancel/confirmation/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  returnRequestDetails: {\r\n    paths: ['my-account/return-request/:returnCode'],\r\n    paramsMapping: { returnCode: 'rma' },\r\n  },\r\n  coupons: { paths: ['my-account/coupons'] },\r\n  couponClaim: {\r\n    paths: ['my-account/coupon/claim/:couponCode'],\r\n    paramsMapping: { couponCode: 'code' },\r\n  },\r\n};\r\n\r\nexport const defaultRoutingConfig: RoutingConfig = {\r\n  routing: {\r\n    routes: defaultStorefrontRoutesConfig,\r\n  },\r\n};\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport {\r\n  provideDefaultConfig,\r\n  RoutingModule as CoreRoutingModule,\r\n} from '@spartacus/core';\r\nimport { CmsRouteModule } from './cms-route/cms-route.module';\r\nimport { defaultRoutingConfig } from './default-routing-config';\r\n\r\n@NgModule({\r\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\r\n})\r\nexport class RoutingModule {\r\n  static forRoot(): ModuleWithProviders<RoutingModule> {\r\n    return {\r\n      ngModule: RoutingModule,\r\n      providers: [provideDefaultConfig(defaultRoutingConfig)],\r\n    };\r\n  }\r\n}\r\n","import { isDevMode } from '@angular/core';\r\nimport { UrlMatchResult, UrlSegment } from '@angular/router';\r\n\r\n/**\r\n * Matches the pattern '[ ** / ] marker / :paramName'\r\n *\r\n * @param marker phrase that indicates the start of the match\r\n * @param paramName name of the parameter present after the marker\r\n * @param precedingParamName name of the parameter for every preceding url segment\r\n *        i.e. `param` will result in `param0`, `param1`, ...\r\n */\r\nexport function getSuffixUrlMatcher({\r\n  marker,\r\n  paramName,\r\n  precedingParamName,\r\n}: {\r\n  marker: string;\r\n  paramName: string;\r\n  precedingParamName?: string;\r\n}) {\r\n  precedingParamName = precedingParamName || 'param';\r\n  const matcher = function suffixUrlMatcher(\r\n    segments: UrlSegment[]\r\n  ): UrlMatchResult | null {\r\n    const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\r\n    const isMarkerLastSegment = markerIndex === segments.length - 1;\r\n\r\n    if (markerIndex === -1 || isMarkerLastSegment) {\r\n      return null;\r\n    }\r\n\r\n    const paramIndex = markerIndex + 1;\r\n    const posParams: { [name: string]: UrlSegment } = {\r\n      [paramName]: segments[paramIndex],\r\n    };\r\n\r\n    for (let i = 0; i < markerIndex; i++) {\r\n      posParams[`${precedingParamName}${i}`] = segments[i];\r\n    }\r\n\r\n    return { consumed: segments.slice(0, paramIndex + 1), posParams };\r\n  };\r\n\r\n  if (isDevMode()) {\r\n    matcher['_suffixRouteConfig'] = { marker, paramName, precedingParamName }; // property added for easier debugging of routes\r\n  }\r\n\r\n  return matcher;\r\n}\r\n\r\nfunction findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\r\n  for (let index = elements.length - 1; index >= 0; index--) {\r\n    if (predicate(elements[index])) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PageMeta, PageMetaService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SchemaBuilder } from '../schema.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BreadcrumbSchemaBuilder implements SchemaBuilder {\r\n  constructor(protected pageMetaService: PageMetaService) {}\r\n\r\n  build(): Observable<any> {\r\n    return this.pageMetaService\r\n      .getMeta()\r\n      .pipe(map((pageMeta: PageMeta) => this.collect(pageMeta)));\r\n  }\r\n\r\n  protected collect(pageMeta: PageMeta): any {\r\n    if (!pageMeta?.breadcrumbs) {\r\n      return;\r\n    }\r\n    const crumbs = pageMeta.breadcrumbs.map((crumb, index) => {\r\n      return {\r\n        '@type': 'ListItem',\r\n        position: index + 1,\r\n        item: {\r\n          '@id': crumb.link,\r\n          name: crumb.label,\r\n        },\r\n      };\r\n    });\r\n\r\n    if (pageMeta.title) {\r\n      crumbs.push({\r\n        '@type': 'ListItem',\r\n        position: crumbs.length + 1,\r\n        item: {\r\n          '@id': pageMeta.title,\r\n          name: pageMeta.title,\r\n        },\r\n      });\r\n    }\r\n\r\n    return {\r\n      '@context': 'http://schema.org',\r\n      '@type': 'BreadcrumbList',\r\n      itemListElement: crumbs,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the basic structured data for the product, see https://schema.org/product.\n * This builder includes data for sku number, name, description, brand and main image.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdBaseProductBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    return of({\n      ...this.getProductBase(product),\n      ...this.getProductBrand(product),\n      ...this.getProductImage(product),\n    });\n  }\n\n  private getProductBase(product: Product) {\n    const result: any = { sku: product.code };\n    if (product.name) {\n      result.name = product.name;\n    }\n    if (product.summary) {\n      result.description = product.summary;\n    }\n    return result;\n  }\n\n  private getProductImage(product: Product) {\n    return product.images &&\n      product.images.PRIMARY &&\n      product.images.PRIMARY['zoom'] &&\n      product.images.PRIMARY['zoom'].url\n      ? {\n          image: product.images.PRIMARY['zoom'].url,\n        }\n      : {};\n  }\n\n  private getProductBrand(product: Product) {\n    return product['manufacturer']\n      ? {\n          brand: product['manufacturer'],\n        }\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product offer, see https://schema.org/offers.\n * The data includes the price, currency and availability level.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductOfferBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    const schema: any = { '@type': 'Offer' };\n    if (product.price) {\n      if (product.price.value) {\n        schema.price = product.price.value;\n      }\n      if (product.price.currencyIso) {\n        schema.priceCurrency = product.price.currencyIso;\n      }\n    }\n\n    if (product.stock && product.stock.stockLevelStatus) {\n      schema.availability =\n        product.stock.stockLevelStatus === 'inStock' ? 'InStock' : 'OutOfStock';\n    }\n\n    return of({\n      offers: schema,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { JsonLdBuilder } from '../schema.interface';\r\n\r\n/**\r\n * Builds the structured data for the product reviews, see https://schema.org/Review.\r\n * The data includes the aggregated product rating and the individual reviews.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JsonLdProductReviewBuilder implements JsonLdBuilder<Product> {\r\n  constructor(private reviewService: ProductReviewService) {}\r\n\r\n  build(product: Product): Observable<any> {\r\n    return this.reviewService.getByProductCode(product.code).pipe(\r\n      filter(Boolean),\r\n      map((reviews: Review[]) => {\r\n        return {\r\n          aggregateRating: this.buildAggregatedReviews(product, reviews),\r\n          review: reviews.map((review) => this.buildReviews(review)),\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildAggregatedReviews(product: Product, reviews: Review[]) {\r\n    const aggregated: any = {\r\n      '@type': 'AggregateRating',\r\n    };\r\n    if (product.averageRating) {\r\n      aggregated.ratingValue = product.averageRating;\r\n    }\r\n    if (reviews) {\r\n      aggregated.ratingCount = reviews.filter((rev) => !!rev.rating).length;\r\n      aggregated.reviewCount = reviews.filter((rev) => !!rev.comment).length;\r\n    }\r\n    return aggregated;\r\n  }\r\n\r\n  private buildReviews(review: Review) {\r\n    const reviewSchema: any = {\r\n      '@type': 'review',\r\n    };\r\n\r\n    if (review.principal && review.principal.name) {\r\n      reviewSchema.author = review.principal.name;\r\n    }\r\n    if (review.date) {\r\n      const date = new Date(review.date);\r\n      reviewSchema.datePublished = `${date.getFullYear()}-${\r\n        date.getMonth() + 1\r\n      }-${date.getDate()}`;\r\n    }\r\n    if (review.headline) {\r\n      reviewSchema.name = review.headline;\r\n    }\r\n    if (review.comment) {\r\n      reviewSchema.description = review.comment;\r\n    }\r\n    if (review.rating) {\r\n      reviewSchema.reviewRating = {\r\n        '@type': 'Rating',\r\n        ratingValue: review.rating.toString(),\r\n      };\r\n    }\r\n\r\n    return reviewSchema;\r\n  }\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Product } from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { CurrentProductService } from '../../../../../cms-components/product/current-product.service';\r\nimport { JsonLdBuilder, SchemaBuilder } from '../schema.interface';\r\nimport { JSONLD_PRODUCT_BUILDER } from '../tokens';\r\n\r\n/**\r\n * Adds the minimal structured data for the product, see https://schema.org/product.\r\n * The actual data collection is delegated to `JsonLdBuilder`s, which can be injected\r\n * using the `JSONLD_PRODUCT_BUILDER` token.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductSchemaBuilder implements SchemaBuilder {\r\n  constructor(\r\n    private currentProduct: CurrentProductService,\r\n    @Optional()\r\n    @Inject(JSONLD_PRODUCT_BUILDER)\r\n    protected builders: JsonLdBuilder<Product>[]\r\n  ) {}\r\n\r\n  build(): Observable<any> {\r\n    return this.currentProduct.getProduct().pipe(\r\n      switchMap((product: Product) => {\r\n        if (product) {\r\n          return combineLatest(this.collect(product)).pipe(\r\n            map((res: {}[]) => Object.assign({}, ...res))\r\n          );\r\n        }\r\n        return of({});\r\n      })\r\n    );\r\n  }\r\n\r\n  protected collect(product: Product): Observable<any>[] {\r\n    if (!product || !product.code) {\r\n      return [];\r\n    }\r\n    const builders = this.builders\r\n      ? this.builders.map((builder) => builder.build(product))\r\n      : [];\r\n    return [\r\n      of({\r\n        '@context': 'http://schema.org',\r\n        '@type': 'Product',\r\n      }),\r\n      ...builders,\r\n    ];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BreadcrumbSchemaBuilder } from './breadcrumb/index';\nimport {\n  JsonLdBaseProductBuilder,\n  JsonLdProductOfferBuilder,\n  JsonLdProductReviewBuilder,\n  ProductSchemaBuilder,\n} from './product/index';\nimport { JSONLD_PRODUCT_BUILDER, SCHEMA_BUILDER } from './tokens';\n\n/**\n * Provides several standard json-ld builders that contribute\n * to colleting and building json-ld data.\n */\n@NgModule({\n  providers: [\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: ProductSchemaBuilder,\n      multi: true,\n    },\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: BreadcrumbSchemaBuilder,\n      multi: true,\n    },\n    // lower level json-ld builder classes offering fine-graiend control\n    // for product related schema's\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdBaseProductBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductOfferBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductReviewBuilder,\n      multi: true,\n    },\n  ],\n})\nexport class JsonLdBuilderModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\r\nimport {\r\n  CmsBannerCarouselComponent as model,\r\n  CmsService,\r\n  ContentSlotComponentData,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/index';\r\n\r\n/**\r\n * Generic carousel that renders CMS Components.\r\n */\r\n@Component({\r\n  selector: 'cx-banner-carousel',\r\n  templateUrl: 'banner-carousel.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BannerCarouselComponent {\r\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\r\n    filter(Boolean),\r\n    tap((d: model) => (this.theme = `${d.effect}-theme`))\r\n  );\r\n\r\n  private items$: Observable<\r\n    Observable<ContentSlotComponentData>[]\r\n  > = this.componentData$.pipe(\r\n    map((data) => data.banners.trim().split(' ')),\r\n    map((codes) => codes.map((code) => this.cmsService.getComponentData(code)))\r\n  );\r\n\r\n  /**\r\n   * Adds a specific theme for the carousel. The effect can be\r\n   * used in CSS customisations.\r\n   */\r\n  @HostBinding('class') theme = '';\r\n\r\n  constructor(\r\n    private componentData: CmsComponentData<model>,\r\n    private cmsService: CmsService\r\n  ) {}\r\n\r\n  /**\r\n   * Returns an Obervable with an Array of Observables. This is done, so that\r\n   * the component UI could consider to lazy load the UI components when they're\r\n   * in the viewpoint.\r\n   */\r\n  getItems(): Observable<Observable<ContentSlotComponentData>[]> {\r\n    return this.items$;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\r\nimport { CarouselModule, MediaModule } from '../../../shared/components/index';\r\nimport { BannerCarouselComponent } from './banner-carousel.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PageComponentModule, CarouselModule, MediaModule],\r\n  providers: [\r\n    provideDefaultConfig({\r\n      cmsComponents: {\r\n        RotatingImagesComponent: {\r\n          component: BannerCarouselComponent,\r\n        },\r\n      },\r\n    } as CmsConfig),\r\n  ],\r\n  declarations: [BannerCarouselComponent],\r\n  entryComponents: [BannerCarouselComponent],\r\n  exports: [BannerCarouselComponent],\r\n})\r\nexport class BannerCarouselModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsBannerComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  constructor(public component: CmsComponentData<CmsBannerComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { BannerComponent } from './banner.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, GenericLinkModule, MediaModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        SimpleResponsiveBannerComponent: {\r\n          component: BannerComponent,\r\n        },\r\n        BannerComponent: {\r\n          component: BannerComponent,\r\n        },\r\n        SimpleBannerComponent: {\r\n          component: BannerComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [BannerComponent],\r\n  entryComponents: [BannerComponent],\r\n  exports: [BannerComponent],\r\n})\r\nexport class BannerModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  constructor(public component: CmsComponentData<CmsLinkComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { LinkComponent } from './link.component';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, GenericLinkModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSLinkComponent: { component: LinkComponent },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [LinkComponent],\r\n  exports: [LinkComponent],\r\n  entryComponents: [LinkComponent],\r\n})\r\nexport class LinkModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  constructor(public component: CmsComponentData<CmsParagraphComponent>) {}\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ParagraphComponent } from './paragraph.component';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSParagraphComponent: {\r\n          component: ParagraphComponent,\r\n        },\r\n        CMSTabParagraphComponent: {\r\n          component: ParagraphComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ParagraphComponent],\r\n  exports: [ParagraphComponent],\r\n  entryComponents: [ParagraphComponent],\r\n})\r\nexport class CmsParagraphModule {}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChildren,\r\n} from '@angular/core';\r\nimport {\r\n  CmsService,\r\n  CMSTabParagraphContainer,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap } from 'rxjs/operators';\r\nimport { ComponentWrapperDirective } from '../../../cms-structure/page/component/component-wrapper.directive';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\r\n\r\n@Component({\r\n  selector: 'cx-tab-paragraph-container',\r\n  templateUrl: './tab-paragraph-container.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TabParagraphContainerComponent\r\n  implements AfterViewInit, OnInit, OnDestroy {\r\n  activeTabNum = 0;\r\n\r\n  @ViewChildren(ComponentWrapperDirective) children!: QueryList<\r\n    ComponentWrapperDirective\r\n  >;\r\n\r\n  tabTitleParams: Observable<any>[] = [];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\r\n    protected cmsService: CmsService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  components$: Observable<any[]> = this.componentData.data$.pipe(\r\n    distinctUntilChanged((x, y) => x?.components === y?.components),\r\n    switchMap((data) =>\r\n      combineLatest(\r\n        (data?.components ?? '').split(' ').map((component) =>\r\n          this.cmsService.getComponentData<any>(component).pipe(\r\n            distinctUntilChanged(),\r\n            map((tab) => {\r\n              if (!tab) {\r\n                return undefined;\r\n              }\r\n\r\n              if (!tab.flexType) {\r\n                tab = {\r\n                  ...tab,\r\n                  flexType: tab.typeCode,\r\n                };\r\n              }\r\n\r\n              return {\r\n                ...tab,\r\n                title: `${data.uid}.tabs.${tab.uid}`,\r\n              };\r\n            })\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  select(tabNum: number): void {\r\n    this.activeTabNum = tabNum;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activeTabNum =\r\n      this.winRef.nativeWindow?.history?.state?.activeTab ?? this.activeTabNum;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // If the sub cms components data exist, the components created before ngAfterViewInit are called.\r\n    // In this case, the title parameters are directly pulled from them.\r\n    // If the sub cms components data does not exist, it should should be loaded first.\r\n    // In this case, listen to the changes to wait for them to be created.\r\n    if (this.children.length > 0) {\r\n      this.getTitleParams(this.children);\r\n    } else {\r\n      this.subscription = this.children.changes.subscribe(\r\n        (tabComps: QueryList<ComponentWrapperDirective>) =>\r\n          this.getTitleParams(tabComps)\r\n      );\r\n    }\r\n  }\r\n\r\n  private getTitleParams(children: QueryList<ComponentWrapperDirective>) {\r\n    children.forEach((comp) => {\r\n      if (comp.cmpRef && comp.cmpRef.instance.tabTitleParam$) {\r\n        this.tabTitleParams.push(comp.cmpRef.instance.tabTitleParam$);\r\n      } else {\r\n        this.tabTitleParams.push(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\r\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\r\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PageComponentModule, OutletModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSTabParagraphContainer: {\r\n          component: TabParagraphContainerComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [TabParagraphContainerComponent],\r\n  entryComponents: [TabParagraphContainerComponent],\r\n  exports: [TabParagraphContainerComponent],\r\n})\r\nexport class TabParagraphContainerModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  UserAddressService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AddressBookComponentService {\r\n  constructor(\r\n    protected userAddressService: UserAddressService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService\r\n  ) {}\r\n\r\n  getAddresses(): Observable<Address[]> {\r\n    return this.userAddressService.getAddresses();\r\n  }\r\n\r\n  getAddressesStateLoading(): Observable<boolean> {\r\n    return this.userAddressService.getAddressesLoading();\r\n  }\r\n\r\n  loadAddresses() {\r\n    this.userAddressService.loadAddresses();\r\n  }\r\n\r\n  addUserAddress(address: Address) {\r\n    this.userAddressService.addUserAddress(address);\r\n  }\r\n\r\n  updateUserAddress(addressId: string, address: Address) {\r\n    this.userAddressService.updateUserAddress(addressId, address);\r\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  Address,\r\n  TranslationService,\r\n  UserAddressService,\r\n  CheckoutDeliveryService,\r\n} from '@spartacus/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { AddressBookComponentService } from './address-book.component.service';\r\nimport { Card } from '../../../shared/components/card';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-address-book',\r\n  templateUrl: './address-book.component.html',\r\n})\r\nexport class AddressBookComponent implements OnInit {\r\n  addresses$: Observable<Address[]>;\r\n  cards$: Observable<Card[]>;\r\n  addressesStateLoading$: Observable<boolean>;\r\n  currentAddress: Address;\r\n\r\n  showAddAddressForm = false;\r\n  showEditAddressForm = false;\r\n  editCard: string;\r\n\r\n  constructor(\r\n    public service: AddressBookComponentService,\r\n    protected translation: TranslationService,\r\n    protected userAddressService: UserAddressService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.addresses$ = this.service.getAddresses();\r\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\r\n    this.service.loadAddresses();\r\n  }\r\n\r\n  addAddressButtonHandle(): void {\r\n    this.showEditAddressForm = false;\r\n    this.showAddAddressForm = true;\r\n  }\r\n\r\n  editAddressButtonHandle(address: Address): void {\r\n    this.showAddAddressForm = false;\r\n    this.showEditAddressForm = true;\r\n    this.currentAddress = address;\r\n  }\r\n\r\n  addAddressSubmit(address: Address): void {\r\n    this.showAddAddressForm = false;\r\n    this.service.addUserAddress(address);\r\n  }\r\n\r\n  addAddressCancel(): void {\r\n    this.showAddAddressForm = false;\r\n  }\r\n\r\n  editAddressSubmit(address: Address): void {\r\n    this.showEditAddressForm = false;\r\n    this.service.updateUserAddress(this.currentAddress['id'], address);\r\n  }\r\n\r\n  editAddressCancel(): void {\r\n    this.showEditAddressForm = false;\r\n  }\r\n\r\n  getCardContent(address: Address) {\r\n    return combineLatest([\r\n      this.translation.translate('addressCard.default'),\r\n      this.translation.translate('addressCard.setAsDefault'),\r\n      this.translation.translate('common.delete'),\r\n      this.translation.translate('common.edit'),\r\n      this.translation.translate('addressBook.areYouSureToDeleteAddress'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          defaultText,\r\n          setAsDefaultText,\r\n          textDelete,\r\n          textEdit,\r\n          textVerifyDeleteMsg,\r\n        ]) => {\r\n          let region = '';\r\n\r\n          if (address.region && address.region.isocode) {\r\n            region = address.region.isocode + ', ';\r\n          }\r\n\r\n          const actions: { name: string; event: string }[] = [];\r\n          if (!address.defaultAddress) {\r\n            actions.push({ name: setAsDefaultText, event: 'default' });\r\n          }\r\n          actions.push({ name: textEdit, event: 'edit' });\r\n          actions.push({ name: textDelete, event: 'delete' });\r\n\r\n          return {\r\n            textBold: address.firstName + ' ' + address.lastName,\r\n            text: [\r\n              address.line1,\r\n              address.line2,\r\n              address.town + ', ' + region + address.country.isocode,\r\n              address.postalCode,\r\n              address.phone,\r\n            ],\r\n            actions: actions,\r\n            header: address.defaultAddress ? `✓ ${defaultText}` : '',\r\n            deleteMsg: textVerifyDeleteMsg,\r\n          };\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  setAddressAsDefault(addressId: string): void {\r\n    this.userAddressService.setAddressAsDefault(addressId);\r\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\r\n  }\r\n\r\n  deleteAddress(addressId: string): void {\r\n    this.userAddressService.deleteUserAddress(addressId);\r\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\r\n  }\r\n\r\n  setEdit(addressId: string): void {\r\n    if (this.editCard !== addressId) {\r\n      this.editCard = addressId;\r\n    } else {\r\n      this.deleteAddress(addressId);\r\n    }\r\n  }\r\n\r\n  cancelCard(): void {\r\n    this.editCard = null;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UserAddressService,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { AddressFormModule } from '../../checkout/components/shipping-address/address-form/address-form.module';\r\nimport { AddressBookComponent } from './address-book.component';\r\nimport { AddressBookComponentService } from './address-book.component.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardModule,\r\n    AddressFormModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n  ],\r\n  declarations: [AddressBookComponent],\r\n  exports: [AddressBookComponent],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AccountAddressBookComponent: {\r\n          component: AddressBookComponent,\r\n          providers: [\r\n            {\r\n              provide: AddressBookComponentService,\r\n              useClass: AddressBookComponentService,\r\n              deps: [UserAddressService],\r\n            },\r\n          ],\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n    UserAddressService,\r\n  ],\r\n  entryComponents: [AddressBookComponent],\r\n})\r\nexport class AddressBookModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserService,\r\n  UserToken,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\r\nimport { ModalService } from '../../../../../shared/components/modal/modal.service';\r\n\r\n@Component({\r\n  selector: 'cx-close-account-modal',\r\n  templateUrl: './close-account-modal.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CloseAccountModalComponent implements OnInit, OnDestroy {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  private subscription = new Subscription();\r\n  userToken$: Observable<UserToken>;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected modalService: ModalService,\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n    private globalMessageService: GlobalMessageService,\r\n    private routingService: RoutingService,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.userToken$ = this.authService.getUserToken();\r\n    this.userService.resetRemoveUserProcessState();\r\n    this.subscription.add(\r\n      this.userService\r\n        .getRemoveUserResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.userService\r\n        .getRemoveUserResultError()\r\n        .subscribe((error) => this.onError(error))\r\n    );\r\n    this.isLoading$ = this.userService.getRemoveUserResultLoading();\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.dismissModal();\r\n      this.translationService\r\n        .translate('closeAccount.accountClosedSuccessfully')\r\n        .pipe(first())\r\n        .subscribe((text) => {\r\n          this.globalMessageService.add(\r\n            text,\r\n            GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n          );\r\n        });\r\n      this.routingService.go({ cxRoute: 'home' });\r\n    }\r\n  }\r\n\r\n  onError(error: boolean): void {\r\n    if (error) {\r\n      this.dismissModal();\r\n      this.translationService\r\n        .translate('closeAccount.accountClosedFailure')\r\n        .pipe(first())\r\n        .subscribe((text) => {\r\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_ERROR);\r\n        });\r\n    }\r\n  }\r\n\r\n  dismissModal(reason?: any): void {\r\n    this.modalService.dismissActiveModal(reason);\r\n  }\r\n\r\n  closeAccount() {\r\n    this.userService.remove();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { CloseAccountModalComponent } from '../close-account-modal/close-account-modal.component';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account',\n  templateUrl: './close-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountComponent {\n  modal: any;\n  constructor(private modalService: ModalService) {}\n\n  openModal(): void {\n    this.modal = this.modalService.open(CloseAccountModalComponent, {\n      centered: true,\n    }).componentInstance;\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { CloseAccountModalComponent } from './components/close-account-modal/close-account-modal.component';\r\nimport { IconModule } from '../../../cms-components/misc/icon/index';\r\nimport { CloseAccountComponent } from './components/close-account/close-account.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CloseAccountComponent: {\r\n          component: CloseAccountComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CloseAccountComponent, CloseAccountModalComponent],\r\n  exports: [CloseAccountComponent, CloseAccountModalComponent],\r\n  entryComponents: [CloseAccountComponent, CloseAccountModalComponent],\r\n})\r\nexport class CloseAccountModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { RoutingService, UserService } from '@spartacus/core';\r\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\r\n@Component({\r\n  selector: 'cx-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      userEmail: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.emailValidator],\r\n      ],\r\n    });\r\n  }\r\n\r\n  requestForgotPasswordEmail() {\r\n    if (this.forgotPasswordForm.valid) {\r\n      this.userService.requestForgotPasswordEmail(\r\n        this.forgotPasswordForm.value.userEmail\r\n      );\r\n      this.routingService.go({ cxRoute: 'login' });\r\n    } else {\r\n      this.forgotPasswordForm.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ForgotPasswordComponent } from './forgot-password.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ForgotPasswordComponent: {\r\n          component: ForgotPasswordComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ForgotPasswordComponent],\r\n  exports: [ForgotPasswordComponent],\r\n  entryComponents: [ForgotPasswordComponent],\r\n})\r\nexport class ForgotPasswordModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  HostBinding,\r\n  Input,\r\n} from '@angular/core';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'cx-amend-order-actions',\r\n  templateUrl: './amend-order-actions.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AmendOrderActionsComponent {\r\n  @Input() orderCode: string;\r\n  @Input() amendOrderForm: FormGroup;\r\n  @Input() backRoute: string;\r\n  @Input() forwardRoute: string;\r\n\r\n  @HostBinding('class') styles = 'row';\r\n\r\n  constructor(protected routingService: RoutingService) {}\r\n\r\n  continue(event: Event): void {\r\n    if (this.amendOrderForm.valid) {\r\n      this.routingService.go({\r\n        cxRoute: this.forwardRoute,\r\n        params: { code: this.orderCode },\r\n      });\r\n    } else {\r\n      this.amendOrderForm.markAllAsTouched();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { AmendOrderActionsComponent } from './amend-order-actions.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [AmendOrderActionsComponent],\n  exports: [AmendOrderActionsComponent],\n})\nexport class AmendOrderActionsModule {}\n","export enum AmendOrderType {\n  CANCEL,\n  RETURN,\n}\n","import { formatCurrency, getCurrencySymbol } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Order, OrderEntry, Price } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../order-details/order-details.service';\r\nimport { AmendOrderType } from './amend-order.model';\r\n\r\nfunction ValidateQuantityToCancel(control: FormControl) {\r\n  if (!control.value) {\r\n    return null;\r\n  }\r\n  const quantity = Object.values(control.value).reduce(\r\n    (acc: number, val: number) => acc + val,\r\n    0\r\n  );\r\n  return quantity > 0 ? null : { cxNoSelectedItemToCancel: true };\r\n}\r\n\r\n@Injectable()\r\nexport abstract class OrderAmendService {\r\n  protected amendType: AmendOrderType;\r\n  protected form: FormGroup;\r\n\r\n  constructor(protected orderDetailsService: OrderDetailsService) {}\r\n\r\n  /**\r\n   * Returns entries for the given order.\r\n   */\r\n  abstract getEntries(): Observable<OrderEntry[]>;\r\n\r\n  /**\r\n   * Returns entries with an amended quantity.\r\n   */\r\n  getAmendedEntries(): Observable<OrderEntry[]> {\r\n    return this.getForm().pipe(\r\n      switchMap((form) => {\r\n        return this.getEntries().pipe(\r\n          map((entries) =>\r\n            entries.filter(\r\n              (entry) => this.getFormControl(form, entry).value > 0\r\n            )\r\n          )\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Submits the amended order.\r\n   */\r\n  abstract save(): void;\r\n\r\n  getOrder(): Observable<Order> {\r\n    return this.orderDetailsService.getOrderDetails();\r\n  }\r\n\r\n  /**\r\n   * returns the form with form data at runtime\r\n   */\r\n  getForm(): Observable<FormGroup> {\r\n    return this.getOrder().pipe(\r\n      tap((order) => {\r\n        if (!this.form || this.form.get('orderCode').value !== order.code) {\r\n          this.buildForm(order);\r\n        }\r\n      }),\r\n      map(() => this.form)\r\n    );\r\n  }\r\n\r\n  private buildForm(order: Order): void {\r\n    this.form = new FormGroup({});\r\n    this.form.addControl('orderCode', new FormControl(order.code));\r\n\r\n    const entryGroup = new FormGroup(\r\n      {},\r\n      { validators: [ValidateQuantityToCancel] }\r\n    );\r\n    this.form.addControl('entries', entryGroup);\r\n\r\n    (order.entries || []).forEach((entry) => {\r\n      const key = entry.entryNumber.toString();\r\n      entryGroup.addControl(\r\n        key,\r\n        new FormControl(0, {\r\n          validators: [\r\n            Validators.min(0),\r\n            Validators.max(this.getMaxAmendQuantity(entry)),\r\n          ],\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  protected getFormControl(form: FormGroup, entry: OrderEntry): FormControl {\r\n    return <FormControl>form.get('entries').get(entry.entryNumber.toString());\r\n  }\r\n\r\n  /**\r\n   * As discussed, this calculation is moved to SPA side.\r\n   * The calculation and validation should be in backend facade layer.\r\n   */\r\n  getAmendedPrice(entry: OrderEntry): Price {\r\n    const amendedQuantity = this.getFormControl(this.form, entry).value;\r\n    const amendedPrice = Object.assign({}, entry.basePrice);\r\n    amendedPrice.value =\r\n      Math.round(entry.basePrice.value * amendedQuantity * 100) / 100;\r\n\r\n    amendedPrice.formattedValue = formatCurrency(\r\n      amendedPrice.value,\r\n      // TODO: user current language\r\n      'en',\r\n      getCurrencySymbol(amendedPrice.currencyIso, 'narrow'),\r\n      amendedPrice.currencyIso\r\n    );\r\n\r\n    return amendedPrice;\r\n  }\r\n\r\n  getMaxAmendQuantity(entry: OrderEntry) {\r\n    return (\r\n      (this.isCancellation()\r\n        ? entry.cancellableQuantity\r\n        : entry.returnableQuantity) || entry.quantity\r\n    );\r\n  }\r\n\r\n  isCancellation() {\r\n    return this.amendType === AmendOrderType.CANCEL;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { OrderEntry, Price } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderAmendService } from '../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-amend-order-items',\r\n  templateUrl: './amend-order-items.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CancelOrReturnItemsComponent {\r\n  @Input() entries: OrderEntry[];\r\n  @Input() isConfirmation = false;\r\n\r\n  form$: Observable<FormGroup> = this.orderAmendService.getForm();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n\r\n  getControl(form: FormGroup, entry: OrderEntry): FormControl {\r\n    const control = <FormControl>(\r\n      form.get('entries').get(entry.entryNumber.toString())\r\n    );\r\n    return control;\r\n  }\r\n\r\n  setAll(form: FormGroup): void {\r\n    this.entries.forEach((entry) =>\r\n      this.getControl(form, entry).setValue(this.getMaxAmendQuantity(entry))\r\n    );\r\n  }\r\n\r\n  getItemPrice(entry: OrderEntry): Price {\r\n    return this.orderAmendService.getAmendedPrice(entry);\r\n  }\r\n\r\n  getMaxAmendQuantity(entry: OrderEntry) {\r\n    return this.orderAmendService.getMaxAmendQuantity(entry);\r\n  }\r\n\r\n  isCancellation() {\r\n    return this.orderAmendService.isCancellation();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { I18nModule, FeaturesConfigModule } from '@spartacus/core';\r\nimport {\r\n  FormErrorsModule,\r\n  ItemCounterModule,\r\n  MediaModule,\r\n} from '../../../../../shared/index';\r\nimport { CancelOrReturnItemsComponent } from './amend-order-items.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    ItemCounterModule,\r\n    FeaturesConfigModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [CancelOrReturnItemsComponent],\r\n  exports: [CancelOrReturnItemsComponent],\r\n  entryComponents: [CancelOrReturnItemsComponent],\r\n})\r\nexport class AmendOrderItemsModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-cancel-order-confirmation',\r\n  templateUrl: './cancel-order-confirmation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CancelOrderConfirmationComponent {\r\n  orderCode: string;\r\n\r\n  form$ = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<\r\n    OrderEntry[]\r\n  > = this.orderAmendService.getAmendedEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n\r\n  submit(form: FormGroup) {\r\n    if (form.valid) {\r\n      this.orderAmendService.save();\r\n    } else {\r\n      form.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CancelOrReturnRequestEntryInput,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  OrderEntry,\r\n  RoutingService,\r\n  UserOrderService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, first, map } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../../order-details/order-details.service';\r\nimport { AmendOrderType } from '../amend-order.model';\r\nimport { OrderAmendService } from '../amend-order.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderCancellationService extends OrderAmendService {\r\n  amendType = AmendOrderType.CANCEL;\r\n\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected userOrderService: UserOrderService,\r\n    protected routing: RoutingService,\r\n    protected globalMessageService: GlobalMessageService\r\n  ) {\r\n    super(orderDetailsService);\r\n  }\r\n  /**\r\n   * Return cancellable order entries.\r\n   */\r\n  getEntries(): Observable<OrderEntry[]> {\r\n    return this.getOrder().pipe(\r\n      filter((order) => !!order?.entries),\r\n      map((order) =>\r\n        order.entries.filter(\r\n          (entry) => entry.entryNumber !== -1 && entry.cancellableQuantity > 0\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  save(): void {\r\n    const orderCode = this.form.value.orderCode;\r\n    const entries = this.form.value.entries;\r\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\r\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\r\n      .map(\r\n        (entryNumber) =>\r\n          ({\r\n            orderEntryNumber: Number(entryNumber),\r\n            quantity: <number>entries[entryNumber],\r\n          } as CancelOrReturnRequestEntryInput)\r\n      );\r\n\r\n    this.form.reset();\r\n\r\n    this.userOrderService.cancelOrder(orderCode, {\r\n      cancellationRequestEntryInputs: inputs,\r\n    });\r\n\r\n    this.userOrderService\r\n      .getCancelOrderSuccess()\r\n      .pipe(first(Boolean))\r\n      .subscribe(() => this.afterSave(orderCode));\r\n  }\r\n\r\n  private afterSave(orderCode: string): void {\r\n    this.userOrderService.resetCancelOrderProcessState();\r\n    this.globalMessageService.add(\r\n      {\r\n        key: 'orderDetails.cancellationAndReturn.cancelSuccess',\r\n        params: { orderCode },\r\n      },\r\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n    );\r\n    this.routing.go({\r\n      cxRoute: 'orders',\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree } from '@angular/router';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderCancellationService } from './order-cancellation.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderCancellationGuard implements CanActivate {\r\n  constructor(\r\n    protected routing: RoutingService,\r\n    protected orderAmendService: OrderCancellationService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.orderAmendService.getForm().pipe(\r\n      map((form) => {\r\n        if (!form.valid) {\r\n          // the order code is not available in the route\r\n          // as long as we're inside a guard, hence we redirect\r\n          // to the common orders page.\r\n          this.routing.go({ cxRoute: 'orders' });\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderCancellationGuard } from '../order-cancellation.guard';\r\nimport { OrderCancellationService } from '../order-cancellation.service';\r\nimport { CancelOrderConfirmationComponent } from './cancel-order-confirmation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderCancelConfirmation',\r\n        },\r\n      },\r\n    ]),\r\n    ReactiveFormsModule,\r\n    AmendOrderItemsModule,\r\n    AmendOrderActionsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CancelOrderConfirmationComponent: {\r\n          component: CancelOrderConfirmationComponent,\r\n          guards: [AuthGuard, OrderCancellationGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderCancellationService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CancelOrderConfirmationComponent],\r\n  exports: [CancelOrderConfirmationComponent],\r\n  entryComponents: [CancelOrderConfirmationComponent],\r\n})\r\nexport class CancelOrderConfirmationModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-cancel-order',\r\n  templateUrl: './cancel-order.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CancelOrderComponent {\r\n  orderCode: string;\r\n\r\n  form$: Observable<FormGroup> = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport {\r\n  CmsPageGuard,\r\n  PageLayoutComponent,\r\n} from '../../../../../../cms-structure/index';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderCancellationService } from '../order-cancellation.service';\r\nimport { CancelOrderComponent } from './cancel-order.component';\r\nimport { FormErrorsModule } from '../../../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderCancel',\r\n        },\r\n      },\r\n    ]),\r\n    AmendOrderItemsModule,\r\n    AmendOrderActionsModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CancelOrderComponent: {\r\n          component: CancelOrderComponent,\r\n          guards: [AuthGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderCancellationService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CancelOrderComponent],\r\n  exports: [CancelOrderComponent],\r\n  entryComponents: [CancelOrderComponent],\r\n})\r\nexport class CancelOrderModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CancelOrderConfirmationModule } from './cancel-order-confirmation/cancel-order-confirmation.module';\nimport { CancelOrderModule } from './cancel-order/cancel-order.module';\n\n@NgModule({\n  imports: [CancelOrderModule, CancelOrderConfirmationModule],\n})\nexport class OrderCancellationModule {}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CancelOrReturnRequestEntryInput,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  OrderEntry,\r\n  OrderReturnRequestService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, first, map } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../../order-details/order-details.service';\r\nimport { AmendOrderType } from '../amend-order.model';\r\nimport { OrderAmendService } from '../amend-order.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderReturnService extends OrderAmendService {\r\n  amendType = AmendOrderType.RETURN;\r\n\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected returnRequestService: OrderReturnRequestService,\r\n    protected routing: RoutingService,\r\n    protected globalMessageService: GlobalMessageService\r\n  ) {\r\n    super(orderDetailsService);\r\n  }\r\n\r\n  getEntries(): Observable<OrderEntry[]> {\r\n    return this.getOrder().pipe(\r\n      filter((order) => !!order.entries),\r\n      map((order) =>\r\n        order.entries.filter(\r\n          (entry) => entry.entryNumber !== -1 && entry.returnableQuantity > 0\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  save(): void {\r\n    const orderCode = this.form.value.orderCode;\r\n    const entries = this.form.value.entries;\r\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\r\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\r\n      .map(\r\n        (entryNumber) =>\r\n          ({\r\n            orderEntryNumber: Number(entryNumber),\r\n            quantity: <number>entries[entryNumber],\r\n          } as CancelOrReturnRequestEntryInput)\r\n      );\r\n\r\n    this.form.reset();\r\n\r\n    this.returnRequestService.createOrderReturnRequest({\r\n      orderCode,\r\n      returnRequestEntryInputs: inputs,\r\n    });\r\n\r\n    this.returnRequestService\r\n      .getReturnRequestSuccess()\r\n      .pipe(first(Boolean))\r\n      .subscribe(() => this.afterSave());\r\n  }\r\n\r\n  private afterSave(): void {\r\n    this.returnRequestService\r\n      .getOrderReturnRequest()\r\n      .pipe(first((r) => !!r))\r\n      .subscribe((returnRequest) => {\r\n        const rma = returnRequest.rma;\r\n        this.globalMessageService.add(\r\n          {\r\n            key: 'orderDetails.cancellationAndReturn.returnSuccess',\r\n            params: { rma },\r\n          },\r\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n        );\r\n        this.routing.go({\r\n          cxRoute: 'returnRequestDetails',\r\n          params: { rma },\r\n        });\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree } from '@angular/router';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderReturnService } from './order-return.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderReturnGuard implements CanActivate {\r\n  constructor(\r\n    protected routing: RoutingService,\r\n    protected orderAmendService: OrderReturnService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.orderAmendService.getForm().pipe(\r\n      map((form) => {\r\n        if (!form.valid) {\r\n          // the order code is not available in the route\r\n          // as long as we're inside a guard, hence we redirect\r\n          // to the common orders page.\r\n          this.routing.go({ cxRoute: 'orders' });\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-return-order-confirmation',\r\n  templateUrl: './return-order-confirmation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReturnOrderConfirmationComponent {\r\n  orderCode: string;\r\n\r\n  form$ = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<\r\n    OrderEntry[]\r\n  > = this.orderAmendService.getAmendedEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n\r\n  submit(form: FormGroup): void {\r\n    form.disable();\r\n    this.orderAmendService.save();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderReturnGuard } from '../order-return.guard';\r\nimport { OrderReturnService } from '../order-return.service';\r\nimport { ReturnOrderConfirmationComponent } from './return-order-confirmation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderReturnConfirmation',\r\n        },\r\n      },\r\n    ]),\r\n    AmendOrderItemsModule,\r\n    I18nModule,\r\n    ReactiveFormsModule,\r\n    AmendOrderActionsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturnOrderConfirmationComponent: {\r\n          component: ReturnOrderConfirmationComponent,\r\n          guards: [AuthGuard, OrderReturnGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderReturnService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ReturnOrderConfirmationComponent],\r\n  exports: [ReturnOrderConfirmationComponent],\r\n  entryComponents: [ReturnOrderConfirmationComponent],\r\n})\r\nexport class ReturnOrderConfirmationModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-return-order',\r\n  templateUrl: './return-order.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReturnOrderComponent {\r\n  orderCode: string;\r\n\r\n  form$: Observable<FormGroup> = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderReturnService } from '../order-return.service';\r\nimport { ReturnOrderComponent } from './return-order.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderReturn',\r\n        },\r\n      },\r\n    ]),\r\n    AmendOrderItemsModule,\r\n    AmendOrderActionsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturnOrderComponent: {\r\n          component: ReturnOrderComponent,\r\n          guards: [AuthGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderReturnService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ReturnOrderComponent],\r\n  exports: [ReturnOrderComponent],\r\n  entryComponents: [ReturnOrderComponent],\r\n})\r\nexport class ReturnOrderModule {}\r\n","import { NgModule } from '@angular/core';\nimport { ReturnOrderConfirmationModule } from './return-order-confirmation/return-order-confirmation.module';\nimport { ReturnOrderModule } from './return-order/return-order.module';\n\n@NgModule({\n  imports: [ReturnOrderModule, ReturnOrderConfirmationModule],\n})\nexport class OrderReturnModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-headline',\n  templateUrl: './order-detail-headline.component.html',\n})\nexport class OrderDetailHeadlineComponent implements OnInit {\n  constructor(private orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","export const completedValues = ['DELIVERY_COMPLETED', 'PICKUP_COMPLETE'];\nexport const cancelledValues = ['CANCELLED'];\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  Consignment,\r\n  Order,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PromotionService } from '../../../../../shared/services/promotion/promotion.service';\r\nimport { OrderDetailsService } from '../order-details.service';\r\nimport {\r\n  cancelledValues,\r\n  completedValues,\r\n} from './order-consigned-entries/order-consigned-entries.model';\r\n\r\n@Component({\r\n  selector: 'cx-order-details-items',\r\n  templateUrl: './order-detail-items.component.html',\r\n})\r\nexport class OrderDetailItemsComponent implements OnInit {\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n\r\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\r\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  others$: Observable<Consignment[]>;\r\n  completed$: Observable<Consignment[]>;\r\n  cancel$: Observable<Consignment[]>;\r\n\r\n  ngOnInit() {\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n    this.others$ = this.getOtherStatus(...completedValues, ...cancelledValues);\r\n    this.completed$ = this.getExactStatus(completedValues);\r\n    this.cancel$ = this.getExactStatus(cancelledValues);\r\n  }\r\n\r\n  private getExactStatus(\r\n    consignmentStatus: string[]\r\n  ): Observable<Consignment[]> {\r\n    return this.order$.pipe(\r\n      map((order) => {\r\n        if (Boolean(order.consignments)) {\r\n          return order.consignments.filter((consignment) =>\r\n            consignmentStatus.includes(consignment.status)\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private getOtherStatus(\r\n    ...consignmentStatus: string[]\r\n  ): Observable<Consignment[]> {\r\n    return this.order$.pipe(\r\n      map((order) => {\r\n        if (Boolean(order.consignments)) {\r\n          return order.consignments.filter(\r\n            (consignment) => !consignmentStatus.includes(consignment.status)\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConsignmentTracking, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-tracking-events',\n  templateUrl: './tracking-events.component.html',\n})\nexport class TrackingEventsComponent implements OnDestroy {\n  tracking$: Observable<ConsignmentTracking>;\n  shipDate: Date;\n  consignmentCode: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private userOrderService: UserOrderService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  ConsignmentTracking,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../../shared/components/modal/index';\nimport { TrackingEventsComponent } from './tracking-events/tracking-events.component';\n\n@Component({\n  selector: 'cx-consignment-tracking',\n  templateUrl: './consignment-tracking.component.html',\n})\nexport class ConsignmentTrackingComponent implements OnInit, OnDestroy {\n  consignmentStatus: string[] = [\n    'SHIPPED',\n    'IN_TRANSIT',\n    'DELIVERY_COMPLETED',\n    'DELIVERY_REJECTED',\n    'DELIVERING',\n  ];\n  modalRef: ModalRef;\n\n  @Input()\n  consignment: Consignment;\n  @Input()\n  orderCode: string;\n  consignmentTracking$: Observable<ConsignmentTracking>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.consignmentTracking$ = this.userOrderService.getConsignmentTracking();\n  }\n\n  openTrackingDialog(consignment: Consignment) {\n    this.userOrderService.loadConsignmentTracking(\n      this.orderCode,\n      consignment.code\n    );\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(TrackingEventsComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.tracking$ = this.consignmentTracking$;\n    modalInstance.shipDate = consignment.statusDate;\n    modalInstance.consignmentCode = consignment.code;\n  }\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input } from '@angular/core';\r\nimport {\r\n  Consignment,\r\n  Order,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-order-consigned-entries',\r\n  templateUrl: './order-consigned-entries.component.html',\r\n})\r\nexport class OrderConsignedEntriesComponent {\r\n  @Input() consignments: Consignment[];\r\n  @Input() order: Order;\r\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\r\n\r\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\r\n    const products: OrderEntry[] = [];\r\n    consignment.entries.forEach((element) => {\r\n      products.push(element.orderEntry);\r\n    });\r\n\r\n    return products;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { Card } from '../../../../../shared/components/card/card.component';\nimport { OrderDetailsService } from '../order-details.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-details-shipping',\n  templateUrl: './order-detail-shipping.component.html',\n})\nexport class OrderDetailShippingComponent implements OnInit {\n  constructor(\n    private orderDetailsService: OrderDetailsService,\n    private translation: TranslationService\n  ) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n\n  getAddressCardContent(address: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${address.firstName} ${address.lastName}`,\n          text: [\n            address.line1,\n            address.line2,\n            `${address.town}, ${address.country.isocode}, ${address.postalCode}`,\n            address.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.billTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n          text: [\n            billingAddress.line1,\n            billingAddress.line2,\n            `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\n            billingAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getPaymentCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: payment.accountHolderName,\n          text: [payment.cardType.name, payment.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n\n  getShippingMethodCardContent(shipping: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: shipping.name,\n          text: [shipping.description],\n        };\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from '@spartacus/core';\n\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-totals',\n  templateUrl: './order-detail-totals.component.html',\n})\nexport class OrderDetailTotalsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-actions',\n  templateUrl: './order-detail-actions.component.html',\n})\nexport class OrderDetailActionsComponent {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  FeaturesConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ConsignmentTrackingComponent } from '../../../../cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component';\r\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\r\nimport { PromotionsModule } from '../../../checkout/components/promotions/promotions.module';\r\nimport { OrderDetailActionsComponent } from './order-detail-actions/order-detail-actions.component';\r\nimport { OrderDetailHeadlineComponent } from './order-detail-headline/order-detail-headline.component';\r\nimport { TrackingEventsComponent } from './order-detail-items/consignment-tracking/tracking-events/tracking-events.component';\r\nimport { OrderConsignedEntriesComponent } from './order-detail-items/order-consigned-entries/order-consigned-entries.component';\r\nimport { OrderDetailItemsComponent } from './order-detail-items/order-detail-items.component';\r\nimport { OrderDetailShippingComponent } from './order-detail-shipping/order-detail-shipping.component';\r\nimport { OrderDetailTotalsComponent } from './order-detail-totals/order-detail-totals.component';\r\nimport { OrderDetailsService } from './order-details.service';\r\n\r\nconst moduleComponents = [\r\n  OrderDetailActionsComponent,\r\n  OrderDetailHeadlineComponent,\r\n  OrderDetailItemsComponent,\r\n  OrderDetailTotalsComponent,\r\n  OrderDetailShippingComponent,\r\n  TrackingEventsComponent,\r\n  ConsignmentTrackingComponent,\r\n  OrderConsignedEntriesComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CartSharedModule,\r\n    CardModule,\r\n    CommonModule,\r\n    I18nModule,\r\n    FeaturesConfigModule,\r\n    PromotionsModule,\r\n    UrlModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { pageLabel: 'order', cxRoute: 'orderGuest' },\r\n      },\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'orderDetails' },\r\n      },\r\n    ]),\r\n    SpinnerModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\r\n      cmsComponents: {\r\n        AccountOrderDetailsActionsComponent: {\r\n          component: OrderDetailActionsComponent,\r\n        },\r\n        AccountOrderDetailsHeadlineComponent: {\r\n          component: OrderDetailHeadlineComponent,\r\n        },\r\n        AccountOrderDetailsItemsComponent: {\r\n          component: OrderDetailItemsComponent,\r\n        },\r\n        AccountOrderDetailsTotalsComponent: {\r\n          component: OrderDetailTotalsComponent,\r\n        },\r\n        AccountOrderDetailsShippingComponent: {\r\n          component: OrderDetailShippingComponent,\r\n        },\r\n      },\r\n      features: {\r\n        consignmentTracking: '1.2',\r\n      },\r\n    }),\r\n    OrderDetailsService,\r\n  ],\r\n  declarations: [...moduleComponents],\r\n  exports: [...moduleComponents],\r\n  entryComponents: [...moduleComponents],\r\n})\r\nexport class OrderDetailsModule {}\r\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport {\r\n  Order,\r\n  OrderHistoryList,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserOrderService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, tap, filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-order-history',\r\n  templateUrl: './order-history.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderHistoryComponent implements OnDestroy {\r\n  constructor(\r\n    private routing: RoutingService,\r\n    private userOrderService: UserOrderService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  private PAGE_SIZE = 5;\r\n  sortType: string;\r\n\r\n  orders$: Observable<\r\n    OrderHistoryList\r\n  > = this.userOrderService.getOrderHistoryList(this.PAGE_SIZE).pipe(\r\n    tap((orders: OrderHistoryList) => {\r\n      if (orders.pagination) {\r\n        this.sortType = orders.pagination.sort;\r\n      }\r\n    })\r\n  );\r\n\r\n  isLoaded$: Observable<\r\n    boolean\r\n  > = this.userOrderService.getOrderHistoryListLoaded();\r\n\r\n  /**\r\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\r\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\r\n   */\r\n  tabTitleParam$: Observable<number> = this.orders$.pipe(\r\n    map((order) => order.pagination.totalResults),\r\n    filter((totalResults) => totalResults !== undefined),\r\n    take(1)\r\n  );\r\n\r\n  ngOnDestroy(): void {\r\n    this.userOrderService.clearOrderList();\r\n  }\r\n\r\n  changeSortCode(sortCode: string): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode,\r\n      currentPage: 0,\r\n    };\r\n    this.sortType = sortCode;\r\n    this.fetchOrders(event);\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode: this.sortType,\r\n      currentPage: page,\r\n    };\r\n    this.fetchOrders(event);\r\n  }\r\n\r\n  goToOrderDetail(order: Order): void {\r\n    this.routing.go({\r\n      cxRoute: 'orderDetails',\r\n      params: order,\r\n    });\r\n  }\r\n\r\n  getSortLabels(): Observable<{ byDate: string; byOrderNumber: string }> {\r\n    return combineLatest([\r\n      this.translation.translate('sorting.date'),\r\n      this.translation.translate('sorting.orderNumber'),\r\n    ]).pipe(\r\n      map(([textByDate, textByOrderNumber]) => {\r\n        return {\r\n          byDate: textByDate,\r\n          byOrderNumber: textByOrderNumber,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private fetchOrders(event: { sortCode: string; currentPage: number }): void {\r\n    this.userOrderService.loadOrderList(\r\n      this.PAGE_SIZE,\r\n      event.currentPage,\r\n      event.sortCode\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\r\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { OrderHistoryComponent } from './order-history.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'orders' },\r\n      },\r\n    ]),\r\n    RouterModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ListNavigationModule,\r\n    UrlModule,\r\n    I18nModule,\r\n  ],\r\n  declarations: [OrderHistoryComponent],\r\n  exports: [OrderHistoryComponent],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AccountOrderHistoryComponent: {\r\n          component: OrderHistoryComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  entryComponents: [OrderHistoryComponent],\r\n})\r\nexport class OrderHistoryModule {}\r\n","import { Injectable } from '@angular/core';\nimport {\n  OrderReturnRequestService,\n  RoutingService,\n  ReturnRequest,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, map, tap, distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReturnRequestService {\n  constructor(\n    protected routingService: RoutingService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  get isCancelling$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestLoading();\n  }\n\n  get isCancelSuccess$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestSuccess();\n  }\n\n  getReturnRequest(): Observable<ReturnRequest> {\n    return combineLatest([\n      this.routingService.getRouterState(),\n      this.returnRequestService.getOrderReturnRequest(),\n      this.returnRequestService.getReturnRequestLoading(),\n    ]).pipe(\n      map(([routingState, returnRequest, isLoading]) => [\n        routingState.state.params['returnCode'],\n        returnRequest,\n        isLoading,\n      ]),\n      filter(([returnCode]) => Boolean(returnCode)),\n      tap(([returnCode, returnRequest, isLoading]) => {\n        if (\n          (returnRequest === undefined || returnRequest.rma !== returnCode) &&\n          !isLoading\n        ) {\n          this.returnRequestService.loadOrderReturnRequestDetail(returnCode);\n        }\n      }),\n      map(([_, returnRequest]) => returnRequest),\n      filter(Boolean),\n      distinctUntilChanged()\n    );\n  }\n\n  clearReturnRequest(): void {\n    this.returnRequestService.clearOrderReturnRequestDetail();\n  }\n\n  cancelReturnRequest(returnRequestCode: string): void {\n    this.returnRequestService.cancelOrderReturnRequest(returnRequestCode, {\n      status: 'CANCELLING',\n    });\n  }\n\n  cancelSuccess(rma: string): void {\n    this.returnRequestService.resetCancelReturnRequestProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'returnRequest.cancelSuccess',\n        params: { rma },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routingService.go({\n      cxRoute: 'orders',\n    });\n  }\n\n  backToList(): void {\n    this.routingService.go({ cxRoute: 'orders' }, null, {\n      state: {\n        activeTab: 1,\n      },\n    });\n  }\n}\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ReturnRequest } from '@spartacus/core';\r\nimport { ReturnRequestService } from '../return-request.service';\r\n\r\n@Component({\r\n  selector: 'cx-return-request-overview',\r\n  templateUrl: './return-request-overview.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReturnRequestOverviewComponent implements OnInit, OnDestroy {\r\n  constructor(protected returnRequestService: ReturnRequestService) {}\r\n\r\n  rma: string;\r\n  subscription: Subscription;\r\n\r\n  returnRequest$: Observable<\r\n    ReturnRequest\r\n  > = this.returnRequestService\r\n    .getReturnRequest()\r\n    .pipe(tap((returnRequest) => (this.rma = returnRequest.rma)));\r\n\r\n  isCancelling$ = this.returnRequestService.isCancelling$;\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.returnRequestService.isCancelSuccess$.subscribe(\r\n      (success) => {\r\n        if (success) {\r\n          this.returnRequestService.cancelSuccess(this.rma);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  cancelReturn(returnRequestCode: string): void {\r\n    this.returnRequestService.cancelReturnRequest(returnRequestCode);\r\n  }\r\n\r\n  back(): void {\r\n    this.returnRequestService.backToList();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-items',\n  templateUrl: './return-request-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestItemsComponent {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-totals',\n  templateUrl: './return-request-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestTotalsComponent implements OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n\n  ngOnDestroy() {\n    this.returnRequestService.clearReturnRequest();\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { MediaModule } from '../../../../shared/index';\r\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { ReturnRequestOverviewComponent } from './return-request-overview/return-request-overview.component';\r\nimport { ReturnRequestItemsComponent } from './return-request-items/return-request-items.component';\r\nimport { ReturnRequestTotalsComponent } from './return-request-totals/return-request-totals.component';\r\n\r\nconst components = [\r\n  ReturnRequestOverviewComponent,\r\n  ReturnRequestItemsComponent,\r\n  ReturnRequestTotalsComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'returnRequestDetails' },\r\n      },\r\n    ]),\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturnRequestOverviewComponent: {\r\n          component: ReturnRequestOverviewComponent,\r\n        },\r\n        ReturnRequestItemsComponent: {\r\n          component: ReturnRequestItemsComponent,\r\n        },\r\n        ReturnRequestTotalsComponent: {\r\n          component: ReturnRequestTotalsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [...components],\r\n  exports: [...components],\r\n  entryComponents: [...components],\r\n})\r\nexport class ReturnRequestDetailModule {}\r\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport {\r\n  ReturnRequestList,\r\n  OrderReturnRequestService,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { tap, map, filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-order-return-request-list',\r\n  templateUrl: './order-return-request-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderReturnRequestListComponent implements OnDestroy {\r\n  constructor(\r\n    private returnRequestService: OrderReturnRequestService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  private PAGE_SIZE = 5;\r\n  sortType: string;\r\n\r\n  returnRequests$: Observable<\r\n    ReturnRequestList\r\n  > = this.returnRequestService.getOrderReturnRequestList(this.PAGE_SIZE).pipe(\r\n    tap((requestList: ReturnRequestList) => {\r\n      if (requestList.pagination) {\r\n        this.sortType = requestList.pagination.sort;\r\n      }\r\n    })\r\n  );\r\n\r\n  /**\r\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\r\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\r\n   */\r\n  tabTitleParam$: Observable<number> = this.returnRequests$.pipe(\r\n    map((returnRequests) => returnRequests.pagination.totalResults),\r\n    filter((totalResults) => totalResults !== undefined),\r\n    take(1)\r\n  );\r\n\r\n  ngOnDestroy(): void {\r\n    this.returnRequestService.clearOrderReturnRequestList();\r\n  }\r\n\r\n  changeSortCode(sortCode: string): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode,\r\n      currentPage: 0,\r\n    };\r\n    this.sortType = sortCode;\r\n    this.fetchReturnRequests(event);\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode: this.sortType,\r\n      currentPage: page,\r\n    };\r\n    this.fetchReturnRequests(event);\r\n  }\r\n\r\n  getSortLabels(): Observable<{ byDate: string; byRMA: string }> {\r\n    return combineLatest([\r\n      this.translation.translate('sorting.date'),\r\n      this.translation.translate('sorting.rma'),\r\n    ]).pipe(\r\n      map(([textByDate, textByRma]) => {\r\n        return {\r\n          byDate: textByDate,\r\n          byRMA: textByRma,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private fetchReturnRequests(event: {\r\n    sortCode: string;\r\n    currentPage: number;\r\n  }): void {\r\n    this.returnRequestService.loadOrderReturnRequestList(\r\n      this.PAGE_SIZE,\r\n      event.currentPage,\r\n      event.sortCode\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\r\nimport { OrderReturnRequestListComponent } from './order-return-request-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ListNavigationModule,\r\n    UrlModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        OrderReturnRequestListComponent: {\r\n          component: OrderReturnRequestListComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [OrderReturnRequestListComponent],\r\n  exports: [OrderReturnRequestListComponent],\r\n  entryComponents: [OrderReturnRequestListComponent],\r\n})\r\nexport class ReturnRequestListModule {}\r\n","import { NgModule } from '@angular/core';\nimport {\n  OrderCancellationModule,\n  OrderReturnModule,\n} from './amend-order/index';\nimport { OrderDetailsModule } from './order-details/order-details.module';\nimport { OrderHistoryModule } from './order-history/order-history.module';\nimport { ReturnRequestDetailModule } from './return-request-detail/return-request-detail.module';\nimport { ReturnRequestListModule } from './return-request-list/order-return-request-list.module';\n\n@NgModule({\n  imports: [\n    OrderHistoryModule,\n    OrderDetailsModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n  ],\n})\nexport class OrderModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  PaymentDetails,\r\n  TranslationService,\r\n  UserPaymentService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\r\nimport { Card } from '../../../shared/components/card/card.component';\r\n\r\n@Component({\r\n  selector: 'cx-payment-methods',\r\n  templateUrl: './payment-methods.component.html',\r\n})\r\nexport class PaymentMethodsComponent implements OnInit {\r\n  paymentMethods$: Observable<PaymentDetails[]>;\r\n  editCard: string;\r\n  iconTypes = ICON_TYPE;\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private userPaymentService: UserPaymentService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\r\n      tap((paymentDetails) => {\r\n        // Set first payment method to DEFAULT if none is set\r\n        if (\r\n          paymentDetails.length > 0 &&\r\n          !paymentDetails.find((paymentDetail) => paymentDetail.defaultPayment)\r\n        ) {\r\n          this.setDefaultPaymentMethod(paymentDetails[0]);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.editCard = null;\r\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\r\n    this.userPaymentService.loadPaymentMethods();\r\n  }\r\n\r\n  getCardContent({\r\n    defaultPayment,\r\n    accountHolderName,\r\n    expiryMonth,\r\n    expiryYear,\r\n    cardNumber,\r\n    cardType,\r\n  }: PaymentDetails): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('paymentCard.setAsDefault'),\r\n      this.translation.translate('common.delete'),\r\n      this.translation.translate('paymentCard.deleteConfirmation'),\r\n      this.translation.translate('paymentCard.expires', {\r\n        month: expiryMonth,\r\n        year: expiryYear,\r\n      }),\r\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          textSetAsDefault,\r\n          textDelete,\r\n          textDeleteConfirmation,\r\n          textExpires,\r\n          textDefaultPaymentMethod,\r\n        ]) => {\r\n          const actions: { name: string; event: string }[] = [];\r\n          if (!defaultPayment) {\r\n            actions.push({ name: textSetAsDefault, event: 'default' });\r\n          }\r\n          actions.push({ name: textDelete, event: 'edit' });\r\n          const card: Card = {\r\n            header: defaultPayment ? textDefaultPaymentMethod : null,\r\n            textBold: accountHolderName,\r\n            text: [cardNumber, textExpires],\r\n            actions,\r\n            deleteMsg: textDeleteConfirmation,\r\n            img: this.getCardIcon(cardType.code),\r\n          };\r\n\r\n          return card;\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\r\n    this.userPaymentService.deletePaymentMethod(paymentMethod.id);\r\n    this.editCard = null;\r\n  }\r\n\r\n  setEdit(paymentMethod: PaymentDetails): void {\r\n    this.editCard = paymentMethod.id;\r\n  }\r\n\r\n  cancelCard(): void {\r\n    this.editCard = null;\r\n  }\r\n\r\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\r\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id);\r\n  }\r\n\r\n  getCardIcon(code: string): string {\r\n    let ccIcon: string;\r\n    if (code === 'visa') {\r\n      ccIcon = this.iconTypes.VISA;\r\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\r\n      ccIcon = this.iconTypes.MASTER_CARD;\r\n    } else if (code === 'diners') {\r\n      ccIcon = this.iconTypes.DINERS_CLUB;\r\n    } else if (code === 'amex') {\r\n      ccIcon = this.iconTypes.AMEX;\r\n    } else {\r\n      ccIcon = this.iconTypes.CREDIT_CARD;\r\n    }\r\n\r\n    return ccIcon;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { PaymentMethodsComponent } from './payment-methods.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CardModule, SpinnerModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AccountPaymentDetailsComponent: {\r\n          component: PaymentMethodsComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [PaymentMethodsComponent],\r\n  exports: [PaymentMethodsComponent],\r\n  entryComponents: [PaymentMethodsComponent],\r\n})\r\nexport class PaymentMethodsModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { RoutingService, UserService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-reset-password-form',\r\n  templateUrl: './reset-password-form.component.html',\r\n})\r\nexport class ResetPasswordFormComponent implements OnInit, OnDestroy {\r\n  token: string;\r\n  subscription = new Subscription();\r\n\r\n  resetPasswordForm: FormGroup = this.fb.group(\r\n    {\r\n      password: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.passwordValidator],\r\n      ],\r\n      repassword: ['', [Validators.required]],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.passwordsMustMatch(\r\n        'password',\r\n        'repassword'\r\n      ),\r\n    }\r\n  );\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private routingService: RoutingService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.routingService\r\n        .getRouterState()\r\n        .subscribe((state) => (this.token = state.state.queryParams['token']))\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.userService.isPasswordReset().subscribe((reset) => {\r\n        if (reset) {\r\n          this.routingService.go({ cxRoute: 'login' });\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  resetPassword() {\r\n    if (this.resetPasswordForm.valid) {\r\n      const password = this.resetPasswordForm.get('password').value;\r\n      this.userService.resetPassword(this.token, password);\r\n    } else {\r\n      this.resetPasswordForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { ResetPasswordFormComponent } from './reset-password-form.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ResetPasswordComponent: {\r\n          component: ResetPasswordFormComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ResetPasswordFormComponent],\r\n  exports: [ResetPasswordFormComponent],\r\n  entryComponents: [ResetPasswordFormComponent],\r\n})\r\nexport class ResetPasswordModule {}\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-update-email-form',\r\n  templateUrl: './update-email-form.component.html',\r\n})\r\nexport class UpdateEmailFormComponent {\r\n  @Output()\r\n  saveEmail = new EventEmitter<{\r\n    newUid: string;\r\n    password: string;\r\n  }>();\r\n\r\n  @Output()\r\n  cancelEmail = new EventEmitter<void>();\r\n\r\n  updateEmailForm: FormGroup = this.fb.group(\r\n    {\r\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\r\n      confirmEmail: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.emailsMustMatch('email', 'confirmEmail'),\r\n    }\r\n  );\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  onSubmit(): void {\r\n    if (this.updateEmailForm.valid) {\r\n      const newUid = this.updateEmailForm.get('confirmEmail').value;\r\n      const password = this.updateEmailForm.get('password').value;\r\n\r\n      this.saveEmail.emit({ newUid, password });\r\n    } else {\r\n      this.updateEmailForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancelEmail.emit();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-update-email',\r\n  templateUrl: './update-email.component.html',\r\n})\r\nexport class UpdateEmailComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private globalMessageService: GlobalMessageService,\r\n    private userService: UserService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  private subscription = new Subscription();\r\n  private newUid: string;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  ngOnInit() {\r\n    this.userService.resetUpdateEmailResultState();\r\n    this.subscription.add(\r\n      this.userService\r\n        .getUpdateEmailResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n    this.isLoading$ = this.userService.getUpdateEmailResultLoading();\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  onSubmit({ newUid, password }: { newUid: string; password: string }): void {\r\n    this.newUid = newUid;\r\n    this.userService.updateEmail(password, newUid);\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.globalMessageService.add(\r\n        {\r\n          key: 'updateEmailForm.emailUpdateSuccess',\r\n          params: { newUid: this.newUid },\r\n        },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n      this.authService.logout();\r\n      this.routingService.go({ cxRoute: 'login' }, null, {\r\n        state: {\r\n          newUid: this.newUid,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.userService.resetUpdateEmailResultState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { UpdateEmailFormComponent } from './update-email-form/update-email-form.component';\r\nimport { UpdateEmailComponent } from './update-email.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        UpdateEmailComponent: {\r\n          component: UpdateEmailComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [UpdateEmailFormComponent, UpdateEmailComponent],\r\n  exports: [UpdateEmailComponent, UpdateEmailFormComponent],\r\n  entryComponents: [UpdateEmailComponent],\r\n})\r\nexport class UpdateEmailModule {}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomFormValidators } from '../../../../../shared/utils/validators/custom-form-validators';\r\n@Component({\r\n  selector: 'cx-update-password-form',\r\n  templateUrl: './update-password-form.component.html',\r\n})\r\nexport class UpdatePasswordFormComponent implements OnInit {\r\n  updatePasswordForm: FormGroup;\r\n\r\n  @Output()\r\n  submitted = new EventEmitter<{ oldPassword: string; newPassword: string }>();\r\n\r\n  @Output()\r\n  cancelled = new EventEmitter<void>();\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.updatePasswordForm = this.fb.group(\r\n      {\r\n        oldPassword: ['', [Validators.required]],\r\n        newPassword: [\r\n          '',\r\n          [Validators.required, CustomFormValidators.passwordValidator],\r\n        ],\r\n        newPasswordConfirm: ['', [Validators.required]],\r\n      },\r\n      {\r\n        validators: CustomFormValidators.passwordsMustMatch(\r\n          'newPassword',\r\n          'newPasswordConfirm'\r\n        ),\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.updatePasswordForm.valid) {\r\n      this.submitted.emit({\r\n        oldPassword: this.updatePasswordForm.value.oldPassword,\r\n        newPassword: this.updatePasswordForm.value.newPassword,\r\n      });\r\n    } else {\r\n      this.updatePasswordForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancelled.emit();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-update-password',\r\n  templateUrl: './update-password.component.html',\r\n})\r\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private userService: UserService,\r\n    private globalMessageService: GlobalMessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userService.resetUpdatePasswordProcessState();\r\n    this.loading$ = this.userService.getUpdatePasswordResultLoading();\r\n    this.subscription.add(\r\n      this.userService\r\n        .getUpdatePasswordResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.globalMessageService.add(\r\n        { key: 'updatePasswordForm.passwordUpdateSuccess' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n      this.routingService.go({ cxRoute: 'home' });\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  onSubmit({\r\n    oldPassword,\r\n    newPassword,\r\n  }: {\r\n    oldPassword: string;\r\n    newPassword: string;\r\n  }): void {\r\n    this.userService.updatePassword(oldPassword, newPassword);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n\r\n    this.userService.resetUpdatePasswordProcessState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { UpdatePasswordFormComponent } from './components/update-password-form/update-password-form.component';\r\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        UpdatePasswordComponent: {\r\n          component: UpdatePasswordComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [UpdatePasswordComponent, UpdatePasswordFormComponent],\r\n  exports: [UpdatePasswordComponent, UpdatePasswordFormComponent],\r\n  entryComponents: [UpdatePasswordComponent],\r\n})\r\nexport class UpdatePasswordModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Title, User } from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-update-profile-form',\r\n  templateUrl: './update-profile-form.component.html',\r\n})\r\nexport class UpdateProfileFormComponent implements OnInit {\r\n  @Input()\r\n  user: User;\r\n\r\n  @Input()\r\n  titles: Title[];\r\n\r\n  @Output()\r\n  submitted = new EventEmitter<{ userUpdates: User }>();\r\n\r\n  @Output()\r\n  cancelled = new EventEmitter<void>();\r\n\r\n  updateProfileForm: FormGroup = this.fb.group({\r\n    titleCode: [''],\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n  });\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    if (this.user) {\r\n      this.updateProfileForm.patchValue(this.user);\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.updateProfileForm.valid) {\r\n      this.submitted.emit({\r\n        userUpdates: { ...this.updateProfileForm.value },\r\n      });\r\n    } else {\r\n      this.updateProfileForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancelled.emit();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  Title,\r\n  User,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-update-profile',\r\n  templateUrl: './update-profile.component.html',\r\n})\r\nexport class UpdateProfileComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  titles$: Observable<Title[]>;\r\n  user$: Observable<User>;\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private userService: UserService,\r\n    private globalMessageService: GlobalMessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // reset the previous form processing state\r\n    this.userService.resetUpdatePersonalDetailsProcessingState();\r\n\r\n    this.user$ = this.userService.get();\r\n    this.titles$ = this.userService.getTitles().pipe(\r\n      tap((titles) => {\r\n        if (Object.keys(titles).length === 0) {\r\n          this.userService.loadTitles();\r\n        }\r\n      })\r\n    );\r\n    this.loading$ = this.userService.getUpdatePersonalDetailsResultLoading();\r\n\r\n    this.subscription.add(\r\n      this.userService\r\n        .getUpdatePersonalDetailsResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.globalMessageService.add(\r\n        { key: 'updateProfileForm.profileUpdateSuccess' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n      this.routingService.go({ cxRoute: 'home' });\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  onSubmit({ userUpdates }: { userUpdates: User }): void {\r\n    this.userService.updatePersonalDetails(userUpdates);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n\r\n    // clean up the state\r\n    this.userService.resetUpdatePersonalDetailsProcessingState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { UpdateProfileFormComponent } from './components/update-profile-form.component';\r\nimport { UpdateProfileComponent } from './update-profile.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        UpdateProfileComponent: {\r\n          component: UpdateProfileComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [UpdateProfileComponent, UpdateProfileFormComponent],\r\n  exports: [UpdateProfileComponent, UpdateProfileFormComponent],\r\n  entryComponents: [UpdateProfileComponent],\r\n})\r\nexport class UpdateProfileModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CustomerCoupon,\r\n  RoutingService,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { combineLatest, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MyCouponsComponentService {\r\n  sortLabels: Observable<{\r\n    byStartDateAsc: string;\r\n    byStartDateDesc: string;\r\n    byEndDateAsc: string;\r\n    byEndDateDesc: string;\r\n  }>;\r\n\r\n  protected readonly RELEVANCE = ':relevance';\r\n  protected readonly CUSTOMER_COUPON_CODE = ':customerCouponCode:';\r\n\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected translation: TranslationService\r\n  ) {}\r\n\r\n  launchSearchPage(coupon: CustomerCoupon): void {\r\n    this.routingService.go(\r\n      {\r\n        cxRoute: 'search',\r\n        params: { query: this.buildSearchParam(coupon) },\r\n      },\r\n      { couponcode: coupon.couponId }\r\n    );\r\n  }\r\n\r\n  private buildSearchParam(coupon: CustomerCoupon): string {\r\n    return coupon.allProductsApplicable\r\n      ? this.RELEVANCE\r\n      : this.RELEVANCE + this.CUSTOMER_COUPON_CODE + coupon.couponId;\r\n  }\r\n\r\n  getSortLabels(): Observable<{\r\n    byStartDateAsc: string;\r\n    byStartDateDesc: string;\r\n    byEndDateAsc: string;\r\n    byEndDateDesc: string;\r\n  }> {\r\n    return combineLatest([\r\n      this.translation.translate('myCoupons.startDateAsc'),\r\n      this.translation.translate('myCoupons.startDateDesc'),\r\n      this.translation.translate('myCoupons.endDateAsc'),\r\n      this.translation.translate('myCoupons.endDateDesc'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          textByStartDateAsc,\r\n          textByStartDateDesc,\r\n          textByEndDateAsc,\r\n          textByEndDateDesc,\r\n        ]) => {\r\n          return {\r\n            byStartDateAsc: textByStartDateAsc,\r\n            byStartDateDesc: textByStartDateDesc,\r\n            byEndDateAsc: textByEndDateAsc,\r\n            byEndDateDesc: textByEndDateDesc,\r\n          };\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  CustomerCouponSearchResult,\r\n  CustomerCouponService,\r\n  PaginationModel,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\r\nimport { MyCouponsComponentService } from './my-coupons.component.service';\r\n\r\n@Component({\r\n  selector: 'cx-my-coupons',\r\n  templateUrl: './my-coupons.component.html',\r\n})\r\nexport class MyCouponsComponent implements OnInit, OnDestroy {\r\n  couponResult$: Observable<CustomerCouponSearchResult>;\r\n  couponsLoading$: Observable<boolean>;\r\n  couponSubscriptionLoading$: Observable<boolean>;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  private subscriptions = new Subscription();\r\n\r\n  private PAGE_SIZE = 10;\r\n  private sortMapping = {\r\n    byStartDateAsc: 'startDate:asc',\r\n    byStartDateDesc: 'startDate:desc',\r\n    byEndDateAsc: 'endDate:asc',\r\n    byEndDateDesc: 'endDate:desc',\r\n  };\r\n  sort = 'byStartDateAsc';\r\n\r\n  sortOptions = [\r\n    {\r\n      code: 'byStartDateAsc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byStartDateDesc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byEndDateAsc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byEndDateDesc',\r\n      selected: false,\r\n    },\r\n  ];\r\n\r\n  pagination: PaginationModel;\r\n  sortLabels: Observable<{\r\n    byStartDateAsc: string;\r\n    byStartDateDesc: string;\r\n    byEndDateAsc: string;\r\n    byEndDateDesc: string;\r\n  }>;\r\n\r\n  constructor(\r\n    protected couponService: CustomerCouponService,\r\n    protected myCouponsComponentService: MyCouponsComponentService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.couponResult$ = this.couponService\r\n      .getCustomerCoupons(this.PAGE_SIZE)\r\n      .pipe(\r\n        tap(\r\n          (coupons) =>\r\n            (this.pagination = {\r\n              currentPage: coupons.pagination.page,\r\n              pageSize: coupons.pagination.count,\r\n              totalPages: coupons.pagination.totalPages,\r\n              totalResults: coupons.pagination.totalCount,\r\n              sort: this.sort,\r\n            })\r\n        )\r\n      );\r\n    this.couponsLoading$ = this.couponService.getCustomerCouponsLoading();\r\n    this.couponSubscriptionLoading$ = combineLatest([\r\n      this.couponService.getSubscribeCustomerCouponResultLoading(),\r\n      this.couponService.getUnsubscribeCustomerCouponResultLoading(),\r\n    ]).pipe(\r\n      map(([subscribing, unsubscribing]) => subscribing || unsubscribing)\r\n    );\r\n    this.sortLabels = this.myCouponsComponentService.getSortLabels();\r\n\r\n    this.subscriptions\r\n      .add(\r\n        this.couponService\r\n          .getSubscribeCustomerCouponResultError()\r\n          .subscribe((error) => {\r\n            this.subscriptionFail(error);\r\n          })\r\n      )\r\n      .add(\r\n        this.couponService\r\n          .getUnsubscribeCustomerCouponResultError()\r\n          .subscribe((error) => {\r\n            this.subscriptionFail(error);\r\n          })\r\n      );\r\n  }\r\n\r\n  private subscriptionFail(error: boolean) {\r\n    if (error) {\r\n      this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\r\n    }\r\n  }\r\n\r\n  sortChange(sort: string): void {\r\n    this.sort = sort;\r\n\r\n    this.couponService.loadCustomerCoupons(\r\n      this.PAGE_SIZE,\r\n      this.pagination.currentPage,\r\n      this.sortMapping[sort]\r\n    );\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    this.couponService.loadCustomerCoupons(\r\n      this.PAGE_SIZE,\r\n      page,\r\n      this.sortMapping[this.sort]\r\n    );\r\n  }\r\n\r\n  notificationChange({\r\n    couponId,\r\n    notification,\r\n  }: {\r\n    couponId: string;\r\n    notification: boolean;\r\n  }): void {\r\n    if (notification) {\r\n      this.couponService.subscribeCustomerCoupon(couponId);\r\n    } else {\r\n      this.couponService.unsubscribeCustomerCoupon(couponId);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { ModalService } from '../../../../../shared/components/modal/index';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\r\nimport { CustomerCoupon } from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-coupon-dialog',\r\n  templateUrl: './coupon-dialog.component.html',\r\n})\r\nexport class CouponDialogComponent {\r\n  iconTypes = ICON_TYPE;\r\n  coupon: CustomerCoupon;\r\n\r\n  @ViewChild('dialog', { read: ElementRef })\r\n  dialog: ElementRef;\r\n\r\n  constructor(protected modalService: ModalService) {}\r\n\r\n  dismissModal(reason?: any): void {\r\n    this.modalService.dismissActiveModal(reason);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../shared/components/modal/index';\nimport { CouponDialogComponent } from './coupon-dialog/coupon-dialog.component';\nimport { CustomerCoupon } from '@spartacus/core';\nimport { MyCouponsComponentService } from '../my-coupons.component.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-coupon-card',\n  templateUrl: './coupon-card.component.html',\n})\nexport class CouponCardComponent {\n  @Input() coupon: CustomerCoupon;\n  @Input() couponSubscriptionLoading$: Observable<boolean>;\n  modalRef: ModalRef;\n\n  @Output()\n  notificationChanged = new EventEmitter<{\n    couponId: string;\n    notification: boolean;\n  }>();\n\n  constructor(\n    protected modalService: ModalService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  onSubscriptionChange(): void {\n    this.notificationChanged.emit({\n      couponId: this.coupon.couponId,\n      notification: !this.coupon.notificationOn,\n    });\n  }\n\n  readMore() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(CouponDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.coupon = this.coupon;\n  }\n\n  findProducts(): void {\n    this.myCouponsComponentService.launchSearchPage(this.coupon);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  RoutingService,\r\n  CustomerCouponService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n} from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  templateUrl: './coupon-claim.component.html',\r\n  selector: 'cx-coupon-claim',\r\n})\r\nexport class CouponClaimComponent implements OnInit, OnDestroy {\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    protected couponService: CustomerCouponService,\r\n    protected routingService: RoutingService,\r\n    protected messageService: GlobalMessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.routingService\r\n      .getRouterState()\r\n      .subscribe((k) => {\r\n        const couponCode = k.state.params.couponCode;\r\n        if (couponCode) {\r\n          this.couponService.claimCustomerCoupon(couponCode);\r\n          this.subscription = this.couponService\r\n            .getClaimCustomerCouponResultSuccess()\r\n            .subscribe((success) => {\r\n              if (success) {\r\n                this.messageService.add(\r\n                  { key: 'myCoupons.claimCustomerCoupon' },\r\n                  GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n                );\r\n              }\r\n              this.routingService.go({ cxRoute: 'coupons' });\r\n            });\r\n        } else {\r\n          this.routingService.go({ cxRoute: 'notFound' });\r\n        }\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { MyCouponsComponent } from './my-coupons.component';\r\nimport { CouponCardComponent } from './coupon-card/coupon-card.component';\r\n\r\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\r\nimport { CouponDialogComponent } from './coupon-card/coupon-dialog/coupon-dialog.component';\r\nimport { CouponClaimComponent } from './coupon-claim/coupon-claim.component';\r\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    IconModule,\r\n    ListNavigationModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'couponClaim' },\r\n      },\r\n    ]),\r\n  ],\r\n  declarations: [\r\n    MyCouponsComponent,\r\n    CouponCardComponent,\r\n    CouponDialogComponent,\r\n    CouponClaimComponent,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        MyCouponsComponent: {\r\n          component: MyCouponsComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n        CouponClaimComponent: {\r\n          component: CouponClaimComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  exports: [MyCouponsComponent, CouponClaimComponent],\r\n  entryComponents: [\r\n    MyCouponsComponent,\r\n    CouponDialogComponent,\r\n    CouponClaimComponent,\r\n  ],\r\n})\r\nexport class MyCouponsModule {}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport {\r\n  NotificationPreference,\r\n  UserNotificationPreferenceService,\r\n} from '@spartacus/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-notification-preference',\r\n  templateUrl: './notification-preference.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NotificationPreferenceComponent implements OnInit {\r\n  preferences$: Observable<NotificationPreference[]>;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  protected preferences: NotificationPreference[] = [];\r\n\r\n  constructor(\r\n    private notificationPreferenceService: UserNotificationPreferenceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.notificationPreferenceService.resetNotificationPreferences();\r\n    this.preferences$ = this.notificationPreferenceService\r\n      .getPreferences()\r\n      .pipe(tap((preferences) => (this.preferences = preferences)));\r\n    this.notificationPreferenceService.loadPreferences();\r\n\r\n    this.isLoading$ = combineLatest([\r\n      this.notificationPreferenceService.getPreferencesLoading(),\r\n      this.notificationPreferenceService.getUpdatePreferencesResultLoading(),\r\n    ]).pipe(\r\n      map(([prefsLoading, updateLoading]) => prefsLoading || updateLoading)\r\n    );\r\n  }\r\n\r\n  updatePreference(preference: NotificationPreference) {\r\n    const updatedPreferences = [];\r\n    this.preferences.forEach((p) => {\r\n      if (p.channel === preference.channel) {\r\n        updatedPreferences.push({\r\n          ...p,\r\n          enabled: !p.enabled,\r\n        });\r\n      } else {\r\n        updatedPreferences.push(p);\r\n      }\r\n    });\r\n    this.notificationPreferenceService.updatePreferences(updatedPreferences);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { NotificationPreferenceComponent } from './notification-preference.component';\r\n\r\n@NgModule({\r\n  declarations: [NotificationPreferenceComponent],\r\n  imports: [CommonModule, SpinnerModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        NotificationPreferenceComponent: {\r\n          component: NotificationPreferenceComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  exports: [NotificationPreferenceComponent],\r\n  entryComponents: [NotificationPreferenceComponent],\r\n})\r\nexport class NotificationPreferenceModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport {\r\n  PaginationModel,\r\n  Product,\r\n  ProductInterestEntryRelation,\r\n  ProductInterestSearchResult,\r\n  ProductScope,\r\n  ProductService,\r\n  TranslationService,\r\n  UserInterestsService,\r\n} from '@spartacus/core';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\ninterface ProductInterestSearchResultUI extends ProductInterestSearchResult {\r\n  results?: (ProductInterestEntryRelation & {\r\n    product$?: Observable<Product>;\r\n  })[];\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-my-interests',\r\n  templateUrl: './my-interests.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MyInterestsComponent implements OnInit, OnDestroy {\r\n  private DEFAULT_PAGE_SIZE = 10;\r\n  private sortMapping = {\r\n    byNameAsc: 'name:asc',\r\n    byNameDesc: 'name:desc',\r\n  };\r\n\r\n  sort = 'byNameAsc';\r\n  sortOptions = [\r\n    {\r\n      code: 'byNameAsc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byNameDesc',\r\n      selected: false,\r\n    },\r\n  ];\r\n  pagination: PaginationModel;\r\n\r\n  interests$: Observable<ProductInterestSearchResultUI>;\r\n  isRemoveDisabled$: Observable<boolean>;\r\n  getInterestsloading$: Observable<boolean>;\r\n  sortLabels: Observable<{ byNameAsc: string; byNameDesc: string }>;\r\n\r\n  constructor(\r\n    private productInterestService: UserInterestsService,\r\n    private translationService: TranslationService,\r\n    private productService: ProductService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.interests$ = this.productInterestService\r\n      .getAndLoadProductInterests(this.DEFAULT_PAGE_SIZE)\r\n      .pipe(\r\n        tap(\r\n          (interests) =>\r\n            (this.pagination = {\r\n              currentPage: interests.pagination.page,\r\n              pageSize: interests.pagination.count,\r\n              totalPages: interests.pagination.totalPages,\r\n              totalResults: interests.pagination.totalCount,\r\n              sort: 'byNameAsc',\r\n            })\r\n        ),\r\n        map((interest) => ({\r\n          ...interest,\r\n          results: interest.results\r\n            ? interest.results.map((result) => ({\r\n                ...result,\r\n                product$: this.getProduct(result),\r\n              }))\r\n            : interest.results,\r\n        }))\r\n      );\r\n\r\n    this.getInterestsloading$ = this.productInterestService.getProdutInterestsLoading();\r\n    this.isRemoveDisabled$ = combineLatest([\r\n      this.getInterestsloading$,\r\n      this.productInterestService.getRemoveProdutInterestLoading(),\r\n    ]).pipe(map(([getLoading, removeLoading]) => getLoading || removeLoading));\r\n\r\n    this.sortLabels = this.getSortLabels();\r\n  }\r\n\r\n  private getSortLabels(): Observable<{\r\n    byNameAsc: string;\r\n    byNameDesc: string;\r\n  }> {\r\n    return combineLatest([\r\n      this.translationService.translate('myInterests.sorting.byNameAsc'),\r\n      this.translationService.translate('myInterests.sorting.byNameDesc'),\r\n    ]).pipe(\r\n      map(([asc, desc]) => {\r\n        return {\r\n          byNameAsc: asc,\r\n          byNameDesc: desc,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private getProduct(\r\n    interest: ProductInterestEntryRelation\r\n  ): Observable<Product> {\r\n    return this.productService.get(interest.product.code, ProductScope.DETAILS);\r\n  }\r\n\r\n  removeInterest(\r\n    relation: ProductInterestEntryRelation & {\r\n      product$?: Observable<Product>;\r\n    }\r\n  ): void {\r\n    this.productInterestService.removeProdutInterest({\r\n      product: relation.product,\r\n      productInterestEntry: relation.productInterestEntry,\r\n    });\r\n  }\r\n\r\n  sortChange(sort: string): void {\r\n    this.sort = sort;\r\n    this.productInterestService.loadProductInterests(\r\n      this.DEFAULT_PAGE_SIZE,\r\n      0,\r\n      this.sortMapping[sort]\r\n    );\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    this.productInterestService.loadProductInterests(\r\n      this.DEFAULT_PAGE_SIZE,\r\n      page,\r\n      this.sortMapping[this.sort]\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.productInterestService.clearProductInterests();\r\n    this.productInterestService.resetRemoveInterestState();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\r\nimport { MyInterestsComponent } from './my-interests.component';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\n\r\n@NgModule({\r\n  declarations: [MyInterestsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    RouterModule,\r\n    ListNavigationModule,\r\n    I18nModule,\r\n    UrlModule,\r\n    MediaModule,\r\n    SpinnerModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        MyInterestsComponent: {\r\n          component: MyInterestsComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  exports: [MyInterestsComponent],\r\n  entryComponents: [MyInterestsComponent],\r\n})\r\nexport class MyInterestsModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n  CmsBreadcrumbsComponent,\r\n  PageMeta,\r\n  PageMetaService,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\n\r\n@Component({\r\n  selector: 'cx-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BreadcrumbComponent implements OnInit {\r\n  title$: Observable<string>;\r\n  crumbs$: Observable<any[]>;\r\n\r\n  constructor(\r\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\r\n    protected pageMetaService: PageMetaService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle();\r\n    this.setCrumbs();\r\n  }\r\n\r\n  private setTitle(): void {\r\n    this.title$ = this.pageMetaService.getMeta().pipe(\r\n      filter(Boolean),\r\n      map((meta: PageMeta) => meta.heading || meta.title)\r\n    );\r\n  }\r\n\r\n  private setCrumbs(): void {\r\n    this.crumbs$ = combineLatest([\r\n      this.pageMetaService.getMeta(),\r\n      this.translation.translate('common.home'),\r\n    ]).pipe(\r\n      map(([meta, textHome]) =>\r\n        meta?.breadcrumbs ? meta.breadcrumbs : [{ label: textHome, link: '/' }]\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  CmsPageTitleModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { BreadcrumbComponent } from './breadcrumb.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, CmsPageTitleModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        BreadcrumbComponent: {\r\n          component: BreadcrumbComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [BreadcrumbComponent],\r\n  exports: [BreadcrumbComponent],\r\n  entryComponents: [BreadcrumbComponent],\r\n})\r\nexport class BreadcrumbModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CmsNavigationComponent,\r\n  CmsService,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\r\nimport { NavigationNode } from './navigation-node.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NavigationService {\r\n  constructor(\r\n    protected cmsService: CmsService,\r\n    protected semanticPathService: SemanticPathService\r\n  ) {}\r\n\r\n  public createNavigation(\r\n    data$: Observable<CmsNavigationComponent>\r\n  ): Observable<NavigationNode> {\r\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\r\n      map(([data, nav]) => {\r\n        return data\r\n          ? {\r\n              title: data.name,\r\n              children: [nav],\r\n            }\r\n          : undefined;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\r\n   * This function will load the navigation underlying entries and childs if they haven't been\r\n   * loaded so far.\r\n   */\r\n  public getNavigationNode(\r\n    data$: Observable<CmsNavigationComponent>\r\n  ): Observable<NavigationNode> {\r\n    if (!data$) {\r\n      return of();\r\n    }\r\n    return data$.pipe(\r\n      filter((data) => !!data),\r\n      switchMap((data) => {\r\n        const navigation = data.navigationNode ? data.navigationNode : data;\r\n        return this.cmsService.getNavigationEntryItems(navigation.uid).pipe(\r\n          tap((items) => {\r\n            if (items === undefined) {\r\n              this.loadNavigationEntryItems(navigation, true);\r\n            } else {\r\n              // we should check whether the existing node items are what expected\r\n              const expectedItems = [];\r\n              this.loadNavigationEntryItems(navigation, false, expectedItems);\r\n              const existingItems = Object.keys(items).map(\r\n                (key) => items[key].uid\r\n              );\r\n              const missingItems = expectedItems.filter(\r\n                (it) => !existingItems.includes(it.id)\r\n              );\r\n              if (missingItems.length > 0) {\r\n                this.cmsService.loadNavigationItems(\r\n                  navigation.uid,\r\n                  missingItems\r\n                );\r\n              }\r\n            }\r\n          }),\r\n          filter(Boolean),\r\n          map((items) => this.populateNavigationNode(navigation, items))\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Loads all navigation entry items' type and id. Dispatch action to load all these items\r\n   * @param nodeData\r\n   * @param root\r\n   * @param itemsList\r\n   */\r\n  private loadNavigationEntryItems(\r\n    nodeData: any,\r\n    root: boolean,\r\n    itemsList = []\r\n  ): void {\r\n    if (nodeData.entries && nodeData.entries.length > 0) {\r\n      nodeData.entries.forEach((entry) => {\r\n        itemsList.push({\r\n          superType: entry.itemSuperType,\r\n          id: entry.itemId,\r\n        });\r\n      });\r\n    }\r\n\r\n    if (nodeData.children && nodeData.children.length > 0) {\r\n      nodeData.children.forEach((child) =>\r\n        this.loadNavigationEntryItems(child, false, itemsList)\r\n      );\r\n    }\r\n\r\n    if (root) {\r\n      this.cmsService.loadNavigationItems(nodeData.uid, itemsList);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a new node tree for the view\r\n   * @param nodeData\r\n   * @param items\r\n   */\r\n  private populateNavigationNode(nodeData: any, items: any): NavigationNode {\r\n    const node: NavigationNode = {};\r\n\r\n    if (nodeData.title) {\r\n      // the node title will be populated by the first entry (if any)\r\n      // if there's no nodeData.title available\r\n      node.title = nodeData.title;\r\n    }\r\n\r\n    if (nodeData.entries && nodeData.entries.length > 0) {\r\n      this.populateLink(node, nodeData.entries[0], items);\r\n    }\r\n\r\n    if (nodeData.children && nodeData.children.length > 0) {\r\n      const children = nodeData.children\r\n        .map((child) => this.populateNavigationNode(child, items))\r\n        .filter(Boolean);\r\n      if (children.length > 0) {\r\n        node.children = children;\r\n      }\r\n    }\r\n\r\n    // return null in case there are no children\r\n    return Object.keys(node).length === 0 ? null : node;\r\n  }\r\n\r\n  /**\r\n   * The node link is driven by the first entry.\r\n   */\r\n  private populateLink(node: NavigationNode, entry, items) {\r\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\r\n\r\n    // now we only consider CMSLinkComponent\r\n    if (item && entry.itemType === 'CMSLinkComponent') {\r\n      if (!node.title) {\r\n        node.title = item.linkName;\r\n      }\r\n      const url = this.getLink(item);\r\n      // only populate the node link if we have a visible node\r\n      if (node.title && url) {\r\n        node.url = url;\r\n        // the backend provide boolean value for the target\r\n        // in case the link should be opened in a new window\r\n        node.target = !!item.target ? '_blank' : '';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Gets the URL or link to a related item (category)\r\n   */\r\n  private getLink(item): string | string[] {\r\n    if (item.url) {\r\n      return item.url;\r\n    } else if (item.categoryCode) {\r\n      return this.semanticPathService.transform({\r\n        cxRoute: 'category',\r\n        params: {\r\n          code: item.categoryCode,\r\n          name: item.name,\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../misc/icon/index';\r\nimport { NavigationNode } from './navigation-node.model';\r\n\r\n@Component({\r\n  selector: 'cx-navigation-ui',\r\n  templateUrl: './navigation-ui.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NavigationUIComponent implements OnDestroy {\r\n  /**\r\n   * The navigation node to render.\r\n   */\r\n  @Input() node: NavigationNode;\r\n\r\n  /**\r\n   * The number of child nodes that must be wrapped.\r\n   */\r\n  @Input() wrapAfter: number;\r\n  /**\r\n   * the icon type that will be used for navigation nodes\r\n   * with children.\r\n   */\r\n  iconType = ICON_TYPE;\r\n\r\n  /**\r\n   * Indicates whether the navigation should support flyout.\r\n   * If flyout is set to true, the\r\n   * nested child navigation nodes will only appear on hover or focus.\r\n   */\r\n  @Input() @HostBinding('class.flyout') flyout = true;\r\n\r\n  @Input() @HostBinding('class.is-open') isOpen = false;\r\n\r\n  private openNodes: HTMLElement[] = [];\r\n  private subscriptions = new Subscription();\r\n  private resize = new EventEmitter();\r\n\r\n  @HostListener('window:resize')\r\n  onResize() {\r\n    this.resize.next();\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private renderer: Renderer2,\r\n    private elemRef: ElementRef\r\n  ) {\r\n    this.subscriptions.add(\r\n      this.router.events\r\n        .pipe(filter((event) => event instanceof NavigationEnd))\r\n        .subscribe(() => this.clear())\r\n    );\r\n    this.subscriptions.add(\r\n      this.resize.pipe(debounceTime(50)).subscribe(() => {\r\n        this.alignWrappersToRightIfStickOut();\r\n      })\r\n    );\r\n  }\r\n\r\n  toggleOpen(event: UIEvent): void {\r\n    if (event.type === 'keydown') {\r\n      event.preventDefault();\r\n    }\r\n    const node = <HTMLElement>event.currentTarget;\r\n    if (this.openNodes.includes(node)) {\r\n      if (event.type === 'keydown') {\r\n        this.back();\r\n      } else {\r\n        this.openNodes = this.openNodes.filter((n) => n !== node);\r\n        this.renderer.removeClass(node, 'is-open');\r\n      }\r\n    } else {\r\n      this.openNodes.push(node);\r\n    }\r\n\r\n    this.updateClasses();\r\n\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  back(): void {\r\n    if (this.openNodes[this.openNodes.length - 1]) {\r\n      this.renderer.removeClass(\r\n        this.openNodes[this.openNodes.length - 1],\r\n        'is-open'\r\n      );\r\n      this.openNodes.pop();\r\n      this.updateClasses();\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.openNodes = [];\r\n    this.updateClasses();\r\n  }\r\n\r\n  onMouseEnter(event: MouseEvent) {\r\n    this.alignWrapperToRightIfStickOut(<HTMLElement>event.currentTarget);\r\n    this.focusAfterPreviousClicked(event);\r\n  }\r\n\r\n  getTotalDepth(node: NavigationNode, depth = 0): number {\r\n    if (node.children && node.children.length > 0) {\r\n      return Math.max(\r\n        ...node.children.map((n) => this.getTotalDepth(n, depth + 1))\r\n      );\r\n    } else {\r\n      return depth;\r\n    }\r\n  }\r\n\r\n  getColumnCount(length: number): number {\r\n    return Math.round(length / (this.wrapAfter || length));\r\n  }\r\n\r\n  focusAfterPreviousClicked(event: MouseEvent) {\r\n    const target: HTMLElement = <HTMLElement>(\r\n      (event.target || event.relatedTarget)\r\n    );\r\n    if (\r\n      target.ownerDocument.activeElement.matches('nav[tabindex]') &&\r\n      target.parentElement.matches('.flyout')\r\n    ) {\r\n      target.focus();\r\n    }\r\n    return target.ownerDocument;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscriptions) {\r\n      this.subscriptions.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private alignWrapperToRightIfStickOut(node: HTMLElement) {\r\n    const wrapper = <HTMLElement>node.querySelector('.wrapper');\r\n    const body = <HTMLElement>node.closest('body');\r\n    if (wrapper) {\r\n      this.renderer.removeStyle(wrapper, 'margin-left');\r\n      if (\r\n        wrapper.offsetLeft + wrapper.offsetWidth >\r\n        body.offsetLeft + body.offsetWidth\r\n      ) {\r\n        this.renderer.setStyle(\r\n          wrapper,\r\n          'margin-left',\r\n          `${node.offsetWidth - wrapper.offsetWidth}px`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private alignWrappersToRightIfStickOut() {\r\n    const navs = <HTMLCollection>this.elemRef.nativeElement.childNodes;\r\n    Array.from(navs)\r\n      .filter((node) => node.tagName === 'NAV')\r\n      .forEach((nav) => this.alignWrapperToRightIfStickOut(<HTMLElement>nav));\r\n  }\r\n\r\n  private updateClasses(): void {\r\n    this.openNodes.forEach((node, i) => {\r\n      if (i + 1 < this.openNodes.length) {\r\n        this.renderer.addClass(node, 'is-opened');\r\n        this.renderer.removeClass(node, 'is-open');\r\n      } else {\r\n        this.renderer.removeClass(node, 'is-opened');\r\n        this.renderer.addClass(node, 'is-open');\r\n      }\r\n    });\r\n\r\n    this.isOpen = this.openNodes.length > 0;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { CmsNavigationComponent } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { NavigationNode } from './navigation-node.model';\r\nimport { NavigationService } from './navigation.service';\r\n\r\n@Component({\r\n  selector: 'cx-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NavigationComponent {\r\n  node$: Observable<NavigationNode> = this.service.createNavigation(\r\n    this.componentData.data$\r\n  );\r\n\r\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\r\n    map((d) => d?.styleClass)\r\n  );\r\n\r\n  constructor(\r\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\r\n    protected service: NavigationService\r\n  ) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { NavigationUIComponent } from './navigation-ui.component';\r\nimport { NavigationComponent } from './navigation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    IconModule,\r\n    GenericLinkModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        NavigationComponent: {\r\n          component: NavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [NavigationComponent, NavigationUIComponent],\r\n  entryComponents: [NavigationComponent],\r\n  exports: [NavigationComponent, NavigationUIComponent],\r\n})\r\nexport class NavigationModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { NavigationModule } from '../navigation/navigation.module';\r\nimport { CategoryNavigationComponent } from './category-navigation.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, NavigationModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CategoryNavigationComponent: {\r\n          component: CategoryNavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CategoryNavigationComponent],\r\n  entryComponents: [CategoryNavigationComponent],\r\n  exports: [CategoryNavigationComponent],\r\n})\r\nexport class CategoryNavigationModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { CmsNavigationComponent } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { NavigationNode } from '../navigation/navigation-node.model';\r\nimport { NavigationService } from '../navigation/navigation.service';\r\n\r\n@Component({\r\n  selector: 'cx-footer-navigation',\r\n  templateUrl: './footer-navigation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FooterNavigationComponent {\r\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\r\n    this.componentData.data$\r\n  );\r\n\r\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\r\n    map((d) => d?.styleClass)\r\n  );\r\n\r\n  constructor(\r\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\r\n    protected service: NavigationService\r\n  ) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\nimport { NavigationModule } from '../navigation/navigation.module';\r\nimport { FooterNavigationComponent } from './footer-navigation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    NavigationModule,\r\n    GenericLinkModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        FooterNavigationComponent: {\r\n          component: FooterNavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [FooterNavigationComponent],\r\n  entryComponents: [FooterNavigationComponent],\r\n  exports: [FooterNavigationComponent],\r\n})\r\nexport class FooterNavigationModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ProductSearchPage,\r\n  RoutingService,\r\n  SearchboxService,\r\n  TranslationService,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\r\n\r\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SearchBoxComponentService {\r\n  constructor(\r\n    public searchService: SearchboxService,\r\n    protected routingService: RoutingService,\r\n    protected translationService: TranslationService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  /**\r\n   * Executes the search for products and suggestions,\r\n   * unless the configuration is setup to not search for\r\n   * products or suggestions.\r\n   */\r\n  search(query: string, config: SearchBoxConfig): void {\r\n    if (!query || query === '') {\r\n      this.clearResults();\r\n      return;\r\n    }\r\n\r\n    if (\r\n      config.minCharactersBeforeRequest &&\r\n      query.length < config.minCharactersBeforeRequest\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (config.displayProducts) {\r\n      this.searchService.search(query, {\r\n        pageSize: config.maxProducts,\r\n      });\r\n    }\r\n\r\n    if (config.displaySuggestions) {\r\n      this.searchService.searchSuggestions(query, {\r\n        pageSize: config.maxSuggestions,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns an observable with the SearchResults. When there's any\r\n   * result, the body tag will get a classname, so that specific style\r\n   * rules can be applied.\r\n   */\r\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\r\n    return combineLatest([\r\n      this.getProductResults(config),\r\n      this.getProductSuggestions(config),\r\n      this.getSearchMessage(config),\r\n    ]).pipe(\r\n      map(([productResults, suggestions, message]) => {\r\n        return {\r\n          products: productResults ? productResults.products : null,\r\n          suggestions,\r\n          message,\r\n        };\r\n      }),\r\n      tap((results) =>\r\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clears the searchbox results, so that old values are\r\n   * no longer emited upon next search.\r\n   */\r\n  clearResults() {\r\n    this.searchService.clearResults();\r\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\r\n  }\r\n\r\n  hasBodyClass(className: string): boolean {\r\n    return this.winRef.document.body.classList.contains(className);\r\n  }\r\n\r\n  toggleBodyClass(className: string, add?: boolean) {\r\n    if (add === undefined) {\r\n      this.winRef.document.body.classList.toggle(className);\r\n    } else {\r\n      add\r\n        ? this.winRef.document.body.classList.add(className)\r\n        : this.winRef.document.body.classList.remove(className);\r\n    }\r\n  }\r\n\r\n  private hasResults(results: SearchResults): boolean {\r\n    return (\r\n      (!!results.products && results.products.length > 0) ||\r\n      (!!results.suggestions && results.suggestions.length > 0) ||\r\n      !!results.message\r\n    );\r\n  }\r\n\r\n  private getProductResults(\r\n    config: SearchBoxConfig\r\n  ): Observable<ProductSearchPage> {\r\n    if (config.displayProducts) {\r\n      return this.searchService.getResults();\r\n    } else {\r\n      return of({});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads suggestions from the backend. In case there's no suggestion\r\n   * available, we try to get an exact match suggestion.\r\n   */\r\n  private getProductSuggestions(config: SearchBoxConfig): Observable<string[]> {\r\n    if (!config.displaySuggestions) {\r\n      return of([]);\r\n    } else {\r\n      return this.searchService.getSuggestionResults().pipe(\r\n        map((res) => res.map((suggestion) => suggestion.value)),\r\n        switchMap((suggestions) => {\r\n          if (suggestions.length === 0) {\r\n            return this.getExactSuggestion(config).pipe(\r\n              map((match) => (match ? [match] : []))\r\n            );\r\n          } else {\r\n            return of(suggestions);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * whenever there is at least 1 product, we simulate\r\n   * a suggestion to provide easy access to the search result page\r\n   */\r\n  private getExactSuggestion(config: SearchBoxConfig): Observable<string> {\r\n    return this.getProductResults(config).pipe(\r\n      switchMap((productResult) => {\r\n        return productResult.products && productResult.products.length > 0\r\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\r\n              term: productResult.freeTextSearch,\r\n            })\r\n          : of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n  private getSearchMessage(config: SearchBoxConfig): Observable<string> {\r\n    return combineLatest([\r\n      this.getProductResults(config),\r\n      this.getProductSuggestions(config),\r\n    ]).pipe(\r\n      switchMap(([productResult, suggestions]) => {\r\n        if (\r\n          productResult &&\r\n          productResult.products &&\r\n          productResult.products.length === 0 &&\r\n          suggestions &&\r\n          suggestions.length === 0\r\n        ) {\r\n          return this.fetchTranslation('searchBox.help.noMatch');\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Navigates to the search result page with a given query\r\n   */\r\n  public launchSearchPage(query: string): void {\r\n    this.routingService.go({\r\n      cxRoute: 'search',\r\n      params: { query },\r\n    });\r\n  }\r\n\r\n  private fetchTranslation(\r\n    translationKey: string,\r\n    options?: any\r\n  ): Observable<string> {\r\n    return this.translationService.translate(translationKey, options);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { CmsSearchBoxComponent, WindowRef } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { SearchBoxComponentService } from './search-box-component.service';\r\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\r\n\r\nconst DEFAULT_SEARCHBOX_CONFIG: SearchBoxConfig = {\r\n  minCharactersBeforeRequest: 1,\r\n  displayProducts: true,\r\n  displaySuggestions: true,\r\n  maxProducts: 5,\r\n  maxSuggestions: 5,\r\n  displayProductImages: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'cx-searchbox',\r\n  templateUrl: './search-box.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SearchBoxComponent {\r\n  config: SearchBoxConfig;\r\n  /**\r\n   * Sets the search box input field\r\n   */\r\n  @Input('queryText')\r\n  set queryText(value: string) {\r\n    if (value) {\r\n      this.search(value);\r\n    }\r\n  }\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  /**\r\n   * In some occasions we need to ignore the close event,\r\n   * for example when we click inside the search result section.\r\n   */\r\n  private ignoreCloseEvent = false;\r\n\r\n  /**\r\n   * The component data is optional, so that this component\r\n   * can be reused without CMS integration.\r\n   */\r\n\r\n  constructor(\r\n    protected searchBoxComponentService: SearchBoxComponentService,\r\n    @Optional()\r\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  results$: Observable<SearchResults> = this.config$.pipe(\r\n    tap((c) => (this.config = c)),\r\n    switchMap((config) => this.searchBoxComponentService.getResults(config))\r\n  );\r\n\r\n  /**\r\n   * Returns the backend configuration or default configuration for the searchbox.\r\n   */\r\n  private get config$(): Observable<SearchBoxConfig> {\r\n    if (this.componentData) {\r\n      return <Observable<SearchBoxConfig>>this.componentData.data$.pipe(\r\n        // Since the backend returns string values (i.e. displayProducts: \"true\") for\r\n        // boolean values, we replace them with boolean values.\r\n        map((c) => {\r\n          return {\r\n            ...c,\r\n            displayProducts:\r\n              <any>c?.displayProducts === 'true' || c?.displayProducts === true,\r\n            displayProductImages:\r\n              <any>c?.displayProductImages === 'true' ||\r\n              c?.displayProductImages === true,\r\n            displaySuggestions:\r\n              <any>c?.displaySuggestions === 'true' ||\r\n              c?.displaySuggestions === true,\r\n          };\r\n        })\r\n      );\r\n    } else {\r\n      return of(DEFAULT_SEARCHBOX_CONFIG);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the searchbox and opens the search result page.\r\n   */\r\n  search(query: string): void {\r\n    this.searchBoxComponentService.search(query, this.config);\r\n    // force the searchbox to open\r\n    this.open();\r\n  }\r\n\r\n  /**\r\n   * Opens the typeahead searchbox\r\n   */\r\n  open(): void {\r\n    this.searchBoxComponentService.toggleBodyClass('searchbox-is-active', true);\r\n  }\r\n\r\n  /**\r\n   * Closes the typehead searchbox.\r\n   */\r\n  close(event: UIEvent, force?: boolean): void {\r\n    // Use timeout to detect changes\r\n    setTimeout(() => {\r\n      if ((!this.ignoreCloseEvent && !this.isSearchboxFocused()) || force) {\r\n        this.blurSearchBox(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected blurSearchBox(event: UIEvent): void {\r\n    this.searchBoxComponentService.toggleBodyClass(\r\n      'searchbox-is-active',\r\n      false\r\n    );\r\n    if (event && event.target) {\r\n      (<HTMLElement>event.target).blur();\r\n    }\r\n  }\r\n\r\n  // Check if focus is on searchbox or result list elements\r\n  private isSearchboxFocused(): boolean {\r\n    return (\r\n      this.getResultElements().includes(this.getFocusedElement()) ||\r\n      this.winRef.document.querySelector('input[aria-label=\"search\"]') ===\r\n        this.getFocusedElement()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Especially in mobile we do not want the search icon\r\n   * to focus the input again when it's already open.\r\n   * */\r\n  avoidReopen(event: UIEvent): void {\r\n    if (this.searchBoxComponentService.hasBodyClass('searchbox-is-active')) {\r\n      this.close(event);\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // Return result list as HTMLElement array\r\n  private getResultElements(): HTMLElement[] {\r\n    return Array.from(\r\n      this.winRef.document.querySelectorAll('.products > a, .suggestions > a')\r\n    );\r\n  }\r\n\r\n  // Return focused element as HTMLElement\r\n  private getFocusedElement(): HTMLElement {\r\n    return <HTMLElement>this.winRef.document.activeElement;\r\n  }\r\n\r\n  private getFocusedIndex(): number {\r\n    return this.getResultElements().indexOf(this.getFocusedElement());\r\n  }\r\n\r\n  // Focus on previous item in results list\r\n  focusPreviousChild(event) {\r\n    event.preventDefault(); // Negate normal keyscroll\r\n    const [results, focusedIndex] = [\r\n      this.getResultElements(),\r\n      this.getFocusedIndex(),\r\n    ];\r\n    // Focus on last index moving to first\r\n    if (results.length) {\r\n      if (focusedIndex < 1) {\r\n        results[results.length - 1].focus();\r\n      } else {\r\n        results[focusedIndex - 1].focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Focus on next item in results list\r\n  focusNextChild(event) {\r\n    event.preventDefault(); // Negate normal keyscroll\r\n    const [results, focusedIndex] = [\r\n      this.getResultElements(),\r\n      this.getFocusedIndex(),\r\n    ];\r\n    // Focus on first index moving to last\r\n    if (results.length) {\r\n      if (focusedIndex >= results.length - 1) {\r\n        results[0].focus();\r\n      } else {\r\n        results[focusedIndex + 1].focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the PLP with the given query.\r\n   *\r\n   * TODO: if there's a single product match, we could open the PDP.\r\n   */\r\n  launchSearchResult(event: UIEvent, query: string): void {\r\n    if (!query || query.trim().length === 0) {\r\n      return;\r\n    }\r\n    this.close(event);\r\n    this.searchBoxComponentService.launchSearchPage(query);\r\n  }\r\n\r\n  /**\r\n   * Disables closing the search result list.\r\n   */\r\n  disableClose(): void {\r\n    this.ignoreCloseEvent = true;\r\n  }\r\n\r\n  /**\r\n   * Clears the search box input field\r\n   */\r\n  public clear(el: HTMLInputElement): void {\r\n    this.disableClose();\r\n    el.value = '';\r\n    this.searchBoxComponentService.clearResults();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { HighlightPipe } from './highlight.pipe';\r\nimport { SearchBoxComponent } from './search-box.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MediaModule,\r\n    IconModule,\r\n    UrlModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        SearchBoxComponent: {\r\n          component: SearchBoxComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [SearchBoxComponent, HighlightPipe],\r\n  entryComponents: [SearchBoxComponent],\r\n  exports: [SearchBoxComponent],\r\n})\r\nexport class SearchBoxModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  CheckoutService,\r\n  Order,\r\n  PromotionResult,\r\n  PromotionLocation,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\n@Component({\r\n  selector: 'cx-order-confirmation-items',\r\n  templateUrl: './order-confirmation-items.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderConfirmationItemsComponent implements OnInit, OnDestroy {\r\n  promotionLocation: PromotionLocation = PromotionLocation.Checkout;\r\n  order$: Observable<Order>;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.order$ = this.checkoutService.getOrderDetails();\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutService.clearCheckoutData();\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  Address,\r\n  CheckoutService,\r\n  DeliveryMode,\r\n  Order,\r\n  PaymentDetails,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\n\r\n@Component({\r\n  selector: 'cx-order-confirmation-overview',\r\n  templateUrl: './order-confirmation-overview.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderConfirmationOverviewComponent implements OnInit, OnDestroy {\r\n  order$: Observable<Order>;\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.order$ = this.checkoutService.getOrderDetails();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutService.clearCheckoutData();\r\n  }\r\n\r\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\r\n    return this.translation.translate('addressCard.shipTo').pipe(\r\n      filter(() => Boolean(deliveryAddress)),\r\n      map((textTitle) => ({\r\n        title: textTitle,\r\n        textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\r\n        text: [\r\n          deliveryAddress.line1,\r\n          deliveryAddress.line2,\r\n          `${deliveryAddress.town}, ${deliveryAddress.country.isocode}, ${deliveryAddress.postalCode}`,\r\n          deliveryAddress.phone,\r\n        ],\r\n      }))\r\n    );\r\n  }\r\n\r\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\r\n    return this.translation.translate('checkoutShipping.shippingMethod').pipe(\r\n      filter(() => Boolean(deliveryMode)),\r\n      map((textTitle) => ({\r\n        title: textTitle,\r\n        textBold: deliveryMode.name,\r\n        text: [deliveryMode.description],\r\n      }))\r\n    );\r\n  }\r\n\r\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\r\n    return this.translation.translate('addressCard.billTo').pipe(\r\n      filter(() => Boolean(billingAddress)),\r\n      map((textTitle) => ({\r\n        title: textTitle,\r\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\r\n        text: [\r\n          billingAddress.line1,\r\n          billingAddress.line2,\r\n          `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\r\n          billingAddress.phone,\r\n        ],\r\n      }))\r\n    );\r\n  }\r\n\r\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('paymentForm.payment'),\r\n      this.translation.translate('paymentCard.expires', {\r\n        month: Boolean(payment) ? payment.expiryMonth : '',\r\n        year: Boolean(payment) ? payment.expiryYear : '',\r\n      }),\r\n    ]).pipe(\r\n      filter(() => Boolean(payment)),\r\n      map(([textTitle, textExpires]) => ({\r\n        title: textTitle,\r\n        textBold: payment.accountHolderName,\r\n        text: [payment.cardNumber, textExpires],\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { CheckoutService, Order } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-order-confirmation-thank-you-message',\r\n  templateUrl: './order-confirmation-thank-you-message.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderConfirmationThankYouMessageComponent\r\n  implements OnInit, OnDestroy {\r\n  order$: Observable<Order>;\r\n  isGuestCustomer = false;\r\n  orderGuid: string;\r\n\r\n  constructor(protected checkoutService: CheckoutService) {}\r\n\r\n  ngOnInit() {\r\n    this.order$ = this.checkoutService.getOrderDetails().pipe(\r\n      tap((order) => {\r\n        this.isGuestCustomer = order.guestCustomer;\r\n        this.orderGuid = order.guid;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutService.clearCheckoutData();\r\n  }\r\n}\r\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-totals',\n  templateUrl: './order-confirmation-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationTotalsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService, RoutingService, UserService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-guest-register-form',\r\n  templateUrl: './guest-register-form.component.html',\r\n})\r\nexport class GuestRegisterFormComponent implements OnDestroy {\r\n  @Input() guid: string;\r\n  @Input() email: string;\r\n\r\n  subscription: Subscription;\r\n  guestRegisterForm: FormGroup = this.fb.group(\r\n    {\r\n      password: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.passwordValidator],\r\n      ],\r\n      passwordconf: ['', Validators.required],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.passwordsMustMatch(\r\n        'password',\r\n        'passwordconf'\r\n      ),\r\n    }\r\n  );\r\n\r\n  constructor(\r\n    protected userService: UserService,\r\n    protected routingService: RoutingService,\r\n    protected authService: AuthService,\r\n    protected fb: FormBuilder\r\n  ) {}\r\n\r\n  submit() {\r\n    if (this.guestRegisterForm.valid) {\r\n      this.userService.registerGuest(\r\n        this.guid,\r\n        this.guestRegisterForm.value.password\r\n      );\r\n      if (!this.subscription) {\r\n        this.subscription = this.authService\r\n          .getUserToken()\r\n          .subscribe((token) => {\r\n            if (token.access_token) {\r\n              this.routingService.go({ cxRoute: 'home' });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      this.guestRegisterForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree, Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { CheckoutService, SemanticPathService } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderConfirmationGuard implements CanActivate {\r\n  constructor(\r\n    private checkoutService: CheckoutService,\r\n    private router: Router,\r\n    private semanticPathService: SemanticPathService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.checkoutService.getOrderDetails().pipe(\r\n      map((orderDetails) => {\r\n        if (orderDetails && Object.keys(orderDetails).length !== 0) {\r\n          return true;\r\n        } else {\r\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../shared/components/card/card.module';\r\nimport { CartSharedModule } from '../cart/cart-shared/cart-shared.module';\r\nimport { PwaModule } from './../../cms-structure/pwa/pwa.module';\r\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\r\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\r\n// tslint:disable-next-line\r\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\r\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\r\nimport { GuestRegisterFormComponent } from './components/guest-register-form/guest-register-form.component';\r\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\r\nimport { PromotionsModule } from '../checkout/components/promotions/promotions.module';\r\nimport { FormErrorsModule } from '../../shared/index';\r\n\r\nconst orderConfirmationComponents = [\r\n  OrderConfirmationItemsComponent,\r\n  OrderConfirmationOverviewComponent,\r\n  OrderConfirmationThankYouMessageComponent,\r\n  OrderConfirmationTotalsComponent,\r\n  GuestRegisterFormComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CartSharedModule,\r\n    CardModule,\r\n    PwaModule,\r\n    PromotionsModule,\r\n    I18nModule,\r\n    ReactiveFormsModule,\r\n    FeaturesConfigModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        OrderConfirmationThankMessageComponent: {\r\n          component: OrderConfirmationThankYouMessageComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n        OrderConfirmationItemsComponent: {\r\n          component: OrderConfirmationItemsComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n        OrderConfirmationTotalsComponent: {\r\n          component: OrderConfirmationTotalsComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n        OrderConfirmationOverviewComponent: {\r\n          component: OrderConfirmationOverviewComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [...orderConfirmationComponents],\r\n  exports: [...orderConfirmationComponents],\r\n  entryComponents: [...orderConfirmationComponents],\r\n})\r\nexport class OrderConfirmationModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Product,\r\n  ProductReference,\r\n  ProductReferenceService,\r\n  ProductService,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ProductCarouselItem } from './product-carousel.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductCarouselService {\r\n  constructor(\r\n    protected productService: ProductService,\r\n    protected referenceService: ProductReferenceService,\r\n    protected semanticPathService: SemanticPathService\r\n  ) {}\r\n\r\n  /**\r\n   * Loads the product data and converts it `CarouselItem`.\r\n   */\r\n  loadProduct(code: string): Observable<ProductCarouselItem> {\r\n    return this.productService.get(code).pipe(\r\n      filter(Boolean),\r\n      map((product) => this.convertProduct(product))\r\n    );\r\n  }\r\n\r\n  getProductReferences(\r\n    code: string,\r\n    referenceType: string,\r\n    displayTitle: boolean,\r\n    displayProductPrices: boolean\r\n  ): Observable<ProductCarouselItem[]> {\r\n    return this.referenceService.get(code, referenceType).pipe(\r\n      filter(Boolean),\r\n      map((refs: ProductReference[]) =>\r\n        refs.map((ref) =>\r\n          this.convertProduct(ref.target, displayTitle, displayProductPrices)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Converts the product to a generic CarouselItem\r\n   */\r\n  private convertProduct(\r\n    source: Product,\r\n    displayTitle = true,\r\n    displayProductPrices = true\r\n  ): ProductCarouselItem {\r\n    const item: ProductCarouselItem = {};\r\n    if (displayTitle) {\r\n      item.title = source.name;\r\n    }\r\n    if (displayProductPrices && source.price && source.price.formattedValue) {\r\n      item.price = source.price.formattedValue;\r\n    }\r\n    if (source.images && source.images.PRIMARY) {\r\n      item.media = {\r\n        container: source.images.PRIMARY,\r\n        format: 'product',\r\n      };\r\n    }\r\n    item.route = this.semanticPathService.transform({\r\n      cxRoute: 'product',\r\n      params: source,\r\n    });\r\n    return item;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport {\r\n  CmsProductCarouselComponent as model,\r\n  Product,\r\n  ProductScope,\r\n  ProductService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\r\n\r\n@Component({\r\n  selector: 'cx-product-carousel',\r\n  templateUrl: './product-carousel.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductCarouselComponent {\r\n  protected readonly PRODUCT_SCOPE = ProductScope.LIST;\r\n\r\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\r\n    filter(Boolean)\r\n  );\r\n\r\n  /**\r\n   * returns an Obervable string for the title.\r\n   */\r\n  title$: Observable<string> = this.componentData$.pipe(\r\n    map((data) => data.title)\r\n  );\r\n\r\n  /**\r\n   * Obervable that holds an Array of Observables. This is done, so that\r\n   * the component UI could consider to lazy load the UI components when they're\r\n   * in the viewpoint.\r\n   */\r\n  items$: Observable<Observable<Product>[]> = this.componentData$.pipe(\r\n    map((data) => data.productCodes.trim().split(' ')),\r\n    map((codes) =>\r\n      codes.map((code) => this.productService.get(code, this.PRODUCT_SCOPE))\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    protected componentData: CmsComponentData<model>,\r\n    protected productService: ProductService\r\n  ) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\r\nimport {\r\n  CarouselModule,\r\n  MediaModule,\r\n} from '../../../../shared/components/index';\r\nimport { ProductCarouselComponent } from './product-carousel.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductCarouselComponent: {\r\n          component: ProductCarouselComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductCarouselComponent],\r\n  entryComponents: [ProductCarouselComponent],\r\n  exports: [ProductCarouselComponent],\r\n})\r\nexport class ProductCarouselModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport {\r\n  CmsProductReferencesComponent,\r\n  Product,\r\n  ProductReference,\r\n  ProductReferenceService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport {\r\n  filter,\r\n  map,\r\n  switchMap,\r\n  tap,\r\n  distinctUntilChanged,\r\n} from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\r\nimport { CurrentProductService } from '../../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-references',\r\n  templateUrl: './product-references.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductReferencesComponent {\r\n  /**\r\n   * returns an Obervable string for the title\r\n   */\r\n  title$ = this.component.data$.pipe(map((d) => d?.title));\r\n\r\n  private currentProductCode$: Observable<\r\n    string\r\n  > = this.current.getProduct().pipe(\r\n    filter(Boolean),\r\n    map((p: Product) => p.code),\r\n    distinctUntilChanged(),\r\n    tap(() => this.referenceService.cleanReferences())\r\n  );\r\n\r\n  /**\r\n   * Obervable with an Array of Observables. This is done, so that\r\n   * the component UI could consider to lazy load the UI components when they're\r\n   * in the viewpoint.\r\n   */\r\n  items$: Observable<Observable<Product>[]> = combineLatest([\r\n    this.currentProductCode$,\r\n    this.component.data$,\r\n  ]).pipe(\r\n    switchMap(([code, data]) =>\r\n      this.getProductReferences(code, data?.productReferenceTypes)\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    protected component: CmsComponentData<CmsProductReferencesComponent>,\r\n    protected current: CurrentProductService,\r\n    protected referenceService: ProductReferenceService\r\n  ) {}\r\n\r\n  private getProductReferences(\r\n    code: string,\r\n    referenceType: string\r\n  ): Observable<Observable<Product>[]> {\r\n    return this.referenceService.get(code, referenceType).pipe(\r\n      filter(Boolean),\r\n      map((refs: ProductReference[]) => refs.map((ref) => of(ref.target)))\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\r\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\r\nimport { MediaModule } from '../../../../shared/components/media/media.module';\r\nimport { ProductReferencesComponent } from './product-references.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductReferencesComponent: {\r\n          component: ProductReferencesComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductReferencesComponent],\r\n  entryComponents: [ProductReferencesComponent],\r\n  exports: [ProductReferencesComponent],\r\n})\r\nexport class ProductReferencesModule {}\r\n","import { ViewConfig } from '../../../shared/config/view-config';\n\nexport const defaultScrollConfig: ViewConfig = {\n  view: {\n    infiniteScroll: {\n      active: false,\n      productLimit: 0,\n      showMoreButton: false,\n    },\n  },\n};\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Product } from '@spartacus/core';\r\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\r\nimport { CurrentProductService } from '../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-images',\r\n  templateUrl: './product-images.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductImagesComponent {\r\n  private mainMediaContainer = new BehaviorSubject(null);\r\n\r\n  private product$: Observable<\r\n    Product\r\n  > = this.currentProductService.getProduct().pipe(\r\n    filter(Boolean),\r\n    distinctUntilChanged(),\r\n    tap((p: Product) => {\r\n      this.mainMediaContainer.next(p.images?.PRIMARY ? p.images.PRIMARY : {});\r\n    })\r\n  );\r\n\r\n  thumbs$: Observable<any[]> = this.product$.pipe(\r\n    map((p: Product) => this.createThumbs(p))\r\n  );\r\n\r\n  mainImage$ = combineLatest([this.product$, this.mainMediaContainer]).pipe(\r\n    map(([, container]) => container)\r\n  );\r\n\r\n  constructor(private currentProductService: CurrentProductService) {}\r\n\r\n  openImage(item: any): void {\r\n    this.mainMediaContainer.next(item);\r\n  }\r\n\r\n  isActive(thumbnail): Observable<boolean> {\r\n    return this.mainMediaContainer.pipe(\r\n      filter(Boolean),\r\n      map((container: any) => {\r\n        return (\r\n          container.zoom &&\r\n          container.zoom.url &&\r\n          thumbnail.zoom &&\r\n          thumbnail.zoom.url &&\r\n          container.zoom.url === thumbnail.zoom.url\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /** find the index of the main media in the list of media */\r\n  getActive(thumbs: any[]): Observable<number> {\r\n    return this.mainMediaContainer.pipe(\r\n      filter(Boolean),\r\n      map((container: any) => {\r\n        const current = thumbs.find(\r\n          (t) =>\r\n            t.media &&\r\n            container.zoom &&\r\n            t.media.container &&\r\n            t.media.container.zoom &&\r\n            t.media.container.zoom.url === container.zoom.url\r\n        );\r\n        return thumbs.indexOf(current);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return an array of CarouselItems for the product thumbnails.\r\n   * In case there are less then 2 thumbs, we return null.\r\n   */\r\n  private createThumbs(product: Product): Observable<any>[] {\r\n    if (\r\n      !product.images ||\r\n      !product.images.GALLERY ||\r\n      product.images.GALLERY.length < 2\r\n    ) {\r\n      return [];\r\n    }\r\n\r\n    return (<any[]>product.images.GALLERY).map((c) => of({ container: c }));\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { OutletModule } from '../../../cms-structure/outlet/index';\r\nimport { CarouselModule } from '../../../shared/components/carousel/index';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { ProductImagesComponent } from './product-images.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MediaModule,\r\n    OutletModule,\r\n    CarouselModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductImagesComponent: {\r\n          component: ProductImagesComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductImagesComponent],\r\n  entryComponents: [ProductImagesComponent],\r\n  exports: [ProductImagesComponent],\r\n})\r\nexport class ProductImagesModule {}\r\n","import {\r\n  AfterContentChecked,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n} from '@angular/core';\r\nimport { Product, TranslationService, WindowRef } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { CurrentProductService } from '../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-intro',\r\n  templateUrl: './product-intro.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductIntroComponent implements AfterContentChecked {\r\n  reviewsTabAvailable = new BehaviorSubject<boolean>(false);\r\n\r\n  product$: Observable<Product> = this.currentProductService.getProduct();\r\n\r\n  constructor(\r\n    protected currentProductService: CurrentProductService,\r\n    private translationService: TranslationService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  ngAfterContentChecked() {\r\n    this.reviewsTabAvailable.next(!!this.getReviewsComponent());\r\n  }\r\n\r\n  // Scroll to views component on page and click \"Reviews\" tab\r\n  showReviews() {\r\n    // Use translated label for Reviews tab reference\r\n    this.translationService\r\n      .translate('TabPanelContainer.tabs.ProductReviewsTabComponent')\r\n      .subscribe((reviewsTabLabel) => {\r\n        const tabsComponent = this.getTabsComponent();\r\n        const reviewsTab = this.getTabByLabel(reviewsTabLabel, tabsComponent);\r\n        const reviewsComponent = this.getReviewsComponent();\r\n        if (reviewsTab && reviewsComponent) {\r\n          this.clickTabIfInactive(reviewsTab);\r\n          setTimeout(\r\n            () => reviewsComponent.scrollIntoView({ behavior: 'smooth' }),\r\n            0\r\n          );\r\n        }\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  // NOTE: Does not currently exists as its own component\r\n  // but part of tabs component. This is likely to change in refactor.\r\n  private getReviewsComponent(): Element {\r\n    return this.winRef.document.querySelector('cx-product-reviews');\r\n  }\r\n\r\n  // Get Tabs Component if exists on page\r\n  private getTabsComponent(): Element {\r\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\r\n  }\r\n\r\n  // Click to activate tab if not already active\r\n  private clickTabIfInactive(tab: HTMLElement): void {\r\n    if (\r\n      !tab.classList.contains('active') ||\r\n      tab.classList.contains('toggled')\r\n    ) {\r\n      tab.click();\r\n    }\r\n  }\r\n\r\n  // Get Tab by label if exists on page\r\n  private getTabByLabel(label: string, tabsComponent: Element): HTMLElement {\r\n    if (tabsComponent) {\r\n      // NOTE: Reads through button tags to click on correct tab\r\n      // There may be a better way of doing this now/after refactor\r\n      const tabElements: HTMLCollectionOf<HTMLElement> = tabsComponent.getElementsByTagName(\r\n        'button'\r\n      );\r\n\r\n      // Look through button tab elements until finding tab with label\r\n      for (const buttonElement of Array.from(tabElements)) {\r\n        if (buttonElement.innerHTML.includes(label)) {\r\n          return buttonElement;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\r\nimport { ProductIntroComponent } from './product-intro.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, StarRatingModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductIntroComponent: {\r\n          component: ProductIntroComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductIntroComponent],\r\n  exports: [ProductIntroComponent],\r\n  entryComponents: [ProductIntroComponent],\r\n})\r\nexport class ProductIntroModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  ActivatedRouterStateSnapshot,\r\n  CurrencyService,\r\n  LanguageService,\r\n  ProductSearchPage,\r\n  ProductSearchService,\r\n  RoutingService,\r\n  SearchConfig,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  filter,\r\n  pluck,\r\n  shareReplay,\r\n  tap,\r\n} from 'rxjs/operators';\r\n\r\ninterface ProductListRouteParams {\r\n  brandCode?: string;\r\n  categoryCode?: string;\r\n  query?: string;\r\n}\r\n\r\ninterface SearchCriteria {\r\n  currentPage?: number;\r\n  pageSize?: number;\r\n  sortCode?: string;\r\n  query?: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductListComponentService {\r\n  // TODO: make it configurable\r\n  protected defaultPageSize = 10;\r\n\r\n  protected sub: Subscription;\r\n\r\n  protected readonly RELEVANCE_ALLCATEGORIES = ':relevance:allCategories:';\r\n\r\n  constructor(\r\n    protected productSearchService: ProductSearchService,\r\n    protected routing: RoutingService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected currencyService: CurrencyService,\r\n    protected languageService: LanguageService,\r\n    protected router: Router\r\n  ) {}\r\n\r\n  private searchResults$: Observable<\r\n    ProductSearchPage\r\n  > = this.productSearchService\r\n    .getResults()\r\n    .pipe(filter((searchResult) => Object.keys(searchResult).length > 0));\r\n\r\n  private searchByRouting$: Observable<\r\n    ActivatedRouterStateSnapshot\r\n  > = combineLatest([\r\n    this.routing.getRouterState().pipe(\r\n      distinctUntilChanged((x, y) => {\r\n        // router emits new value also when the anticipated `nextState` changes\r\n        // but we want to perform search only when current url changes\r\n        return x.state.url === y.state.url;\r\n      })\r\n    ),\r\n    // also trigger search on site context changes\r\n    this.languageService.getActive(),\r\n    this.currencyService.getActive(),\r\n  ]).pipe(\r\n    pluck(0, 'state'),\r\n    tap((state: ActivatedRouterStateSnapshot) => {\r\n      const criteria = this.getCriteriaFromRoute(\r\n        state.params,\r\n        state.queryParams\r\n      );\r\n      this.search(criteria);\r\n    })\r\n  );\r\n\r\n  /**\r\n   * This stream should be used only on the Product Listing Page.\r\n   *\r\n   * It not only emits search results, but also performs a search on every change\r\n   * of the route (i.e. route params or query params).\r\n   *\r\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\r\n   * so no longer the search is performed on route change.\r\n   */\r\n  readonly model$: Observable<ProductSearchPage> = combineLatest([\r\n    this.searchResults$,\r\n    this.searchByRouting$,\r\n  ]).pipe(pluck(0), shareReplay({ bufferSize: 1, refCount: true }));\r\n\r\n  private getCriteriaFromRoute(\r\n    routeParams: ProductListRouteParams,\r\n    queryParams: SearchCriteria\r\n  ): SearchCriteria {\r\n    return {\r\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\r\n      pageSize: queryParams.pageSize || this.defaultPageSize,\r\n      currentPage: queryParams.currentPage,\r\n      sortCode: queryParams.sortCode,\r\n    };\r\n  }\r\n\r\n  private getQueryFromRouteParams({\r\n    brandCode,\r\n    categoryCode,\r\n    query,\r\n  }: ProductListRouteParams) {\r\n    if (query) {\r\n      return query;\r\n    }\r\n    if (categoryCode) {\r\n      return this.RELEVANCE_ALLCATEGORIES + categoryCode;\r\n    }\r\n    if (brandCode) {\r\n      return this.RELEVANCE_ALLCATEGORIES + brandCode;\r\n    }\r\n  }\r\n\r\n  private search(criteria: SearchCriteria): void {\r\n    const query = criteria.query;\r\n    const searchConfig = this.getSearchConfig(criteria);\r\n\r\n    this.productSearchService.search(query, searchConfig);\r\n  }\r\n\r\n  private getSearchConfig(criteria: SearchCriteria): SearchConfig {\r\n    const result: SearchConfig = {\r\n      currentPage: criteria.currentPage,\r\n      pageSize: criteria.pageSize,\r\n      sortCode: criteria.sortCode,\r\n    };\r\n\r\n    // drop empty keys\r\n    Object.keys(result).forEach((key) => !result[key] && delete result[key]);\r\n\r\n    return result;\r\n  }\r\n\r\n  setQuery(query: string): void {\r\n    this.setQueryParams({ query, currentPage: undefined });\r\n  }\r\n\r\n  viewPage(pageNumber: number): void {\r\n    this.setQueryParams({ currentPage: pageNumber });\r\n  }\r\n\r\n  /**\r\n   * Get items from a given page without using navigation\r\n   */\r\n  getPageItems(pageNumber: number): void {\r\n    this.routing\r\n      .getRouterState()\r\n      .subscribe((route) => {\r\n        const routeCriteria = this.getCriteriaFromRoute(\r\n          route.state.params,\r\n          route.state.queryParams\r\n        );\r\n        const criteria = {\r\n          ...routeCriteria,\r\n          currentPage: pageNumber,\r\n        };\r\n        this.search(criteria);\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  sort(sortCode: string): void {\r\n    this.setQueryParams({ sortCode });\r\n  }\r\n\r\n  private setQueryParams(queryParams: SearchCriteria): void {\r\n    this.router.navigate([], {\r\n      queryParams,\r\n      queryParamsHandling: 'merge',\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\r\n\r\nexport enum ViewModes {\r\n  Grid = 'grid',\r\n  List = 'list',\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-product-view',\r\n  templateUrl: './product-view.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductViewComponent {\r\n  iconTypes = ICON_TYPE;\r\n  @Input()\r\n  mode: ViewModes;\r\n  @Output()\r\n  modeChange = new EventEmitter<string>();\r\n\r\n  get buttonClass() {\r\n    const viewName: string = this.viewMode.toLowerCase();\r\n    return `cx-product-${viewName}`;\r\n  }\r\n\r\n  /**\r\n   *   Display icons inversely to allow users\r\n   *   to see the view they will navigate to\r\n   */\r\n  get viewMode() {\r\n    if (this.mode === 'list') {\r\n      return this.iconTypes.GRID;\r\n    } else if (this.mode === 'grid') {\r\n      return this.iconTypes.LIST;\r\n    }\r\n  }\r\n\r\n  changeMode() {\r\n    const newMode =\r\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\r\n    this.modeChange.emit(newMode);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ProductSearchPage } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\r\nimport { ViewConfig } from '../../../../shared/config/view-config';\r\nimport { ViewModes } from '../product-view/product-view.component';\r\nimport { ProductListComponentService } from './product-list-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-list',\r\n  templateUrl: './product-list.component.html',\r\n})\r\nexport class ProductListComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  isInfiniteScroll: boolean;\r\n\r\n  model$: Observable<ProductSearchPage> = this.productListComponentService\r\n    .model$;\r\n\r\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\r\n  ViewModes = ViewModes;\r\n\r\n  constructor(\r\n    private pageLayoutService: PageLayoutService,\r\n    private productListComponentService: ProductListComponentService,\r\n    public scrollConfig: ViewConfig\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isInfiniteScroll = this.scrollConfig.view.infiniteScroll.active;\r\n\r\n    this.subscription.add(\r\n      this.pageLayoutService.templateName$\r\n        .pipe(take(1))\r\n        .subscribe((template) => {\r\n          this.viewMode$.next(\r\n            template === 'ProductGridPageTemplate'\r\n              ? ViewModes.Grid\r\n              : ViewModes.List\r\n          );\r\n        })\r\n    );\r\n  }\r\n\r\n  sortList(sortCode: string): void {\r\n    this.productListComponentService.sort(sortCode);\r\n  }\r\n\r\n  setViewMode(mode: ViewModes): void {\r\n    this.viewMode$.next(mode);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { ProductSearchPage } from '@spartacus/core';\r\nimport { ViewModes } from '../../product-view/product-view.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductListComponentService } from '../product-list-component.service';\r\nimport { ViewConfig } from '../../../../../shared/config/view-config';\r\n\r\n@Component({\r\n  selector: 'cx-product-scroll',\r\n  templateUrl: './product-scroll.component.html',\r\n})\r\nexport class ProductScrollComponent implements OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  @Input('scrollConfig')\r\n  set setConfig(inputConfig: ViewConfig) {\r\n    this.setComponentConfigurations(inputConfig);\r\n  }\r\n\r\n  model: ProductSearchPage;\r\n  @Input('model')\r\n  set setModel(inputModel: ProductSearchPage) {\r\n    this.infiniteScrollOperations(inputModel);\r\n  }\r\n\r\n  inputViewMode: ViewModes;\r\n  @Input('inputViewMode')\r\n  set setViewMode(inputViewMode: ViewModes) {\r\n    this.inputViewMode = inputViewMode;\r\n    //If viewMode is already set (meaning it is not the first load)\r\n    //Reset the product list\r\n    if (this.viewMode) {\r\n      this.resetListOnViewModeChange();\r\n    } else {\r\n      //If viewMode is not set (meaning it is the first load)\r\n      //Set the viewMode\r\n      this.viewMode = inputViewMode;\r\n    }\r\n  }\r\n\r\n  viewMode: ViewModes;\r\n  productLimit: number;\r\n  maxProducts: number;\r\n\r\n  ViewModes = ViewModes;\r\n  appendProducts = false;\r\n  resetList = false;\r\n  isMaxProducts = false;\r\n  isLastPage = false;\r\n  isEmpty = false;\r\n\r\n  constructor(\r\n    private productListComponentService: ProductListComponentService,\r\n    private ref: ChangeDetectorRef\r\n  ) {}\r\n\r\n  scrollPage(pageNumber: number): void {\r\n    this.appendProducts = true;\r\n    this.ref.markForCheck();\r\n    this.productListComponentService.getPageItems(pageNumber);\r\n  }\r\n\r\n  loadNextPage(pageNumber: number): void {\r\n    this.isMaxProducts = false;\r\n    this.scrollPage(pageNumber);\r\n  }\r\n\r\n  scrollToTop(): void {\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  private setComponentConfigurations(scrollConfig: ViewConfig): void {\r\n    const isButton = scrollConfig.view.infiniteScroll.showMoreButton;\r\n    const configProductLimit = scrollConfig.view.infiniteScroll.productLimit;\r\n\r\n    //Display \"show more\" button every time when button configuration is true\r\n    //Otherwise, only display \"show more\" when the configuration product limit is reached\r\n    this.productLimit = isButton ? 1 : configProductLimit;\r\n  }\r\n\r\n  private infiniteScrollOperations(inputModel: ProductSearchPage): void {\r\n    if (this.appendProducts) {\r\n      this.model = {\r\n        ...inputModel,\r\n        products: this.model.products.concat(inputModel.products),\r\n      };\r\n    } else {\r\n      this.model = inputModel;\r\n      this.maxProducts = this.productLimit;\r\n    }\r\n    this.setConditions();\r\n    this.ref.markForCheck();\r\n  }\r\n\r\n  private resetListOnViewModeChange(): void {\r\n    this.scrollToTop();\r\n    this.resetList = true;\r\n    this.productListComponentService.getPageItems(0);\r\n  }\r\n\r\n  //Set booleans after model has been retrieved\r\n  private setConditions(): void {\r\n    this.isEmpty = !this.model.products || this.model.products.length === 0;\r\n\r\n    this.isLastPage =\r\n      this.model.pagination.currentPage ===\r\n      this.model.pagination.totalPages - 1;\r\n\r\n    this.isMaxProducts =\r\n      this.productLimit &&\r\n      this.productLimit !== 0 &&\r\n      this.model.products.length >= this.maxProducts;\r\n\r\n    //Add the productLimit to the current number of products to determine the next max number of products\r\n    if (this.isMaxProducts) {\r\n      this.maxProducts = this.model.products.length + this.productLimit;\r\n    }\r\n\r\n    //Only change viewMode once the new model is set\r\n    //This prevents flickering issues\r\n    if (this.viewMode !== this.inputViewMode) {\r\n      this.viewMode = this.inputViewMode;\r\n    }\r\n\r\n    this.resetList = false;\r\n    this.appendProducts = false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Breadcrumb, Facet } from '@spartacus/core';\r\n\r\n/**\r\n * UI model that holds the full list of facet and active facets for\r\n * the product list.\r\n */\r\nexport interface FacetList {\r\n  facets: Facet[];\r\n  activeFacets?: Breadcrumb[];\r\n}\r\n\r\nexport interface FacetCollapseState {\r\n  /**\r\n   * Indicates whether the facet is toggled to expand or collapse the facet values.\r\n   * Whether the toggle results in an expanded or collapsed state, depends on the\r\n   * experience, which is controlled in CSS.\r\n   */\r\n  toggled?: FacetGroupCollapsedState;\r\n\r\n  /**\r\n   * The top number of facet values that will be visible.\r\n   */\r\n  topVisible?: number;\r\n\r\n  /**\r\n   * The max number of facet values which will be visible. This includes\r\n   * the top visible number.\r\n   */\r\n  maxVisible?: number;\r\n}\r\n\r\nexport enum FacetGroupCollapsedState {\r\n  EXPANDED = 'EXPANDED',\r\n  COLLAPSED = 'COLLAPSED',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Params } from '@angular/router';\r\nimport {\r\n  ActivatedRouterStateSnapshot,\r\n  Breadcrumb,\r\n  PageType,\r\n  ProductSearchPage,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, pluck, switchMap } from 'rxjs/operators';\r\nimport { ProductListComponentService } from '../../container/product-list-component.service';\r\nimport { FacetList } from '../facet.model';\r\n\r\n/**\r\n * Provides access to all the facets and active facets for the Product Listing Page.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductFacetService {\r\n  protected readonly routeState$ = this.routing\r\n    .getRouterState()\r\n    .pipe(pluck('state'));\r\n\r\n  protected readonly searchResult$: Observable<\r\n    ProductSearchPage\r\n  > = this.routeState$.pipe(\r\n    switchMap((state) =>\r\n      this.productListComponentService.model$.pipe(\r\n        filter((page) => this.filterForPage(state, page)),\r\n        map((page) => this.mapResults(state, page))\r\n      )\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    protected routing: RoutingService,\r\n    protected productListComponentService: ProductListComponentService\r\n  ) {}\r\n\r\n  /**\r\n   * Observes the facets and active facets for the given page. The facet data\r\n   * is provided in a `FacetList`.\r\n   */\r\n  readonly facetList$: Observable<FacetList> = this.searchResult$.pipe(\r\n    map(\r\n      (result: ProductSearchPage) =>\r\n        ({\r\n          facets: result.facets,\r\n          activeFacets: result.breadcrumbs,\r\n        } as FacetList)\r\n    )\r\n  );\r\n\r\n  /**\r\n   * Filters the current result by verifying if the result is related to the page.\r\n   * This is done to avoid a combination of the next page and the current search results.\r\n   */\r\n  protected filterForPage(\r\n    state: ActivatedRouterStateSnapshot,\r\n    page: ProductSearchPage\r\n  ): boolean {\r\n    if (state.context.type === PageType.CATEGORY_PAGE) {\r\n      return (\r\n        page.currentQuery?.query?.value?.indexOf(\r\n          `allCategories:${state.context.id}`\r\n        ) > -1\r\n      );\r\n    }\r\n\r\n    if (\r\n      state.context.type === PageType.CONTENT_PAGE &&\r\n      state.context.id === 'search'\r\n    ) {\r\n      return page.currentQuery.query.value.startsWith(`${state.params.query}:`);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private mapResults(\r\n    state: ActivatedRouterStateSnapshot,\r\n    page: ProductSearchPage\r\n  ): ProductSearchPage {\r\n    return {\r\n      ...page,\r\n      breadcrumbs: this.filterBreadcrumbs(page.breadcrumbs, state.params),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * filter breadcrumbs which are not actively selected\r\n   * but coming from the route navigation\r\n   */\r\n  private filterBreadcrumbs(\r\n    breadcrumbs: Breadcrumb[],\r\n    params: Params\r\n  ): Breadcrumb[] {\r\n    return breadcrumbs\r\n      ? breadcrumbs.filter(\r\n          (breadcrumb) => !this.hasBreadcrumb(breadcrumb, params)\r\n        )\r\n      : [];\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the breadcrumb is related to navigation parameters,\r\n   * since either the category or brand code should match those codes.\r\n   */\r\n  private hasBreadcrumb(breadcrumb: Breadcrumb, params: Params): boolean {\r\n    return (\r\n      breadcrumb.facetCode === 'allCategories' &&\r\n      breadcrumb.facetValueCode === params.categoryCode\r\n    );\r\n  }\r\n}\r\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Facet } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport {\r\n  FacetCollapseState,\r\n  FacetGroupCollapsedState,\r\n  FacetList,\r\n} from '../facet.model';\r\nimport { ProductFacetService } from './product-facet.service';\r\n\r\n/**\r\n * Provides access to the facets as well as their UI state. The UI state\r\n * represents user related changes on the facets, such as expanding or\r\n * collapsing a facet group or expanding the number of _visible_ facet values.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FacetService {\r\n  /**\r\n   * An internal map where we keep the UI state of the facets.\r\n   */\r\n  protected facetState = new Map<string, BehaviorSubject<FacetCollapseState>>();\r\n\r\n  constructor(protected productFacetService: ProductFacetService) {}\r\n\r\n  /**\r\n   * Observes the facets for the given page and configures the initial UI state.\r\n   *\r\n   * Facets are configured on each emission so that we keep the facet UI state.\r\n   * This is mainly done to keep the state during usage of the facet, but also\r\n   * benefitial when the facets are rebuild while using them.\r\n   */\r\n  facetList$: Observable<FacetList> = this.productFacetService.facetList$.pipe(\r\n    tap((facetList) => {\r\n      facetList.facets.forEach((facet) => this.initialize(facet));\r\n    })\r\n  );\r\n\r\n  /**\r\n   * Returns the observed UI state for the facet.\r\n   *\r\n   * The state is initialized using the `initialize` method.\r\n   */\r\n  getState(facet: Facet): Observable<FacetCollapseState> {\r\n    this.initialize(facet);\r\n    return this.facetState.get(facet.name);\r\n  }\r\n\r\n  /**\r\n   * Returns the UI state for the facet.\r\n   *\r\n   * The state is initialized using the `initialize` method.\r\n   */\r\n  protected getStateSnapshot(facet: Facet): FacetCollapseState {\r\n    return (this.getState(facet) as BehaviorSubject<FacetCollapseState>).value;\r\n  }\r\n\r\n  /**\r\n   * Toggles the facet expanded state. If the expanded state becomes false,\r\n   * the visible values will decrease to the top values only.\r\n   *\r\n   * If the optional value argument is provided the expanded state will be set\r\n   * to this value, regardless of the current `expanded` state.\r\n   */\r\n  toggle(facet: Facet, isExpanded: boolean): void {\r\n    const state = this.getStateSnapshot(facet);\r\n\r\n    const toggledState = {\r\n      toggled: isExpanded\r\n        ? FacetGroupCollapsedState.COLLAPSED\r\n        : FacetGroupCollapsedState.EXPANDED,\r\n    } as FacetCollapseState;\r\n\r\n    if (toggledState.toggled === FacetGroupCollapsedState.COLLAPSED) {\r\n      toggledState.maxVisible = state.topVisible;\r\n    }\r\n\r\n    this.updateState(facet, toggledState);\r\n  }\r\n\r\n  /**\r\n   * Increases the visible values to the maximum values of the facet.\r\n   */\r\n  increaseVisibleValues(facet: Facet): void {\r\n    this.updateState(facet, { maxVisible: facet.values.length });\r\n  }\r\n\r\n  /**\r\n   * Decreases the visible values to the topValueCount.\r\n   *\r\n   * The topValueCount defaults to 6, but can be controlled in\r\n   * the backend as well.\r\n   */\r\n  decreaseVisibleValues(facet: Facet): void {\r\n    this.updateState(facet, { maxVisible: facet.topValueCount });\r\n  }\r\n\r\n  /**\r\n   * Persists the facet state and initializes the default values for the top\r\n   * and max visible values.\r\n   */\r\n  protected initialize(facet: Facet): void {\r\n    if (!this.hasState(facet)) {\r\n      this.facetState.set(\r\n        facet.name,\r\n        new BehaviorSubject({\r\n          topVisible: facet.topValueCount || 0,\r\n          maxVisible: facet.topValueCount || 0,\r\n        } as FacetCollapseState)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the state of the facet in the local facet map.\r\n   */\r\n  protected updateState(facet: Facet, property: FacetCollapseState): void {\r\n    const state = { ...this.getStateSnapshot(facet), ...property };\r\n    this.facetState.get(facet.name).next(state);\r\n  }\r\n\r\n  protected hasState(facet: Facet): boolean {\r\n    return this.facetState.has(facet.name);\r\n  }\r\n\r\n  getLinkParams(query: string): { [key: string]: string } {\r\n    return {\r\n      // to avoid encoding issues with facets that have space (' ') in their name,\r\n      // we replace the decoded '+' back to empty space ' '.\r\n      // For more, see https://github.com/SAP/spartacus/issues/7348\r\n      query: new HttpUrlEncodingCodec().decodeValue(query).replace(/\\+/g, ' '),\r\n    };\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Breadcrumb } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\r\nimport { FacetList } from '../facet.model';\r\nimport { FacetService } from '../services/facet.service';\r\n\r\n/**\r\n * Active facets render the applied facet values as a list of focusable buttons\r\n * which can be used to remove the applied facet value.\r\n */\r\n@Component({\r\n  selector: 'cx-active-facets',\r\n  templateUrl: './active-facets.component.html',\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class ActiveFacetsComponent {\r\n  /** Active facets which are applied to the product results. */\r\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\r\n\r\n  /** Configurable icon which is used for the active facet close button */\r\n  @Input() closeIcon = ICON_TYPE.CLOSE;\r\n\r\n  constructor(protected facetService: FacetService) {}\r\n\r\n  getLinkParams(facet: Breadcrumb) {\r\n    return this.facetService.getLinkParams(facet.removeQuery?.query?.value);\r\n  }\r\n\r\n  /**\r\n   * The focus key is used to persist the focus on the facet when the DOM is being\r\n   * recreated. We only apply the focus key for the given _active_ facet when there\r\n   * the original facets is not available. This happens for non multi-valued facets.\r\n   *\r\n   * With this approach, the we keep the focus, either at the facet list or on the\r\n   * active facets.\r\n   */\r\n  getFocusKey(facetList: FacetList, facet: Breadcrumb) {\r\n    return facetList.facets?.find((f) =>\r\n      f.values?.find((val) => val.name === facet.facetValueName)\r\n    )\r\n      ? ''\r\n      : facet.facetValueName;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../../../cms-components/misc/icon/icon.module';\r\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { ActiveFacetsComponent } from './active-facets.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    I18nModule,\r\n    IconModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [ActiveFacetsComponent],\r\n  exports: [ActiveFacetsComponent],\r\n})\r\nexport class ActiveFacetsModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  Output,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { Facet } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FocusConfig } from '../../../../../layout/a11y/keyboard-focus/index';\r\nimport { ICON_TYPE } from '../../../../misc/icon/icon.model';\r\nimport { FacetGroupCollapsedState, FacetList } from '../facet.model';\r\nimport { FacetComponent } from '../facet/facet.component';\r\nimport { FacetService } from '../services/facet.service';\r\n\r\n@Component({\r\n  selector: 'cx-facet-list',\r\n  templateUrl: './facet-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetListComponent {\r\n  private _isDialog: boolean;\r\n  /**\r\n   * Indicates that the facet navigation is rendered in dialog.\r\n   */\r\n  @Input()\r\n  set isDialog(value: boolean) {\r\n    this._isDialog = value;\r\n    if (value) {\r\n      this.renderer.addClass(document.body, 'modal-open');\r\n    }\r\n  }\r\n\r\n  get isDialog(): boolean {\r\n    return this._isDialog;\r\n  }\r\n\r\n  /** Emits when the list must close */\r\n  @Output() closeList = new EventEmitter();\r\n\r\n  /** The list of all facet and values related to the products in the list */\r\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  dialogFocusConfig: FocusConfig = {\r\n    trap: true,\r\n    block: true,\r\n    focusOnEscape: true,\r\n    autofocus: 'cx-facet',\r\n  };\r\n\r\n  @HostListener('click') handleClick() {\r\n    this.close();\r\n  }\r\n\r\n  constructor(\r\n    protected facetService: FacetService,\r\n    protected elementRef: ElementRef,\r\n    protected renderer: Renderer2\r\n  ) {}\r\n\r\n  /**\r\n   * Toggles the facet group in case it is not expanded.\r\n   */\r\n  expandFacetGroup(facet: Facet, ref: FacetComponent) {\r\n    if (!ref.isExpanded) {\r\n      this.facetService.toggle(facet, ref.isExpanded);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates that the facet group has been expanded.\r\n   */\r\n  isExpanded(facet: Facet): Observable<boolean> {\r\n    return this.facetService\r\n      .getState(facet)\r\n      .pipe(\r\n        map((value) => value.toggled === FacetGroupCollapsedState.EXPANDED)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Indicates that the facet group has been collapsed.\r\n   */\r\n  isCollapsed(facet: Facet): Observable<boolean> {\r\n    return this.facetService\r\n      .getState(facet)\r\n      .pipe(\r\n        map((value) => value.toggled === FacetGroupCollapsedState.COLLAPSED)\r\n      );\r\n  }\r\n\r\n  close(event?: boolean): void {\r\n    this.renderer.removeClass(document.body, 'modal-open');\r\n    this.closeList.emit(event);\r\n  }\r\n\r\n  block(event?: MouseEvent) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren,\r\n} from '@angular/core';\r\nimport { Facet, FacetValue } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\r\nimport { FocusDirective } from '../../../../../layout/a11y/keyboard-focus/focus.directive';\r\nimport { FacetCollapseState } from '../facet.model';\r\nimport { FacetService } from '../services/facet.service';\r\n\r\n@Component({\r\n  selector: 'cx-facet',\r\n  templateUrl: './facet.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetComponent {\r\n  protected _facet: Facet;\r\n\r\n  state$: Observable<FacetCollapseState>;\r\n\r\n  /** configurable icon that is used to collapse the facet group  */\r\n  @Input() expandIcon: ICON_TYPE = ICON_TYPE.EXPAND;\r\n  @Input() collapseIcon: ICON_TYPE = ICON_TYPE.COLLAPSE;\r\n\r\n  @HostBinding('class.multi-select') isMultiSelect: boolean;\r\n\r\n  @ViewChildren('facetValue') values: QueryList<ElementRef<HTMLElement>>;\r\n\r\n  @ViewChild(FocusDirective) keyboardFocus: FocusDirective;\r\n\r\n  @Input()\r\n  set facet(value: Facet) {\r\n    this._facet = value;\r\n    this.isMultiSelect = !!value.multiSelect;\r\n    this.state$ = this.facetService.getState(value);\r\n  }\r\n\r\n  get facet(): Facet {\r\n    return this._facet;\r\n  }\r\n\r\n  constructor(\r\n    protected facetService: FacetService,\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /**\r\n   * Handles clicking the heading of the facet group, which means toggling\r\n   * the visibility of the group (collapse / expand) and optionally focusing\r\n   * the group.\r\n   */\r\n  toggleGroup(event: UIEvent) {\r\n    const host: HTMLElement = this.elementRef.nativeElement;\r\n    const isLocked = this.keyboardFocus?.isLocked;\r\n\r\n    this.facetService.toggle(this.facet, this.isExpanded);\r\n\r\n    if (!isLocked || this.isExpanded) {\r\n      host.focus();\r\n      // we stop propagating the event as otherwise the focus on the host will trigger\r\n      // an unlock event from the LockFocus directive.\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  get isExpanded(): boolean {\r\n    return this.values.first.nativeElement.offsetParent !== null;\r\n  }\r\n\r\n  openLink(event: KeyboardEvent) {\r\n    (event.target as HTMLElement).click();\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Increases the number of visible values for the facet. This is delegated\r\n   * to `facetService.increaseVisibleValues`.\r\n   */\r\n  increaseVisibleValues(): void {\r\n    this.facetService.increaseVisibleValues(this.facet);\r\n  }\r\n\r\n  /**\r\n   * Decreases the number of visible values for the facet. This is delegated\r\n   * to `facetService.decreaseVisibleValues`.\r\n   */\r\n  decreaseVisibleValues(): void {\r\n    this.facetService.decreaseVisibleValues(this.facet);\r\n  }\r\n\r\n  getLinkParams(value: FacetValue) {\r\n    return this.facetService.getLinkParams(value.query?.query.value);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { I18nModule, UrlModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../../../cms-components/misc/icon/index';\r\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { FacetComponent } from './facet.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    IconModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [FacetComponent],\r\n  exports: [FacetComponent],\r\n})\r\nexport class FacetModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { IconModule } from '../../../../misc/icon/icon.module';\r\nimport { FacetModule } from '../facet/facet.module';\r\nimport { FacetListComponent } from './facet-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    IconModule,\r\n    FacetModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [FacetListComponent],\r\n  exports: [FacetListComponent],\r\n})\r\nexport class FacetListModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { asapScheduler, BehaviorSubject, interval, Observable, of } from 'rxjs';\r\nimport { delayWhen, observeOn, switchMap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\r\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-facet-navigation',\r\n  templateUrl: './product-facet-navigation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductFacetNavigationComponent {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  /**\r\n   * We delay the removal of DOM so that animations can finish playing before the\r\n   * DOM is removed. Removing the DOM, as hidding is not enough to stop elements\r\n   * to be focused.\r\n   */\r\n  protected CLOSE_DELAY = 300;\r\n\r\n  /**\r\n   * Used to open the facet navigation in a dialog. The usage of the dialog depends\r\n   * on the availability of the trigger element, which is driven by CSS.\r\n   *\r\n   * The reference is also used to refocus the trigger after the dialog is closed.\r\n   */\r\n  @ViewChild('trigger') trigger: ElementRef<HTMLElement>;\r\n\r\n  protected open$ = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * Emits the open state that indicates whether the facet list should be rendered.\r\n   * This is either done instantly, or after the user triggers this by using the trigger\r\n   * button. This driven by the visiibility of the trigger, so that the CSS drives\r\n   * the behaviour. This can differ per breakpoint.\r\n   *\r\n   * There's a configurable delay for the closed state, so that the DOM is not removed\r\n   * before some CSS animations are done.\r\n   */\r\n  isOpen$: Observable<boolean> = this.breakpointService.breakpoint$.pipe(\r\n    // deffer emitting a new value to the next micro-task to ensure that the `hasTrigger`\r\n    // method represents the actual UI state.\r\n    observeOn(asapScheduler),\r\n    switchMap(() => (this.hasTrigger ? this.open$ : of(true))),\r\n    delayWhen((launched) => interval(launched ? 0 : this.CLOSE_DELAY))\r\n  );\r\n\r\n  /**\r\n   * Emits the active state that indicates whether the facet list is activated. Activation\r\n   * is related to the css, so that a animation or transition can visualize opening/closing\r\n   * the list (i.e. dialog).\r\n   */\r\n  isActive$ = this.open$.pipe(\r\n    // deffer emitting a new value to the next micro-task to ensure the active class is\r\n    //  applied after the DOM is created\r\n    observeOn(asapScheduler)\r\n  );\r\n\r\n  constructor(protected breakpointService: BreakpointService) {}\r\n\r\n  launch() {\r\n    this.open$.next(true);\r\n  }\r\n\r\n  close() {\r\n    this.open$.next(false);\r\n    this.trigger.nativeElement.focus();\r\n  }\r\n\r\n  /**\r\n   * Indicates that the facet navigation should be open explicitely by a trigger.\r\n   * This is fully controlled by CSS, where the trigger button can be hidden\r\n   * (display:none) for certain screen sizes.\r\n   */\r\n  get hasTrigger() {\r\n    return this.trigger.nativeElement.offsetParent !== null;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../misc/icon/icon.module';\r\nimport { ActiveFacetsModule } from './active-facets/active-facets.module';\r\nimport { FacetListModule } from './facet-list/facet-list.module';\r\nimport { ProductFacetNavigationComponent } from './product-facet-navigation.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FacetListModule,\r\n    ActiveFacetsModule,\r\n    IconModule,\r\n    I18nModule,\r\n    ConfigModule.withConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductRefinementComponent: {\r\n          component: ProductFacetNavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductFacetNavigationComponent],\r\n  exports: [ProductFacetNavigationComponent],\r\n})\r\nexport class ProductFacetNavigationModule {}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductGridItemComponent {\n  @Input() product: any;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductListItemComponent {\n  @Input() product: any;\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Product, BaseOption, VariantType } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CurrentProductService } from '../current-product.service';\r\nimport { tap, filter, distinctUntilChanged } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-product-variants',\r\n  templateUrl: './product-variants.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductVariantsComponent implements OnInit {\r\n  constructor(private currentProductService: CurrentProductService) {}\r\n\r\n  variants: BaseOption[] = [];\r\n  variantType = VariantType;\r\n  product$: Observable<Product>;\r\n\r\n  ngOnInit(): void {\r\n    this.product$ = this.currentProductService.getProduct().pipe(\r\n      filter((product) => !!(product && product.baseOptions)),\r\n      distinctUntilChanged(),\r\n      tap((product) => {\r\n        product.baseOptions.forEach((option) => {\r\n          if (option && option.variantType) {\r\n            this.variants[option.variantType] = option;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport {\r\n  OccConfig,\r\n  BaseOption,\r\n  VariantQualifier,\r\n  VariantOptionQualifier,\r\n  Product,\r\n  ProductService,\r\n  ProductScope,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-variant-style-selector',\r\n  templateUrl: './variant-style-selector.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantStyleSelectorComponent {\r\n  constructor(\r\n    private config: OccConfig,\r\n    private productService: ProductService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  variantQualifier = VariantQualifier;\r\n\r\n  @Input()\r\n  variants: BaseOption;\r\n\r\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\r\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.STYLE);\r\n    return obj ? obj.value : '';\r\n  }\r\n\r\n  getVariantThumbnailUrl(\r\n    variantOptionQualifiers: VariantOptionQualifier[]\r\n  ): string {\r\n    const qualifier = variantOptionQualifiers.find((item) => item.image);\r\n    return qualifier\r\n      ? `${this.config.backend.occ.baseUrl}${qualifier.image.url}`\r\n      : '';\r\n  }\r\n\r\n  changeStyle(code: string): void {\r\n    if (code) {\r\n      this.productService\r\n        .get(code, ProductScope.LIST)\r\n        .pipe(\r\n          // below call might looks redundant but in fact this data is going to be loaded anyways\r\n          // we're just calling it earlier and storing\r\n          filter(Boolean),\r\n          take(1)\r\n        )\r\n        .subscribe((product: Product) => {\r\n          this.routingService.go({\r\n            cxRoute: 'product',\r\n            params: product,\r\n          });\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleSelectorComponent } from './variant-style-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleSelectorComponent],\n  entryComponents: [VariantStyleSelectorComponent],\n  exports: [VariantStyleSelectorComponent],\n})\nexport class VariantStyleSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport {\r\n  Product,\r\n  RoutingService,\r\n  BaseOption,\r\n  VariantQualifier,\r\n  VariantOptionQualifier,\r\n  ProductService,\r\n  ProductScope,\r\n} from '@spartacus/core';\r\nimport { filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-variant-size-selector',\r\n  templateUrl: './variant-size-selector.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantSizeSelectorComponent {\r\n  constructor(\r\n    private productService: ProductService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  @Input()\r\n  product: Product;\r\n\r\n  @Input()\r\n  variants: BaseOption;\r\n\r\n  changeSize(code: string): void {\r\n    if (code) {\r\n      this.productService\r\n        .get(code, ProductScope.LIST)\r\n        .pipe(\r\n          // below call might looks redundant but in fact this data is going to be loaded anyways\r\n          // we're just calling it earlier and storing\r\n          filter(Boolean),\r\n          take(1)\r\n        )\r\n        .subscribe((product: Product) => {\r\n          this.routingService.go({\r\n            cxRoute: 'product',\r\n            params: product,\r\n          });\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\r\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.SIZE);\r\n    return obj ? obj.value : '';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantSizeSelectorComponent } from './variant-size-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantSizeSelectorComponent],\n  entryComponents: [VariantSizeSelectorComponent],\n  exports: [VariantSizeSelectorComponent],\n})\nexport class VariantSizeSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport {\r\n  BaseOption,\r\n  Product,\r\n  RoutingService,\r\n  VariantOptionQualifier,\r\n  VariantQualifier,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-variant-color-selector',\r\n  templateUrl: './variant-color-selector.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantColorSelectorComponent {\r\n  constructor(private routingService: RoutingService) {}\r\n\r\n  @Input()\r\n  product: Product;\r\n\r\n  @Input()\r\n  variants: BaseOption;\r\n\r\n  changeColor(code: string, name: string): void {\r\n    if (code) {\r\n      this.routingService.go({\r\n        cxRoute: 'product',\r\n        params: { code, name },\r\n      });\r\n    }\r\n    return null;\r\n  }\r\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\r\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.COLOR);\r\n    return obj ? obj.value : '';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantColorSelectorComponent } from './variant-color-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantColorSelectorComponent],\n  entryComponents: [VariantColorSelectorComponent],\n  exports: [VariantColorSelectorComponent],\n})\nexport class VariantColorSelectorModule {}\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\n\r\nimport {\r\n  OccConfig,\r\n  VariantOption,\r\n  VariantOptionQualifier,\r\n  VariantQualifier,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-variant-style-icons',\r\n  templateUrl: './variant-style-icons.component.html',\r\n  styleUrls: ['./variant-style-icons.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantStyleIconsComponent implements OnInit {\r\n  constructor(private config: OccConfig) {}\r\n\r\n  @Input()\r\n  variants: VariantOption[];\r\n\r\n  variantNames: { [key: string]: string } = {};\r\n\r\n  ngOnInit() {\r\n    this.variants.forEach((variant) => {\r\n      this.variantNames[variant.code] = this.getVariantName(\r\n        variant.variantOptionQualifiers\r\n      );\r\n    });\r\n  }\r\n\r\n  getVariantThumbnailUrl(\r\n    variantOptionQualifiers: VariantOptionQualifier[]\r\n  ): string {\r\n    const thumbnail = variantOptionQualifiers.find(\r\n      (item) => item.qualifier === VariantQualifier.THUMBNAIL\r\n    );\r\n    return thumbnail\r\n      ? `${this.config.backend.occ.baseUrl}${thumbnail.image.url}`\r\n      : '';\r\n  }\r\n\r\n  private getVariantName(\r\n    variantOptionQualifiers: VariantOptionQualifier[]\r\n  ): string {\r\n    const rollupProperty = variantOptionQualifiers.find(\r\n      (item) => item.qualifier === VariantQualifier.ROLLUP_PROPERTY\r\n    );\r\n    const property = rollupProperty\r\n      ? variantOptionQualifiers.find(\r\n          (item) => item.qualifier === rollupProperty.value\r\n        )\r\n      : null;\r\n    return property ? property.value : '';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleIconsComponent } from './variant-style-icons.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleIconsComponent],\n  entryComponents: [VariantStyleIconsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class VariantStyleIconsModule {}\n","import { CanActivate, UrlTree } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, filter, take } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  VariantOption,\r\n  ProductService,\r\n  Product,\r\n  RoutingService,\r\n  ProductScope,\r\n} from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductVariantGuard implements CanActivate {\r\n  constructor(\r\n    private productService: ProductService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.routingService.getRouterState().pipe(\r\n      map((state) => state.nextState.params.productCode),\r\n      switchMap((productCode: string) => {\r\n        // if open pdp from smartedit\r\n        if (!productCode) {\r\n          return of(true);\r\n        }\r\n\r\n        return this.productService.get(productCode, ProductScope.VARIANTS).pipe(\r\n          filter(Boolean),\r\n          map((product: Product) => {\r\n            if (!product.purchasable) {\r\n              const variant = this.findVariant(product.variantOptions);\r\n              // below call might looks redundant but in fact this data is going to be loaded anyways\r\n              // we're just calling it earlier and storing\r\n              this.productService\r\n                .get(variant.code, ProductScope.LIST)\r\n                .pipe(filter(Boolean), take(1))\r\n                .subscribe((_product: Product) => {\r\n                  this.routingService.go({\r\n                    cxRoute: 'product',\r\n                    params: _product,\r\n                  });\r\n                });\r\n              return false;\r\n            } else {\r\n              return true;\r\n            }\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  findVariant(variants: VariantOption[]): VariantOption {\r\n    const results: VariantOption[] = variants.filter((variant) => {\r\n      return variant.stock && variant.stock.stockLevel ? variant : false;\r\n    });\r\n    return !results.length && variants.length ? variants[0] : results[0];\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ProductVariantsComponent } from './product-variants.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VariantStyleSelectorModule } from './variant-style-selector/variant-style-selector.module';\r\nimport { VariantSizeSelectorModule } from './variant-size-selector/variant-size-selector.module';\r\nimport { VariantColorSelectorModule } from './variant-color-selector/variant-color-selector.module';\r\nimport { VariantStyleIconsModule } from './variant-style-icons/variant-style-icons.module';\r\nimport { ProductVariantGuard } from './guards/product-variant.guard';\r\nimport { VariantStyleIconsComponent } from './variant-style-icons/variant-style-icons.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    VariantStyleSelectorModule,\r\n    VariantSizeSelectorModule,\r\n    VariantColorSelectorModule,\r\n    VariantStyleIconsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductVariantSelectorComponent: {\r\n          component: ProductVariantsComponent,\r\n          guards: [ProductVariantGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductVariantsComponent],\r\n  entryComponents: [ProductVariantsComponent],\r\n  exports: [VariantStyleIconsComponent],\r\n})\r\nexport class ProductVariantsModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { ViewConfig } from '../../../shared/config/view-config';\r\nimport { ViewConfigModule } from '../../../shared/config/view-config.module';\r\nimport {\r\n  ItemCounterModule,\r\n  ListNavigationModule,\r\n  MediaModule,\r\n  SpinnerModule,\r\n  StarRatingModule,\r\n} from '../../../shared/index';\r\nimport { AddToCartModule } from '../../cart/index';\r\nimport { IconModule } from '../../misc/icon/index';\r\nimport { defaultScrollConfig } from '../config/default-scroll-config';\r\nimport { ProductVariantsModule } from '../product-variants/product-variants.module';\r\nimport { ProductListComponent } from './container/product-list.component';\r\nimport { ProductScrollComponent } from './container/product-scroll/product-scroll.component';\r\nimport { ProductFacetNavigationComponent } from './product-facet-navigation/product-facet-navigation.component';\r\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\r\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\r\nimport { ProductViewComponent } from './product-view/product-view.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MediaModule,\r\n    AddToCartModule,\r\n    ItemCounterModule,\r\n    ListNavigationModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    StarRatingModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n    InfiniteScrollModule,\r\n    ViewConfigModule,\r\n    ProductVariantsModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<ViewConfig>defaultScrollConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSProductListComponent: {\r\n          component: ProductListComponent,\r\n        },\r\n        ProductGridComponent: {\r\n          component: ProductListComponent,\r\n        },\r\n        SearchResultsListComponent: {\r\n          component: ProductListComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [\r\n    ProductListComponent,\r\n    ProductListItemComponent,\r\n    ProductGridItemComponent,\r\n    ProductViewComponent,\r\n    ProductScrollComponent,\r\n  ],\r\n  exports: [\r\n    ProductListComponent,\r\n    ProductListItemComponent,\r\n    ProductGridItemComponent,\r\n    ProductViewComponent,\r\n    ProductScrollComponent,\r\n  ],\r\n  entryComponents: [ProductListComponent, ProductFacetNavigationComponent],\r\n})\r\nexport class ProductListModule {}\r\n","export enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\r\nimport { ProductSummaryComponent } from './product-summary.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OutletModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductSummaryComponent: {\r\n          component: ProductSummaryComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductSummaryComponent],\r\n  entryComponents: [ProductSummaryComponent],\r\n  exports: [ProductSummaryComponent],\r\n})\r\nexport class ProductSummaryModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Product, ProductScope } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CurrentProductService } from '../../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-attributes',\r\n  templateUrl: './product-attributes.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductAttributesComponent {\r\n  product$: Observable<Product> = this.currentProductService.getProduct(\r\n    ProductScope.ATTRIBUTES\r\n  );\r\n\r\n  constructor(protected currentProductService: CurrentProductService) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { ProductAttributesComponent } from './product-attributes.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductSpecsTabComponent: {\r\n          component: ProductAttributesComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductAttributesComponent],\r\n  entryComponents: [ProductAttributesComponent],\r\n  exports: [ProductAttributesComponent],\r\n})\r\nexport class ProductAttributesModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductDetailsTabComponent: {\r\n          component: ProductDetailsTabComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductDetailsTabComponent],\r\n  entryComponents: [ProductDetailsTabComponent],\r\n  exports: [ProductDetailsTabComponent],\r\n})\r\nexport class ProductDetailsTabModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ViewChild,\r\n  ElementRef,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  switchMap,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { CurrentProductService } from '../../current-product.service';\r\nimport { CustomFormValidators } from '../../../../shared/index';\r\n\r\n@Component({\r\n  selector: 'cx-product-reviews',\r\n  templateUrl: './product-reviews.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductReviewsComponent {\r\n  @ViewChild('titleInput', { static: false }) titleInput: ElementRef;\r\n  @ViewChild('writeReviewButton', { static: false })\r\n  writeReviewButton: ElementRef;\r\n\r\n  isWritingReview = false;\r\n\r\n  // TODO: configurable\r\n  initialMaxListItems = 5;\r\n  maxListItems: number;\r\n  reviewForm: FormGroup;\r\n\r\n  product$: Observable<Product> = this.currentProductService.getProduct();\r\n\r\n  reviews$: Observable<Review[]> = this.product$.pipe(\r\n    filter((p) => !!p),\r\n    map((p) => p.code),\r\n    distinctUntilChanged(),\r\n    switchMap((productCode) =>\r\n      this.reviewService.getByProductCode(productCode)\r\n    ),\r\n    tap(() => {\r\n      this.resetReviewForm();\r\n      this.maxListItems = this.initialMaxListItems;\r\n    })\r\n  );\r\n\r\n  constructor(\r\n    protected reviewService: ProductReviewService,\r\n    protected currentProductService: CurrentProductService,\r\n    private fb: FormBuilder,\r\n    protected cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  initiateWriteReview(): void {\r\n    this.isWritingReview = true;\r\n\r\n    this.cd.detectChanges();\r\n\r\n    if (this.titleInput && this.titleInput.nativeElement) {\r\n      this.titleInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  cancelWriteReview(): void {\r\n    this.isWritingReview = false;\r\n    this.resetReviewForm();\r\n\r\n    this.cd.detectChanges();\r\n\r\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\r\n      this.writeReviewButton.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  setRating(rating: number): void {\r\n    this.reviewForm.controls.rating.setValue(rating);\r\n  }\r\n\r\n  submitReview(product: Product) {\r\n    if (this.reviewForm.valid) {\r\n      this.addReview(product);\r\n    } else {\r\n      this.reviewForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  addReview(product: Product): void {\r\n    const reviewFormControls = this.reviewForm.controls;\r\n    const review: Review = {\r\n      headline: reviewFormControls.title.value,\r\n      comment: reviewFormControls.comment.value,\r\n      rating: reviewFormControls.rating.value,\r\n      alias: reviewFormControls.reviewerName.value,\r\n    };\r\n\r\n    this.reviewService.add(product.code, review);\r\n\r\n    this.isWritingReview = false;\r\n    this.resetReviewForm();\r\n\r\n    this.cd.detectChanges();\r\n\r\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\r\n      this.writeReviewButton.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  private resetReviewForm(): void {\r\n    this.reviewForm = this.fb.group({\r\n      title: ['', Validators.required],\r\n      comment: ['', Validators.required],\r\n      rating: [null, CustomFormValidators.starRatingEmpty],\r\n      reviewerName: '',\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { ProductReviewsComponent } from './product-reviews.component';\r\nimport { StarRatingModule, FormErrorsModule } from '../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    I18nModule,\r\n    StarRatingModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductReviewsTabComponent: {\r\n          component: ProductReviewsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductReviewsComponent],\r\n  entryComponents: [ProductReviewsComponent],\r\n  exports: [ProductReviewsComponent],\r\n})\r\nexport class ProductReviewsModule {}\r\n","import { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { NotificationPreference, UserInterestsService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\r\n\r\n@Component({\r\n  selector: 'cx-stock-notification-dialog',\r\n  templateUrl: './stock-notification-dialog.component.html',\r\n})\r\nexport class StockNotificationDialogComponent implements OnDestroy {\r\n  subscribeSuccess$: Observable<boolean>;\r\n  enabledPrefs: NotificationPreference[] = [];\r\n\r\n  constructor(\r\n    private modalService: ModalService,\r\n    private interestsService: UserInterestsService\r\n  ) {}\r\n\r\n  close() {\r\n    this.modalService.dismissActiveModal();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscribeSuccess$) {\r\n      this.subscribeSuccess$\r\n        .subscribe((success) => {\r\n          if (success) {\r\n            this.interestsService.resetAddInterestState();\r\n          }\r\n        })\r\n        .unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport {\r\n  UserInterestsService,\r\n  UserNotificationPreferenceService,\r\n  AuthService,\r\n  OCC_USER_ID_ANONYMOUS,\r\n  NotificationPreference,\r\n  NotificationType,\r\n  Product,\r\n  GlobalMessageService,\r\n  TranslationService,\r\n  GlobalMessageType,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription, combineLatest } from 'rxjs';\r\nimport { map, filter, tap, first } from 'rxjs/operators';\r\nimport { CurrentProductService } from '../current-product.service';\r\nimport { ModalService } from '../../../shared/components/modal/modal.service';\r\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\r\n\r\n@Component({\r\n  selector: 'cx-stock-notification',\r\n  templateUrl: './stock-notification.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class StockNotificationComponent implements OnInit, OnDestroy {\r\n  hasProductInterests$: Observable<boolean>;\r\n  prefsEnabled$: Observable<boolean>;\r\n  outOfStock$: Observable<boolean>;\r\n  isRemoveInterestLoading$: Observable<boolean>;\r\n  anonymous = true;\r\n\r\n  private enabledPrefs: NotificationPreference[] = [];\r\n  private productCode: string;\r\n  private subscribeSuccess$: Observable<boolean>;\r\n  private subscriptions = new Subscription();\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private currentProductService: CurrentProductService,\r\n    private globalMessageService: GlobalMessageService,\r\n    private translationService: TranslationService,\r\n    private interestsService: UserInterestsService,\r\n    private modalService: ModalService,\r\n    private notificationPrefService: UserNotificationPreferenceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.outOfStock$ = combineLatest([\r\n      this.currentProductService.getProduct().pipe(filter(Boolean)),\r\n      this.authService.getOccUserId(),\r\n    ]).pipe(\r\n      tap(([product, userId]: [Product, String]) => {\r\n        this.productCode = product.code;\r\n        if (userId !== OCC_USER_ID_ANONYMOUS) {\r\n          this.anonymous = false;\r\n          this.notificationPrefService.loadPreferences();\r\n          this.interestsService.loadProductInterests(\r\n            null,\r\n            null,\r\n            null,\r\n            product.code,\r\n            NotificationType.BACK_IN_STOCK\r\n          );\r\n        }\r\n      }),\r\n      map(\r\n        ([product]: [Product, String]) =>\r\n          !!product.stock && product.stock.stockLevelStatus === 'outOfStock'\r\n      )\r\n    );\r\n\r\n    this.hasProductInterests$ = this.interestsService\r\n      .getProductInterests()\r\n      .pipe(\r\n        map(\r\n          (interests) => !!interests.results && interests.results.length === 1\r\n        )\r\n      );\r\n    this.subscribeSuccess$ = this.interestsService.getAddProductInterestSuccess();\r\n    this.isRemoveInterestLoading$ = this.interestsService.getRemoveProdutInterestLoading();\r\n    this.prefsEnabled$ = this.notificationPrefService\r\n      .getEnabledPreferences()\r\n      .pipe(\r\n        tap((prefs) => (this.enabledPrefs = prefs)),\r\n        map((prefs) => prefs.length > 0)\r\n      );\r\n\r\n    this.subscriptions.add(\r\n      this.interestsService.getAddProductInterestError().subscribe((error) => {\r\n        if (error) {\r\n          this.onInterestAddingError();\r\n        }\r\n      })\r\n    );\r\n    this.subscriptions.add(\r\n      this.interestsService\r\n        .getRemoveProdutInterestSuccess()\r\n        .subscribe((success) => {\r\n          if (success) {\r\n            this.onInterestRemovingSuccess();\r\n          }\r\n        })\r\n    );\r\n  }\r\n\r\n  subscribe() {\r\n    this.openDialog();\r\n    this.interestsService.addProductInterest(\r\n      this.productCode,\r\n      NotificationType.BACK_IN_STOCK\r\n    );\r\n  }\r\n\r\n  unsubscribe() {\r\n    this.interestsService.removeProdutInterest(\r\n      {\r\n        product: {\r\n          code: this.productCode,\r\n        },\r\n        productInterestEntry: [\r\n          {\r\n            interestType: NotificationType.BACK_IN_STOCK,\r\n          },\r\n        ],\r\n      },\r\n      true\r\n    );\r\n  }\r\n\r\n  private onInterestRemovingSuccess() {\r\n    this.subscriptions.add(\r\n      this.translationService\r\n        .translate('stockNotification.unsubscribeSuccess')\r\n        .pipe(first())\r\n        .subscribe((text) =>\r\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_INFO)\r\n        )\r\n    );\r\n    this.interestsService.resetRemoveInterestState();\r\n  }\r\n\r\n  private onInterestAddingError() {\r\n    this.modalService.dismissActiveModal();\r\n    this.interestsService.resetAddInterestState();\r\n  }\r\n\r\n  private openDialog() {\r\n    const modalInstance = this.modalService.open(\r\n      StockNotificationDialogComponent,\r\n      {\r\n        centered: true,\r\n        size: 'lg',\r\n      }\r\n    ).componentInstance;\r\n    modalInstance.subscribeSuccess$ = this.subscribeSuccess$;\r\n    modalInstance.enabledPrefs = this.enabledPrefs;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.interestsService.clearProductInterests();\r\n    this.notificationPrefService.clearPreferences();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StockNotificationComponent } from './stock-notification.component';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [StockNotificationComponent, StockNotificationDialogComponent],\r\n  imports: [CommonModule, RouterModule, I18nModule, SpinnerModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        StockNotificationComponent: {\r\n          component: StockNotificationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  entryComponents: [\r\n    StockNotificationComponent,\r\n    StockNotificationDialogComponent,\r\n  ],\r\n  exports: [StockNotificationComponent, StockNotificationDialogComponent],\r\n})\r\nexport class StockNotificationModule {}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\nconst WEEK_DAYS_NUMBER = 7;\n\n@Component({\n  selector: 'cx-schedule',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnChanges {\n  @Input()\n  location: any;\n  displayDays: Date[] = null;\n\n  constructor(private storeDataService: StoreDataService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.location && this.location) {\n      const initialDate = this.getInitialDate();\n      this.displayDays = [];\n\n      for (let i = 0; i < WEEK_DAYS_NUMBER; i++) {\n        const date = new Date(initialDate.valueOf());\n        date.setDate(date.getDate() + i);\n        this.displayDays.push(date);\n      }\n    }\n  }\n\n  /**\n   * Returns the store's opening time for the given date\n   * @param date date\n   */\n  getStoreOpeningTime(date: Date): string {\n    return this.storeDataService.getStoreOpeningTime(this.location, date);\n  }\n\n  /**\n   * Returns the store's closing time for the given date\n   * @param date date\n   */\n  getStoreClosingTime(date: Date): string {\n    return this.storeDataService.getStoreClosingTime(this.location, date);\n  }\n\n  /**\n   * return initial (first) date to be displayed in the schedule\n   */\n  private getInitialDate(): Date {\n    const currentDate = new Date();\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n\n    return currentDate;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StoreFinderService, GeoPoint } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-grid',\r\n  templateUrl: './store-finder-grid.component.html',\r\n})\r\nexport class StoreFinderGridComponent implements OnInit, OnDestroy {\r\n  locations$: any;\r\n  isLoading$: Observable<boolean>;\r\n  defaultLocation: GeoPoint;\r\n  country: string;\r\n  region: string;\r\n\r\n  constructor(\r\n    private storeFinderService: StoreFinderService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\r\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\r\n    this.defaultLocation = {};\r\n\r\n    if (this.route.snapshot.params.country) {\r\n      this.storeFinderService.findStoresAction(\r\n        '',\r\n        {\r\n          pageSize: -1,\r\n        },\r\n        undefined,\r\n        this.route.snapshot.params.country\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder-header',\n  templateUrl: './store-finder-header.component.html',\n})\nexport class StoreFinderHeaderComponent {}\n","import { Input, Directive } from '@angular/core';\r\nimport { StoreDataService } from '@spartacus/core';\r\n\r\n// tslint:disable:directive-class-suffix\r\n@Directive()\r\nexport class AbstractStoreItemComponent {\r\n  @Input()\r\n  location;\r\n\r\n  constructor(protected storeDataService: StoreDataService) {}\r\n\r\n  getDirections(location: any): string {\r\n    const google_map_url = 'https://www.google.com/maps/dir/Current+Location/';\r\n    const latitude = this.storeDataService.getStoreLatitude(location);\r\n    const longitude = this.storeDataService.getStoreLongitude(location);\r\n    return google_map_url + latitude + ',' + longitude;\r\n  }\r\n\r\n  getFormattedStoreAddress(addressParts: string[]): string {\r\n    return addressParts.filter(Boolean).join(', ');\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { StoreDataService } from '@spartacus/core';\r\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-list-item',\r\n  templateUrl: './store-finder-list-item.component.html',\r\n})\r\nexport class StoreFinderListItemComponent extends AbstractStoreItemComponent {\r\n  @Input()\r\n  locationIndex: number = null;\r\n  @Input()\r\n  listOrderLabel: any;\r\n  @Input()\r\n  displayDistance: boolean;\r\n  @Input()\r\n  useClickEvent: boolean;\r\n  @Output()\r\n  storeItemClick: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(protected storeDataService: StoreDataService) {\r\n    super(storeDataService);\r\n  }\r\n\r\n  handleStoreItemClick() {\r\n    if (this.locationIndex !== null) {\r\n      this.storeItemClick.emit(this.locationIndex);\r\n    }\r\n  }\r\n\r\n  onKey(event: KeyboardEvent) {\r\n    if (event.key === 'Enter') {\r\n      this.handleStoreItemClick();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { GoogleMapRendererService } from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-map',\r\n  templateUrl: './store-finder-map.component.html',\r\n})\r\nexport class StoreFinderMapComponent implements OnChanges {\r\n  @ViewChild('mapElement', { static: true })\r\n  mapElement: ElementRef;\r\n  @Input()\r\n  locations: any[];\r\n  @Output()\r\n  selectedStoreItem: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(private googleMapRendererService: GoogleMapRendererService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.locations && this.locations) {\r\n      this.renderMap();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the center of the map to the given location\r\n   * @param latitude latitude of the new center\r\n   * @param longitude longitude of the new center\r\n   */\r\n  centerMap(latitude: number, longitude: number): void {\r\n    this.googleMapRendererService.centerMap(latitude, longitude);\r\n  }\r\n\r\n  renderMap(): void {\r\n    this.googleMapRendererService.renderMap(\r\n      this.mapElement.nativeElement,\r\n      this.locations,\r\n      (markerIndex) => {\r\n        this.selectStoreItemClickHandle(markerIndex);\r\n      }\r\n    );\r\n  }\r\n\r\n  private selectStoreItemClickHandle(markerIndex: number) {\r\n    this.selectedStoreItem.emit(markerIndex);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-pagination-details',\n  templateUrl: './store-finder-pagination-details.component.html',\n})\nexport class StoreFinderPaginationDetailsComponent {\n  @Input()\n  pagination: PaginationModel;\n\n  constructor() {}\n\n  getResultsPerPage(): string {\n    if (this.pagination.totalResults > this.pagination.pageSize) {\n      const firstItem =\n        this.pagination.currentPage * this.pagination.pageSize + 1;\n\n      let resultsPerPage =\n        (this.pagination.currentPage + 1) * this.pagination.pageSize;\n\n      if (resultsPerPage > this.pagination.totalResults) {\n        resultsPerPage = this.pagination.totalResults;\n      }\n\n      return `${firstItem} - ${resultsPerPage}`;\n    } else {\n      return `1 - ${this.pagination.totalResults}`;\n    }\n  }\n}\n","import { DOCUMENT } from '@angular/common';\r\nimport { Component, Inject, Input, ViewChild } from '@angular/core';\r\nimport { StoreDataService, PointOfService } from '@spartacus/core';\r\nimport { StoreFinderMapComponent } from '../../store-finder-map/store-finder-map.component';\r\nimport { ICON_TYPE } from './../../../../misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-list',\r\n  templateUrl: './store-finder-list.component.html',\r\n})\r\nexport class StoreFinderListComponent {\r\n  @Input()\r\n  locations: any;\r\n  @Input()\r\n  useMylocation: boolean;\r\n  @ViewChild('storeMap')\r\n  storeMap: StoreFinderMapComponent;\r\n\r\n  selectedStore: PointOfService;\r\n  selectedStoreIndex: number;\r\n  isDetailsModeVisible: boolean;\r\n  storeDetails: PointOfService;\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(\r\n    private storeDataService: StoreDataService,\r\n    @Inject(DOCUMENT) private document: any\r\n  ) {\r\n    this.isDetailsModeVisible = false;\r\n  }\r\n\r\n  centerStoreOnMapByIndex(index: number, location: PointOfService): void {\r\n    this.showStoreDetails(location);\r\n    this.selectedStoreIndex = index;\r\n    this.selectedStore = location;\r\n    this.storeMap.centerMap(\r\n      this.storeDataService.getStoreLatitude(this.locations.stores[index]),\r\n      this.storeDataService.getStoreLongitude(this.locations.stores[index])\r\n    );\r\n  }\r\n\r\n  selectStoreItemList(index: number): void {\r\n    this.selectedStoreIndex = index;\r\n    const storeListItem = this.document.getElementById('item-' + index);\r\n    storeListItem.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'center',\r\n    });\r\n  }\r\n\r\n  showStoreDetails(location: PointOfService) {\r\n    this.isDetailsModeVisible = true;\r\n    this.storeDetails = location;\r\n  }\r\n\r\n  hideStoreDetails() {\r\n    this.isDetailsModeVisible = false;\r\n    this.selectedStoreIndex = undefined;\r\n    this.selectedStore = undefined;\r\n    this.storeMap.renderMap();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport {\r\n  GeoPoint,\r\n  SearchConfig,\r\n  StoreFinderSearchQuery,\r\n  StoreFinderService,\r\n  StoreFinderConfig,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-search-result',\r\n  templateUrl: './store-finder-search-result.component.html',\r\n})\r\nexport class StoreFinderSearchResultComponent implements OnInit, OnDestroy {\r\n  locations: any;\r\n  subscription: Subscription;\r\n  useMyLocation: boolean;\r\n  countryCode: string = null;\r\n  searchConfig: SearchConfig = {\r\n    currentPage: 0,\r\n  };\r\n  radius: number;\r\n  searchQuery: StoreFinderSearchQuery;\r\n  geolocation: GeoPoint;\r\n  locations$: Observable<any>;\r\n  isLoading$: Observable<any>;\r\n\r\n  constructor(\r\n    private storeFinderService: StoreFinderService,\r\n    private route: ActivatedRoute,\r\n    protected config: StoreFinderConfig\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.route.queryParams.subscribe((params) =>\r\n      this.initialize(params)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  viewPage(pageNumber: number) {\r\n    this.searchConfig = { ...this.searchConfig, currentPage: pageNumber };\r\n    this.storeFinderService.findStoresAction(\r\n      this.searchQuery.queryText,\r\n      this.searchConfig,\r\n      this.geolocation,\r\n      this.countryCode,\r\n      this.useMyLocation,\r\n      this.radius\r\n    );\r\n  }\r\n\r\n  private initialize(params: Params) {\r\n    this.searchQuery = this.parseParameters(params);\r\n    this.useMyLocation = params && params.useMyLocation ? true : false;\r\n    this.searchConfig = { ...this.searchConfig, currentPage: 0 };\r\n    this.radius = this.config.googleMaps.radius;\r\n    this.storeFinderService.findStoresAction(\r\n      this.searchQuery.queryText,\r\n      this.searchConfig,\r\n      this.geolocation,\r\n      this.countryCode,\r\n      this.useMyLocation,\r\n      this.radius\r\n    );\r\n\r\n    this.isLoading$ = this.storeFinderService.getStoresLoading();\r\n    this.locations$ = this.storeFinderService.getFindStoresEntities();\r\n  }\r\n\r\n  private parseParameters(queryParams: {\r\n    [key: string]: any;\r\n  }): StoreFinderSearchQuery {\r\n    let searchQuery: StoreFinderSearchQuery;\r\n\r\n    if (queryParams.query) {\r\n      searchQuery = { queryText: queryParams.query };\r\n    } else {\r\n      searchQuery = { queryText: '' };\r\n    }\r\n\r\n    searchQuery.useMyLocation =\r\n      queryParams.useMyLocation != null &&\r\n      queryParams.useMyLocation.toUpperCase() === 'TRUE';\r\n\r\n    return searchQuery;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-search',\n  templateUrl: './store-finder-search.component.html',\n})\nexport class StoreFinderSearchComponent {\n  searchBox: FormControl = new FormControl();\n  iconTypes = ICON_TYPE;\n\n  constructor(private routingService: RoutingService) {}\n\n  findStores(address: string) {\n    this.routingService.go(['store-finder/find'], { query: address });\n  }\n\n  viewStoresWithMyLoc() {\n    this.routingService.go(['store-finder/find'], { useMyLocation: true });\n  }\n\n  onKey(event: any) {\n    if (\n      this.searchBox.value &&\n      this.searchBox.value.length &&\n      event.key === 'Enter'\n    ) {\n      this.findStores(this.searchBox.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-store-description',\n  templateUrl: './store-finder-store-description.component.html',\n})\nexport class StoreFinderStoreDescriptionComponent extends AbstractStoreItemComponent {\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StoreFinderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-stores-count',\n  templateUrl: './store-finder-stores-count.component.html',\n})\nexport class StoreFinderStoresCountComponent implements OnInit {\n  locations$: Observable<any>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private storeFinderService: StoreFinderService) {}\n\n  ngOnInit() {\n    this.storeFinderService.viewAllStores();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder',\n  templateUrl: './store-finder.component.html',\n})\nexport class StoreFinderComponent {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  StoreFinderService,\n  PointOfService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-store',\n  templateUrl: './store-finder-store.component.html',\n})\nexport class StoreFinderStoreComponent implements OnInit {\n  location$: Observable<any>;\n  isLoading$: Observable<any>;\n  iconTypes = ICON_TYPE;\n\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    if (!this.location) {\n      this.requestStoresData();\n      this.location$ = this.storeFinderService.getFindStoresEntities();\n      this.isLoading$ = this.storeFinderService.getStoresLoading();\n    }\n  }\n\n  requestStoresData() {\n    this.storeFinderService.viewStoreById(this.route.snapshot.params.store);\n  }\n\n  goBack(): void {\n    this.routingService.go([\n      `store-finder/country/${this.route.snapshot.params.country}`,\n    ]);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  StoreFinderCoreModule,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { LayoutConfig } from '../../layout/config/layout-config';\r\nimport { ListNavigationModule } from '../../shared/components/list-navigation/list-navigation.module';\r\nimport { SpinnerModule } from '../../shared/components/spinner/spinner.module';\r\nimport { IconModule } from './../misc/icon/icon.module';\r\nimport { ScheduleComponent } from './components/schedule-component/schedule.component';\r\nimport { StoreFinderGridComponent } from './components/store-finder-grid/store-finder-grid.component';\r\nimport { StoreFinderHeaderComponent } from './components/store-finder-header/store-finder-header.component';\r\nimport { StoreFinderListItemComponent } from './components/store-finder-list-item/store-finder-list-item.component';\r\nimport { StoreFinderMapComponent } from './components/store-finder-map/store-finder-map.component';\r\nimport { StoreFinderPaginationDetailsComponent } from './components/store-finder-pagination-details/store-finder-pagination-details.component';\r\nimport { StoreFinderListComponent } from './components/store-finder-search-result/store-finder-list/store-finder-list.component';\r\nimport { StoreFinderSearchResultComponent } from './components/store-finder-search-result/store-finder-search-result.component';\r\nimport { StoreFinderSearchComponent } from './components/store-finder-search/store-finder-search.component';\r\nimport { StoreFinderStoreDescriptionComponent } from './components/store-finder-store-description/store-finder-store-description.component';\r\nimport { StoreFinderStoresCountComponent } from './components/store-finder-stores-count/store-finder-stores-count.component';\r\nimport { StoreFinderComponent } from './components/store-finder/store-finder.component';\r\nimport { StoreFinderStoreComponent } from './components/store-finder-store/store-finder-store.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    ListNavigationModule,\r\n    NgbTabsetModule,\r\n    SpinnerModule,\r\n    UrlModule,\r\n    StoreFinderCoreModule,\r\n    I18nModule,\r\n    IconModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig | LayoutConfig>{\r\n      cmsComponents: {\r\n        StoreFinderComponent: {\r\n          component: StoreFinderComponent,\r\n          childRoutes: [\r\n            {\r\n              path: 'find',\r\n              component: StoreFinderSearchResultComponent,\r\n            },\r\n            {\r\n              path: 'view-all',\r\n              component: StoreFinderStoresCountComponent,\r\n            },\r\n            {\r\n              path: 'country/:country',\r\n              component: StoreFinderGridComponent,\r\n            },\r\n            {\r\n              path: 'country/:country/region/:region',\r\n              component: StoreFinderGridComponent,\r\n            },\r\n            {\r\n              path: 'country/:country/region/:region/:store',\r\n              component: StoreFinderStoreComponent,\r\n            },\r\n            {\r\n              path: 'country/:country/:store',\r\n              component: StoreFinderStoreComponent,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      layoutSlots: {\r\n        StoreFinderPageTemplate: {\r\n          slots: ['MiddleContent', 'SideContent'],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [\r\n    StoreFinderSearchComponent,\r\n    StoreFinderListComponent,\r\n    StoreFinderMapComponent,\r\n    StoreFinderListItemComponent,\r\n    StoreFinderStoresCountComponent,\r\n    StoreFinderGridComponent,\r\n    StoreFinderStoreDescriptionComponent,\r\n    ScheduleComponent,\r\n    StoreFinderHeaderComponent,\r\n    StoreFinderSearchResultComponent,\r\n    StoreFinderComponent,\r\n    StoreFinderPaginationDetailsComponent,\r\n    StoreFinderStoreComponent,\r\n  ],\r\n  exports: [\r\n    ScheduleComponent,\r\n    StoreFinderComponent,\r\n    StoreFinderGridComponent,\r\n    StoreFinderHeaderComponent,\r\n    StoreFinderListItemComponent,\r\n    StoreFinderMapComponent,\r\n    StoreFinderPaginationDetailsComponent,\r\n    StoreFinderSearchComponent,\r\n    StoreFinderSearchResultComponent,\r\n    StoreFinderListComponent,\r\n    StoreFinderStoreDescriptionComponent,\r\n    StoreFinderStoresCountComponent,\r\n    StoreFinderStoreComponent,\r\n  ],\r\n  entryComponents: [\r\n    StoreFinderComponent,\r\n    StoreFinderSearchResultComponent,\r\n    StoreFinderStoresCountComponent,\r\n    StoreFinderGridComponent,\r\n    StoreFinderStoreComponent,\r\n  ],\r\n})\r\nexport class StoreFinderModule {}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActiveCartService, AuthRedirectService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-login',\r\n  templateUrl: './checkout-login.component.html',\r\n})\r\nexport class CheckoutLoginComponent implements OnDestroy {\r\n  checkoutLoginForm: FormGroup = this.formBuilder.group(\r\n    {\r\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\r\n      emailConfirmation: ['', [Validators.required]],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.emailsMustMatch(\r\n        'email',\r\n        'emailConfirmation'\r\n      ),\r\n    }\r\n  );\r\n  sub: Subscription;\r\n\r\n  constructor(\r\n    protected formBuilder: FormBuilder,\r\n    protected authRedirectService: AuthRedirectService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  onSubmit() {\r\n    if (this.checkoutLoginForm.valid) {\r\n      const email = this.checkoutLoginForm.get('email').value;\r\n      this.activeCartService.addEmail(email);\r\n\r\n      if (!this.sub) {\r\n        this.sub = this.activeCartService.getAssignedUser().subscribe(() => {\r\n          if (this.activeCartService.isGuestCart()) {\r\n            this.authRedirectService.redirect();\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.checkoutLoginForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { CheckoutLoginComponent } from './checkout-login.component';\r\nimport { NotCheckoutAuthGuard } from '../../checkout/guards/not-checkout-auth.guard';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        GuestCheckoutLoginComponent: {\r\n          component: CheckoutLoginComponent,\r\n          guards: [NotCheckoutAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutLoginComponent],\r\n  exports: [CheckoutLoginComponent],\r\n  entryComponents: [CheckoutLoginComponent],\r\n})\r\nexport class CheckoutLoginModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  AuthRedirectService,\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CheckoutConfigService } from '../../checkout/services/checkout-config.service';\r\nimport { CustomFormValidators } from '../../../shared/index';\r\n\r\n@Component({\r\n  selector: 'cx-login-form',\r\n  templateUrl: './login-form.component.html',\r\n})\r\nexport class LoginFormComponent implements OnInit, OnDestroy {\r\n  sub: Subscription;\r\n  loginForm: FormGroup;\r\n  loginAsGuest = false;\r\n\r\n  constructor(\r\n    protected auth: AuthService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected fb: FormBuilder,\r\n    protected authRedirectService: AuthRedirectService,\r\n    protected winRef: WindowRef,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected checkoutConfigService: CheckoutConfigService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const routeState = this.winRef.nativeWindow?.history?.state;\r\n    const prefilledEmail = routeState?.['newUid'];\r\n\r\n    this.loginForm = this.fb.group({\r\n      userId: [\r\n        prefilledEmail?.length ? prefilledEmail : '',\r\n        [Validators.required, CustomFormValidators.emailValidator],\r\n      ],\r\n      password: ['', Validators.required],\r\n    });\r\n\r\n    if (this.checkoutConfigService.isGuestCheckout()) {\r\n      this.loginAsGuest = this.activatedRoute?.snapshot?.queryParams?.[\r\n        'forced'\r\n      ];\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.loginForm.valid) {\r\n      this.loginUser();\r\n    } else {\r\n      this.loginForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  protected loginUser(): void {\r\n    const { userId, password } = this.loginForm.controls;\r\n    this.auth.authorize(\r\n      userId.value.toLowerCase(), // backend accepts lowercase emails only\r\n      password.value\r\n    );\r\n\r\n    if (!this.sub) {\r\n      this.sub = this.auth.getUserToken().subscribe((data) => {\r\n        if (data && data.access_token) {\r\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\r\n          this.authRedirectService.redirect();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { LoginFormComponent } from './login-form.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturningCustomerLoginComponent: {\r\n          component: LoginFormComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [LoginFormComponent],\r\n  exports: [LoginFormComponent],\r\n  entryComponents: [LoginFormComponent],\r\n})\r\nexport class LoginFormModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService, User, UserService } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user$: Observable<User>;\r\n\r\n  constructor(private auth: AuthService, private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user$ = this.auth.isUserLoggedIn().pipe(\r\n      switchMap((isUserLoggedIn) => {\r\n        if (isUserLoggedIn) {\r\n          return this.userService.get();\r\n        } else {\r\n          return of(undefined);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        LoginComponent: {\r\n          component: LoginComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [LoginComponent],\r\n  entryComponents: [LoginComponent],\r\n  exports: [LoginComponent],\r\n})\r\nexport class LoginModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport {\r\n  AuthService,\r\n  CmsService,\r\n  PageType,\r\n  ProtectedRoutesService,\r\n  RoutingService,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n/**\r\n * Guards the _logout_ route.\r\n *\r\n * Takes care of routing the user to a logout page (if available) or redirects to\r\n * the homepage. If the homepage is protected, the user is redirected\r\n * to the login route instead.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogoutGuard implements CanActivate {\r\n  constructor(\r\n    protected auth: AuthService,\r\n    protected cms: CmsService,\r\n    protected routing: RoutingService,\r\n    protected semanticPathService: SemanticPathService,\r\n    protected protectedRoutes: ProtectedRoutesService\r\n  ) {}\r\n\r\n  canActivate(): Observable<any> {\r\n    this.logout();\r\n\r\n    return this.cms\r\n      .hasPage({\r\n        id: this.semanticPathService.get('logout'),\r\n        type: PageType.CONTENT_PAGE,\r\n      })\r\n      .pipe(\r\n        tap((hasPage) => {\r\n          if (!hasPage) {\r\n            this.redirect();\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Whenever there is no specific \"logout\" page configured in the CMS,\r\n   * we redirect after the user is logged out.\r\n   *\r\n   * The user gets redirected to the homepage, unless the homepage is protected\r\n   * (in case of a closed shop). We'll redirect to the login page instead.\r\n   */\r\n  protected redirect(): void {\r\n    const cxRoute = this.protectedRoutes.shouldProtect ? 'login' : 'home';\r\n    this.routing.go({ cxRoute });\r\n  }\r\n\r\n  /**\r\n   * Log user out.\r\n   *\r\n   * This is delegated to the `AuthService`.\r\n   */\r\n  protected logout(): void {\r\n    this.auth.logout();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout-guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LogoutGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  AnonymousConsent,\r\n  AnonymousConsentsConfig,\r\n  AnonymousConsentsService,\r\n  ConsentTemplate,\r\n  GlobalMessageEntities,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  Title,\r\n  UserService,\r\n  UserSignUp,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { sortTitles, CustomFormValidators } from '../../../shared/index';\r\n\r\n@Component({\r\n  selector: 'cx-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n  titles$: Observable<Title[]>;\r\n  loading$: Observable<boolean>;\r\n  private subscription = new Subscription();\r\n\r\n  anonymousConsent$: Observable<{\r\n    consent: AnonymousConsent;\r\n    template: string;\r\n  }>;\r\n\r\n  registerForm: FormGroup = this.fb.group(\r\n    {\r\n      titleCode: [''],\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\r\n      password: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.passwordValidator],\r\n      ],\r\n      passwordconf: ['', Validators.required],\r\n      newsletter: new FormControl({\r\n        value: false,\r\n        disabled: this.isConsentRequired(),\r\n      }),\r\n      termsandconditions: [false, Validators.requiredTrue],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.passwordsMustMatch(\r\n        'password',\r\n        'passwordconf'\r\n      ),\r\n    }\r\n  );\r\n\r\n  constructor(\r\n    protected userService: UserService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected fb: FormBuilder,\r\n    protected router: RoutingService,\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected anonymousConsentsConfig: AnonymousConsentsConfig\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.titles$ = this.userService.getTitles().pipe(\r\n      tap((titles) => {\r\n        if (Object.keys(titles).length === 0) {\r\n          this.userService.loadTitles();\r\n        }\r\n      }),\r\n      map((titles) => {\r\n        return titles.sort(sortTitles);\r\n      })\r\n    );\r\n\r\n    this.loading$ = this.userService.getRegisterUserResultLoading();\r\n    this.registerUserProcessInit();\r\n\r\n    // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\r\n    this.subscription.add(\r\n      this.globalMessageService\r\n        .get()\r\n        .pipe(filter((messages) => !!Object.keys(messages).length))\r\n        .subscribe((globalMessageEntities: GlobalMessageEntities) => {\r\n          const messages =\r\n            globalMessageEntities &&\r\n            globalMessageEntities[GlobalMessageType.MSG_TYPE_ERROR];\r\n\r\n          if (\r\n            messages &&\r\n            messages.some((message) => message === 'This field is required.')\r\n          ) {\r\n            this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\r\n            this.globalMessageService.add(\r\n              { key: 'register.titleRequired' },\r\n              GlobalMessageType.MSG_TYPE_ERROR\r\n            );\r\n          }\r\n        })\r\n    );\r\n\r\n    const { registerConsent } = this.anonymousConsentsConfig?.anonymousConsents;\r\n\r\n    this.anonymousConsent$ = combineLatest([\r\n      this.anonymousConsentsService.getConsent(registerConsent),\r\n      this.anonymousConsentsService.getTemplate(registerConsent),\r\n    ]).pipe(\r\n      map(([consent, template]: [AnonymousConsent, ConsentTemplate]) => {\r\n        return {\r\n          consent,\r\n          template: template ? template.description : '',\r\n        };\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.registerForm.get('newsletter').valueChanges.subscribe(() => {\r\n        this.toggleAnonymousConsent();\r\n      })\r\n    );\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.registerForm.valid) {\r\n      this.registerUser();\r\n    } else {\r\n      this.registerForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  registerUser(): void {\r\n    this.userService.register(\r\n      this.collectDataFromRegisterForm(this.registerForm.value)\r\n    );\r\n  }\r\n\r\n  titleSelected(title: Title): void {\r\n    this.registerForm['controls'].titleCode.setValue(title.code);\r\n  }\r\n\r\n  collectDataFromRegisterForm(formData: any): UserSignUp {\r\n    const { firstName, lastName, email, password, titleCode } = formData;\r\n\r\n    return {\r\n      firstName,\r\n      lastName,\r\n      uid: email.toLowerCase(),\r\n      password,\r\n      titleCode,\r\n    };\r\n  }\r\n\r\n  isConsentGiven(consent: AnonymousConsent): boolean {\r\n    return this.anonymousConsentsService.isConsentGiven(consent);\r\n  }\r\n\r\n  private isConsentRequired(): boolean {\r\n    const {\r\n      requiredConsents,\r\n      registerConsent,\r\n    } = this.anonymousConsentsConfig?.anonymousConsents;\r\n\r\n    if (requiredConsents && registerConsent) {\r\n      return requiredConsents.includes(registerConsent);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private onRegisterUserSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.router.go('login');\r\n      this.globalMessageService.add(\r\n        { key: 'register.postRegisterMessage' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n    }\r\n  }\r\n\r\n  toggleAnonymousConsent(): void {\r\n    const { registerConsent } = this.anonymousConsentsConfig.anonymousConsents;\r\n\r\n    if (Boolean(this.registerForm.get('newsletter').value)) {\r\n      this.anonymousConsentsService.giveConsent(registerConsent);\r\n    } else {\r\n      this.anonymousConsentsService.withdrawConsent(registerConsent);\r\n    }\r\n  }\r\n\r\n  private registerUserProcessInit(): void {\r\n    this.userService.resetRegisterUserProcessState();\r\n    this.subscription.add(\r\n      this.userService.getRegisterUserResultSuccess().subscribe((success) => {\r\n        this.onRegisterUserSuccess(success);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.userService.resetRegisterUserProcessState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule, FormErrorsModule } from '../../../shared/index';\r\nimport { LoginModule } from '../login/login.module';\r\nimport { RegisterComponent } from './register.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LoginModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    SpinnerModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        RegisterCustomerComponent: {\r\n          component: RegisterComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [RegisterComponent],\r\n  exports: [RegisterComponent],\r\n  entryComponents: [RegisterComponent],\r\n})\r\nexport class RegisterComponentModule {}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { CheckoutLoginModule } from './checkout-login/checkout-login.module';\nimport { LoginFormModule } from './login-form/login-form.module';\nimport { LoginModule } from './login/login.module';\nimport { LogoutModule } from './logout/logout.module';\nimport { RegisterComponentModule } from './register/register.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    LoginFormModule,\n    LogoutModule,\n    CheckoutLoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    RegisterComponentModule,\n  ],\n})\nexport class UserComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-wish-list-item',\n  templateUrl: './wish-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WishListItemComponent {\n  @Input()\n  isLoading = false;\n  @Input() cartEntry: OrderEntry;\n\n  @Output()\n  remove = new EventEmitter<OrderEntry>();\n\n  removeEntry(item: OrderEntry) {\n    this.remove.emit(item);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Cart, OrderEntry, WishListService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-wish-list',\n  templateUrl: './wish-list.component.html',\n})\nexport class WishListComponent {\n  wishList$: Observable<Cart> = this.wishListService.getWishList();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  constructor(protected wishListService: WishListService) {}\n\n  removeEntry(item: OrderEntry) {\n    this.wishListService.removeEntry(item);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport {\r\n  ItemCounterModule,\r\n  MediaModule,\r\n  StarRatingModule,\r\n} from '../../shared/index';\r\nimport { AddToCartModule } from '../cart/index';\r\nimport { WishListItemComponent } from './components/wish-list-item/wish-list-item.component';\r\nimport { WishListComponent } from './components/wish-list/wish-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AddToCartModule,\r\n    CommonModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    RouterModule,\r\n    StarRatingModule,\r\n    UrlModule,\r\n    ItemCounterModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        WishListComponent: {\r\n          component: WishListComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [WishListComponent, WishListItemComponent],\r\n  entryComponents: [WishListComponent],\r\n  exports: [WishListComponent, WishListItemComponent],\r\n})\r\nexport class WishListModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { HamburgerMenuModule } from '../layout/index';\r\nimport { AnonymousConsentManagementBannerModule } from './anonymous-consent-management/anonymous-consent-management.module';\r\nimport { AsmModule } from './asm/asm.module';\r\nimport { CartComponentModule } from './cart/cart.module';\r\nimport { CheckoutComponentModule } from './checkout/checkout.module';\r\nimport { BannerCarouselModule } from './content/banner-carousel/banner-carousel.module';\r\nimport {\r\n  BannerModule,\r\n  CmsParagraphModule,\r\n  LinkModule,\r\n  TabParagraphContainerModule,\r\n} from './content/index';\r\nimport { QualtricsModule, SiteContextSelectorModule } from './misc/index';\r\nimport {\r\n  AddressBookModule,\r\n  CloseAccountModule,\r\n  ConsentManagementModule,\r\n  ForgotPasswordModule,\r\n  MyCouponsModule,\r\n  MyInterestsModule,\r\n  NotificationPreferenceModule,\r\n  OrderCancellationModule,\r\n  OrderDetailsModule,\r\n  OrderHistoryModule,\r\n  OrderReturnModule,\r\n  PaymentMethodsModule,\r\n  ResetPasswordModule,\r\n  ReturnRequestDetailModule,\r\n  ReturnRequestListModule,\r\n  UpdateEmailModule,\r\n  UpdatePasswordModule,\r\n  UpdateProfileModule,\r\n} from './myaccount/index';\r\nimport {\r\n  BreadcrumbModule,\r\n  CategoryNavigationModule,\r\n  FooterNavigationModule,\r\n  NavigationModule,\r\n  SearchBoxModule,\r\n} from './navigation/index';\r\nimport { OrderConfirmationModule } from './order-confirmation/index';\r\nimport {\r\n  ProductCarouselModule,\r\n  ProductFacetNavigationModule,\r\n  ProductIntroModule,\r\n  ProductListModule,\r\n  ProductReferencesModule,\r\n  ProductTabsModule,\r\n  StockNotificationModule,\r\n} from './product/index';\r\nimport { ProductImagesModule } from './product/product-images/product-images.module';\r\nimport { ProductSummaryModule } from './product/product-summary/product-summary.module';\r\nimport { ProductVariantsModule } from './product/product-variants/product-variants.module';\r\nimport { StoreFinderModule } from './storefinder/store-finder.module';\r\nimport { UserComponentModule } from './user/user.module';\r\nimport { WishListModule } from './wish-list/wish-list.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AnonymousConsentManagementBannerModule,\r\n    AsmModule,\r\n    HamburgerMenuModule,\r\n    CmsParagraphModule,\r\n    LinkModule,\r\n    BannerModule,\r\n    CategoryNavigationModule,\r\n    NavigationModule,\r\n    FooterNavigationModule,\r\n    BreadcrumbModule,\r\n    SearchBoxModule,\r\n    SiteContextSelectorModule,\r\n    QualtricsModule,\r\n    AddressBookModule,\r\n    OrderHistoryModule,\r\n    OrderCancellationModule,\r\n    OrderReturnModule,\r\n    ReturnRequestListModule,\r\n    ReturnRequestDetailModule,\r\n    ProductListModule,\r\n    ProductFacetNavigationModule,\r\n    ProductTabsModule,\r\n    ProductCarouselModule,\r\n    ProductReferencesModule,\r\n    OrderDetailsModule,\r\n    PaymentMethodsModule,\r\n    UpdateEmailModule,\r\n    UpdatePasswordModule,\r\n    UpdateProfileModule,\r\n    ConsentManagementModule,\r\n    CloseAccountModule,\r\n    CartComponentModule,\r\n    TabParagraphContainerModule,\r\n    OrderConfirmationModule,\r\n    StoreFinderModule,\r\n    ProductImagesModule,\r\n    ProductSummaryModule,\r\n    ProductVariantsModule,\r\n    ProductIntroModule,\r\n    CheckoutComponentModule,\r\n    ForgotPasswordModule,\r\n    ResetPasswordModule,\r\n    BannerCarouselModule,\r\n    UserComponentModule,\r\n    MyCouponsModule,\r\n    WishListModule,\r\n    NotificationPreferenceModule,\r\n    MyInterestsModule,\r\n    StockNotificationModule,\r\n  ],\r\n})\r\nexport class CmsLibModule {}\r\n","import { inject, InjectionToken } from '@angular/core';\r\nimport { Route } from '@angular/router';\r\nimport {\r\n  DEFAULT_URL_MATCHER,\r\n  UrlMatcherFactory,\r\n  UrlMatcherService,\r\n} from '@spartacus/core';\r\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\r\n\r\nexport function getProductDetailsUrlMatcherFactory(\r\n  service: UrlMatcherService,\r\n  defaultMatcherFactory: UrlMatcherFactory\r\n): UrlMatcherFactory {\r\n  const factory = (route: Route) => {\r\n    const defaultMatcher = defaultMatcherFactory(route);\r\n    const suffixPDPMatcher = getSuffixUrlMatcher({\r\n      marker: 'p',\r\n      paramName: 'productCode',\r\n    });\r\n    return service.getCombined([defaultMatcher, suffixPDPMatcher]);\r\n  };\r\n  return factory;\r\n}\r\n\r\n/**\r\n * Injection token with url matcher factory for PDP.\r\n * The provided url matcher matches both:\r\n * - the configured `paths` from routing config and\r\n * - custom pattern  `** / p / :productCode`\r\n *\r\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\r\n * or additional matchers can be added for a specific route.\r\n *\r\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\r\n */\r\nexport const PRODUCT_DETAILS_URL_MATCHER = new InjectionToken<\r\n  UrlMatcherFactory\r\n>('PRODUCT_DETAILS_URL_MATCHER', {\r\n  providedIn: 'root',\r\n  factory: () =>\r\n    getProductDetailsUrlMatcherFactory(\r\n      inject(UrlMatcherService),\r\n      inject(DEFAULT_URL_MATCHER)\r\n    ),\r\n});\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\r\nimport { PRODUCT_DETAILS_URL_MATCHER } from './product-details-url-matcher';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'product' },\r\n      },\r\n    ]),\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<RoutingConfig>{\r\n      routing: {\r\n        routes: {\r\n          product: {\r\n            matchers: [PRODUCT_DETAILS_URL_MATCHER],\r\n          },\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n})\r\nexport class ProductDetailsPageModule {}\r\n","import { inject, InjectionToken } from '@angular/core';\r\nimport { Route } from '@angular/router';\r\nimport {\r\n  DEFAULT_URL_MATCHER,\r\n  UrlMatcherFactory,\r\n  UrlMatcherService,\r\n} from '@spartacus/core';\r\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\r\n\r\nexport function getProductListingUrlMatcherFactory(\r\n  service: UrlMatcherService,\r\n  defaultMatcherFactory: UrlMatcherFactory\r\n): UrlMatcherFactory {\r\n  const factory = (route: Route) => {\r\n    const defaultMatcher = defaultMatcherFactory(route);\r\n    const suffixPLPMatcher = getSuffixUrlMatcher({\r\n      marker: 'c',\r\n      paramName: 'categoryCode',\r\n    });\r\n    return service.getCombined([defaultMatcher, suffixPLPMatcher]);\r\n  };\r\n  return factory;\r\n}\r\n\r\n/**\r\n * Injection token with url matcher factory for PLP.\r\n * The provided url matcher matches both:\r\n * - the configured `paths` from routing config and\r\n * - custom pattern  `** / c / :categoryCode`\r\n *\r\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\r\n * or additional matchers can be added for a specific route.\r\n *\r\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\r\n */\r\nexport const PRODUCT_LISTING_URL_MATCHER = new InjectionToken<\r\n  UrlMatcherFactory\r\n>('PRODUCT_LISTING_URL_MATCHER', {\r\n  providedIn: 'root',\r\n  factory: () =>\r\n    getProductListingUrlMatcherFactory(\r\n      inject(UrlMatcherService),\r\n      inject(DEFAULT_URL_MATCHER)\r\n    ),\r\n});\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\r\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\r\nimport { PRODUCT_LISTING_URL_MATCHER } from './product-listing-url-matcher';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { pageLabel: 'search', cxRoute: 'search' },\r\n      },\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'brand' },\r\n      },\r\n      {\r\n        // The 'category' route  may include a greedy suffix url matcher '**/c/:categoryCode'\r\n        // So not to shadow the specific 'brand' route, the 'category' is the last route in the sequence.\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'category' },\r\n      },\r\n    ]),\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<RoutingConfig>{\r\n      routing: {\r\n        routes: {\r\n          category: {\r\n            matchers: [PRODUCT_LISTING_URL_MATCHER],\r\n          },\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n})\r\nexport class ProductListingPageModule {}\r\n","import { LayoutConfig } from '../../layout/config/layout-config';\r\n\r\nexport const b2cLayoutConfig: LayoutConfig = {\r\n  // deferredLoading: {\r\n  //   strategy: DeferLoadingStrategy.DEFER,\r\n  //   intersectionMargin: '50px',\r\n  // },\r\n  layoutSlots: {\r\n    header: {\r\n      lg: {\r\n        slots: [\r\n          'SiteContext',\r\n          'SiteLinks',\r\n          'SiteLogo',\r\n          'SearchBox',\r\n          'SiteLogin',\r\n          'MiniCart',\r\n          'NavigationBar',\r\n        ],\r\n      },\r\n      slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\r\n    },\r\n    navigation: {\r\n      lg: { slots: [] },\r\n      slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\r\n    },\r\n    footer: {\r\n      slots: ['Footer'],\r\n    },\r\n    LandingPage2Template: {\r\n      pageFold: 'Section2B',\r\n      slots: [\r\n        'Section1',\r\n        'Section2A',\r\n        'Section2B',\r\n        'Section2C',\r\n        'Section3',\r\n        'Section4',\r\n        'Section5',\r\n      ],\r\n    },\r\n\r\n    ContentPage1Template: {\r\n      slots: ['Section2A', 'Section2B'],\r\n    },\r\n    CategoryPageTemplate: {\r\n      pageFold: 'Section2',\r\n      slots: ['Section1', 'Section2', 'Section3'],\r\n    },\r\n    ProductListPageTemplate: {\r\n      slots: ['ProductLeftRefinements', 'ProductListSlot'],\r\n    },\r\n    ProductGridPageTemplate: {\r\n      slots: ['ProductLeftRefinements', 'ProductGridSlot'],\r\n    },\r\n    SearchResultsListPageTemplate: {\r\n      slots: [\r\n        'Section2',\r\n        'ProductLeftRefinements',\r\n        'SearchResultsListSlot',\r\n        'Section4',\r\n      ],\r\n    },\r\n    SearchResultsGridPageTemplate: {\r\n      slots: [\r\n        'Section2',\r\n        'ProductLeftRefinements',\r\n        'SearchResultsGridSlot',\r\n        'Section4',\r\n      ],\r\n    },\r\n    ProductDetailsPageTemplate: {\r\n      lg: {\r\n        pageFold: 'UpSelling',\r\n      },\r\n\r\n      pageFold: 'Summary',\r\n\r\n      slots: [\r\n        'Summary',\r\n        'UpSelling',\r\n        'CrossSelling',\r\n        'Tabs',\r\n        'PlaceholderContentSlot',\r\n      ],\r\n    },\r\n    CartPageTemplate: {\r\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\r\n    },\r\n    AccountPageTemplate: {\r\n      slots: ['BodyContent', 'SideContent'],\r\n    },\r\n    LoginPageTemplate: {\r\n      slots: ['LeftContentSlot', 'RightContentSlot'],\r\n    },\r\n    ErrorPageTemplate: {\r\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\r\n    },\r\n    OrderConfirmationPageTemplate: {\r\n      slots: ['BodyContent', 'SideContent'],\r\n    },\r\n    MultiStepCheckoutSummaryPageTemplate: {\r\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\r\n    },\r\n    CheckoutLoginPageTemplate: {\r\n      slots: ['RightContentSlot'],\r\n    },\r\n  },\r\n};\r\n","import { MediaConfig } from '../../shared/components/media/media.config';\r\n\r\nexport const mediaConfig: MediaConfig = {\r\n  mediaFormats: {\r\n    mobile: {\r\n      width: 400,\r\n    },\r\n    tablet: {\r\n      width: 770,\r\n    },\r\n    desktop: {\r\n      width: 1140,\r\n    },\r\n    widescreen: {\r\n      width: 1400,\r\n    },\r\n    // product media\r\n    cartIcon: {\r\n      width: 65,\r\n    },\r\n    thumbnail: {\r\n      width: 96,\r\n    },\r\n    product: {\r\n      width: 284,\r\n    },\r\n    zoom: {\r\n      width: 515,\r\n    },\r\n  },\r\n};\r\n","import { CmsPageSlotsConfig, ContentSlotComponentData } from '@spartacus/core';\n\nexport const headerComponents: {\n  [key: string]: ContentSlotComponentData | any;\n} = {\n  HamburgerMenuComponent: {\n    typeCode: 'HamburgerMenuComponent',\n    flexType: 'HamburgerMenuComponent',\n  },\n  LoginComponent: {\n    typeCode: 'LoginComponent',\n    flexType: 'LoginComponent',\n    uid: 'LoginComponent',\n  },\n};\n\nexport const defaultPageHeaderConfig: CmsPageSlotsConfig = {\n  PreHeader: {\n    componentIds: ['HamburgerMenuComponent'],\n  },\n  SiteLogin: {\n    componentIds: ['LoginComponent'],\n  },\n};\n","import { CmsStructureConfig } from '@spartacus/core';\nimport {\n  defaultPageHeaderConfig,\n  headerComponents,\n} from './default-header.config';\n\nexport function defaultCmsContentConfig(): CmsStructureConfig {\n  return {\n    cmsStructure: {\n      components: {\n        ...headerComponents,\n      },\n      slots: {\n        ...defaultPageHeaderConfig,\n      },\n      pages: [],\n    },\n  };\n}\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  AnonymousConsentsModule,\r\n  AuthModule,\r\n  CartModule,\r\n  CheckoutModule,\r\n  CmsModule,\r\n  ConfigInitializerModule,\r\n  ConfigModule,\r\n  ConfigValidatorModule,\r\n  FeaturesConfigModule,\r\n  GlobalMessageModule,\r\n  I18nModule,\r\n  ProcessModule,\r\n  ProductModule,\r\n  provideConfigFromMetaTags,\r\n  StateModule,\r\n  UserModule,\r\n} from '@spartacus/core';\r\nimport { RoutingModule } from '../cms-structure/routing/routing.module';\r\nimport { LayoutModule } from '../layout/layout.module';\r\nimport { MediaModule } from '../shared/components/media/media.module';\r\nimport { ViewConfigModule } from '../shared/config/view-config.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    StateModule.forRoot(),\r\n    AuthModule.forRoot(),\r\n    AnonymousConsentsModule.forRoot(),\r\n    ConfigModule.forRoot(),\r\n    ConfigInitializerModule.forRoot(),\r\n    ConfigValidatorModule.forRoot(),\r\n    RoutingModule.forRoot(),\r\n    I18nModule.forRoot(),\r\n    CmsModule.forRoot(),\r\n    GlobalMessageModule.forRoot(),\r\n    ProcessModule.forRoot(),\r\n    CartModule.forRoot(),\r\n    CheckoutModule.forRoot(),\r\n    UserModule.forRoot(),\r\n    ProductModule.forRoot(),\r\n    ViewConfigModule.forRoot(),\r\n    FeaturesConfigModule.forRoot('2.0'),\r\n    LayoutModule,\r\n    MediaModule.forRoot(),\r\n  ],\r\n  exports: [LayoutModule],\r\n  providers: [...provideConfigFromMetaTags()],\r\n})\r\nexport class StorefrontFoundationModule {}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport {\r\n  ExternalRoutesModule,\r\n  OccModule,\r\n  PersonalizationModule,\r\n  provideConfig,\r\n  SiteContextModule,\r\n  SmartEditModule,\r\n} from '@spartacus/core';\r\nimport { AsmModule } from '../cms-components/asm/asm.module';\r\nimport { ProductDetailsPageModule } from '../cms-pages/product-details-page/product-details-page.module';\r\nimport { ProductListingPageModule } from '../cms-pages/product-listing-page/product-listing-page.module';\r\nimport { MainModule } from '../layout/main/main.module';\r\nimport { StorefrontConfig } from '../storefront-config';\r\nimport { StorefrontFoundationModule } from './storefront-foundation.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot([], {\r\n      scrollPositionRestoration: 'enabled',\r\n      anchorScrolling: 'enabled',\r\n    }),\r\n\r\n    StoreModule.forRoot({}),\r\n    EffectsModule.forRoot([]),\r\n\r\n    // ASM module must be imported before the `AuthModule (which is imported in `StorefrontFoundationModule`)\r\n    // since we might have conflicting interceptor logic. See #5461.\r\n    AsmModule,\r\n\r\n    StorefrontFoundationModule,\r\n    MainModule,\r\n    SiteContextModule.forRoot(), // should be imported after RouterModule.forRoot, because it overwrites UrlSerializer\r\n\r\n    SmartEditModule.forRoot(), // should be custom\r\n    PersonalizationModule.forRoot(), // should be custom\r\n\r\n    // opt-in explicitly\r\n    OccModule.forRoot(),\r\n    ProductDetailsPageModule,\r\n    ProductListingPageModule,\r\n    ExternalRoutesModule.forRoot(),\r\n  ],\r\n  exports: [MainModule, StorefrontFoundationModule],\r\n})\r\nexport class StorefrontModule {\r\n  static withConfig(\r\n    config?: StorefrontConfig\r\n  ): ModuleWithProviders<StorefrontModule> {\r\n    return {\r\n      ngModule: StorefrontModule,\r\n      providers: [provideConfig(config)],\r\n    };\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport {\r\n  provideConfig,\r\n  provideDefaultConfig,\r\n  provideDefaultConfigFactory,\r\n} from '@spartacus/core';\r\nimport { CmsLibModule } from '../cms-components/cms-lib.module';\r\nimport { StorefrontConfig } from '../storefront-config';\r\nimport { b2cLayoutConfig, mediaConfig } from './config/index';\r\nimport { defaultCmsContentConfig } from './config/static-cms-structure/default-cms-content.config';\r\nimport { StorefrontModule } from './storefront.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    StorefrontModule,\r\n\r\n    // the cms lib module contains all components that added in the bundle\r\n    CmsLibModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig({\r\n      pwa: {\r\n        enabled: true,\r\n        addToHomeScreen: true,\r\n      },\r\n    }),\r\n    provideDefaultConfig(b2cLayoutConfig),\r\n    provideDefaultConfig(mediaConfig),\r\n    provideDefaultConfigFactory(defaultCmsContentConfig),\r\n  ],\r\n  exports: [StorefrontModule],\r\n})\r\nexport class B2cStorefrontModule {\r\n  static withConfig(\r\n    config?: StorefrontConfig\r\n  ): ModuleWithProviders<B2cStorefrontModule> {\r\n    return {\r\n      ngModule: B2cStorefrontModule,\r\n      providers: [provideConfig(config)],\r\n    };\r\n  }\r\n}\r\n","/*\n * Public API Surface of storefrontlib\n */\n\nexport * from './cms-components/index';\nexport * from './cms-pages/index';\nexport * from './cms-structure/index';\nexport * from './layout/index';\nexport * from './recipes/index';\nexport * from './recipes/storefront.module';\nexport * from './shared/index';\nexport * from './storefront-config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {defaultAnonymousConsentLayoutConfig as ɵv} from './cms-components/anonymous-consent-management/default-anonymous-consent-layout.config';\nexport {AsmLoaderModule as ɵw,asmFactory as ɵx} from './cms-components/asm/asm-loader.module';\nexport {AsmMainUiComponent as ɵz} from './cms-components/asm/asm-main-ui/asm-main-ui.component';\nexport {AsmSessionTimerComponent as ɵbd} from './cms-components/asm/asm-session-timer/asm-session-timer.component';\nexport {FormatTimerPipe as ɵbe} from './cms-components/asm/asm-session-timer/format-timer.pipe';\nexport {AsmToggleUiComponent as ɵbg} from './cms-components/asm/asm-toggle-ui/asm-toggle-ui.component';\nexport {CSAgentLoginFormComponent as ɵbb} from './cms-components/asm/csagent-login-form/csagent-login-form.component';\nexport {CustomerEmulationComponent as ɵbf} from './cms-components/asm/customer-emulation/customer-emulation.component';\nexport {CustomerSelectionComponent as ɵbc} from './cms-components/asm/customer-selection/customer-selection.component';\nexport {defaultAsmLayoutConfig as ɵbh} from './cms-components/asm/default-asm-layout.config';\nexport {AsmComponentService as ɵba} from './cms-components/asm/services/asm-component.service';\nexport {AsmEnablerService as ɵy} from './cms-components/asm/services/asm-enabler.service';\nexport {defaultCheckoutConfig as ɵbi} from './cms-components/checkout/config/default-checkout-config';\nexport {defaultQualtricsConfig as ɵbj} from './cms-components/misc/qualtrics/config/default-qualtrics-config';\nexport {MyCouponsComponentService as ɵbp} from './cms-components/myaccount/my-coupons/my-coupons.component.service';\nexport {ReturnRequestService as ɵbn} from './cms-components/myaccount/order/return-request-detail/return-request.service';\nexport {CmsPageGuardService as ɵbk} from './cms-structure/guards/cms-page-guard.service';\nexport {pwaConfigurationFactory as ɵa,pwaFactory as ɵb} from './cms-structure/pwa/pwa.module';\nexport {AddToHomeScreenService as ɵbo} from './cms-structure/pwa/services/add-to-home-screen.service';\nexport {addCmsRoute as ɵbq} from './cms-structure/routing/cms-route/add-cms-route';\nexport {defaultRoutingConfig as ɵbs,defaultStorefrontRoutesConfig as ɵbr} from './cms-structure/routing/default-routing-config';\nexport {htmlLangProvider as ɵbt,setHtmlLangAttribute as ɵbu} from './cms-structure/seo/html-lang-provider';\nexport {getStructuredDataFactory as ɵc} from './cms-structure/seo/structured-data/structured-data.module';\nexport {CmsComponentsService as ɵbm} from './cms-structure/services';\nexport {CmsRoutesImplService as ɵbl} from './cms-structure/services/cms-routes-impl.service';\nexport {AutoFocusDirective as ɵi} from './layout/a11y/keyboard-focus/autofocus/auto-focus.directive';\nexport {AutoFocusService as ɵr} from './layout/a11y/keyboard-focus/autofocus/auto-focus.service';\nexport {BaseFocusDirective as ɵn} from './layout/a11y/keyboard-focus/base/base-focus.directive';\nexport {BaseFocusService as ɵo} from './layout/a11y/keyboard-focus/base/base-focus.service';\nexport {BlockFocusDirective as ɵl} from './layout/a11y/keyboard-focus/block/block-focus.directive';\nexport {EscapeFocusDirective as ɵj} from './layout/a11y/keyboard-focus/escape/escape-focus.directive';\nexport {EscapeFocusService as ɵq} from './layout/a11y/keyboard-focus/escape/escape-focus.service';\nexport {FOCUS_ATTR as ɵd} from './layout/a11y/keyboard-focus/keyboard-focus.model';\nexport {LockFocusDirective as ɵf} from './layout/a11y/keyboard-focus/lock/lock-focus.directive';\nexport {LockFocusService as ɵu} from './layout/a11y/keyboard-focus/lock/lock-focus.service';\nexport {PersistFocusDirective as ɵk} from './layout/a11y/keyboard-focus/persist/persist-focus.directive';\nexport {PersistFocusService as ɵp} from './layout/a11y/keyboard-focus/persist/persist-focus.service';\nexport {TabFocusDirective as ɵh} from './layout/a11y/keyboard-focus/tab/tab-focus.directive';\nexport {TabFocusService as ɵs} from './layout/a11y/keyboard-focus/tab/tab-focus.service';\nexport {TrapFocusDirective as ɵg} from './layout/a11y/keyboard-focus/trap/trap-focus.directive';\nexport {TrapFocusService as ɵt} from './layout/a11y/keyboard-focus/trap/trap-focus.service';\nexport {VisibleFocusDirective as ɵm} from './layout/a11y/keyboard-focus/visible/visible-focus.directive';\nexport {skipLinkFactory as ɵe} from './layout/a11y/skip-link/skip-link.module';"]}