{"version":3,"file":"spartacus-storefront.js","sources":["ng://@spartacus/storefront/layout/launch-dialog/config/launch-config.ts","ng://@spartacus/storefront/layout/config/layout-config.ts","ng://@spartacus/storefront/layout/launch-dialog/services/launch-render.strategy.ts","ng://@spartacus/storefront/layout/launch-dialog/services/inline-render.strategy.ts","ng://@spartacus/storefront/layout/launch-dialog/services/launch-dialog.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.model.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-renderer.service.ts","ng://@spartacus/storefront/layout/loading/intersection.service.ts","ng://@spartacus/storefront/layout/loading/defer-loader.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.module.ts","ng://@spartacus/storefront/layout/launch-dialog/services/outlet-render.strategy.ts","ng://@spartacus/storefront/layout/launch-dialog/services/routing-render.strategy.ts","ng://@spartacus/storefront/layout/launch-dialog/launch-dialog.module.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/anonymous-consent-launch-dialog.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/keyboard-focus.model.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/base/base-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/base/base-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/visible/visible-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/block/block-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/persist/persist-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/persist/persist-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/services/select-focus.util.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/escape/escape-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/escape/escape-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/autofocus/auto-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/autofocus/auto-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/tab/tab-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/tab/tab-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/trap/trap-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/trap/trap-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/lock/lock-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/lock/lock-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/services/keyboard-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/keyboard-focus.module.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/index.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.model.ts","ng://@spartacus/storefront/cms-components/misc/icon/fontawesome-icon.config.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon-loader.service.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.component.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.module.ts","ng://@spartacus/storefront/shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/default-anonymous-consent-layout.config.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/anonymous-consent-management.module.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.component.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.module.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-management.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/consent-management.module.ts","ng://@spartacus/storefront/shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module.ts","ng://@spartacus/storefront/shared/components/card/card.component.ts","ng://@spartacus/storefront/shared/components/card/card.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.service.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.component.ts","ng://@spartacus/storefront/layout/breakpoint/breakpoint.service.ts","ng://@spartacus/storefront/shared/components/media/media.service.ts","ng://@spartacus/storefront/shared/components/media/media.component.ts","ng://@spartacus/storefront/shared/components/media/media.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.module.ts","ng://@spartacus/storefront/shared/components/form/form-errors/form-errors.component.ts","ng://@spartacus/storefront/shared/components/form/form-errors/form-errors.module.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.component.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.module.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.component.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.module.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/config/default-pagination.config.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/config/pagination.config.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.model.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.builder.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.module.ts","ng://@spartacus/storefront/shared/components/list-navigation/sorting/sorting.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/list-navigation.module.ts","ng://@spartacus/storefront/shared/components/media/media.config.ts","ng://@spartacus/storefront/shared/components/modal/modal-ref.ts","ng://@spartacus/storefront/shared/components/modal/modal.service.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.component.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.module.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/config/qualtrics-config.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics-loader.service.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.component.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/config/default-qualtrics-config.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.module.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/language-currency.component.ts","ng://@spartacus/storefront/cms-structure/page/model/cms-component-data.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-component.service.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.component.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.module.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context.model.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.component.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.module.ts","ng://@spartacus/storefront/shared/config/view-config.ts","ng://@spartacus/storefront/shared/config/view-config.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.service.ts","ng://@spartacus/storefront/shared/services/promotion/promotion.service.ts","ng://@spartacus/storefront/shared/utils/validators/custom-form-validators.ts","ng://@spartacus/storefront/shared/utils/forms/title-utils.ts","ng://@spartacus/storefront/cms-structure/services/cms-components.service.ts","ng://@spartacus/storefront/cms-structure/page/component/services/cms-injector.service.ts","ng://@spartacus/storefront/cms-structure/page/component/handlers/component-handler.ts","ng://@spartacus/storefront/cms-structure/page/component/services/component-handler.service.ts","ng://@spartacus/storefront/cms-structure/page/component/component-wrapper.directive.ts","ng://@spartacus/storefront/cms-structure/page/component/handlers/default-component.handler.ts","ng://@spartacus/storefront/cms-structure/page/component/handlers/lazy-component.handler.ts","ng://@spartacus/storefront/cms-structure/page/component/page-component.module.ts","ng://@spartacus/storefront/cms-components/asm/asm-constants.ts","ng://@spartacus/storefront/cms-components/asm/services/asm-enabler.service.ts","ng://@spartacus/storefront/cms-components/asm/asm-loader.module.ts","ng://@spartacus/storefront/cms-components/asm/services/asm-component.service.ts","ng://@spartacus/storefront/cms-components/asm/asm-main-ui/asm-main-ui.component.ts","ng://@spartacus/storefront/cms-components/asm/asm-session-timer/asm-session-timer.component.ts","ng://@spartacus/storefront/cms-components/asm/asm-session-timer/format-timer.pipe.ts","ng://@spartacus/storefront/cms-components/asm/asm-toggle-ui/asm-toggle-ui.component.ts","ng://@spartacus/storefront/cms-components/asm/csagent-login-form/csagent-login-form.component.ts","ng://@spartacus/storefront/cms-components/asm/customer-emulation/customer-emulation.component.ts","ng://@spartacus/storefront/cms-components/asm/customer-selection/customer-selection.component.ts","ng://@spartacus/storefront/cms-components/asm/default-asm-layout.config.ts","ng://@spartacus/storefront/cms-components/asm/asm.module.ts","ng://@spartacus/storefront/cms-components/product/current-product.service.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/applied-coupons/applied-coupons.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item/cart-item.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/order-summary/order-summary.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-shared.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-not-empty.guard.ts","ng://@spartacus/storefront/cms-components/cart/cart-page-layout-handler.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.module.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout-handler.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.component.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.component.ts","ng://@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.module.ts","ng://@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.component.ts","ng://@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.module.ts","ng://@spartacus/storefront/cms-components/cart/cart.module.ts","ng://@spartacus/storefront/cms-components/checkout/model/checkout-step.model.ts","ng://@spartacus/storefront/cms-components/checkout/config/checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/config/default-checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/services/checkout-config.service.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout-auth.guard.ts","ng://@spartacus/storefront/cms-components/checkout/services/checkout-details.service.ts","ng://@spartacus/storefront/cms-components/checkout/services/express-checkout.service.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/shipping-address-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/delivery-mode-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/payment-details-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout-details-loaded.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.module.ts","ng://@spartacus/storefront/cms-components/checkout/checkout.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/not-checkout-auth.guard.ts","ng://@spartacus/storefront/layout/a11y/skip-link/config/skip-link.config.ts","ng://@spartacus/storefront/layout/a11y/skip-link/service/skip-link.service.ts","ng://@spartacus/storefront/layout/a11y/skip-link/component/skip-link.component.ts","ng://@spartacus/storefront/layout/a11y/skip-link/config/default-skip-link.config.ts","ng://@spartacus/storefront/layout/a11y/skip-link/directive/skip-link.directive.ts","ng://@spartacus/storefront/layout/a11y/skip-link/skip-link.module.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.service.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.component.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.module.ts","ng://@spartacus/storefront/layout/layout.module.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.component.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.module.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.service.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.component.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.module.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module-config.ts","ng://@spartacus/storefront/cms-structure/pwa/services/add-to-home-screen.service.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module.ts","ng://@spartacus/storefront/cms-structure/seo/html-lang-provider.ts","ng://@spartacus/storefront/cms-structure/seo/seo-meta.service.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/json-ld-script.factory.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/json-ld.directive.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/tokens.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/structured-data.factory.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/structured-data.module.ts","ng://@spartacus/storefront/cms-structure/seo/seo.module.ts","ng://@spartacus/storefront/layout/main/storefront.component.ts","ng://@spartacus/storefront/layout/main/main.module.ts","ng://@spartacus/storefront/cms-structure/services/cms-guards.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-i18n.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-routes-impl.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-routes.service.ts","ng://@spartacus/storefront/cms-structure/guards/cms-page-guard.service.ts","ng://@spartacus/storefront/cms-structure/guards/cms-page.guard.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/add-cms-route.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/cms-route.module.ts","ng://@spartacus/storefront/cms-structure/routing/default-routing-config.ts","ng://@spartacus/storefront/cms-structure/routing/routing.module.ts","ng://@spartacus/storefront/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/breadcrumb/breadcrumb-schema.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-base-product.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-offer.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-review.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/product-schema.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/json-ld-builder.module.ts","ng://@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.component.ts","ng://@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.module.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.component.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.module.ts","ng://@spartacus/storefront/cms-components/content/link/link.component.ts","ng://@spartacus/storefront/cms-components/content/link/link.module.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.component.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.module.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.service.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.module.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account-modal/close-account-modal.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account/close-account.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/close-account.module.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.model.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.guard.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.guard.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-headline/order-detail-headline.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.model.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/tracking-events/tracking-events.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-actions/order-detail-actions.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-overview/return-request-overview.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-items/return-request-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-totals/return-request-totals.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-detail.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.component.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.module.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email-form/update-email-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password-form/update-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password/update-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/update-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/components/update-profile-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.module.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.service.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-claim/coupon-claim.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.module.ts","ng://@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.component.ts","ng://@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.module.ts","ng://@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.module.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.component.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.module.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.service.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation-ui.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box-component.service.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.component.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/highlight.pipe.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.module.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/guest-register-form/guest-register-form.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/guards/order-confirmation.guard.ts","ng://@spartacus/storefront/cms-components/order-confirmation/order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel.service.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.module.ts","ng://@spartacus/storefront/cms-components/product/config/default-scroll-config.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.component.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.module.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.component.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list-component.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-view/product-view.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-scroll/product-scroll.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet.model.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/services/product-facet.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/services/facet.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet/facet.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet/facet.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list-item/product-list-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/product-variants.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/guards/product-variant.guard.ts","ng://@spartacus/storefront/cms-components/product/product-variants/product-variants.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list.module.ts","ng://@spartacus/storefront/cms-components/product/product-outlets.model.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.component.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-tabs.module.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification.component.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification.module.ts","ng://@spartacus/storefront/cms-components/storefinder/components/schedule-component/schedule.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-grid/store-finder-grid.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-header/store-finder-header.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/abstract-store-item/abstract-store-item.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-list-item/store-finder-list-item.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-map/store-finder-map.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-pagination-details/store-finder-pagination-details.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-list/store-finder-list.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-search-result.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search/store-finder-search.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-store-description/store-finder-store-description.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-stores-count/store-finder-stores-count.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder/store-finder.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-store/store-finder-store.component.ts","ng://@spartacus/storefront/cms-components/storefinder/store-finder.module.ts","ng://@spartacus/storefront/cms-components/user/checkout-login/checkout-login.component.ts","ng://@spartacus/storefront/cms-components/user/checkout-login/checkout-login.module.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.component.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.module.ts","ng://@spartacus/storefront/cms-components/user/login/login.component.ts","ng://@spartacus/storefront/cms-components/user/login/login.module.ts","ng://@spartacus/storefront/cms-components/user/logout/logout-guard.ts","ng://@spartacus/storefront/cms-components/user/logout/logout.module.ts","ng://@spartacus/storefront/cms-components/user/register/register.component.ts","ng://@spartacus/storefront/cms-components/user/register/register.module.ts","ng://@spartacus/storefront/cms-components/user/user.module.ts","ng://@spartacus/storefront/cms-components/wish-list/components/wish-list-item/wish-list-item.component.ts","ng://@spartacus/storefront/cms-components/wish-list/components/wish-list/wish-list.component.ts","ng://@spartacus/storefront/cms-components/wish-list/wish-list.module.ts","ng://@spartacus/storefront/cms-components/cms-lib.module.ts","ng://@spartacus/storefront/cms-pages/product-details-page/product-details-url-matcher.ts","ng://@spartacus/storefront/cms-pages/product-details-page/product-details-page.module.ts","ng://@spartacus/storefront/cms-pages/product-listing-page/product-listing-url-matcher.ts","ng://@spartacus/storefront/cms-pages/product-listing-page/product-listing-page.module.ts","ng://@spartacus/storefront/recipes/config/b2c-layout-config.ts","ng://@spartacus/storefront/recipes/config/default-media.config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-header.config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-cms-content.config.ts","ng://@spartacus/storefront/recipes/storefront-foundation.module.ts","ng://@spartacus/storefront/recipes/storefront.module.ts","ng://@spartacus/storefront/recipes/b2c-storefront.module.ts","ng://@spartacus/storefront/public_api.ts","ng://@spartacus/storefront/spartacus-storefront.ts"],"sourcesContent":["import { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\r\n\r\nexport interface LaunchConfig {\r\n  [key: string]: LaunchOptions;\r\n}\r\n\r\nexport type LaunchOptions =\r\n  | LaunchOutletDialog\r\n  | LaunchInlineDialog\r\n  | LaunchRoute;\r\n\r\n/**\r\n * Parent type for configurations that render components\r\n */\r\nexport interface LaunchDialog {\r\n  component: any;\r\n  /**\r\n   * Can the element be rendered multiple times\r\n   */\r\n  multi?: boolean;\r\n  /**\r\n   * Dialog type is used to apply CSS classes\r\n   */\r\n  dialogType?: DIALOG_TYPE;\r\n}\r\n\r\n/**\r\n * Configuration type to render a component in an outlet\r\n */\r\nexport interface LaunchOutletDialog extends LaunchDialog {\r\n  /**\r\n   * The outlet to render the element in\r\n   */\r\n  outlet: string;\r\n  /**\r\n   * Default: OutletPosition.BEFORE\r\n   */\r\n  position?: OutletPosition;\r\n}\r\n\r\n/**\r\n * Configuration type to render a component inline (next to the trigger)\r\n */\r\nexport interface LaunchInlineDialog extends LaunchDialog {\r\n  inline: boolean;\r\n}\r\n\r\n/**\r\n * Configuration type to render as link\r\n */\r\nexport interface LaunchRoute {\r\n  /**\r\n   * The route for the url\r\n   */\r\n  cxRoute: string;\r\n  /**\r\n   * The parameters for the route\r\n   */\r\n  params?: { [param: string]: any };\r\n}\r\n\r\n/**\r\n * Types of dialog openings supported\r\n */\r\nexport enum DIALOG_TYPE {\r\n  POPOVER = 'POPOVER',\r\n  DIALOG = 'DIALOG',\r\n  SIDEBAR_START = 'SIDEBAR_START',\r\n  SIDEBAR_END = 'SIDEBAR_END',\r\n}\r\n\r\n/**\r\n * List of available callers\r\n */\r\nexport enum LAUNCH_CALLER {\r\n  ASM = 'ASM',\r\n  SKIP_LINKS = 'SKIP_LINKS',\r\n  ANONYMOUS_CONSENT = 'ANONYMOUS_CONSENT',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config, DeferLoadingStrategy } from '@spartacus/core';\r\nimport { LaunchConfig } from '../launch-dialog/index';\r\n\r\nexport enum BREAKPOINT {\r\n  xs = 'xs',\r\n  sm = 'sm',\r\n  md = 'md',\r\n  lg = 'lg',\r\n  xl = 'xl',\r\n}\r\n\r\nexport type LayoutSections =\r\n  | 'header'\r\n  | 'footer'\r\n  | 'LandingPage2Template'\r\n  | string;\r\n\r\nexport type SlotConfig = {\r\n  /** The cms page slots are mapped by the `slot.position`. */\r\n  slots?: string[];\r\n\r\n  /**\r\n   * The page fold identifies the last expected page slot above-the-fold.\r\n   * It's perfectly fine to specify this by idication, however a more\r\n   * precise indication will have an positive impact on performance.\r\n   */\r\n  pageFold?: string;\r\n};\r\n\r\nexport type SlotGroup = {\r\n  /** The page slot configuration for large screens */\r\n  [BREAKPOINT.lg]?: SlotConfig;\r\n  /** The page slot configuration for medium screens */\r\n  [BREAKPOINT.md]?: SlotConfig;\r\n  /** The page slot configuration for small screens */\r\n  [BREAKPOINT.sm]?: SlotConfig;\r\n  /** The page slot configuration for extra small screens */\r\n  [BREAKPOINT.xs]?: SlotConfig;\r\n};\r\n\r\nexport type LayoutSlotConfig = {\r\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;\r\n};\r\n\r\n/**\r\n * The LayoutConfig supports the configuration of page slots by page templates\r\n * or page sections, such as headers and footers. The configuration also supports\r\n * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered\r\n * por a given breakpoint.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class LayoutConfig {\r\n  /** The breakpoint configuration is used when the DOM is (re)rendered in specific view.\r\n   * This allows for adaptive rendering, so that the DOM is rendered for specific breakpoints. */\r\n  breakpoints?: {\r\n    [BREAKPOINT.xs]?: number;\r\n    [BREAKPOINT.sm]?: number;\r\n    [BREAKPOINT.md]?: number;\r\n    [BREAKPOINT.lg]?: number;\r\n  };\r\n  layoutSlots?: LayoutSlotConfig;\r\n\r\n  /**\r\n   * Deferrred loading is a technique to hold of with the loading / creation\r\n   * of DOM elements which are not not in the initial view port.\r\n   * This technique wil increase performance.\r\n   */\r\n  deferredLoading?: {\r\n    /**\r\n     * The global strategy will be used as a fallback strategy for all DOM creation,\r\n     * but can be overriden by local configuration, i.e. for cms components.\r\n     */\r\n    strategy?: DeferLoadingStrategy;\r\n    /**\r\n     * The intersection margin contains the offset used by the Intersection Observer\r\n     * to observe elements outside the view port.\r\n     *\r\n     * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\r\n     */\r\n    intersectionMargin?: string;\r\n  };\r\n\r\n  launch?: LaunchConfig;\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ComponentRef,\r\n  Inject,\r\n  Renderer2,\r\n  RendererFactory2,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Applicable, Priority } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  DIALOG_TYPE,\r\n  LaunchDialog,\r\n  LaunchOptions,\r\n  LAUNCH_CALLER,\r\n} from '../config';\r\n\r\nexport abstract class LaunchRenderStrategy implements Applicable {\r\n  // List of called references; only used for rendered elements\r\n  protected renderedCallers: Array<{\r\n    caller: LAUNCH_CALLER | string;\r\n    element?: any;\r\n    component?: ComponentRef<any>;\r\n  }> = [];\r\n\r\n  /**\r\n   * Classes to apply to the component when the dialog is a DIALOG\r\n   */\r\n  protected dialogClasses = ['d-block', 'fade', 'modal', 'show'];\r\n  /**\r\n   * Classes to apply to the component when the dialog is a POPOVER\r\n   */\r\n  protected popoverClasses = ['cx-dialog-popover'];\r\n  /**\r\n   * Classes to apply to the component when the dialog is a SIDEBAR_END\r\n   */\r\n  protected sidebarEndClasses = ['cx-sidebar-end'];\r\n  /**\r\n   * Classes to apply to the component when the dialog is a SIDEBAR_START\r\n   */\r\n  protected sidebarStartClasses = ['cx-sidebar-start'];\r\n\r\n  protected renderer: Renderer2;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2\r\n  ) {\r\n    this.renderer = rendererFactory.createRenderer(null, null);\r\n  }\r\n\r\n  /**\r\n   * Render method to implement based on the strategy\r\n   *\r\n   * @param config Launch configuration\r\n   */\r\n  abstract render(\r\n    config: LaunchOptions,\r\n    caller: LAUNCH_CALLER | string,\r\n    vcr?: ViewContainerRef\r\n  ): void | Observable<ComponentRef<any>>;\r\n\r\n  /**\r\n   * Determines if the strategy is the right one for the provided configuration\r\n   *\r\n   * @param config\r\n   */\r\n  abstract hasMatch(config: LaunchOptions): boolean;\r\n\r\n  /**\r\n   * Determines if element should render\r\n   *\r\n   * @param caller\r\n   * @param config\r\n   */\r\n  protected shouldRender(\r\n    caller: LAUNCH_CALLER | string,\r\n    config: LaunchDialog\r\n  ): boolean {\r\n    return (\r\n      Boolean(config.component) &&\r\n      (this.renderedCallers.some((el) => el.caller === caller)\r\n        ? !!config.multi\r\n        : true)\r\n    );\r\n  }\r\n\r\n  protected applyClasses(\r\n    component: ComponentRef<any>,\r\n    dialogType: DIALOG_TYPE\r\n  ): void {\r\n    let classes = [];\r\n\r\n    // TODO: make classes configurable\r\n    switch (dialogType) {\r\n      case DIALOG_TYPE.DIALOG:\r\n        classes = this.dialogClasses;\r\n        this.renderer.addClass(this.document.body, 'modal-open');\r\n        break;\r\n      case DIALOG_TYPE.POPOVER:\r\n        classes = this.popoverClasses;\r\n        break;\r\n      case DIALOG_TYPE.SIDEBAR_END:\r\n        classes = this.sidebarEndClasses;\r\n        break;\r\n      case DIALOG_TYPE.SIDEBAR_START:\r\n        classes = this.sidebarStartClasses;\r\n        break;\r\n    }\r\n\r\n    for (const newClass of classes) {\r\n      this.renderer.addClass(component.location.nativeElement, newClass);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to call when rendered element is destroyed\r\n   * The element will be removed from the list of rendered elements\r\n   *\r\n   * @param caller\r\n   * @param _config optional parameters used in children strategies\r\n   */\r\n  public remove(caller: LAUNCH_CALLER | string, config: LaunchOptions): void {\r\n    this.renderedCallers = this.renderedCallers.filter(\r\n      (el) => el.caller !== caller\r\n    );\r\n\r\n    if ((config as LaunchDialog)?.dialogType === DIALOG_TYPE.DIALOG) {\r\n      this.renderer.removeClass(this.document.body, 'modal-open');\r\n    }\r\n  }\r\n\r\n  getPriority(): Priority {\r\n    return Priority.LOW; // low, as it's a default matcher\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  isDevMode,\r\n  RendererFactory2,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { LaunchInlineDialog, LAUNCH_CALLER } from '../config/index';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InlineRenderStrategy extends LaunchRenderStrategy {\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2,\r\n    protected componentFactoryResolver: ComponentFactoryResolver\r\n  ) {\r\n    super(document, rendererFactory);\r\n  }\r\n\r\n  /**\r\n   * Renders the component from the configuration in the view container ref\r\n   *\r\n   * @param config\r\n   * @param caller\r\n   * @param vcr\r\n   */\r\n  render(\r\n    config: LaunchInlineDialog,\r\n    caller: LAUNCH_CALLER | string,\r\n    vcr: ViewContainerRef\r\n  ): Observable<ComponentRef<any>> {\r\n    // Only render if a ViewContainerRef is provided\r\n    if (vcr && this.shouldRender(caller, config)) {\r\n      const template = this.componentFactoryResolver.resolveComponentFactory(\r\n        config.component\r\n      );\r\n\r\n      const component = vcr.createComponent(template);\r\n\r\n      if (config?.dialogType) {\r\n        this.applyClasses(component, config?.dialogType);\r\n      }\r\n\r\n      this.renderedCallers.push({ caller, element: vcr.element, component });\r\n\r\n      return of(component);\r\n    } else if (isDevMode()) {\r\n      if (!vcr) {\r\n        console.warn(`No view container ref provided for ${caller}`);\r\n      } else {\r\n        console.warn(\r\n          `Element for ${caller} already rendered. To allow multi rendering add property multi: true.`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  hasMatch(config: LaunchInlineDialog) {\r\n    return Boolean(config.inline);\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  isDevMode,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { resolveApplicable } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { LayoutConfig } from '../../config/layout-config';\r\nimport { LaunchOptions, LAUNCH_CALLER } from '../config/launch-config';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LaunchDialogService {\r\n  private _dialogClose = new BehaviorSubject<string>(undefined);\r\n\r\n  constructor(\r\n    @Inject(LaunchRenderStrategy)\r\n    protected renderStrategies: LaunchRenderStrategy[],\r\n    protected layoutConfig: LayoutConfig\r\n  ) {\r\n    this.renderStrategies = this.renderStrategies || [];\r\n  }\r\n\r\n  /**\r\n   * Render the element based on the strategy from the launch configuration\r\n   *\r\n   * @param caller LAUNCH_CALLER\r\n   * @param vcr View Container Ref of the container for inline rendering\r\n   */\r\n  launch(\r\n    caller: LAUNCH_CALLER | string,\r\n    vcr?: ViewContainerRef\r\n  ): void | Observable<ComponentRef<any>> {\r\n    const config = this.findConfiguration(caller);\r\n    if (config) {\r\n      const renderer = this.getStrategy(config);\r\n\r\n      // Render if the strategy exists\r\n      if (renderer) {\r\n        this._dialogClose.next(undefined);\r\n        return renderer.render(config, caller, vcr);\r\n      }\r\n    } else if (isDevMode()) {\r\n      console.warn('No configuration provided for caller ' + caller);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Util method to remove element from rendered elements list\r\n   *\r\n   * @param caller LAUNCH_CALLER\r\n   */\r\n  clear(caller: LAUNCH_CALLER | string): void {\r\n    const config = this.findConfiguration(caller);\r\n    const renderer = this.getStrategy(config);\r\n\r\n    // Render if the strategy exists\r\n    if (renderer) {\r\n      renderer.remove(caller, config);\r\n    }\r\n  }\r\n\r\n  get dialogClose(): Observable<string> {\r\n    return this._dialogClose.asObservable();\r\n  }\r\n\r\n  closeDialog(reason: string) {\r\n    this._dialogClose.next(reason);\r\n  }\r\n\r\n  /**\r\n   * Returns the configuration for the caller\r\n   *\r\n   * @param caller LAUNCH_CALLER\r\n   */\r\n  protected findConfiguration(caller: LAUNCH_CALLER | string): LaunchOptions {\r\n    if (this.layoutConfig?.launch) {\r\n      return this.layoutConfig.launch[caller];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Returns the render strategy based on the configuration\r\n   *\r\n   * @param config Configuration for launch\r\n   */\r\n  protected getStrategy(config: LaunchOptions): LaunchRenderStrategy {\r\n    return resolveApplicable(this.renderStrategies, [config]);\r\n  }\r\n}\r\n","export enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport const AVOID_STACKED_OUTLETS = false;\nexport const USE_STACKED_OUTLETS = true;\n","import { Injectable, TemplateRef } from '@angular/core';\r\nimport { AVOID_STACKED_OUTLETS, OutletPosition } from './outlet.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OutletService<T = TemplateRef<any>> {\r\n  private templatesRefs = new Map<string, T[]>();\r\n  private templatesRefsBefore = new Map<string, T[]>();\r\n  private templatesRefsAfter = new Map<string, T[]>();\r\n\r\n  /**\r\n   * Adds a template or ComponentFactory, so that UI outlets can be replaced dynamically.\r\n   * The UI position where this template or ComponentFactory is inserted is given by a\r\n   * string reference (called `outlet`) and optional `OutletPosition`. The `OutletPosition`\r\n   * is either before or after, or replaces the entire UI.\r\n   *\r\n   * @param outlet the UI location represented by a string\r\n   * @param template the `TemplateRef` that will be used to insert UI\r\n   * @param position the `OutletPosition` in the UI\r\n   */\r\n  add(outlet: string, template: T, position?: OutletPosition): void;\r\n  /**\r\n   * @param factory The `ComponentFactory` that will be dynamically added to the outlet UI\r\n   */\r\n  add(\r\n    outlet: string,\r\n    // tslint:disable-next-line: unified-signatures\r\n    factory: T,\r\n    position?: OutletPosition\r\n  ): void;\r\n  /**\r\n   * @param templateOrFactory A `ComponentFactory` that inserts a component dynamically.\r\n   */\r\n  add(\r\n    outlet: string,\r\n    templateOrFactory: T,\r\n    position: OutletPosition = OutletPosition.REPLACE\r\n  ): void {\r\n    if (position === OutletPosition.BEFORE) {\r\n      this.store(this.templatesRefsBefore, outlet, templateOrFactory);\r\n    }\r\n    if (position === OutletPosition.REPLACE) {\r\n      this.store(this.templatesRefs, outlet, templateOrFactory);\r\n    }\r\n    if (position === OutletPosition.AFTER) {\r\n      this.store(this.templatesRefsAfter, outlet, templateOrFactory);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Returns a single object or multiple objects for the given outlet reference,\r\n   * depending on the `stacked` argument.\r\n   *\r\n   * @param outlet The outlet reference\r\n   * @param position the outlet position, `OutletPosition.before`, `OutletPosition.AFTER` or `OutletPosition.REPLACE`\r\n   * @param stacked Indicates whether an array of outlet components is returned\r\n   */\r\n  get(\r\n    outlet: string,\r\n    position: OutletPosition = OutletPosition.REPLACE,\r\n    stacked = AVOID_STACKED_OUTLETS\r\n  ): T[] | T {\r\n    let templateRef: T[];\r\n    switch (position) {\r\n      case OutletPosition.BEFORE:\r\n        templateRef = this.templatesRefsBefore.get(outlet);\r\n        break;\r\n      case OutletPosition.AFTER:\r\n        templateRef = this.templatesRefsAfter.get(outlet);\r\n        break;\r\n      default:\r\n        templateRef = this.templatesRefs.get(outlet);\r\n    }\r\n    if (templateRef && !stacked) {\r\n      return templateRef[0];\r\n    }\r\n    return templateRef;\r\n  }\r\n\r\n  remove(\r\n    outlet: string,\r\n    position: OutletPosition = OutletPosition.REPLACE,\r\n    value?: T\r\n  ): void {\r\n    switch (position) {\r\n      case OutletPosition.BEFORE:\r\n        this.removeValueOrAll(this.templatesRefsBefore, outlet, value);\r\n        break;\r\n      case OutletPosition.AFTER:\r\n        this.removeValueOrAll(this.templatesRefsAfter, outlet, value);\r\n        break;\r\n      default:\r\n        this.removeValueOrAll(this.templatesRefs, outlet, value);\r\n    }\r\n  }\r\n\r\n  private store(store: Map<string, T[]>, outlet: string, value: T) {\r\n    const existing = store.get(outlet) || [];\r\n    const newValue: T[] = existing.concat([value]);\r\n    store.set(outlet, newValue);\r\n  }\r\n\r\n  protected removeValueOrAll(\r\n    store: Map<string, T[]>,\r\n    outlet: string,\r\n    value?: T\r\n  ): void {\r\n    if (!value && store.has(outlet)) {\r\n      store.delete(outlet);\r\n    } else if (value && store.has(outlet)) {\r\n      let existing = store.get(outlet);\r\n      existing = existing.filter((val) => val === value);\r\n      store.set(outlet, existing);\r\n    }\r\n  }\r\n}\r\n","import { Directive, TemplateRef, Input, OnInit } from '@angular/core';\n\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { OutletDirective } from './outlet.directive';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OutletRendererService {\r\n  private outletRefs = new BehaviorSubject(new Map<string, OutletDirective>());\r\n\r\n  /**\r\n   * Dynamically render the templates in the specified array\r\n   *\r\n   * @param outlet\r\n   */\r\n  render(outlet: string): void {\r\n    if (this.outletRefs.value.size !== 0) {\r\n      this.outletRefs.value.get(outlet).render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register outlet to be available to render dynamically\r\n   *\r\n   * @param cxOutlet\r\n   * @param context\r\n   */\r\n  register(cxOutlet: string, context: OutletDirective): void {\r\n    this.outletRefs.next(this.outletRefs.value.set(cxOutlet, context));\r\n  }\r\n  /**\r\n   * Returns map of outlets\r\n   *\r\n   */\r\n  getOutletRef(outlet: string): Observable<OutletDirective> {\r\n    return this.outletRefs.asObservable().pipe(\r\n      map((val) => val.get(outlet)),\r\n      filter((val) => Boolean(val))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, first, flatMap, map } from 'rxjs/operators';\r\nimport { LayoutConfig } from '../config/layout-config';\r\nimport { IntersectionOptions } from './intersection.model';\r\n\r\n/**\r\n * The IntersectionService uses the native IntersectionObserver (v2), which\r\n * can be used to implement pre-loading and deferred loading of DOM content.\r\n *\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IntersectionService {\r\n  constructor(protected config: LayoutConfig) {}\r\n\r\n  /**\r\n   * Returns an Observable that emits only once a boolean value whenever\r\n   * the given element has shown in the view port.\r\n   *\r\n   * The returned observable will only emit the first value. The\r\n   * observable must be cleaned up either way, since the value might never emit; it\r\n   *  depends on whether the element appears in the view port.\r\n   */\r\n  isIntersected(\r\n    element: HTMLElement,\r\n    options?: IntersectionOptions\r\n  ): Observable<boolean> {\r\n    return this.intersects(element, options).pipe(first((v) => v === true));\r\n  }\r\n\r\n  /**\r\n   * Indicates whenever the element intersects the view port. An optional margin\r\n   * is used to intersects before the element shows up in the viewport.\r\n   * A value is emitted each time the element intersects.\r\n   *\r\n   * This is private for now, but could be exposed as a public API\r\n   * to introduce additional (css) render effects to the UI.\r\n   */\r\n  private intersects(\r\n    element: HTMLElement,\r\n    options: IntersectionOptions = {}\r\n  ): Observable<boolean> {\r\n    const elementVisible$ = new Observable((observer) => {\r\n      const rootMargin = this.getRootMargin(options);\r\n      const intersectOptions = { rootMargin, threshold: options.threshold };\r\n      const intersectionObserver = new IntersectionObserver((entries) => {\r\n        observer.next(entries);\r\n      }, intersectOptions);\r\n      intersectionObserver.observe(element);\r\n      return () => {\r\n        intersectionObserver.disconnect();\r\n      };\r\n    }).pipe(\r\n      flatMap((entries: IntersectionObserverEntry[]) => entries),\r\n      map((entry: IntersectionObserverEntry) => entry.isIntersecting),\r\n      distinctUntilChanged()\r\n    );\r\n\r\n    return elementVisible$;\r\n  }\r\n\r\n  private getRootMargin(options: IntersectionOptions = {}): string {\r\n    if (options.rootMargin) {\r\n      return options.rootMargin;\r\n    }\r\n    const layoutConfig = this.config as LayoutConfig;\r\n    if (\r\n      layoutConfig.deferredLoading &&\r\n      layoutConfig.deferredLoading.intersectionMargin\r\n    ) {\r\n      return layoutConfig.deferredLoading.intersectionMargin;\r\n    }\r\n  }\r\n}\r\n","import { isPlatformServer } from '@angular/common';\r\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { DeferLoadingStrategy } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { LayoutConfig } from '../config/layout-config';\r\nimport { IntersectionOptions } from './intersection.model';\r\nimport { IntersectionService } from './intersection.service';\r\n\r\n/**\r\n * The defer loading serivce is used to defer loading of DOM elements\r\n * until the elements are required for the user experience.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeferLoaderService {\r\n  globalLoadStrategy: DeferLoadingStrategy;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    protected config: LayoutConfig,\r\n    protected intersectionService: IntersectionService\r\n  ) {\r\n    this.globalLoadStrategy = config.deferredLoading\r\n      ? config.deferredLoading.strategy\r\n      : DeferLoadingStrategy.INSTANT;\r\n  }\r\n\r\n  /**\r\n   * Defer loading till the element intersects the viewport.\r\n   *\r\n   * We evaluate whether we instantly load the element for different reasons:\r\n   * - we run in SSR mode\r\n   * - there's no global strategy given\r\n   * - the global loading strategy is set to INSTANT loading,\r\n   *   and the loading strategy in the given is not set to DEFER\r\n   * - the loading strategy in the given options is set to INSTANT\r\n   */\r\n  load(\r\n    element: HTMLElement,\r\n    options?: IntersectionOptions\r\n  ): Observable<boolean> {\r\n    if (this.shouldLoadInstantly((options || {}).deferLoading)) {\r\n      return of(true);\r\n    } else {\r\n      return this.intersectionService.isIntersected(element, options);\r\n    }\r\n  }\r\n\r\n  private shouldLoadInstantly(\r\n    elementLoadingStrategy: DeferLoadingStrategy\r\n  ): boolean {\r\n    return (\r\n      isPlatformServer(this.platformId) ||\r\n      elementLoadingStrategy === DeferLoadingStrategy.INSTANT ||\r\n      (elementLoadingStrategy !== DeferLoadingStrategy.DEFER &&\r\n        this.globalLoadStrategy === DeferLoadingStrategy.INSTANT)\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ComponentFactory,\r\n  ComponentRef,\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { DeferLoaderService } from '../../layout/loading/defer-loader.service';\r\nimport { IntersectionOptions } from '../../layout/loading/intersection.model';\r\nimport { OutletRendererService } from './outlet-renderer.service';\r\nimport { OutletPosition, USE_STACKED_OUTLETS } from './outlet.model';\r\nimport { OutletService } from './outlet.service';\r\n\r\n@Directive({\r\n  selector: '[cxOutlet]',\r\n})\r\nexport class OutletDirective implements OnDestroy, OnChanges {\r\n  private renderedTemplate = [];\r\n  public renderedComponents = new Map<\r\n    OutletPosition,\r\n    Array<ComponentRef<any> | EmbeddedViewRef<any>>\r\n  >();\r\n\r\n  @Input() cxOutlet: string;\r\n\r\n  @Input() cxOutletContext: any;\r\n\r\n  /**\r\n   * Defers loading options for the the templates of this outlet.\r\n   */\r\n  @Input() cxOutletDefer: IntersectionOptions;\r\n\r\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>(true);\r\n\r\n  subscription = new Subscription();\r\n\r\n  constructor(\r\n    private vcr: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private outletService: OutletService<\r\n      TemplateRef<any> | ComponentFactory<any>\r\n    >,\r\n    private deferLoaderService: DeferLoaderService,\r\n    private outletRendererService: OutletRendererService\r\n  ) {}\r\n\r\n  public render(): void {\r\n    this.vcr.clear();\r\n    this.renderedTemplate = [];\r\n    this.renderedComponents.clear();\r\n    this.subscription.unsubscribe();\r\n    this.subscription = new Subscription();\r\n\r\n    if (this.cxOutletDefer) {\r\n      this.deferLoading();\r\n    } else {\r\n      this.build();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.cxOutlet) {\r\n      this.render();\r\n      this.outletRendererService.register(this.cxOutlet, this);\r\n    }\r\n  }\r\n\r\n  private deferLoading(): void {\r\n    this.loaded.emit(false);\r\n    const hostElement = this.getHostElement(this.vcr.element.nativeElement);\r\n    // Although the deferLoaderService might emit only once, as long as the hostElement\r\n    // isn't being loaded, there's no value being emitted. Therefor we need to clean up\r\n    // the subscription on destroy.\r\n    this.subscription.add(\r\n      this.deferLoaderService\r\n        .load(hostElement, this.cxOutletDefer)\r\n        .subscribe(() => {\r\n          this.build();\r\n          this.loaded.emit(true);\r\n        })\r\n    );\r\n  }\r\n\r\n  private build() {\r\n    this.buildOutlet(OutletPosition.BEFORE);\r\n    this.buildOutlet(OutletPosition.REPLACE);\r\n    this.buildOutlet(OutletPosition.AFTER);\r\n  }\r\n\r\n  private buildOutlet(position: OutletPosition): void {\r\n    let templates: any[] = <any[]>(\r\n      this.outletService.get(this.cxOutlet, position, USE_STACKED_OUTLETS)\r\n    );\r\n\r\n    templates = templates?.filter((el) => !this.renderedTemplate.includes(el));\r\n\r\n    if (!templates && position === OutletPosition.REPLACE) {\r\n      templates = [this.templateRef];\r\n    }\r\n\r\n    // Just in case someone extended the `OutletService` and\r\n    // returns a singular object.\r\n    if (!Array.isArray(templates)) {\r\n      templates = [templates];\r\n    }\r\n\r\n    const components = [];\r\n    templates.forEach((obj) => {\r\n      const component = this.create(obj);\r\n      components.push(component);\r\n    });\r\n\r\n    this.renderedComponents.set(position, components);\r\n  }\r\n\r\n  private create(tmplOrFactory: any): ComponentRef<any> | EmbeddedViewRef<any> {\r\n    this.renderedTemplate.push(tmplOrFactory);\r\n\r\n    if (tmplOrFactory instanceof ComponentFactory) {\r\n      const component = this.vcr.createComponent(tmplOrFactory);\r\n      return component;\r\n    } else if (tmplOrFactory instanceof TemplateRef) {\r\n      const view = this.vcr.createEmbeddedView(\r\n        <TemplateRef<any>>tmplOrFactory,\r\n        {\r\n          $implicit: this.cxOutletContext,\r\n        }\r\n      );\r\n\r\n      // we do not know if content is created dynamically or not\r\n      // so we apply change detection anyway\r\n      view.markForCheck();\r\n      return view;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the closest `HtmlElement`, by iterating over the\r\n   * parent nodes of the given element.\r\n   *\r\n   * We avoid traversing the parent _elements_, as this is blocking\r\n   * ie11 implementations. One of the spare exclusions we make to not\r\n   * supporting ie11.\r\n   *\r\n   * @param element\r\n   */\r\n  private getHostElement(element: Node): HTMLElement {\r\n    if (element instanceof HTMLElement) {\r\n      return element;\r\n    }\r\n    return this.getHostElement(element.parentNode);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletService } from './outlet.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  providers: [OutletService],\n  exports: [OutletDirective],\n})\nexport class OutletModule {}\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  RendererFactory2,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport {\r\n  OutletPosition,\r\n  OutletService,\r\n} from '../../../cms-structure/outlet/index';\r\nimport { OutletRendererService } from '../../../cms-structure/outlet/outlet-renderer.service';\r\nimport { LaunchOutletDialog, LAUNCH_CALLER } from '../config/index';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OutletRenderStrategy extends LaunchRenderStrategy {\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2,\r\n    protected outletService: OutletService<ComponentFactory<any>>,\r\n    protected componentFactoryResolver: ComponentFactoryResolver,\r\n    protected outletRendererService: OutletRendererService\r\n  ) {\r\n    super(document, rendererFactory);\r\n  }\r\n\r\n  /**\r\n   * Renders the element in the configured outlet\r\n   *\r\n   * @param config\r\n   * @param caller\r\n   * @param vcr\r\n   */\r\n  render(\r\n    config: LaunchOutletDialog,\r\n    caller: LAUNCH_CALLER | string\r\n  ): Observable<ComponentRef<any>> {\r\n    if (this.shouldRender(caller, config)) {\r\n      const template = this.componentFactoryResolver.resolveComponentFactory(\r\n        config.component\r\n      );\r\n      this.outletService.add(\r\n        config.outlet,\r\n        template,\r\n        config.position ? config.position : OutletPosition.BEFORE\r\n      );\r\n      this.outletRendererService.render(config.outlet);\r\n      this.renderedCallers.push({ caller });\r\n\r\n      return this.outletRendererService.getOutletRef(config.outlet).pipe(\r\n        map((outletDirective) => {\r\n          const components = outletDirective.renderedComponents.get(\r\n            config.position ? config.position : OutletPosition.BEFORE\r\n          ) as ComponentRef<any>[];\r\n\r\n          return components\r\n            .reverse()\r\n            .find(\r\n              (component) => component.componentType === template.componentType\r\n            );\r\n        }),\r\n        tap((component) => {\r\n          if (config?.dialogType) {\r\n            this.applyClasses(component, config?.dialogType);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  hasMatch(config: LaunchOutletDialog) {\r\n    return Boolean(config.outlet);\r\n  }\r\n\r\n  remove(caller: LAUNCH_CALLER | string, config: LaunchOutletDialog): void {\r\n    const template = this.componentFactoryResolver.resolveComponentFactory(\r\n      config.component\r\n    );\r\n\r\n    this.outletService.remove(\r\n      config.outlet,\r\n      config.position ? config.position : OutletPosition.BEFORE,\r\n      template\r\n    );\r\n\r\n    super.remove(caller, config);\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable, RendererFactory2 } from '@angular/core';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { LaunchRoute, LAUNCH_CALLER } from '../config/index';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoutingRenderStrategy extends LaunchRenderStrategy {\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2,\r\n    protected routingService: RoutingService\r\n  ) {\r\n    super(document, rendererFactory);\r\n  }\r\n  /**\r\n   * Navigates to the route configured for the caller\r\n   */\r\n  render(config: LaunchRoute, _caller: LAUNCH_CALLER | string) {\r\n    this.routingService.go(config);\r\n  }\r\n\r\n  hasMatch(config: LaunchRoute) {\r\n    return Boolean(config.cxRoute);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\nimport { LayoutConfig } from '../config/layout-config';\r\nimport {\r\n  InlineRenderStrategy,\r\n  LaunchRenderStrategy,\r\n  OutletRenderStrategy,\r\n  RoutingRenderStrategy,\r\n} from './services/index';\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: LaunchRenderStrategy,\r\n      useExisting: OutletRenderStrategy,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: LaunchRenderStrategy,\r\n      useExisting: InlineRenderStrategy,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: LaunchRenderStrategy,\r\n      useExisting: RoutingRenderStrategy,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class LaunchDialogModule {\r\n  static forRoot(): ModuleWithProviders<LaunchDialogModule> {\r\n    return {\r\n      ngModule: LaunchDialogModule,\r\n      providers: [{ provide: LayoutConfig, useExisting: Config }],\r\n    };\r\n  }\r\n}\r\n","import { ElementRef, Injectable, ViewContainerRef } from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport {\r\n  LaunchDialogService,\r\n  LAUNCH_CALLER,\r\n} from '../../layout/launch-dialog/index';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AnonymousConsentLaunchDialogService {\r\n  constructor(protected launchDialogService: LaunchDialogService) {}\r\n\r\n  openDialog(\r\n    openElement?: ElementRef,\r\n    vcr?: ViewContainerRef\r\n  ): Observable<any> | undefined {\r\n    const component = this.launchDialogService.launch(\r\n      LAUNCH_CALLER.ANONYMOUS_CONSENT,\r\n      vcr\r\n    );\r\n\r\n    if (component) {\r\n      return combineLatest([\r\n        component,\r\n        this.launchDialogService.dialogClose,\r\n      ]).pipe(\r\n        filter(([, close]) => close && close !== undefined),\r\n        tap(([comp]) => {\r\n          openElement?.nativeElement.focus();\r\n          this.launchDialogService.clear(LAUNCH_CALLER.ANONYMOUS_CONSENT);\r\n          comp.destroy();\r\n        }),\r\n        map(([comp]) => comp)\r\n      );\r\n    }\r\n  }\r\n}\r\n","/** The element attribute used to store the focus state */\r\nexport const FOCUS_ATTR = 'data-cx-focus';\r\n/** The element attribute used to store the focus group state */\r\nexport const FOCUS_GROUP_ATTR = 'data-cx-focus-group';\r\n\r\nexport const enum MOVE_FOCUS {\r\n  NEXT = 1,\r\n  PREV = -1,\r\n}\r\n\r\n// tslint:disable-next-line: no-empty-interface\r\nexport interface BaseFocusConfig {}\r\n\r\nexport interface VisibleFocusConfig {\r\n  /**\r\n   * When set to true, the mouse-focus class is added to the host element,\r\n   * indicating that the element focus was not caused by the keyboard.\r\n   */\r\n  disableMouseFocus?: boolean;\r\n}\r\n\r\nexport interface BlockFocusConfig extends VisibleFocusConfig {\r\n  block?: boolean;\r\n}\r\n\r\nexport interface PersistFocusConfig extends BlockFocusConfig {\r\n  /**\r\n   * A key to maintain the focus of an element in case the component is\r\n   * recreated (which often is the case when an `*ngIf` or `*ngFor` is used).\r\n   */\r\n  key?: string;\r\n\r\n  /**\r\n   * Optional group identifier that can be used to persist the focus. This allows\r\n   * to have separate persisted focus available when the DOM is partially rebuild.\r\n   */\r\n  group?: string;\r\n}\r\n\r\nexport interface EscapeFocusConfig extends PersistFocusConfig {\r\n  focusOnEscape?: boolean;\r\n  /**\r\n   * Force an autofocus in case of double-escape\r\n   */\r\n  focusOnDoubleEscape?: boolean;\r\n}\r\n\r\nexport interface AutoFocusConfig extends EscapeFocusConfig {\r\n  /**\r\n   * Autofocus is enabled by default, and will try to focus an _autofocus_ element.\r\n   * In case the focus is explicitly set to `true`, the first accessible element\r\n   * is focussed in case there is no _autofocus_ element found.\r\n   * If the focus is set to false, autofocus will be disabled completely.\r\n   *\r\n   * If a string value is given, the autofocus will be restored based on the persisted\r\n   * focus group, which is driven by `PersistFocusConfig.key` and `PersistFocusConfig.group`.\r\n   *\r\n   * Defaults to `true`.\r\n   */\r\n  autofocus?: boolean | string;\r\n}\r\n\r\nexport interface TabFocusConfig extends AutoFocusConfig {\r\n  tab?: boolean | 'scroll' | string;\r\n}\r\n\r\n/**\r\n * The keyboard navigation (tab, shift-tab and up down keys) is _trapped_\r\n * for the nested focusable elements. This means that the focus can not\r\n * \"leave\" the elements. If the last element is focused, the keyboard will\r\n * navigate to the first element and visa versa.\r\n */\r\nexport interface TrapFocusConfig extends TabFocusConfig {\r\n  /** traps the focus */\r\n  trap?: boolean | 'start' | 'end';\r\n}\r\n\r\nexport interface LockFocusConfig extends TrapFocusConfig {\r\n  /**\r\n   * Indicates that the nested DOM is locked for keyboarding (`TAB`).\r\n   */\r\n  lock?: boolean;\r\n}\r\n\r\n// tslint:disable-next-line: no-empty-interface\r\nexport interface FocusConfig extends LockFocusConfig {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport abstract class BaseFocusService {}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { BaseFocusConfig } from '../keyboard-focus.model';\r\nimport { BaseFocusService } from './base-focus.service';\r\n\r\n/**\r\n * Abstract directive that provides a common interface for all focus directives:\r\n * - Block Focus\r\n * - Persist Focus\r\n * - Escape Focus\r\n * - Auto Focus\r\n * - Tab Focus\r\n * - Trap Focus\r\n * - Lock Focus\r\n */\r\n@Directive()\r\nexport abstract class BaseFocusDirective implements OnInit {\r\n  /**\r\n   * Optional configuration for the focus directive drives the behaviour of the keyboard\r\n   * focus directive.\r\n   */\r\n  protected config: BaseFocusConfig;\r\n\r\n  /**\r\n   * A default config can be provided for each directive if a specific focus directive\r\n   * is used directly. i.e. `<div cxAutoFocus></div>`\r\n   */\r\n  protected defaultConfig: BaseFocusConfig = {};\r\n\r\n  @Input() @HostBinding('attr.tabindex') tabindex: number;\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected service: BaseFocusService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.setDefaultConfiguration();\r\n    this.requiredTabindex = -1;\r\n  }\r\n\r\n  /**\r\n   * Override the (input) config if it undefined or an empty string, with the\r\n   * `defaultConfig`. The `defaultConfig` might be specified for each directive\r\n   * differently. If a specific directive is used (i.e. `cxAutoFocus`), the\r\n   * specific (inherited) defaultConfig will be used.\r\n   */\r\n  protected setDefaultConfiguration(): void {\r\n    if ((!this.config || this.config === '') && this.defaultConfig) {\r\n      this.config = this.defaultConfig;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Helper method to return the host element for the directive\r\n   * given by the `elementRef`.\r\n   */\r\n  protected get host(): HTMLElement {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Force a tabindex on the host element if it is _requried_ to make the element\r\n   * focusable. If the element is focusable by nature or by a given tabindex, the\r\n   * `tabindex` is not applied.\r\n   *\r\n   * Buttons, active links, etc. do no need an explicit tabindex to receive focus.\r\n   */\r\n  protected set requiredTabindex(tabindex: number) {\r\n    if (this.requiresExplicitTabIndex) {\r\n      this.tabindex = tabindex;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if the host element does not have a tabindex defined\r\n   * and it also doesn't get focus by browsers nature (i.e. button or\r\n   * active link).\r\n   */\r\n  protected get requiresExplicitTabIndex(): boolean {\r\n    return (\r\n      this.tabindex === undefined &&\r\n      ['button', 'input', 'select', 'textarea'].indexOf(\r\n        this.host.tagName.toLowerCase()\r\n      ) === -1 &&\r\n      !(\r\n        this.host.tagName === 'A' &&\r\n        (this.host.hasAttribute('href') || this.host.hasAttribute('routerlink'))\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Directive, HostBinding, HostListener } from '@angular/core';\r\nimport { BaseFocusDirective } from '../base/base-focus.directive';\r\nimport { VisibleFocusConfig } from '../keyboard-focus.model';\r\n\r\n/**\r\n * Directive implementation that adds a CSS class to the host element\r\n * when the moused is used to focus an element. As soon as the keyboard\r\n * is used, the class is removed.\r\n */\r\n@Directive() // selector: '[cxVisibleFocus]'\r\nexport class VisibleFocusDirective extends BaseFocusDirective {\r\n  protected defaultConfig: VisibleFocusConfig = { disableMouseFocus: true };\r\n\r\n  // @Input('cxVisibleFocus')\r\n  protected config: VisibleFocusConfig;\r\n\r\n  /** controls a polyfill class for the lacking focus-visible feature */\r\n  @HostBinding('class.mouse-focus') mouseFocus = false;\r\n\r\n  @HostListener('mousedown') handleMousedown() {\r\n    if (this.shouldFocusVisible) {\r\n      this.mouseFocus = true;\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown') handleKeydown() {\r\n    if (this.shouldFocusVisible) {\r\n      this.mouseFocus = false;\r\n    }\r\n  }\r\n\r\n  protected get shouldFocusVisible(): boolean {\r\n    return this.config?.disableMouseFocus;\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit } from '@angular/core';\r\nimport { BaseFocusService } from '../base/base-focus.service';\r\nimport { BlockFocusConfig } from '../keyboard-focus.model';\r\nimport { VisibleFocusDirective } from '../visible/visible-focus.directive';\r\n\r\n@Directive()\r\n// { selector: '[cxBlockFocus]' }\r\nexport class BlockFocusDirective extends VisibleFocusDirective\r\n  implements OnInit {\r\n  protected defaultConfig: BlockFocusConfig = { block: true };\r\n\r\n  // @Input('cxBlockFocus')\r\n  protected config: BlockFocusConfig = {};\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: BaseFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    if (this.config.block) {\r\n      this.tabindex = -1;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseFocusService } from '../base/base-focus.service';\r\nimport { FOCUS_GROUP_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\r\n\r\nconst GLOBAL_GROUP = '_g_';\r\n\r\n/**\r\n * Shared service to persist the focus for an element or a group\r\n * of elements. The persisted element focus can be used to persist\r\n * the focus for a DOM tree, so that the focus remains after a repaint\r\n * or reoccurs when a DOM tree is \"unlocked\".\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PersistFocusService extends BaseFocusService {\r\n  // this is going to fail as we have sub services. They will al have their own map.\r\n  // We must bring this to a singleton map.\r\n  protected focus = new Map<string, string>();\r\n\r\n  get(group?: string): string {\r\n    return this.focus.get(group || GLOBAL_GROUP);\r\n  }\r\n\r\n  /**\r\n   * Persist the keyboard focus state for the given key. The focus is stored globally\r\n   * or for the given group.\r\n   */\r\n  set(key: string, group?: string) {\r\n    if (key) {\r\n      this.focus.set(group || GLOBAL_GROUP, key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears the persisted keyboard focus state globally or for the given group.\r\n   */\r\n  clear(group?: string) {\r\n    this.focus.delete(group || GLOBAL_GROUP);\r\n  }\r\n\r\n  /**\r\n   * Returns the group for the host element based on the configured group or\r\n   * by the `data-cx-focus-group` attribute stored on the host.\r\n   */\r\n  getPersistenceGroup(host: HTMLElement, config?: PersistFocusConfig): string {\r\n    return config?.group ? config.group : host.getAttribute(FOCUS_GROUP_ATTR);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { BlockFocusDirective } from '../block/block-focus.directive';\r\nimport { FOCUS_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\r\nimport { PersistFocusService } from './persist-focus.service';\r\n\r\n/**\r\n * Directive that provides persistence of the focused state. This is useful\r\n * when a group of focusable elements got refocused or even recreated. That\r\n * happens often when the DOM is constructed with an `*ngIf` or `*ngFor`.\r\n *\r\n * The focus state is based on a configured _key_, which can be passed in the\r\n * config input, either by using a string primitive or `PersistFocusConfig.key`:\r\n *\r\n * ```html\r\n * <button cxPersistFocus=\"myKey\"></button>\r\n * <button cxFocus=\"myKey\"></button>\r\n * <button [cxFocus]=\"{{key:'myKey'}\"></button>\r\n * ```\r\n *\r\n * The focus state can be part of a focus _group_, so that the state is shared\r\n * and remember for the given group. In order to detect the persistence for a\r\n * given element, we store the persistence key as a data attribute (`data-cx-focus`):\r\n *\r\n * ```html\r\n * <button data-cx-focus=\"myKey\"></button>\r\n * ```\r\n *\r\n * Other keyboard focus directives can read the key to understand whether the element\r\n * should retrieve focus.\r\n *\r\n */\r\n@Directive() // selector: '[cxPersistFocus]',\r\nexport class PersistFocusDirective extends BlockFocusDirective\r\n  implements OnInit, AfterViewInit {\r\n  protected defaultConfig: PersistFocusConfig = {};\r\n\r\n  /**\r\n   * The persistence key can be passed directly or through the `FocusConfig.key`.\r\n   * While this could be considered a global key, the likeliness of conflicts\r\n   * is very small since the key is cleared when the focus is changed.\r\n   */\r\n  // @Input('cxPersistFocus')\r\n  protected config: PersistFocusConfig = {};\r\n\r\n  /**\r\n   * The persistence key is maintained in an element attribute for other\r\n   * implementations. This is needed to ensure that we can resolve the focus\r\n   * state in case of a repaint.\r\n   */\r\n  @HostBinding(`attr.${FOCUS_ATTR}`) attr: string;\r\n\r\n  @HostListener('focus', ['$event'])\r\n  handleFocus(event?: KeyboardEvent) {\r\n    this.service.set(this.key, this.group);\r\n\r\n    event?.preventDefault();\r\n    event?.stopPropagation();\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: PersistFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.attr = this.key ? this.key : undefined;\r\n  }\r\n\r\n  protected setDefaultConfiguration() {\r\n    if (typeof this.config === 'string' && this.config !== '') {\r\n      this.config = { key: this.config };\r\n    }\r\n    super.setDefaultConfiguration();\r\n  }\r\n\r\n  /**\r\n   * Focus the element explicitly if it was focused before.\r\n   */\r\n  ngAfterViewInit() {\r\n    if (this.isPersisted) {\r\n      this.host.focus({ preventScroll: true });\r\n    }\r\n  }\r\n\r\n  protected get isPersisted(): boolean {\r\n    return !!this.key && this.service.get(this.group) === this.key;\r\n  }\r\n\r\n  /**\r\n   * Returns the key for the host element, which is used to persist the\r\n   * focus state. This is useful in cases where the DOM is rebuild.\r\n   */\r\n  protected get key(): string {\r\n    return (this.config as PersistFocusConfig)?.key;\r\n  }\r\n\r\n  /**\r\n   * returns the persistence group (if any) for the focusable elements.\r\n   */\r\n  protected get group(): string {\r\n    return this.service.getPersistenceGroup(\r\n      this.host,\r\n      this.config as PersistFocusConfig\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AutoFocusConfig } from '../keyboard-focus.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SelectFocusUtility {\r\n  /**\r\n   * Query selectors used to query focusable child elements of the host element.\r\n   * The selectors are supplemented with `:not([disabled])` and `:not([hidden])`.\r\n   */\r\n  protected focusableSelectors: string[] = [\r\n    'a[href]',\r\n    'button',\r\n    '[tabindex]',\r\n    'input',\r\n    'select',\r\n    'textarea',\r\n  ];\r\n\r\n  // like to leave out the following as we don't use it, and make this list exensible.\r\n  //   `[contentEditable=true]`, // very unlikely to suport as we're not a business tool\r\n  //   `iframe`, // we really don't like iframes...\r\n  //   `area[href]`, // very debatable!\r\n\r\n  protected focusableSelectorSuffix = ':not([disabled]):not([hidden])';\r\n\r\n  query(host: HTMLElement, selector: string): HTMLElement[] {\r\n    if (!selector || selector === '') {\r\n      return [];\r\n    }\r\n    return Array.from(\r\n      host.querySelectorAll(selector) as NodeListOf<HTMLElement>\r\n    );\r\n  }\r\n\r\n  findFirstFocusable(\r\n    host: HTMLElement,\r\n    config: AutoFocusConfig = { autofocus: true }\r\n  ): HTMLElement {\r\n    const selector =\r\n      typeof config?.autofocus === 'string' ? config.autofocus : '[autofocus]';\r\n    // fallback to first focusable\r\n    return (\r\n      this.query(host, selector).find((el) => !this.isHidden(el)) ||\r\n      this.findFocusable(host).find((el) => Boolean(el))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * returns all focusable child elements of the host element. The element selectors\r\n   * are build from the `focusableSelectors`.\r\n   *\r\n   * @param host the `HTMLElement` used to query focusable elements\r\n   * @param locked indicates whether inactive (`tabindex=\"-1\"`) focusable elements should be returned\r\n   * @param invisible indicates whether hidden focusable elements should be returned\r\n   */\r\n  findFocusable(\r\n    host: HTMLElement,\r\n    locked = false,\r\n    invisible = false\r\n  ): HTMLElement[] {\r\n    let suffix = this.focusableSelectorSuffix;\r\n    if (!locked) {\r\n      suffix += `:not([tabindex='-1'])`;\r\n    }\r\n    const selector = this.focusableSelectors\r\n      .map((s) => (s += suffix))\r\n      .join(',');\r\n    return this.query(host, selector).filter((el) =>\r\n      !invisible ? !this.isHidden(el) : Boolean(el)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the element is hidden by CSS. There are various CSS rules and\r\n   * HTML structures which can lead to an hidden or invisible element. An `offsetParent`\r\n   * of null indicates that the element or any of it's decendants is hidden (`display:none`).\r\n   *\r\n   * Oother techniques use the visibility (`visibility: hidden`), opacity (`opacity`) or\r\n   * phyisical location on the element itself or any of it's anchestor elements. Those\r\n   * technique require to work with the _computed styles_, which will cause a performance\r\n   * downgrade. We don't do this in the standard implementaton.\r\n   */\r\n  protected isHidden(el: HTMLElement): boolean {\r\n    return el.offsetParent === null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\r\nimport { PersistFocusService } from '../persist/persist-focus.service';\r\nimport { SelectFocusUtility } from '../services/select-focus.util';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EscapeFocusService extends PersistFocusService {\r\n  constructor(protected selectFocusUtil: SelectFocusUtility) {\r\n    super();\r\n  }\r\n\r\n  shouldFocus(config: EscapeFocusConfig): boolean {\r\n    return !!config?.focusOnEscape;\r\n  }\r\n\r\n  handleEscape(\r\n    host: HTMLElement,\r\n    config: EscapeFocusConfig,\r\n    event: KeyboardEvent\r\n  ): void {\r\n    if (this.shouldFocus(config)) {\r\n      if (host !== event.target) {\r\n        host.focus({ preventScroll: true });\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      } else {\r\n        if (config?.focusOnDoubleEscape) {\r\n          this.selectFocusUtil\r\n            .findFirstFocusable(host, { autofocus: true })\r\n            ?.focus();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\r\nimport { PersistFocusDirective } from '../persist/persist-focus.directive';\r\nimport { EscapeFocusService } from './escape-focus.service';\r\n\r\n/**\r\n * Directive to focus the host element whenever the `escape` key is captured.\r\n * UiEvents bubble up by nature, which is why the `cxEscGroup` can be used\r\n * on a tree of elements. Each time the escape key is used, the focus will\r\n * move up in the DOM tree.\r\n *\r\n */\r\n@Directive() // selector: '[cxEscFocus]',\r\nexport class EscapeFocusDirective extends PersistFocusDirective\r\n  implements OnInit {\r\n  protected defaultConfig: EscapeFocusConfig = { focusOnEscape: true };\r\n\r\n  // @Input('cxEscFocus')\r\n  protected config: EscapeFocusConfig;\r\n\r\n  @Output() esc = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   * Handles the escape key event.\r\n   * @param event the native keyboard event which contains the escape keydown event\r\n   */\r\n  @HostListener('keydown.escape', ['$event'])\r\n  handleEscape(event: KeyboardEvent): void {\r\n    if (this.service.shouldFocus(this.config)) {\r\n      this.service.handleEscape(this.host, this.config, event);\r\n    }\r\n    this.esc.emit(this.service.shouldFocus(this.config));\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: EscapeFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.service.shouldFocus(this.config)) {\r\n      this.requiredTabindex = -1;\r\n    }\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EscapeFocusService } from '../escape/escape-focus.service';\r\nimport {\r\n  AutoFocusConfig,\r\n  FOCUS_ATTR,\r\n  PersistFocusConfig,\r\n} from '../keyboard-focus.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AutoFocusService extends EscapeFocusService {\r\n  /**\r\n   * Returns the first focusable child element of the host element.\r\n   */\r\n  findFirstFocusable(\r\n    host: HTMLElement,\r\n    config: AutoFocusConfig = { autofocus: true }\r\n  ): HTMLElement {\r\n    if (config?.autofocus === ':host') {\r\n      return host;\r\n    } else if (this.hasPersistedFocus(host, config)) {\r\n      return this.getPersisted(host, this.getPersistenceGroup(host, config));\r\n    } else {\r\n      return this.selectFocusUtil.findFirstFocusable(host, config) || host;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates whether any of the focusabe child elements is focused.\r\n   */\r\n  hasPersistedFocus(host: HTMLElement, config: PersistFocusConfig): boolean {\r\n    return !!this.getPersisted(host, this.getPersistenceGroup(host, config));\r\n  }\r\n\r\n  /**\r\n   * Returns the element that has a persisted focus state.\r\n   *\r\n   * @param host the `HTMLElement` used to query for focusable children\r\n   * @param group the optional group for the persistent state, to separate different focus\r\n   *   groups and remain the persistence\r\n   */\r\n  protected getPersisted(host: HTMLElement, group?: string): HTMLElement {\r\n    if (!this.get(group)) {\r\n      return;\r\n    }\r\n    const focussed = Array.from(\r\n      host.querySelectorAll(\r\n        `[${FOCUS_ATTR}='${this.get(group)}']`\r\n      ) as NodeListOf<HTMLElement>\r\n    );\r\n    return focussed.length > 0 ? focussed[0] : null;\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\r\nimport { EscapeFocusDirective } from '../escape/escape-focus.directive';\r\nimport { AutoFocusConfig } from '../keyboard-focus.model';\r\nimport { AutoFocusService } from './auto-focus.service';\r\n\r\n/**\r\n * Directive that focus the first nested _focusable_ element based on state and configuration:\r\n *\r\n * 1. focusable element that was left in a focused state (aka _persisted_ focus)\r\n * 2. focusable element selected by configured CSS selector (i.e. 'button[type=submit]')\r\n * 3. focusable element marked with the native HTML5 `autofocus` attribute\r\n * 4. first focusable element\r\n * 5. the host element, in case the configured CSS selector is `:host`.\r\n *\r\n * Example configurations:\r\n *\r\n * `<div cxAutoFocus>[...]</div>`\r\n *\r\n * `<div [cxAutoFocus]=\"{autofocus: false}\">[...]</div>`\r\n *\r\n * `<div [cxAutoFocus]=\"{autofocus: 'button.active'}\">[...]</div>`\r\n *\r\n * `<div [cxAutoFocus]=\"{autofocus: ':host'}\">[...]</div>`\r\n *\r\n */\r\n@Directive() // selector: '[cxAutoFocus]'\r\nexport class AutoFocusDirective extends EscapeFocusDirective\r\n  implements AfterViewInit {\r\n  /** The AutoFocusDirective will be using autofocus by default  */\r\n  protected defaultConfig: AutoFocusConfig = { autofocus: true };\r\n\r\n  // @Input('cxAutoFocus')\r\n  protected config: AutoFocusConfig;\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: AutoFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  /**\r\n   * Focus the element explicitly if it was focussed before.\r\n   */\r\n  ngAfterViewInit(): void {\r\n    if (this.shouldAutofocus) {\r\n      this.handleFocus();\r\n    }\r\n    if (!this.shouldAutofocus || this.hasPersistedFocus) {\r\n      super.ngAfterViewInit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mimic the focus without setting the actual focus on the host. The first\r\n   * focusable child element will be focussed.\r\n   */\r\n  handleFocus(event?: KeyboardEvent) {\r\n    if (this.shouldAutofocus) {\r\n      if (!event?.target || event.target === this.host) {\r\n        this.firstFocusable?.focus();\r\n      } else {\r\n        (event.target as HTMLElement).focus();\r\n      }\r\n    }\r\n    super.handleFocus(event);\r\n  }\r\n\r\n  /**\r\n   * Helper function to get the first focusable child element\r\n   */\r\n  protected get hasPersistedFocus() {\r\n    return this.service.hasPersistedFocus(this.host, this.config);\r\n  }\r\n\r\n  /**\r\n   * Helper function to indicate whether we should use autofocus for the\r\n   * child elements.\r\n   */\r\n  protected get shouldAutofocus(): boolean {\r\n    return !!this.config?.autofocus;\r\n  }\r\n\r\n  /**\r\n   * Helper function to get the first focusable child element.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private get firstFocusable(): HTMLElement {\r\n    return this.service.findFirstFocusable(this.host, this.config);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AutoFocusService } from '../autofocus/auto-focus.service';\r\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TabFocusService extends AutoFocusService {\r\n  /**\r\n   * Moves to the next (or previous) tab.\r\n   */\r\n  moveTab(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig,\r\n    increment: MOVE_FOCUS,\r\n    event: KeyboardEvent\r\n  ): void {\r\n    if (config?.tab) {\r\n      const next =\r\n        config.tab === 'scroll'\r\n          ? this.findNextScrollable(host, config, increment)\r\n          : this.findNext(host, config, increment);\r\n\r\n      next?.focus();\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * builds out virtual slides out of the full scrollable area, to allow\r\n   * for maximum flexibility for the underlying layout without using hardcoded\r\n   * slide sizes.\r\n   */\r\n  protected findNextScrollable(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig,\r\n    increment: MOVE_FOCUS\r\n  ): HTMLElement {\r\n    const active = this.getActiveChild(host, config);\r\n\r\n    if (!active) {\r\n      return;\r\n    }\r\n    // slide count\r\n    const virtualSlideCount = Math.round(host.scrollWidth / host.clientWidth);\r\n\r\n    // find current virtual slide\r\n    const currentVirtualSlide = Math.round(\r\n      active.offsetLeft / (host.scrollWidth / virtualSlideCount)\r\n    );\r\n\r\n    let nextVirtualSlide = currentVirtualSlide + increment;\r\n    if (\r\n      increment === MOVE_FOCUS.NEXT &&\r\n      nextVirtualSlide >= virtualSlideCount\r\n    ) {\r\n      nextVirtualSlide = 0;\r\n    }\r\n    if (increment === MOVE_FOCUS.PREV && nextVirtualSlide < 0) {\r\n      nextVirtualSlide = virtualSlideCount - 1;\r\n    }\r\n\r\n    const firstItemOnNextSlide = this.getChildren(host, config)?.find(\r\n      (tab) =>\r\n        tab.offsetLeft >=\r\n        (host.scrollWidth / virtualSlideCount) * nextVirtualSlide\r\n    );\r\n\r\n    return firstItemOnNextSlide;\r\n  }\r\n\r\n  protected findNext(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig,\r\n    increment: MOVE_FOCUS\r\n  ): HTMLElement {\r\n    const childs = this.getChildren(host, config);\r\n    let activeIndex = childs?.findIndex(\r\n      (c) => c === this.getActiveChild(host, config)\r\n    );\r\n\r\n    if (!activeIndex || activeIndex === -1) {\r\n      activeIndex = 0;\r\n    }\r\n    activeIndex += increment;\r\n\r\n    if (increment === MOVE_FOCUS.NEXT && activeIndex >= childs?.length) {\r\n      activeIndex = childs.length - 1;\r\n    }\r\n    if (increment === MOVE_FOCUS.PREV && activeIndex < 0) {\r\n      activeIndex = 0;\r\n    }\r\n    return childs ? childs[activeIndex] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Returns the active focusable child element. If there's no active\r\n   * focusable child element, the first focusable child is returned.\r\n   */\r\n  protected getActiveChild(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig\r\n  ): HTMLElement {\r\n    const persisted = this.getPersisted(host, config?.group);\r\n    if (persisted) {\r\n      return persisted;\r\n    }\r\n    const children = this.getChildren(host, config);\r\n    let index = children.findIndex((tab) => this.isActive(tab));\r\n    if (!index || index === -1) {\r\n      index = 0;\r\n    }\r\n    return children[index];\r\n  }\r\n\r\n  protected getChildren(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig\r\n  ): HTMLElement[] {\r\n    if (typeof config.tab === 'string' && config.tab !== 'scroll') {\r\n      return this.selectFocusUtil.query(host, config.tab);\r\n    } else {\r\n      return this.findFocusable(host, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns all focusable child elements of the host element.\r\n   *\r\n   * @param host The host element is used to query child focusable elements.\r\n   * @param locked Indicates if locked elements (tabindex=-1) should be returned, defaults to false.\r\n   * @param invisible Indicates if invisible child elements should be returned, defaults to false.\r\n   */\r\n  findFocusable(\r\n    host: HTMLElement,\r\n    locked = false,\r\n    invisible = false\r\n  ): HTMLElement[] {\r\n    return this.selectFocusUtil.findFocusable(host, locked, invisible);\r\n  }\r\n\r\n  protected isActive(el: HTMLElement): boolean {\r\n    const child = document.activeElement;\r\n    const selector = child.tagName;\r\n\r\n    return (\r\n      el === child ||\r\n      !!Array.from(el.querySelectorAll(selector)).find((e) => e === child)\r\n    );\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\nimport { AutoFocusDirective } from '../autofocus/auto-focus.directive';\r\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\r\nimport { TabFocusService } from './tab-focus.service';\r\n\r\n/**\r\n * Directive to move the focus of (\"locked\") child elements. This is useful\r\n * for a nested list of tabs, carousel slides or any group of elements that\r\n * requires horizontal navigation.\r\n */\r\n@Directive() // selector: '[cxTabFocus]'\r\nexport class TabFocusDirective extends AutoFocusDirective {\r\n  /** `tab` defaults to true if the directive `cxTabFocus` is used. */\r\n  protected defaultConfig: TabFocusConfig = { tab: true };\r\n\r\n  // @Input('cxTabFocus')\r\n  protected config: TabFocusConfig = {};\r\n\r\n  @HostListener('keydown.arrowRight', ['$event'])\r\n  handleNextTab(event: KeyboardEvent) {\r\n    if (this.config?.tab) {\r\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.NEXT, event);\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown.arrowLeft', ['$event'])\r\n  handlePreviousTab(event: KeyboardEvent) {\r\n    if (this.config?.tab) {\r\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.PREV, event);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: TabFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\r\nimport { TabFocusService } from '../tab/tab-focus.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrapFocusService extends TabFocusService {\r\n  /**\r\n   * Indicates whether any of the child elements of the host are focusable.\r\n   *\r\n   * @param host `HTMLElement` that is used to query the focusable elements.\r\n   */\r\n  hasFocusableChildren(host: HTMLElement): boolean {\r\n    return this.findFocusable(host).length > 0;\r\n  }\r\n\r\n  /**\r\n   * Focus the next or previous element of all available focusable elements.\r\n   * The focus is _trapped_ in case there's no next or previous available element.\r\n   * The focus will automatically move the start or end of the list.\r\n   */\r\n  moveFocus(\r\n    host: HTMLElement,\r\n    config: TrapFocusConfig,\r\n    increment: MOVE_FOCUS,\r\n    event: UIEvent\r\n  ): void {\r\n    const focusable: HTMLElement[] = this.findFocusable(host);\r\n\r\n    let index = focusable.findIndex((v) => v === event.target) + increment;\r\n\r\n    const shouldMoveFocus =\r\n      (index >= 0 && index < focusable.length) ||\r\n      (index < 0 && this.getTrapStart(config.trap)) ||\r\n      (index >= focusable.length && this.getTrapEnd(config.trap));\r\n\r\n    if (shouldMoveFocus) {\r\n      if (index >= focusable.length) {\r\n        index = 0;\r\n      }\r\n      if (index < 0) {\r\n        index = focusable.length - 1;\r\n      }\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      const el = focusable[index];\r\n\r\n      el.focus();\r\n    }\r\n  }\r\n\r\n  protected getTrapStart(trap: boolean | 'start' | 'end'): boolean {\r\n    return trap === true || trap === 'start';\r\n  }\r\n\r\n  protected getTrapEnd(trap: boolean | 'start' | 'end'): boolean {\r\n    return trap === true || trap === 'end';\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, OnInit } from '@angular/core';\r\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\r\nimport { TabFocusDirective } from '../tab/tab-focus.directive';\r\nimport { TrapFocusService } from './trap-focus.service';\r\n\r\n/**\r\n * Directive that keeps the focus inside the focussable child elements,\r\n * also known as a _focus trap_.\r\n */\r\n@Directive() // selector: '[cxTrapFocus]'\r\nexport class TrapFocusDirective extends TabFocusDirective implements OnInit {\r\n  protected defaultConfig: TrapFocusConfig = { trap: true };\r\n\r\n  // @Input('cxTrapFocus')\r\n  protected config: TrapFocusConfig = {};\r\n\r\n  @HostListener('keydown.arrowdown', ['$event'])\r\n  @HostListener('keydown.tab', ['$event'])\r\n  handleTrapDown = (event: KeyboardEvent) => {\r\n    if (!!this.config.trap) {\r\n      this.moveFocus(event, MOVE_FOCUS.NEXT);\r\n    }\r\n  };\r\n\r\n  @HostListener('keydown.arrowup', ['$event'])\r\n  @HostListener('keydown.shift.tab', ['$event'])\r\n  handleTrapUp = (event: KeyboardEvent) => {\r\n    if (!!this.config.trap) {\r\n      this.moveFocus(event, MOVE_FOCUS.PREV);\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: TrapFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  /**\r\n   * Moves the focus of the element reference up or down, depending on the increment.\r\n   * The focus of the element is trapped to avoid it from going out of the group.\r\n   *\r\n   * @param event UIEvent that is used to get the target element. The event is blocked\r\n   *   from standard execution and further bubbling.\r\n   * @param increment indicates whether the next or previous is focussed.\r\n   */\r\n  protected moveFocus(event: UIEvent, increment: number) {\r\n    if (this.service.hasFocusableChildren(this.host)) {\r\n      this.service.moveFocus(\r\n        this.host,\r\n        this.config,\r\n        increment,\r\n        event as UIEvent\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TrapFocusService } from '../trap/trap-focus.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LockFocusService extends TrapFocusService {}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { FOCUS_GROUP_ATTR, LockFocusConfig } from '../keyboard-focus.model';\r\nimport { TrapFocusDirective } from '../trap/trap-focus.directive';\r\nimport { LockFocusService } from './lock-focus.service';\r\n\r\n/**\r\n * Focusable elements exclude hidden elements by default, but this contradicts with\r\n * unlocking (hidden) elements.\r\n */\r\nconst UNLOCK_HIDDEN_ELEMENTS = true;\r\n/**\r\n * Directive that adds persistence for focussed element in case\r\n * the elements are being rebuild. This happens often when change\r\n * detection kicks in because of new data set from the backend.\r\n */\r\n@Directive() // selector: '[cxLockFocus]'\r\nexport class LockFocusDirective extends TrapFocusDirective\r\n  implements OnInit, AfterViewInit {\r\n  protected defaultConfig: LockFocusConfig = { lock: true };\r\n\r\n  // @Input('cxLockFocus')\r\n  protected config: LockFocusConfig = {};\r\n\r\n  /**\r\n   * Indicates that the host is configured to use locking. This is available as a\r\n   * CSS class `focus-lock`.\r\n   */\r\n  @HostBinding('class.focus-lock') shouldLock: boolean;\r\n\r\n  /**\r\n   * Indicates that the host is locked. This is available as a CSS class `is-locked`.\r\n   */\r\n  @HostBinding('class.is-locked') isLocked: boolean;\r\n\r\n  /**\r\n   * Emits an event when the host is unlocked.\r\n   */\r\n  @Output() unlock = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   * When the user selects enter or space, the focusable childs are\r\n   * unlocked, which means that the tabindex is set to 0.\r\n   */\r\n  @HostListener('keydown.enter', ['$event'])\r\n  @HostListener('keydown.space', ['$event'])\r\n  handleEnter(event: KeyboardEvent) {\r\n    if (this.shouldLock && this.host === (event.target as HTMLElement)) {\r\n      this.unlockFocus(event);\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * In case any of the children elements is touched by the mouse,\r\n   * we unlock the group to not break the mouse-experience.\r\n   */\r\n  @HostListener('click', ['$event'])\r\n  handleClick(event: UIEvent): void {\r\n    if (this.shouldLock && this.isLocked) {\r\n      this.unlockFocus(event);\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: LockFocusService,\r\n    protected renderer: Renderer2\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  protected lockFocus() {\r\n    this.addTabindexToChildren(-1);\r\n  }\r\n\r\n  protected unlockFocus(event?: UIEvent) {\r\n    this.unlock.emit(true);\r\n    this.addTabindexToChildren(0);\r\n    // we focus the host if the event was triggered from a child\r\n    if (event?.target === this.host) {\r\n      // we wait a few milliseconds, mainly because firefox will otherwise apply\r\n      // the mouse event on the new focused child element\r\n      setTimeout(() => {\r\n        super.handleFocus(event as KeyboardEvent);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.shouldLock = this.config?.lock;\r\n\r\n    if (this.shouldLock) {\r\n      this.tabindex = 0;\r\n\r\n      // Locked elements will be set to `autofocus` by default if it's not\r\n      // been configured. This will ensure that autofocus kicks in upon unlock.\r\n      if (!this.config.hasOwnProperty('autofocus')) {\r\n        this.config.autofocus = true;\r\n      }\r\n      // Locked elements will be set to `focusOnEscape` by default if it's not\r\n      // been configured. This will ensure that  the host gets locked again when\r\n      // `escape` is pressed.\r\n      if (!this.config.hasOwnProperty('focusOnEscape')) {\r\n        this.config.focusOnEscape = !(this.config?.focusOnEscape === false);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.shouldLock) {\r\n      /**\r\n       * If the component hosts a group of focusable children elements,\r\n       * we persist the group key to the children, so that they can taken this\r\n       * into account when they persist their focus state.\r\n       */\r\n      if (!!this.group) {\r\n        this.service.findFocusable(this.host).forEach((el) =>\r\n          // we must do this in after view init as\r\n          this.renderer.setAttribute(el, FOCUS_GROUP_ATTR, this.group)\r\n        );\r\n      }\r\n\r\n      if (this.shouldAutofocus) {\r\n        this.handleFocus();\r\n      }\r\n    }\r\n    super.ngAfterViewInit();\r\n  }\r\n\r\n  handleFocus(event?: KeyboardEvent): void {\r\n    if (this.shouldLock) {\r\n      if (this.shouldUnlockAfterAutofocus(event)) {\r\n        // Delay unlocking in case the host is using `ChangeDetectionStrategy.Default`\r\n        setTimeout(() => this.unlockFocus(event));\r\n      } else {\r\n        setTimeout(() => this.lockFocus());\r\n        event?.stopPropagation();\r\n        return;\r\n      }\r\n    }\r\n    super.handleFocus(event);\r\n  }\r\n\r\n  handleEscape(event: KeyboardEvent): void {\r\n    if (this.shouldLock) {\r\n      this.service.clear(this.config.group);\r\n    }\r\n    super.handleEscape(event);\r\n  }\r\n\r\n  /**\r\n   * When the handleFocus is called without an actual event, it's coming from Autofocus.\r\n   * In this case we unlock the focusable children in case there's a focusable child that\r\n   * was unlocked before.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private shouldUnlockAfterAutofocus(event?: KeyboardEvent) {\r\n    return !event && this.service.hasPersistedFocus(this.host, this.config);\r\n  }\r\n\r\n  /**\r\n   * Add the tabindex attribute to the focusable children elements\r\n   */\r\n  protected addTabindexToChildren(i = 0): void {\r\n    if (this.shouldLock) {\r\n      this.isLocked = i === -1;\r\n      if (!(this.hasFocusableChildren && i === 0) || i === 0) {\r\n        this.focusable.forEach((el) =>\r\n          this.renderer.setAttribute(el, 'tabindex', i.toString())\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Utility method, returns all focusable children for the host element.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private get hasFocusableChildren(): boolean {\r\n    return this.service.hasFocusableChildren(this.host);\r\n  }\r\n\r\n  /**\r\n   * Returns the focusable children of the host element. If the host element\r\n   * is configured to be locked, the query is restricted to child elements\r\n   * with a tabindex !== `-1`.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private get focusable(): HTMLElement[] {\r\n    return this.service.findFocusable(\r\n      this.host,\r\n      this.shouldLock,\r\n      UNLOCK_HIDDEN_ELEMENTS\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LockFocusService } from '../lock/lock-focus.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class KeyboardFocusService extends LockFocusService {}\r\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { FocusConfig } from './keyboard-focus.model';\r\nimport { LockFocusDirective } from './lock/lock-focus.directive';\r\nimport { KeyboardFocusService } from './services/keyboard-focus.service';\r\n\r\n@Directive({\r\n  selector: '[cxFocus]',\r\n})\r\nexport class FocusDirective extends LockFocusDirective {\r\n  protected defaultConfig: FocusConfig = {};\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('cxFocus') protected config: FocusConfig = {};\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: KeyboardFocusService,\r\n    protected renderer: Renderer2\r\n  ) {\r\n    super(elementRef, service, renderer);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FocusDirective } from './focus.directive';\r\n\r\nconst directives = [\r\n  // PersistFocusDirective,\r\n  // VisibleFocusDirective,\r\n  // BlockFocusDirective,\r\n  // AutoFocusDirective,\r\n  // EscapeFocusDirective,\r\n  // LockFocusDirective,\r\n  // TrapFocusDirective,\r\n  // TabFocusDirective,\r\n  FocusDirective,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [...directives],\r\n  exports: [...directives],\r\n})\r\nexport class KeyboardFocusModule {}\r\n","// given that we're likely going to refactor the directives, we're\r\n// NOT exposing all it to the public API.\r\nexport * from './focus.directive';\r\nexport { FocusConfig } from './keyboard-focus.model';\r\nexport * from './keyboard-focus.module';\r\nexport * from './services/index';\r\n\r\n// export * from './autofocus/index';\r\n// export * from './base/index';\r\n// export * from './block/index';\r\n// export * from './escape/index';\r\n// export * from './lock/index';\r\n// export * from './persist/index';\r\n// export * from './tab/index';\r\n// export * from './trap/index';\r\n// export * from './visible/index';\r\n// export * from './keyboard-focus.model';\r\n","import { Component, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { AnonymousConsentsService } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AnonymousConsentLaunchDialogService } from '../anonymous-consent-launch-dialog.service';\r\n\r\n@Component({\r\n  selector: 'cx-anonymous-consent-management-banner',\r\n  templateUrl: './anonymous-consent-management-banner.component.html',\r\n})\r\nexport class AnonymousConsentManagementBannerComponent implements OnDestroy {\r\n  private subscriptions = new Subscription();\r\n\r\n  bannerVisible$: Observable<\r\n    boolean\r\n  > = this.anonymousConsentsService.isBannerVisible();\r\n\r\n  constructor(\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected anonymousConsentLaunchDialogService: AnonymousConsentLaunchDialogService,\r\n    protected vcr: ViewContainerRef\r\n  ) {}\r\n\r\n  viewDetails(): void {\r\n    this.hideBanner();\r\n    const dialog = this.anonymousConsentLaunchDialogService.openDialog(\r\n      null,\r\n      this.vcr\r\n    );\r\n    if (dialog) {\r\n      this.subscriptions.add(dialog.subscribe());\r\n    }\r\n  }\r\n\r\n  allowAll(): void {\r\n    this.subscriptions.add(\r\n      this.anonymousConsentsService\r\n        .giveAllConsents()\r\n        .pipe(tap(() => this.hideBanner()))\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  hideBanner(): void {\r\n    this.anonymousConsentsService.toggleBannerDismissed(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\nexport enum ICON_TYPE {\r\n  STAR = 'STAR',\r\n  SEARCH = 'SEARCH',\r\n  CART = 'CART',\r\n  INFO = 'INFO',\r\n  GRID = 'GRID',\r\n  LIST = 'LIST',\r\n  CARET_DOWN = 'CARET_DOWN',\r\n  CARET_LEFT = 'CARET_LEFT',\r\n  CARET_RIGHT = 'CARET_RIGHT',\r\n  CLOSE = 'CLOSE',\r\n  ERROR = 'ERROR',\r\n  WARNING = 'WARNING',\r\n  SUCCESS = 'SUCCESS',\r\n  VISA = 'VISA',\r\n  MASTER_CARD = 'MASTER_CARD',\r\n  AMEX = 'AMEX',\r\n  DINERS_CLUB = 'DINERS_CLUB',\r\n  CREDIT_CARD = 'CREDIT_CARD',\r\n  EXPAND = 'EXPAND',\r\n  COLLAPSE = 'COLLAPSE',\r\n  RESET = 'RESET',\r\n  CIRCLE = 'CIRCLE',\r\n  HEART = 'HEART',\r\n  EMPTY_HEART = 'EMPTY_HEART',\r\n  FILTER = 'FILTER',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class IconConfig {\r\n  icon?: IconOptions;\r\n}\r\n\r\nexport interface IconOptions {\r\n  /**\r\n   * Each icon type can be configured with a so-called symbol. The symbol will\r\n   * be used to map the icon to an SVG `symbol` (id) or to the style classes of\r\n   * a font based icon. The following configuration would map to a fontawesome\r\n   * icon:\r\n   *\r\n   * icon: {\r\n   *   symbols: {\r\n   *     CART: 'fas fa-shopping-cart'\r\n   *   }\r\n   * }\r\n   */\r\n  symbols?: {\r\n    [ICON_TYPE: string]: string;\r\n  };\r\n\r\n  /**\r\n   * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\r\n   * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\r\n   * is used for the SVG xlink reference.\r\n   */\r\n  resources?: IconConfigResource[];\r\n}\r\n\r\nexport interface IconConfigResource {\r\n  type: IconResourceType | string;\r\n  url?: string;\r\n  types?: (ICON_TYPE | string)[];\r\n}\r\n\r\n/**\r\n * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.\r\n * The resources will be automitacally loaded in case they're required for the `ICON_TYPE`.\r\n */\r\nexport enum IconResourceType {\r\n  /**\r\n   * An svg based icon requires an SVG resource that must be loaded,\r\n   * this is typically a sprite svg file.\r\n   */\r\n  SVG = 'svg',\r\n\r\n  /**\r\n   * A font based ICON might require an additional CSS file to be loaded.\r\n   */\r\n  LINK = 'link',\r\n  /**\r\n   * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image\r\n   * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)\r\n   */\r\n  TEXT = 'text',\r\n}\r\n","import { IconConfig, IconResourceType } from './icon.model';\r\n\r\nexport const fontawesomeIconConfig: IconConfig = {\r\n  icon: {\r\n    symbols: {\r\n      SEARCH: 'fas fa-search',\r\n      CART: 'fas fa-shopping-cart',\r\n      INFO: 'fas fa-info-circle',\r\n      STAR: 'fas fa-star',\r\n      GRID: 'fas fa-th-large',\r\n      LIST: 'fas fa-bars',\r\n      CARET_DOWN: 'fas fa-angle-down',\r\n      CARET_RIGHT: 'fas fa-angle-right',\r\n      CARET_LEFT: 'fas fa-angle-left',\r\n      ERROR: 'fas fa-exclamation-circle',\r\n      WARNING: 'fas fa-exclamation-triangle',\r\n      SUCCESS: 'fas fa-check-circle',\r\n      CLOSE: 'fas fa-times',\r\n      VISA: 'fab fa-cc-visa',\r\n      MASTER_CARD: 'fab fa-cc-mastercard',\r\n      AMEX: 'fab fa-cc-amex',\r\n      DINERS_CLUB: 'fab fa-cc-diners-club',\r\n      CREDIT_CARD: 'fas fa-credit-card',\r\n      COLLAPSE: 'fas fa-minus',\r\n      EXPAND: 'fas fa-plus',\r\n      RESET: 'fas fa-times-circle',\r\n      CIRCLE: 'fas fa-circle',\r\n      HEART: 'fas fa-heart',\r\n      EMPTY_HEART: 'far fa-heart',\r\n      FILTER: 'fas fa-filter',\r\n    },\r\n    resources: [\r\n      {\r\n        type: IconResourceType.LINK,\r\n        url: 'https://use.fontawesome.com/releases/v5.8.1/css/all.css',\r\n      },\r\n    ],\r\n  },\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport {\r\n  IconConfig,\r\n  IconConfigResource,\r\n  IconOptions,\r\n  IconResourceType,\r\n  ICON_TYPE,\r\n} from './icon.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IconLoaderService {\r\n  private loadedResources = [];\r\n  constructor(\r\n    protected winRef: WindowRef,\r\n    protected iconConfig: IconConfig,\r\n    protected sanitizer: DomSanitizer\r\n  ) {}\r\n\r\n  /**\r\n   * Returns an html fragment which can be added to the DOM in a safe way.\r\n   */\r\n  getHtml(type: ICON_TYPE | string): SafeHtml {\r\n    if (this.isResourceType(type, IconResourceType.SVG)) {\r\n      return this.sanitizer.bypassSecurityTrustHtml(\r\n        `<svg><use xlink:href=\"${this.getSvgPath(type)}\"></use></svg>`\r\n      );\r\n    }\r\n    if (this.isResourceType(type, IconResourceType.TEXT)) {\r\n      return this.sanitizer.bypassSecurityTrustHtml(this.getSymbol(type));\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Returns the symbol class(es) for the icon type.\r\n   */\r\n  getStyleClasses(iconType: ICON_TYPE | string): string {\r\n    return this.getSymbol(iconType) || '';\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the given `ICON_TYPE` is configured for\r\n   * the given `IconResourceType`.\r\n   */\r\n  private isResourceType(\r\n    iconType: ICON_TYPE | string,\r\n    resourceType: IconResourceType\r\n  ): boolean {\r\n    return (\r\n      this.config.resources &&\r\n      !!this.config.resources.find(\r\n        (res) =>\r\n          res.types && res.type === resourceType && res.types.includes(iconType)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the path to the svg link. The link supports path names\r\n   * as well, if the config a[[s been setup to support a svg file path.\r\n   * Additionally, the icon prefix will be taken into account to prefix the\r\n   * icon IDs in the SVG.\r\n   */\r\n  private getSvgPath(iconType: ICON_TYPE | string): string {\r\n    const svgResource = this.config.resources.find(\r\n      (res) =>\r\n        res.type === IconResourceType.SVG &&\r\n        res.types &&\r\n        res.types.includes(iconType)\r\n    );\r\n    if (svgResource) {\r\n      return svgResource.url\r\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\r\n        : `#${this.getSymbol(iconType)}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads the resource url (if any) for the given icon.\r\n   * The icon will only be loaded once.\r\n   *\r\n   * NOTE: this is not working when the shadow is used as there's\r\n   * no head element available and the link must be loaded for every\r\n   * web component.\r\n   */\r\n  addLinkResource(iconType: ICON_TYPE | string): void {\r\n    const resource: IconConfigResource = this.findResource(\r\n      iconType,\r\n      IconResourceType.LINK\r\n    );\r\n    if (\r\n      resource &&\r\n      resource.url &&\r\n      !this.loadedResources.includes(resource.url)\r\n    ) {\r\n      this.loadedResources.push(resource.url);\r\n      const head = this.winRef.document.getElementsByTagName('head')[0];\r\n      const link = this.winRef.document.createElement('link');\r\n      link.rel = 'stylesheet';\r\n      link.type = 'text/css';\r\n      link.href = resource.url;\r\n      head.appendChild(link);\r\n    }\r\n  }\r\n\r\n  private findResource(\r\n    iconType: ICON_TYPE | string,\r\n    resourceType: IconResourceType\r\n  ): IconConfigResource {\r\n    if (!this.config.resources) {\r\n      return;\r\n    }\r\n\r\n    let resource = this.config.resources.find(\r\n      (res) =>\r\n        res.type === resourceType && res.types && res.types.includes(iconType)\r\n    );\r\n    // no specific resource found, let's try to find a one-size-fits-all resource\r\n    if (!resource) {\r\n      resource = this.config.resources.find(\r\n        (res) => (res.type === resourceType && !res.types) || res.types === []\r\n      );\r\n    }\r\n    return resource;\r\n  }\r\n\r\n  getSymbol(iconType: ICON_TYPE | string) {\r\n    if (this.config && this.config.symbols && this.config.symbols[iconType]) {\r\n      return this.config.symbols[iconType];\r\n    }\r\n  }\r\n\r\n  private get config(): IconOptions {\r\n    return this.iconConfig.icon;\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { IconLoaderService } from './icon-loader.service';\r\nimport { ICON_TYPE } from './icon.model';\r\n\r\n/**\r\n *\r\n * The icon component can be added in different ways:\r\n *\r\n * With the component selector:\r\n * `<cx-icon type=\"SEARCH\"></cx-icon>`\r\n *\r\n * With the attribute selector:\r\n * `<span cxIcon=\"STAR\"></span>`\r\n *\r\n * Additionally, content can be projected to the icon:\r\n *\r\n * `<button cxIcon=\"HAPPY\">happy label</button>`\r\n *\r\n * The above button would become (based on a TEXT resource type):\r\n * `<button>😊happy label</button>`\r\n *\r\n * While the content is projected, the icon itself doesn't require an\r\n * additional DOM node which is an advantage over the component selector.\r\n */\r\n@Component({\r\n  selector: 'cx-icon,[cxIcon]',\r\n  templateUrl: './icon.component.html',\r\n})\r\nexport class IconComponent {\r\n  /**\r\n   * The cxIcon directive is bound to the icon type. You can feed the `ICON_TYPE` to\r\n   * accomplish a configurable button in the UI.\r\n   */\r\n  @Input() set cxIcon(type: ICON_TYPE) {\r\n    this.setIcon(type);\r\n  }\r\n\r\n  /**\r\n   * The type input parameter is bound to the icon type. You can feed the `ICON_TYPE` to\r\n   * accomplish a configurable button in the UI.\r\n   */\r\n  @Input() set type(type: ICON_TYPE) {\r\n    this.setIcon(type);\r\n  }\r\n\r\n  /**\r\n   * the icon provides an html fragment that is used to add SVG or text based icons.\r\n   */\r\n  icon: SafeHtml;\r\n\r\n  /**\r\n   * Maintains the applied style classes so we can remove them when the\r\n   * icon type changes at run time.\r\n   */\r\n  protected styleClasses: string[];\r\n\r\n  constructor(\r\n    protected iconLoader: IconLoaderService,\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected renderer: Renderer2\r\n  ) {}\r\n\r\n  protected setIcon(type: ICON_TYPE): void {\r\n    if (!type || <string>type === '') {\r\n      return;\r\n    }\r\n    this.icon = this.iconLoader.getHtml(type);\r\n    this.addStyleClasses(type);\r\n    this.iconLoader.addLinkResource(type);\r\n  }\r\n\r\n  /**\r\n   * Adds the style classes and the link resource (if available).\r\n   */\r\n  protected addStyleClasses(type: ICON_TYPE): void {\r\n    this.renderer.addClass(this.host, 'cx-icon');\r\n\r\n    if (this.styleClasses) {\r\n      this.styleClasses.forEach((cls) =>\r\n        this.renderer.removeClass(this.host, cls)\r\n      );\r\n    }\r\n\r\n    this.styleClasses = this.iconLoader.getStyleClasses(type).split(' ');\r\n\r\n    this.styleClasses.forEach((cls) => {\r\n      if (cls !== '') {\r\n        this.renderer.addClass(this.host, cls);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected get host() {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { provideDefaultConfig } from '@spartacus/core';\r\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\r\nimport { IconComponent } from './icon.component';\r\n\r\n@NgModule({\r\n  declarations: [IconComponent],\r\n  imports: [CommonModule],\r\n  providers: [provideDefaultConfig(fontawesomeIconConfig)],\r\n  exports: [IconComponent],\r\n})\r\nexport class IconModule {}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  AnonymousConsent,\r\n  AnonymousConsentsConfig,\r\n  AnonymousConsentsService,\r\n  ConsentTemplate,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, take, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\r\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/index';\r\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\r\n\r\n@Component({\r\n  selector: 'cx-anonymous-consent-dialog',\r\n  templateUrl: './anonymous-consent-dialog.component.html',\r\n})\r\nexport class AnonymousConsentDialogComponent implements OnInit, OnDestroy {\r\n  @HostBinding('attr.role') role = 'dialog';\r\n  @HostBinding('attr.aria-modal') modal = true;\r\n\r\n  private subscriptions = new Subscription();\r\n\r\n  showLegalDescription = true;\r\n  iconTypes = ICON_TYPE;\r\n  requiredConsents: string[] = [];\r\n\r\n  loading$: Observable<boolean>;\r\n  templates$: Observable<ConsentTemplate[]>;\r\n  consents$: Observable<AnonymousConsent[]>;\r\n\r\n  focusConfig: FocusConfig = {\r\n    trap: true,\r\n    block: true,\r\n    autofocus: 'input[type=\"checkbox\"]',\r\n    focusOnEscape: true,\r\n  };\r\n\r\n  @HostListener('click', ['$event'])\r\n  handleClick(event: UIEvent): void {\r\n    // Close on click outside the dialog window\r\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\r\n      this.close('Cross click');\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected config: AnonymousConsentsConfig,\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected el: ElementRef,\r\n    protected launchDialogService: LaunchDialogService\r\n  ) {\r\n    if (Boolean(this.config.anonymousConsents)) {\r\n      this.showLegalDescription = this.config.anonymousConsents.showLegalDescriptionInDialog;\r\n      if (Boolean(this.config.anonymousConsents.requiredConsents)) {\r\n        this.requiredConsents = this.config.anonymousConsents.requiredConsents;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.templates$ = this.anonymousConsentsService.getTemplates();\r\n    this.consents$ = this.anonymousConsentsService.getConsents();\r\n    this.loading$ = this.anonymousConsentsService.getLoadTemplatesLoading();\r\n  }\r\n\r\n  close(reason?: any): void {\r\n    this.launchDialogService.closeDialog(reason);\r\n  }\r\n\r\n  rejectAll(): void {\r\n    this.subscriptions.add(\r\n      combineLatest([this.templates$, this.consents$])\r\n        .pipe(\r\n          take(1),\r\n          distinctUntilChanged(),\r\n          tap(([templates, consents]) =>\r\n            templates.forEach((template) => {\r\n              const consent = this.getCorrespondingConsent(template, consents);\r\n              if (this.anonymousConsentsService.isConsentGiven(consent)) {\r\n                if (this.isRequiredConsent(template)) {\r\n                  return;\r\n                }\r\n\r\n                this.anonymousConsentsService.withdrawConsent(template.id);\r\n              }\r\n            })\r\n          )\r\n        )\r\n        .subscribe()\r\n    );\r\n    this.close('rejectAll');\r\n  }\r\n\r\n  allowAll(): void {\r\n    this.subscriptions.add(\r\n      combineLatest([this.templates$, this.consents$])\r\n        .pipe(\r\n          take(1),\r\n          distinctUntilChanged(),\r\n          tap(([templates, consents]) =>\r\n            templates.forEach((template) => {\r\n              const consent = this.getCorrespondingConsent(template, consents);\r\n              if (\r\n                (consent && consent.consentState == null) ||\r\n                this.anonymousConsentsService.isConsentWithdrawn(consent)\r\n              ) {\r\n                if (this.isRequiredConsent(template)) {\r\n                  return;\r\n                }\r\n\r\n                this.anonymousConsentsService.giveConsent(template.id);\r\n              }\r\n            })\r\n          )\r\n        )\r\n        .subscribe()\r\n    );\r\n    this.close('allowAll');\r\n  }\r\n\r\n  private isRequiredConsent(template: ConsentTemplate): boolean {\r\n    return (\r\n      Boolean(this.config.anonymousConsents) &&\r\n      Boolean(this.config.anonymousConsents.requiredConsents) &&\r\n      this.config.anonymousConsents.requiredConsents.includes(template.id)\r\n    );\r\n  }\r\n\r\n  onConsentChange({\r\n    given,\r\n    template,\r\n  }: {\r\n    given: boolean;\r\n    template: ConsentTemplate;\r\n  }): void {\r\n    if (given) {\r\n      this.anonymousConsentsService.giveConsent(template.id);\r\n    } else {\r\n      this.anonymousConsentsService.withdrawConsent(template.id);\r\n    }\r\n  }\r\n\r\n  getCorrespondingConsent(\r\n    template: ConsentTemplate,\r\n    consents: AnonymousConsent[] = []\r\n  ): AnonymousConsent {\r\n    for (const consent of consents) {\r\n      if (template.id === consent.templateCode) {\r\n        return consent;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { LayoutConfig } from '../../layout/config/layout-config';\r\nimport { DIALOG_TYPE } from '../../layout/launch-dialog/index';\r\nimport { AnonymousConsentDialogComponent } from '../../shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component';\r\n\r\nexport const defaultAnonymousConsentLayoutConfig: LayoutConfig = {\r\n  launch: {\r\n    ANONYMOUS_CONSENT: {\r\n      inline: true,\r\n      component: AnonymousConsentDialogComponent,\r\n      dialogType: DIALOG_TYPE.DIALOG,\r\n    },\r\n  },\r\n};\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { AnonymousConsentLaunchDialogService } from '../anonymous-consent-launch-dialog.service';\r\n\r\n@Component({\r\n  selector: 'cx-anonymous-consent-open-dialog',\r\n  templateUrl: './anonymous-consent-open-dialog.component.html',\r\n})\r\nexport class AnonymousConsentOpenDialogComponent {\r\n  @ViewChild('open') openElement: ElementRef;\r\n\r\n  constructor(\r\n    protected vcr: ViewContainerRef,\r\n    protected anonymousConsentLaunchDialogService: AnonymousConsentLaunchDialogService\r\n  ) {}\r\n\r\n  openDialog(): void {\r\n    const dialog = this.anonymousConsentLaunchDialogService.openDialog(\r\n      this.openElement,\r\n      this.vcr\r\n    );\r\n    if (dialog) {\r\n      dialog.pipe(take(1)).subscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  CmsConfig,\r\n  DeferLoadingStrategy,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideConfig,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { KeyboardFocusModule } from '../../layout/a11y/keyboard-focus/index';\r\nimport { AnonymousConsentManagementBannerComponent } from './banner/anonymous-consent-management-banner.component';\r\nimport { defaultAnonymousConsentLayoutConfig } from './default-anonymous-consent-layout.config';\r\nimport { AnonymousConsentOpenDialogComponent } from './open-dialog/anonymous-consent-open-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    FeaturesConfigModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  providers: [\r\n    provideConfig(defaultAnonymousConsentLayoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AnonymousConsentManagementBannerComponent: {\r\n          component: AnonymousConsentManagementBannerComponent,\r\n          deferLoading: DeferLoadingStrategy.INSTANT,\r\n        },\r\n        AnonymousConsentOpenDialogComponent: {\r\n          component: AnonymousConsentOpenDialogComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [\r\n    AnonymousConsentManagementBannerComponent,\r\n    AnonymousConsentOpenDialogComponent,\r\n  ],\r\n  exports: [\r\n    AnonymousConsentManagementBannerComponent,\r\n    AnonymousConsentOpenDialogComponent,\r\n  ],\r\n  entryComponents: [\r\n    AnonymousConsentManagementBannerComponent,\r\n    AnonymousConsentOpenDialogComponent,\r\n  ],\r\n})\r\nexport class AnonymousConsentManagementBannerModule {}\r\n","import { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {\r\n  AnonymousConsent,\r\n  ANONYMOUS_CONSENT_STATUS,\r\n  ConsentTemplate,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-consent-management-form',\r\n  templateUrl: './consent-management-form.component.html',\r\n})\r\nexport class ConsentManagementFormComponent implements OnInit {\r\n  consentGiven = false;\r\n\r\n  @Input()\r\n  consentTemplate: ConsentTemplate;\r\n\r\n  @Input()\r\n  requiredConsents: string[] = [];\r\n\r\n  @Input()\r\n  consent: AnonymousConsent;\r\n\r\n  @Output()\r\n  consentChanged = new EventEmitter<{\r\n    given: boolean;\r\n    template: ConsentTemplate;\r\n  }>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.consent) {\r\n      this.consentGiven = Boolean(\r\n        this.consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN\r\n      );\r\n    } else {\r\n      if (this.consentTemplate && this.consentTemplate.currentConsent) {\r\n        if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\r\n          this.consentGiven = false;\r\n        } else if (this.consentTemplate.currentConsent.consentGivenDate) {\r\n          this.consentGiven = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onConsentChange(): void {\r\n    this.consentGiven = !this.consentGiven;\r\n\r\n    this.consentChanged.emit({\r\n      given: this.consentGiven,\r\n      template: this.consentTemplate,\r\n    });\r\n  }\r\n\r\n  isRequired(templateId: string): boolean {\r\n    return this.requiredConsents.includes(templateId);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  AnonymousConsentsConfig,\r\n  AnonymousConsentsService,\r\n  AuthService,\r\n  ConsentTemplate,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  UserConsentService,\r\n} from '@spartacus/core';\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  concat,\r\n  Observable,\r\n  Subscription,\r\n} from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  scan,\r\n  skipWhile,\r\n  tap,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-consent-management',\r\n  templateUrl: './consent-management.component.html',\r\n})\r\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\r\n  private subscriptions = new Subscription();\r\n  private allConsentsLoading = new BehaviorSubject<boolean>(false);\r\n\r\n  templateList$: Observable<ConsentTemplate[]>;\r\n  loading$: Observable<boolean>;\r\n\r\n  requiredConsents: string[] = [];\r\n\r\n  constructor(\r\n    protected userConsentService: UserConsentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected anonymousConsentsConfig: AnonymousConsentsConfig,\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = combineLatest([\r\n      this.userConsentService.getConsentsResultLoading(),\r\n      this.userConsentService.getGiveConsentResultLoading(),\r\n      this.userConsentService.getWithdrawConsentResultLoading(),\r\n      this.authService.isUserLoggedIn(),\r\n      this.allConsentsLoading,\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          consentLoading,\r\n          giveConsentLoading,\r\n          withdrawConsentLoading,\r\n          isUserLoggedIn,\r\n          allConsentsLoading,\r\n        ]) =>\r\n          consentLoading ||\r\n          giveConsentLoading ||\r\n          withdrawConsentLoading ||\r\n          !isUserLoggedIn ||\r\n          allConsentsLoading\r\n      )\r\n    );\r\n    this.consentListInit();\r\n    this.giveConsentInit();\r\n    this.withdrawConsentInit();\r\n  }\r\n\r\n  private consentListInit(): void {\r\n    this.templateList$ = this.userConsentService.getConsents().pipe(\r\n      withLatestFrom(\r\n        this.anonymousConsentsService.getTemplates(),\r\n        this.authService.isUserLoggedIn()\r\n      ),\r\n      filter(\r\n        ([_templateList, _anonymousTemplates, isUserLoggedIn]) => isUserLoggedIn\r\n      ),\r\n      tap(([templateList, _anonymousTemplates]) => {\r\n        if (!this.consentsExists(templateList)) {\r\n          this.userConsentService.loadConsents();\r\n        }\r\n      }),\r\n      map(([templateList, anonymousTemplates]) => {\r\n        if (Boolean(this.anonymousConsentsConfig.anonymousConsents)) {\r\n          if (\r\n            Boolean(\r\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents\r\n            )\r\n          ) {\r\n            this.requiredConsents = this.anonymousConsentsConfig.anonymousConsents.requiredConsents;\r\n          }\r\n          if (\r\n            Boolean(\r\n              this.anonymousConsentsConfig.anonymousConsents\r\n                .consentManagementPage\r\n            )\r\n          ) {\r\n            return this.hideAnonymousConsents(templateList, anonymousTemplates);\r\n          }\r\n        }\r\n\r\n        return templateList;\r\n      })\r\n    );\r\n  }\r\n\r\n  private hideAnonymousConsents(\r\n    templateList: ConsentTemplate[],\r\n    anonymousTemplates: ConsentTemplate[] = []\r\n  ): ConsentTemplate[] {\r\n    let hideTemplateIds: string[] = [];\r\n\r\n    if (\r\n      !this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\r\n        .showAnonymousConsents\r\n    ) {\r\n      hideTemplateIds = anonymousTemplates.map((template) => template.id);\r\n      return this.userConsentService.filterConsentTemplates(\r\n        templateList,\r\n        hideTemplateIds\r\n      );\r\n    }\r\n\r\n    if (\r\n      Boolean(\r\n        this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\r\n          .hideConsents\r\n      ) &&\r\n      this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\r\n        .hideConsents.length > 0\r\n    ) {\r\n      hideTemplateIds = this.anonymousConsentsConfig.anonymousConsents\r\n        .consentManagementPage.hideConsents;\r\n    }\r\n\r\n    return this.userConsentService.filterConsentTemplates(\r\n      templateList,\r\n      hideTemplateIds\r\n    );\r\n  }\r\n\r\n  private giveConsentInit(): void {\r\n    this.userConsentService.resetGiveConsentProcessState();\r\n    this.subscriptions.add(\r\n      this.userConsentService\r\n        .getGiveConsentResultSuccess()\r\n        .subscribe((success) => this.onConsentGivenSuccess(success))\r\n    );\r\n  }\r\n\r\n  private withdrawConsentInit(): void {\r\n    this.userConsentService.resetWithdrawConsentProcessState();\r\n    this.subscriptions.add(\r\n      this.userConsentService\r\n        .getWithdrawConsentResultLoading()\r\n        .pipe(\r\n          skipWhile(Boolean),\r\n          withLatestFrom(\r\n            this.userConsentService.getWithdrawConsentResultSuccess()\r\n          ),\r\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\r\n          tap((withdrawalSuccess) => {\r\n            if (withdrawalSuccess) {\r\n              this.userConsentService.loadConsents();\r\n            }\r\n          })\r\n        )\r\n        .subscribe((withdrawalSuccess) =>\r\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\r\n        )\r\n    );\r\n  }\r\n\r\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\r\n    return Boolean(templateList) && templateList.length > 0;\r\n  }\r\n\r\n  onConsentChange({\r\n    given,\r\n    template,\r\n  }: {\r\n    given: boolean;\r\n    template: ConsentTemplate;\r\n  }): void {\r\n    if (given) {\r\n      this.userConsentService.giveConsent(template.id, template.version);\r\n    } else {\r\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\r\n    }\r\n  }\r\n\r\n  private onConsentGivenSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.userConsentService.resetGiveConsentProcessState();\r\n      this.globalMessageService.add(\r\n        { key: 'consentManagementForm.message.success.given' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n    }\r\n  }\r\n\r\n  private onConsentWithdrawnSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.userConsentService.resetWithdrawConsentProcessState();\r\n      this.globalMessageService.add(\r\n        { key: 'consentManagementForm.message.success.withdrawn' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n    }\r\n  }\r\n\r\n  rejectAll(templates: ConsentTemplate[] = []): void {\r\n    const consentsToWithdraw: ConsentTemplate[] = [];\r\n    templates.forEach((template) => {\r\n      if (this.userConsentService.isConsentGiven(template.currentConsent)) {\r\n        if (this.isRequiredConsent(template)) {\r\n          return;\r\n        }\r\n        consentsToWithdraw.push(template);\r\n      }\r\n    });\r\n\r\n    this.allConsentsLoading.next(true);\r\n\r\n    this.subscriptions.add(\r\n      this.setupWithdrawalStream(consentsToWithdraw)\r\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private setupWithdrawalStream(\r\n    consentsToWithdraw: ConsentTemplate[] = []\r\n  ): Observable<number> {\r\n    const loading$ = concat(\r\n      this.userConsentService.getWithdrawConsentResultLoading()\r\n    ).pipe(\r\n      distinctUntilChanged(),\r\n      filter((loading) => !loading)\r\n    );\r\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\r\n    const withdraw$ = count$.pipe(\r\n      tap((i) => {\r\n        if (i < consentsToWithdraw.length) {\r\n          this.userConsentService.withdrawConsent(\r\n            consentsToWithdraw[i].currentConsent.code\r\n          );\r\n        }\r\n      })\r\n    );\r\n    const checkTimesLoaded$ = withdraw$.pipe(\r\n      filter((timesLoaded) => timesLoaded === consentsToWithdraw.length)\r\n    );\r\n\r\n    return checkTimesLoaded$;\r\n  }\r\n\r\n  allowAll(templates: ConsentTemplate[] = []): void {\r\n    const consentsToGive: ConsentTemplate[] = [];\r\n    templates.forEach((template) => {\r\n      if (this.userConsentService.isConsentWithdrawn(template.currentConsent)) {\r\n        if (this.isRequiredConsent(template)) {\r\n          return;\r\n        }\r\n\r\n        consentsToGive.push(template);\r\n      }\r\n    });\r\n\r\n    this.allConsentsLoading.next(true);\r\n\r\n    this.subscriptions.add(\r\n      this.setupGiveStream(consentsToGive)\r\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private setupGiveStream(\r\n    consentsToGive: ConsentTemplate[] = []\r\n  ): Observable<number> {\r\n    const loading$ = concat(\r\n      this.userConsentService.getGiveConsentResultLoading()\r\n    ).pipe(\r\n      distinctUntilChanged(),\r\n      filter((loading) => !loading)\r\n    );\r\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\r\n    const giveConsent$ = count$.pipe(\r\n      tap((i) => {\r\n        if (i < consentsToGive.length) {\r\n          this.userConsentService.giveConsent(\r\n            consentsToGive[i].id,\r\n            consentsToGive[i].version\r\n          );\r\n        }\r\n      })\r\n    );\r\n    const checkTimesLoaded$ = giveConsent$.pipe(\r\n      filter((timesLoaded) => timesLoaded === consentsToGive.length)\r\n    );\r\n\r\n    return checkTimesLoaded$;\r\n  }\r\n\r\n  private isRequiredConsent(template: ConsentTemplate): boolean {\r\n    return (\r\n      Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\r\n      Boolean(\r\n        this.anonymousConsentsConfig.anonymousConsents.requiredConsents\r\n      ) &&\r\n      this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\r\n        template.id\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.allConsentsLoading.unsubscribe();\r\n\r\n    this.userConsentService.resetGiveConsentProcessState();\r\n    this.userConsentService.resetWithdrawConsentProcessState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\r\nimport { ConsentManagementComponent } from './components/consent-management.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    IconModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ConsentManagementComponent: {\r\n          component: ConsentManagementComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\r\n  exports: [ConsentManagementComponent, ConsentManagementFormComponent],\r\n  entryComponents: [ConsentManagementComponent],\r\n})\r\nexport class ConsentManagementModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { ConsentManagementModule } from '../../../cms-components/myaccount/consent-management/consent-management.module';\r\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/index';\r\nimport { SpinnerModule } from '../spinner/spinner.module';\r\nimport { AnonymousConsentDialogComponent } from './anonymous-consent-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n    ConsentManagementModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [AnonymousConsentDialogComponent],\r\n  entryComponents: [AnonymousConsentDialogComponent],\r\n  exports: [AnonymousConsentDialogComponent],\r\n})\r\nexport class AnonymousConsentsDialogModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\n\r\nexport interface CardAction {\r\n  event: string;\r\n  name: string;\r\n}\r\n\r\nexport interface CardLinkAction {\r\n  link: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Card {\r\n  header?: string;\r\n  title?: string;\r\n  textBold?: string;\r\n  text?: Array<string>;\r\n  img?: string;\r\n  actions?: Array<CardAction | CardLinkAction>;\r\n  deleteMsg?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-card',\r\n  templateUrl: './card.component.html',\r\n})\r\nexport class CardComponent implements OnInit {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  @Output()\r\n  deleteCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  sendCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  editCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  cancelCard: EventEmitter<number> = new EventEmitter();\r\n\r\n  @Input()\r\n  border = false;\r\n\r\n  @Input()\r\n  editMode = false;\r\n\r\n  @Input()\r\n  isDefault = false;\r\n\r\n  @Input()\r\n  content: Card;\r\n  @Input()\r\n  fitToContainer = false;\r\n\r\n  // ACTIONS\r\n\r\n  setEditMode(): void {\r\n    this.editMode = true;\r\n  }\r\n\r\n  cancelEdit(): void {\r\n    this.editMode = false;\r\n    this.cancelCard.emit(5);\r\n  }\r\n\r\n  delete(): void {\r\n    this.deleteCard.emit(1);\r\n  }\r\n\r\n  setDefault(): void {\r\n    this.isDefault = true;\r\n    this.setDefaultCard.emit(2);\r\n  }\r\n\r\n  send(): void {\r\n    this.sendCard.emit(3);\r\n  }\r\n\r\n  edit(): void {\r\n    this.editCard.emit(4);\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { CardComponent } from './card.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, IconModule],\r\n  declarations: [CardComponent],\r\n  exports: [CardComponent],\r\n})\r\nexport class CardModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CarouselService {\r\n  constructor(private winRef: WindowRef) {}\r\n\r\n  /**\r\n   * The number of items per slide is calculated by the help of\r\n   * the item width and the available width of the host element.\r\n   * This appoach makes it possible to place the carousel in different\r\n   * layouts. Instead of using the page breakpoints, the host size is\r\n   * taken into account.\r\n   *\r\n   * Since there's no element resize API available, we use the\r\n   * window `resize` event, so that we can adjust the number of items\r\n   * whenever the window got resized.\r\n   */\r\n  getItemsPerSlide(\r\n    nativeElement: HTMLElement,\r\n    itemWidth: string\r\n  ): Observable<number> {\r\n    return this.winRef.resize$.pipe(\r\n      map(() => (nativeElement as HTMLElement).clientWidth),\r\n      map((totalWidth) => this.calculateItems(totalWidth, itemWidth))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Calculates the number of items per given hostSize.  calculated based on the given\r\n   * intended size in pixels or percentages. The\r\n   *\r\n   * @param availableWidth The available width in pixels for the carousel items.\r\n   * @param itemWidth The width per carousel item, in px or percentage.\r\n   */\r\n  private calculateItems(availableWidth: number, itemWidth: string) {\r\n    let calculatedItems = 0;\r\n    if (itemWidth.endsWith('px')) {\r\n      const num = itemWidth.substring(0, itemWidth.length - 2);\r\n      calculatedItems = availableWidth / <number>(<any>num);\r\n    }\r\n\r\n    if (itemWidth.endsWith('%')) {\r\n      const perc = itemWidth.substring(0, itemWidth.length - 1);\r\n      calculatedItems =\r\n        availableWidth / (availableWidth * (<number>(<any>perc) / 100));\r\n    }\r\n\r\n    return Math.floor(calculatedItems) || 1;\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  isDevMode,\r\n  OnInit,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\nimport { CarouselService } from './carousel.service';\r\n\r\n/**\r\n * Generic carousel component that can be used to render any carousel items,\r\n * such as products, images, banners, or any component. Carousel items are\r\n * rendered in so-called carousel slides, and the previous/next buttons as well as\r\n * the indicator-buttons can used to navigate the slides.\r\n *\r\n * The component uses an array of Observables (`items$`) as an input, to allow\r\n * for lazy loading of items.\r\n *\r\n * The number of items per slide is calculated with the `itemWidth`, which can given\r\n * in pixels or percentage.\r\n *\r\n * To allow for flexible rendering of items, the rendering is delegated to the\r\n * given `template`. This allows for maximum flexibility.\r\n */\r\n@Component({\r\n  selector: 'cx-carousel',\r\n  templateUrl: './carousel.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CarouselComponent implements OnInit {\r\n  /**\r\n   * The title is rendered as the carousel heading.\r\n   */\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * The items$ represent the carousel items. The items$ are\r\n   * observables so that the items can be loaded on demand.\r\n   */\r\n  items: Observable<any>[];\r\n  @Input('items')\r\n  set setItems(inputItems: Observable<any>[]) {\r\n    this.items = inputItems;\r\n    //Reset slider when changing products\r\n    this.activeSlide = 0;\r\n  }\r\n\r\n  /**\r\n   * The template is rendered for each item, so that the actual\r\n   * view can be given by the compoent that uses the `CarouselComponent`.\r\n   */\r\n  @Input() template: TemplateRef<any>;\r\n\r\n  /**\r\n   * Specifies the minimum size of the carousel item, either in px or %.\r\n   * This value is used for the calculation of numbers per carousel, so that\r\n   * the number of carousel items is dynamic. The calculation uses the `itemWidth`\r\n   * and the host element `clientWidth`, so that the carousel is reusable in\r\n   * different layouts (for example in a 50% grid).\r\n   */\r\n  @Input() itemWidth = '300px';\r\n\r\n  /**\r\n   * Indicates whether the visual indicators are used.\r\n   */\r\n  @Input() hideIndicators = false;\r\n\r\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\r\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\r\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\r\n\r\n  activeSlide: number;\r\n  size$: Observable<number>;\r\n\r\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\r\n\r\n  ngOnInit() {\r\n    if (!this.template && isDevMode()) {\r\n      console.error(\r\n        'No template reference provided to render the carousel items for the `cx-carousel`'\r\n      );\r\n      return;\r\n    }\r\n    this.size$ = this.service\r\n      .getItemsPerSlide(this.el.nativeElement, this.itemWidth)\r\n      .pipe(tap(() => (this.activeSlide = 0)));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { BREAKPOINT, LayoutConfig } from '../config/layout-config';\r\n\r\nconst DEFAULT_BREAKPOINTS = {\r\n  [BREAKPOINT.xs]: 576,\r\n  [BREAKPOINT.sm]: 768,\r\n  [BREAKPOINT.md]: 992,\r\n  [BREAKPOINT.lg]: 1200,\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BreakpointService {\r\n  constructor(private winRef: WindowRef, private config: LayoutConfig) {}\r\n\r\n  get breakpoint$(): Observable<BREAKPOINT> {\r\n    if (!this.window) {\r\n      return of(BREAKPOINT.xs);\r\n    }\r\n    return this.winRef.resize$.pipe(\r\n      map((event) => this.getBreakpoint((<Window>event.target).innerWidth)),\r\n      distinctUntilChanged()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the _maximum_ size for the breakpint, given by the `LayoutConfig.breakpoints`\r\n   * configuration. If no configuration is available for the given breakpoint, the\r\n   * method will return the default values:\r\n   * - xs: 567\r\n   * - sm: 768\r\n   * - md: 992\r\n   * - lg: 1200\r\n   */\r\n  getSize(breakpoint: BREAKPOINT): number {\r\n    return this.config.breakpoints?.hasOwnProperty(breakpoint)\r\n      ? this.config.breakpoints[breakpoint]\r\n      : DEFAULT_BREAKPOINTS[breakpoint];\r\n  }\r\n\r\n  /**\r\n   * Returns all available breakpoints for the system.\r\n   */\r\n  get breakpoints(): BREAKPOINT[] {\r\n    return [\r\n      BREAKPOINT.xs,\r\n      BREAKPOINT.sm,\r\n      BREAKPOINT.md,\r\n      BREAKPOINT.lg,\r\n      BREAKPOINT.xl,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the current screen size is smaller than the maximum size of the\r\n   * given breakpoint.\r\n   *\r\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\r\n   * window innerWidth is smaller than the configured size of `BREAKPOINT.md`.\r\n   */\r\n  isDown(breakpoint: BREAKPOINT): Observable<boolean> {\r\n    return this.breakpoint$.pipe(\r\n      map((br) =>\r\n        this.breakpoints\r\n          .slice(0, this.breakpoints.indexOf(breakpoint) + 1)\r\n          .includes(br)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the current screen size is larger than the minimum size of the\r\n   * given breakpoint.\r\n   *\r\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\r\n   * window innerWidth is larger than the configured size of `BREAKPOINT.sm`.\r\n   */\r\n  isUp(breakpoint: BREAKPOINT): Observable<boolean> {\r\n    return this.breakpoint$.pipe(\r\n      map((br) =>\r\n        this.breakpoints\r\n          .slice(this.breakpoints.indexOf(breakpoint))\r\n          .includes(br)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the current screen size fits to the given breakpoint\r\n   */\r\n  isEqual(breakpoint: BREAKPOINT): Observable<boolean> {\r\n    return this.breakpoint$.pipe(map((br) => br === breakpoint));\r\n  }\r\n\r\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\r\n    const breakpoint = this.getClosest(windowWidth);\r\n    return BREAKPOINT[breakpoint || BREAKPOINT.lg];\r\n  }\r\n\r\n  protected getClosest(windowWidth?: number): BREAKPOINT {\r\n    if (!windowWidth) {\r\n      windowWidth = this.window.innerWidth;\r\n    }\r\n\r\n    return windowWidth > this.getSize(BREAKPOINT.lg)\r\n      ? BREAKPOINT.xl\r\n      : this.breakpoints.find((br) => windowWidth <= this.getSize(br));\r\n  }\r\n\r\n  get window(): Window {\r\n    return this.winRef.nativeWindow;\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Config, Image, OccConfig } from '@spartacus/core';\r\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\r\nimport { StorefrontConfig } from '../../../storefront-config';\r\nimport { MediaConfig } from './media.config';\r\nimport { Media, MediaContainer, MediaFormatSize } from './media.model';\r\n\r\n/**\r\n * Service which generates media URLs. It leverage the MediaContainer and MediaFormats so\r\n * that URLs and sizes are generated for the same media. This helps to improve performance\r\n * across difference devices and layouts.\r\n *\r\n * Media formats are optional, but highly recommended. The format will help the browser to\r\n * identify the right media for the right experience.\r\n *\r\n * The MediaService will generate absolute URLs in case relative URLs are provided for the Media.\r\n * The baseUrl is read from the `occConfig.backend.media.baseUrl` or\r\n * `occConfig.backend.occ.baseUrl`.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MediaService {\r\n  /**\r\n   * The media formats sorted by size. The media format representing the smallest\r\n   * size is sorted on top.\r\n   */\r\n  private _sortedFormats: { code: string; size: MediaFormatSize }[];\r\n  private _reversedFormats: { code: string; size: MediaFormatSize }[];\r\n\r\n  constructor(\r\n    @Inject(Config) protected config: StorefrontConfig,\r\n    /**\r\n     * The BreakpointService is no longer used in version 2.0 as the different size formats are\r\n     * driven by configuration only. There's however a change that this service will play a role\r\n     * in the near future, which is why we keep the constructor as-is.\r\n     */\r\n    protected breakpointService: BreakpointService\r\n  ) {}\r\n\r\n  /**\r\n   * Returns a `Media` object with the main media (`src`) and various media (`src`)\r\n   * for specific formats.\r\n   */\r\n  getMedia(\r\n    mediaContainer: MediaContainer | Image,\r\n    format?: string,\r\n    alt?: string\r\n  ): Media {\r\n    if (!mediaContainer) {\r\n      return;\r\n    }\r\n\r\n    const mainMedia: Image = mediaContainer.url\r\n      ? mediaContainer\r\n      : this.resolveMedia(mediaContainer as MediaContainer, format);\r\n\r\n    return {\r\n      src: this.resolveAbsoluteUrl(mainMedia?.url),\r\n      alt: alt || mainMedia?.altText,\r\n      srcset: this.resolveSrcSet(mediaContainer),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates the media formats in a logical sorted order. The map contains the\r\n   * format key and the format size information. We do this only once for performance\r\n   * benefits.\r\n   */\r\n  protected get sortedFormats(): { code: string; size: MediaFormatSize }[] {\r\n    if (!this._sortedFormats) {\r\n      this._sortedFormats = Object.keys(\r\n        (this.config as MediaConfig).mediaFormats\r\n      )\r\n        .map((key) => ({\r\n          code: key,\r\n          size: (this.config as MediaConfig).mediaFormats[key],\r\n        }))\r\n        .sort((a, b) => (a.size.width > b.size.width ? 1 : -1));\r\n    }\r\n    return this._sortedFormats;\r\n  }\r\n\r\n  /**\r\n   * Creates the media formats in a reversed sorted order.\r\n   */\r\n  protected get reversedFormats(): { code: string; size: MediaFormatSize }[] {\r\n    if (!this._reversedFormats) {\r\n      this._reversedFormats = this.sortedFormats.slice().reverse();\r\n    }\r\n    return this._reversedFormats;\r\n  }\r\n\r\n  /**\r\n   * Resolves the right media for the given format. The fo\r\n   */\r\n  protected resolveMedia(media: MediaContainer, format?: string): Image {\r\n    return media[this.resolveFormat(media, format)];\r\n  }\r\n\r\n  /**\r\n   * Validates the format against the given mediaContainer. If there is no format available,\r\n   * or if the mediaContainer doesn't contain a media for the given media, the most optimal\r\n   * format is resolved. If even that is not possible, the first format is returned.\r\n   */\r\n  protected resolveFormat(\r\n    mediaContainer: MediaContainer,\r\n    format?: string\r\n  ): string {\r\n    if (format && mediaContainer[format]) {\r\n      return format;\r\n    }\r\n    return (\r\n      this.resolveBestFormat(mediaContainer) || Object.keys(mediaContainer)[0]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the media format code with the best size.\r\n   */\r\n  protected resolveBestFormat(media: MediaContainer | Image): string {\r\n    return this.reversedFormats.find((format) =>\r\n      media.hasOwnProperty(format.code)\r\n    )?.code;\r\n  }\r\n\r\n  /**\r\n   * Returns a set of media for the available media formats. Additionally, the congiured media\r\n   * format width is added to the srcset, so that browsers can select the appropriate media.\r\n   */\r\n  protected resolveSrcSet(media: MediaContainer | Image): string {\r\n    if (!media) {\r\n      return undefined;\r\n    }\r\n\r\n    const srcset = this.sortedFormats.reduce((set, format) => {\r\n      if (!!media[format.code]) {\r\n        if (set) {\r\n          set += ', ';\r\n        }\r\n        set += `${this.resolveAbsoluteUrl(media[format.code].url)} ${\r\n          format.size.width\r\n        }w`;\r\n      }\r\n      return set;\r\n    }, '');\r\n\r\n    return srcset === '' ? undefined : srcset;\r\n  }\r\n\r\n  /**\r\n   * Resolves the absolute URL for the given url. In most cases, this URL represents\r\n   * the relative URL on the backend. In that case, we prefix the url with the baseUrl.\r\n   */\r\n  protected resolveAbsoluteUrl(url: string): string {\r\n    if (!url) {\r\n      return null;\r\n    }\r\n    return url.startsWith('http') ? url : this.getBaseUrl() + url;\r\n  }\r\n\r\n  /**\r\n   * The base URL is either driven by a specific `backend.media.baseUrl`, or by the\r\n   * `backend.occ.baseUrl`.\r\n   *\r\n   * The `backend.media.baseUrl` can be used to load media from a different location.\r\n   *\r\n   * In Commerce Cloud, a differnt location could mean a different \"aspect\".\r\n   */\r\n  protected getBaseUrl(): string {\r\n    return (\r\n      (this.config as OccConfig).backend.media.baseUrl ||\r\n      (this.config as OccConfig).backend.occ.baseUrl ||\r\n      ''\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n} from '@angular/core';\r\nimport { Media, MediaContainer } from './media.model';\r\nimport { MediaService } from './media.service';\r\n\r\n@Component({\r\n  selector: 'cx-media',\r\n  templateUrl: './media.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MediaComponent implements OnChanges {\r\n  /**\r\n   * The media container can hold multiple media items, so that\r\n   * a specific media (by format) can be used or multiple media\r\n   * can be provided in a `srcset` so the browser will figure out\r\n   * the best media for the device.\r\n   */\r\n  @Input() container: MediaContainer;\r\n\r\n  /**\r\n   * if a media format is given, a media for the given format will be rendered\r\n   */\r\n  @Input() format: string;\r\n\r\n  /**\r\n   * A specific alt text for an image, which overrules the alt text\r\n   * from the container data.\r\n   */\r\n  @Input() alt: string;\r\n\r\n  /**\r\n   * Once the media is loaded, we emit an event.\r\n   */\r\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\r\n\r\n  /**\r\n   * The media contains the info for the UI to create the image. This media\r\n   * object might contain more info once other media types (i.e. video) is supported.\r\n   */\r\n  media: Media;\r\n\r\n  /**\r\n   * The `cx-media` component has an `is-initialized` class as long as the\r\n   * media is being initialized.\r\n   */\r\n  @HostBinding('class.is-initialized') isInitialized = false;\r\n\r\n  /**\r\n   * The `cx-media` component has a `is-loading` class as long as the\r\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\r\n   * is added.\r\n   */\r\n  @HostBinding('class.is-loading') isLoading = true;\r\n\r\n  /**\r\n   * When there's no media provided for the content, or in case an error\r\n   * happened during loading, we add the `is-missing` class. Visual effects\r\n   * can be controlled by CSS.\r\n   */\r\n  @HostBinding('class.is-missing') isMissing = false;\r\n\r\n  constructor(protected mediaService: MediaService) {}\r\n\r\n  ngOnChanges(): void {\r\n    this.create();\r\n  }\r\n\r\n  /**\r\n   * Creates the `Media` object\r\n   */\r\n  protected create(): void {\r\n    this.media = this.mediaService.getMedia(\r\n      this.container,\r\n      this.format,\r\n      this.alt\r\n    );\r\n    if (!this.media?.src) {\r\n      this.handleMissing();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This handler is called from the UI when the image is loaded.\r\n   */\r\n  loadHandler(): void {\r\n    this.isLoading = false;\r\n    this.isInitialized = true;\r\n    this.isMissing = false;\r\n    this.loaded.emit(true);\r\n  }\r\n\r\n  /**\r\n   * Whenever an error happens during load, we mark the component\r\n   * with css classes to have a missing media.\r\n   */\r\n  errorHandler(): void {\r\n    this.handleMissing();\r\n  }\r\n\r\n  protected handleMissing() {\r\n    this.isLoading = false;\r\n    this.isInitialized = true;\r\n    this.isMissing = true;\r\n    this.loaded.emit(false);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { MediaComponent } from './media.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [MediaComponent],\r\n  exports: [MediaComponent],\r\n})\r\nexport class MediaModule {\r\n  static forRoot(): ModuleWithProviders<MediaModule> {\r\n    return {\r\n      ngModule: MediaModule,\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, IconModule, MediaModule, UrlModule],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  HostBinding,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\n/**\r\n * This component renders form errors.\r\n */\r\n@Component({\r\n  selector: 'cx-form-errors',\r\n  templateUrl: './form-errors.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FormErrorsComponent {\r\n  _control: FormControl;\r\n  errors$: Observable<string[]>;\r\n\r\n  @Input()\r\n  set control(control: FormControl) {\r\n    this._control = control;\r\n\r\n    this.errors$ = control?.statusChanges.pipe(\r\n      startWith({}),\r\n      map(() => control.errors || {}),\r\n      map((errors) =>\r\n        Object.entries(errors)\r\n          .filter((error) => error[1])\r\n          .map((error) => error[0])\r\n      )\r\n    );\r\n  }\r\n\r\n  get control(): FormControl {\r\n    return this._control;\r\n  }\r\n\r\n  @HostBinding('class.control-invalid') get invalid() {\r\n    return this.control.invalid;\r\n  }\r\n  @HostBinding('class.control-dirty') get dirty() {\r\n    return this.control.dirty;\r\n  }\r\n  @HostBinding('class.control-touched') get touched() {\r\n    return this.control.touched;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormErrorsComponent } from './form-errors.component';\r\nimport { I18nModule } from '@spartacus/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule],\r\n  declarations: [FormErrorsComponent],\r\n  exports: [FormErrorsComponent],\r\n})\r\nexport class FormErrorsModule {}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Params, Router } from '@angular/router';\r\n\r\n// private\r\ninterface RouteParts {\r\n  /** Path in the Angular-like array format */\r\n  path?: string[];\r\n\r\n  /** Query params */\r\n  queryParams?: Params;\r\n\r\n  /** Hash fragment */\r\n  fragment?: string;\r\n}\r\n\r\n/**\r\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\r\n */\r\n@Component({\r\n  selector: 'cx-generic-link',\r\n  templateUrl: './generic-link.component.html',\r\n})\r\nexport class GenericLinkComponent implements OnChanges {\r\n  constructor(protected router: Router) {}\r\n\r\n  /**\r\n   * Pattern matching string starting with `http://` or `https://`.\r\n   */\r\n  private readonly PROTOCOL_REGEX: RegExp = /^https?:\\/\\//i;\r\n\r\n  /**\r\n   * Used to split url into 2 parts:\r\n   * 1. the path\r\n   * 2. query params + hash fragment\r\n   */\r\n  private readonly URL_SPLIT = /(^[^#?]*)(.*)/;\r\n\r\n  /**\r\n   * Parsed parts of the @Input `url`, when it's a local URL.\r\n   * It should not be used when the `url` is external.\r\n   * @see `url`\r\n   */\r\n  private routeParts: RouteParts = {};\r\n\r\n  @Input() url: string | any[];\r\n  @Input() target: string;\r\n  @Input() class: string;\r\n  @Input() id: string;\r\n  @Input() style: string;\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * Returns true when the @Input `url` is a string starting with `http://` or `https://`.\r\n   */\r\n  isExternalUrl(): boolean {\r\n    return typeof this.url === 'string' && this.PROTOCOL_REGEX.test(this.url);\r\n  }\r\n\r\n  get rel() {\r\n    return this.target === '_blank' ? 'noopener' : null;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['url']) {\r\n      this.setUrlParts(changes['url'].currentValue);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The part with the path of the local url.\r\n   */\r\n  get routerUrl(): any[] {\r\n    return this.routeParts.path;\r\n  }\r\n\r\n  /**\r\n   * The part with the query params of the local url.\r\n   */\r\n  get queryParams(): Params {\r\n    return this.routeParts.queryParams;\r\n  }\r\n\r\n  /**\r\n   * The part with the hash fragment of the local url.\r\n   */\r\n  get fragment(): string {\r\n    return this.routeParts.fragment;\r\n  }\r\n\r\n  /**\r\n   * Parses the given url and sets the property `urlParts` accordingly.\r\n   */\r\n  private setUrlParts(url: string | any[]) {\r\n    if (typeof url === 'string') {\r\n      url = this.getAbsoluteUrl(url); // string links in CMS sometimes don't have the leading slash, so fix it here\r\n      this.routeParts = this.splitUrl(url as string);\r\n    } else {\r\n      this.routeParts = { path: url };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses the given string into 3 parts:\r\n   * - string path (wrapped in an array to be compatible with Angular syntax for the `routerLink`)\r\n   * - query params (as an object)\r\n   * - hash fragment (string)\r\n   */\r\n  private splitUrl(url: string = ''): RouteParts {\r\n    const { queryParams, fragment } = this.router.parseUrl(url);\r\n    const [, path] = url.match(this.URL_SPLIT);\r\n\r\n    // wrap path in an array, to have the Angular-like path format\r\n    return { path: [path], queryParams, fragment };\r\n  }\r\n\r\n  /**\r\n   * Prepends a leading slash to the given URL string, in case it doesn't have it.\r\n   */\r\n  private getAbsoluteUrl(url: string): string {\r\n    return url.startsWith('/') ? url : '/' + url;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { startWith } from 'rxjs/operators';\r\n\r\n/**\r\n * Provides a UI to manage the count of the quantity, typically by using\r\n * increase and decrease functionality. The item counter expects an input `FormControl`\r\n * so that the state of the control can be managed outside of this component.\r\n */\r\n@Component({\r\n  selector: 'cx-item-counter',\r\n  templateUrl: './item-counter.component.html',\r\n  // do not use OnPush change detection strategy as we would not\r\n  // get updates of other form control state (disabled). We want to have a\r\n  // disabled state in order to ensure that the control cannot be used while\r\n  // the cart is updated.\r\n})\r\nexport class ItemCounterComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Holds the value of the counter, the state of the `FormControl`\r\n   * can be managed outside of the item counter.\r\n   */\r\n  @Input() control: FormControl;\r\n\r\n  /**\r\n   * This can be used in case an item has a minmum order quantity.\r\n   * @default 1\r\n   */\r\n  @Input() min = 1;\r\n\r\n  /**\r\n   * This can be used in case an item has a maximum order quantity.\r\n   */\r\n  @Input() max: number;\r\n\r\n  /**\r\n   * The step is used to increment the count. It is supposed to be a\r\n   * positive integer or float.\r\n   * @default 1\r\n   */\r\n  @Input() step = 1;\r\n\r\n  /**\r\n   * Indicates that the input can be manually set to zero,\r\n   * despite the fact that the input controls will be limited to\r\n   * the minimum. The zero value can be used to remove an item.\r\n   */\r\n  @Input() allowZero = false;\r\n\r\n  /**\r\n   * In readonly mode the item counter will only be shown as a label,\r\n   * the form controls are not rendered.\r\n   * Please not that readonly is different from the `disabled` form state.\r\n   * @default false\r\n   */\r\n  @HostBinding('class.readonly') @Input() readonly = false;\r\n\r\n  @ViewChild('qty') private input: ElementRef<HTMLInputElement>;\r\n\r\n  /**\r\n   * Subscription responsible for auto-correcting control's value when it's invalid.\r\n   */\r\n  private sub: Subscription;\r\n\r\n  @HostListener('click') handleClick() {\r\n    this.input.nativeElement.focus();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.control.valueChanges\r\n      .pipe(startWith(this.control.value))\r\n      .subscribe((value) =>\r\n        this.control.setValue(this.getValidCount(value), { emitEvent: false })\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  increment() {\r\n    // it's too early to use the `stepUp` and `stepDown` API...\r\n    // let's wait for FF: https://caniuse.com/#search=stepUp\r\n    this.control.setValue(this.control.value + this.step);\r\n    this.control.markAsDirty();\r\n  }\r\n\r\n  decrement() {\r\n    this.control.setValue(this.control.value - this.step);\r\n    this.control.markAsDirty();\r\n  }\r\n\r\n  /**\r\n   * Validate that the given value is in between\r\n   * the `min` and `max` value. If the value is out\r\n   * of  the min/max range, it will be altered.\r\n   * If `allowZero` is set to true, the 0 value is ignored.\r\n   *\r\n   */\r\n  private getValidCount(value: number) {\r\n    if (value < this.min && !(value === 0 && this.allowZero)) {\r\n      value = this.min;\r\n    }\r\n    if (this.max && value > this.max) {\r\n      value = this.max;\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ItemCounterComponent } from './item-counter.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  declarations: [ItemCounterComponent],\r\n  exports: [ItemCounterComponent],\r\n})\r\nexport class ItemCounterModule {}\r\n","import { PaginationConfig } from './pagination.config';\r\n\r\nexport const defaultPaginationConfig: PaginationConfig = {\r\n  pagination: {\r\n    addStart: true,\r\n    addEnd: true,\r\n  },\r\n};\r\n","import { PaginationOptions } from '../pagination.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class PaginationConfig {\r\n  pagination?: PaginationOptions;\r\n}\r\n","/**\r\n * Represents a page item for a pagination system. This is used\r\n * to store the model of each page.\r\n */\r\nexport interface PaginationItem {\r\n  label?: string;\r\n  type?: PaginationItemType;\r\n  /** The number is used when the type is {@link PaginationItemType.PAGE} */\r\n  number?: number;\r\n}\r\n\r\n/**\r\n * The item type is used to add semantic structure to the\r\n * PaginationItem, so that the UI understands the usage.\r\n */\r\nexport enum PaginationItemType {\r\n  GAP = 'gap',\r\n  FIRST = 'first',\r\n  LAST = 'last',\r\n  PREVIOUS = 'previous',\r\n  NEXT = 'next',\r\n  START = 'start',\r\n  END = 'end',\r\n  PAGE = 'page',\r\n}\r\n\r\nexport interface PaginationOptions {\r\n  /**\r\n   * The range of direct accessible pages in the pagination.\r\n   *\r\n   * `« 4 (5) 6 »`\r\n   *\r\n   * Defaults to 3.\r\n   */\r\n  rangeCount?: number;\r\n\r\n  /** Adds a link to skip to the start of the pages, defaults to false. */\r\n  addStart?: boolean;\r\n  /** A link to skip to the end of the pages, defaults to false. */\r\n  addEnd?: boolean;\r\n  /** A link to the previous page, defaults to false. */\r\n  addPrevious?: boolean;\r\n  /** A link to the previous page, defaults to false. */\r\n  addNext?: boolean;\r\n\r\n  navigationPosition?: PaginationNavigationPosition;\r\n\r\n  /** A link to the first page can be added in case it is not included already, defaults to false. */\r\n  addFirst?: boolean;\r\n  /** A link to the last page can be added in case it is not included already, defaults to false. */\r\n  addLast?: boolean;\r\n\r\n  /**\r\n   * Adds a gap before and after the pages. to visualize hidden pages. Defaults to false.\r\n   *\r\n   * `1 ...  4 (5) 6 ... 18`\r\n   *\r\n   * Defaults to false.\r\n   */\r\n  addDots?: boolean;\r\n\r\n  /**\r\n   * If the page dots only represents a single page, we rather add the page\r\n   * as this would take the same amount of space. Some UX might want to use\r\n   * the dots for consistency reasons, which why this option is configurable.\r\n   *\r\n   * This typically happens on the 4th page (in case the range is 3):\r\n   * Instead of having:\r\n   *\r\n   *  `1 ...  3 (4) 5`\r\n   *\r\n   * we'd have\r\n   *\r\n   * `1 2 3 (4) 5`.\r\n   *\r\n   * Defaults to false.\r\n   */\r\n  substituteDotsForSingularPage?: boolean;\r\n\r\n  /** Custom label for the start link, defaults to `«`. */\r\n  startLabel?: string;\r\n  /** Custom label for the previous link, defaults to `‹`. */\r\n  previousLabel?: string;\r\n  /** Custom label for the next link, defaults to `›`. */\r\n  nextLabel?: string;\r\n  /** Custom label for the end link, defaults to `»`. */\r\n  endLabel?: string;\r\n  /** Custom label for the dots, defaults to `...`. */\r\n  dotsLabel?: string;\r\n}\r\n\r\nexport enum PaginationNavigationPosition {\r\n  ASIDE = 'aside',\r\n  BEFORE = 'before',\r\n  AFTER = 'after',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PaginationConfig } from './config/pagination.config';\r\nimport {\r\n  PaginationItem,\r\n  PaginationItemType,\r\n  PaginationNavigationPosition,\r\n  PaginationOptions,\r\n} from './pagination.model';\r\n\r\nconst FALLBACK_PAGINATION_OPTIONS: PaginationOptions = {\r\n  rangeCount: 3,\r\n  dotsLabel: '...',\r\n  startLabel: '«',\r\n  previousLabel: '‹',\r\n  nextLabel: '›',\r\n  endLabel: '»',\r\n};\r\n\r\n/**\r\n * Builds a pagination structures based on a pageCount and current page number.\r\n * There are various {@link PaginationConfig} options which can be used to configure\r\n * the behaviour of the build. Alternatively, CSS can be used to further customise\r\n * the pagination.\r\n *\r\n * Examples:\r\n * The full blown pagination items contain the follow elements:\r\n *\r\n * `« ‹ 1 ... 4 (5) 6 ... 9 › »`\r\n *\r\n * This includes pagination items to the following pages:\r\n * - start page\r\n * - previous page\r\n * - first page\r\n * - page range\r\n * - last page\r\n * - next page\r\n * - end page\r\n *\r\n * All of those links are configurable, including the size of the page range.\r\n * The current page will always be centered in the page range to provide direct access\r\n * to the previous and next page.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PaginationBuilder {\r\n  constructor(protected paginationConfig: PaginationConfig) {}\r\n\r\n  /**\r\n   * Builds a list of `PaginationItem`. The give pageCount and current are used\r\n   * to build out the full pagination. There are various {@link PaginationConfig} options\r\n   * which can be used to configure the behaviour of the build. Alternatively, CSS\r\n   * can be used to further specialize visibility of the pagination.\r\n   *\r\n   * @param pageCount The total number of pages\r\n   * @param current The current page number, 0-index based\r\n   * @returns An array of `PaginationItem`\r\n   */\r\n  paginate(pageCount: number, current: number): PaginationItem[] {\r\n    const pages: PaginationItem[] = [];\r\n    if (pageCount < 2) {\r\n      return pages;\r\n    }\r\n    this.addPages(pages, pageCount, current);\r\n    this.addDots(pages, pageCount);\r\n    this.addFirstLast(pages, pageCount);\r\n    this.addNavigation(pages, pageCount, current);\r\n\r\n    return pages;\r\n  }\r\n\r\n  /**\r\n   * Returns the current page with surrounding pages (based on the `config.rangeCount`).\r\n   * The current page is always centered to provide direct access to the previous and next page.\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   * @param current The current page number, 0-index based\r\n   */\r\n  protected addPages(\r\n    pages: PaginationItem[],\r\n    pageCount: number,\r\n    current: number\r\n  ): void {\r\n    const start = this.getStartOfRange(pageCount, current);\r\n    const max = Math.min(this.config.rangeCount, pageCount);\r\n\r\n    Array.from(Array(max)).forEach((_, i) => {\r\n      pages.push({\r\n        number: i + start,\r\n        label: String(i + start + 1),\r\n        type: PaginationItemType.PAGE,\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds dots before and after the given pages, if configured (defaults to true).\r\n   * If the dots only represent a single page, the page number is added instead of\r\n   * the dots, unless the configuration requires dots always.\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   */\r\n  protected addDots(pages: PaginationItem[], pageCount: number): void {\r\n    if (!this.config.addDots) {\r\n      return;\r\n    }\r\n\r\n    const addFirstGap = () => {\r\n      const firstItemNumber = pages[0].number;\r\n      const gapNumber = this.config.addFirst ? 1 : 0;\r\n      if (firstItemNumber > gapNumber) {\r\n        const isGap =\r\n          !this.config.substituteDotsForSingularPage ||\r\n          firstItemNumber !== gapNumber + 1;\r\n        const isSubstitued =\r\n          this.config.addFirst &&\r\n          this.config.substituteDotsForSingularPage &&\r\n          gapNumber === 0;\r\n        const type = isGap\r\n          ? PaginationItemType.GAP\r\n          : isSubstitued\r\n          ? PaginationItemType.FIRST\r\n          : PaginationItemType.PAGE;\r\n        return [\r\n          Object.assign(\r\n            {\r\n              label: isGap ? this.config.dotsLabel : String(gapNumber + 1),\r\n              type,\r\n            },\r\n            isGap ? null : { number: gapNumber }\r\n          ),\r\n        ];\r\n      } else return [];\r\n    };\r\n\r\n    const addLastGap = () => {\r\n      const nextPageNumber = pages[pages.length - 1].number + 1;\r\n      const last = pageCount - (this.config.addLast ? 2 : 1);\r\n      if (nextPageNumber <= last) {\r\n        const isSubstitued =\r\n          this.config.addLast &&\r\n          this.config.substituteDotsForSingularPage &&\r\n          nextPageNumber === last;\r\n        const isGap =\r\n          nextPageNumber <\r\n          pageCount -\r\n            (this.config.substituteDotsForSingularPage ? 1 : 0) -\r\n            (this.config.addLast ? 1 : 0);\r\n\r\n        const type = isGap\r\n          ? PaginationItemType.GAP\r\n          : isSubstitued\r\n          ? PaginationItemType.LAST\r\n          : PaginationItemType.PAGE;\r\n        return [\r\n          Object.assign(\r\n            {\r\n              label: isGap ? this.config.dotsLabel : String(nextPageNumber + 1),\r\n              type,\r\n            },\r\n            isGap ? null : { number: nextPageNumber }\r\n          ),\r\n        ];\r\n      } else return [];\r\n    };\r\n\r\n    pages.unshift(...addFirstGap());\r\n    pages.push(...addLastGap());\r\n  }\r\n\r\n  /**\r\n   * Add links to the first and last page, if configured to do so.\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   *\r\n   */\r\n  protected addFirstLast(pages: PaginationItem[], pageCount: number) {\r\n    if (this.config.addFirst && pages[0].number !== 0) {\r\n      pages.unshift({\r\n        number: 0,\r\n        label: '1',\r\n        type: PaginationItemType.FIRST,\r\n      });\r\n    }\r\n    if (\r\n      this.config.addLast &&\r\n      pages[pages.length - 1].number !== pageCount - 1\r\n    ) {\r\n      pages.push({\r\n        number: pageCount - 1,\r\n        label: String(pageCount),\r\n        type: PaginationItemType.LAST,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add links to the start, previous, next and last page, if configured to do so.\r\n   * The order of the links can be configured by using the {@link PaginationConfig},\r\n   * using the `PaginationNavigationPosition` (`BEFORE` or `AFTER`).\r\n   * The `PaginationNavigationPosition` allows for 3 flavours:\r\n   *\r\n   * - by default the pagination starts with start and previous and ends with the next and end links\r\n   * - BEFORE – all navigation links are added in the front of the pagination list\r\n   * - AFTER – all navigation links are pushed to the end of the pagination list\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   * @param current The current page number, 0-index based\r\n   *\r\n   */\r\n  protected addNavigation(\r\n    pages: PaginationItem[],\r\n    pageCount: number,\r\n    current: number\r\n  ): void {\r\n    const before = this.getBeforeLinks(current);\r\n    const after = this.getAfter(pageCount, current);\r\n    const pos = this.config.navigationPosition;\r\n    if (!pos || pos === PaginationNavigationPosition.ASIDE) {\r\n      pages.unshift(...before);\r\n      pages.push(...after);\r\n    } else {\r\n      if (pos === PaginationNavigationPosition.BEFORE) {\r\n        pages.unshift(...before, ...after);\r\n      }\r\n      if (pos === PaginationNavigationPosition.AFTER) {\r\n        pages.push(...before, ...after);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the start and previous links, if applicable.\r\n   */\r\n  private getBeforeLinks(current: number): PaginationItem[] {\r\n    const list = [];\r\n\r\n    if (this.config.addStart) {\r\n      const start = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.startLabel,\r\n            type: PaginationItemType.START,\r\n          },\r\n          current > 0 ? { number: 0 } : null\r\n        );\r\n      };\r\n      list.push(start());\r\n    }\r\n    if (this.config.addPrevious) {\r\n      const previous = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.previousLabel,\r\n            type: PaginationItemType.PREVIOUS,\r\n          },\r\n          current > 0 ? { number: current - 1 } : null\r\n        );\r\n      };\r\n      list.push(previous());\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * Returns the next and end links, if applicable.\r\n   */\r\n  private getAfter(pageCount: number, current: number): PaginationItem[] {\r\n    const list = [];\r\n\r\n    if (this.config.addNext) {\r\n      const next = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.nextLabel,\r\n            type: PaginationItemType.NEXT,\r\n          },\r\n          current < pageCount - 1 ? { number: current + 1 } : null\r\n        );\r\n      };\r\n      list.push(next());\r\n    }\r\n    if (this.config.addEnd) {\r\n      const end = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.endLabel,\r\n            type: PaginationItemType.END,\r\n          },\r\n          current < pageCount - 1 ? { number: pageCount - 1 } : null\r\n        );\r\n      };\r\n      list.push(end());\r\n    }\r\n\r\n    return list;\r\n  }\r\n  /**\r\n   * Resolves the first page of the range we need to build.\r\n   * This is the page that is leading up to the range of the\r\n   * current page.\r\n   *\r\n   * @param pageCount The total number of pages.\r\n   * @param current The current page number, 0-index based.\r\n   */\r\n  private getStartOfRange(pageCount: number, current: number): number {\r\n    const count = this.config.rangeCount - 1;\r\n    // the least number of pages before and after the current\r\n    const delta = Math.round(count / 2);\r\n\r\n    // ensure that we start with at least the first page\r\n    const minStart = Math.max(0, current - delta);\r\n    // ensures that we start with at least 1 and do not pass the last range\r\n    const maxStart = Math.max(0, pageCount - count - 1);\r\n\r\n    // ensure that we get at least a full range at the end\r\n    return Math.min(maxStart, minStart);\r\n  }\r\n\r\n  private get config(): PaginationOptions {\r\n    return Object.assign(\r\n      FALLBACK_PAGINATION_OPTIONS,\r\n      this.paginationConfig.pagination\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { PaginationModel } from '@spartacus/core';\r\nimport { PaginationBuilder } from './pagination.builder';\r\nimport { PaginationItem, PaginationItemType } from './pagination.model';\r\n\r\n/**\r\n * The `PaginationComponent` is a generic component that is used for\r\n * all lists in Spartacus that require pagination. The component supports\r\n * all common features, which can be configured or hidden by CSS.\r\n */\r\n@Component({\r\n  selector: 'cx-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaginationComponent {\r\n  /** The (optional) pageRoute used for the anchor links created in the pagination   */\r\n  @Input() pageRoute: string;\r\n\r\n  /** The (optional) query parameter which is added to the page route.  */\r\n  @Input() queryParam: string;\r\n\r\n  /**\r\n   * Whenever there's a default page specified, the routing logic\r\n   * will omit the page number in routeLink or parameters.\r\n   */\r\n  @Input() defaultPage;\r\n\r\n  private _pagination: PaginationModel;\r\n  get pagination(): PaginationModel {\r\n    return this._pagination;\r\n  }\r\n  @Input() set pagination(value: PaginationModel) {\r\n    this._pagination = value;\r\n    this.render(value);\r\n  }\r\n\r\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  pages: PaginationItem[] = [];\r\n\r\n  constructor(\r\n    private paginationBuilder: PaginationBuilder,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  private render(pagination: PaginationModel) {\r\n    this.pages = this.paginationBuilder.paginate(\r\n      pagination.totalPages,\r\n      pagination.currentPage\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Inidicates whether the given item is the current item.\r\n   *\r\n   * @param item PaginationItem\r\n   * @returns boolean\r\n   */\r\n  isCurrent(item: PaginationItem): boolean {\r\n    return (\r\n      item.type === PaginationItemType.PAGE &&\r\n      item.number === this.pagination.currentPage\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the pagination item is inactive. This is used\r\n   * to disabled a link or set the tabindex to `-1`.\r\n   *\r\n   * Defaults to true\r\n   *\r\n   * @param item PaginationItem\r\n   * @returns returns -1 in case of a disabled\r\n   */\r\n  isInactive(item: PaginationItem): boolean {\r\n    return (\r\n      !item.hasOwnProperty('number') ||\r\n      item.number === this.pagination.currentPage\r\n    );\r\n  }\r\n\r\n  getQueryParams(item: PaginationItem): Params {\r\n    const queryParams = Object.assign(\r\n      {},\r\n      this.activatedRoute.snapshot.queryParams\r\n    );\r\n    if (\r\n      this.queryParam &&\r\n      item.number < this.pagination.totalPages &&\r\n      !this.isCurrent(item)\r\n    ) {\r\n      queryParams[this.queryParam] = item.number;\r\n    }\r\n    // omit the page number from the query parameters in case it's the default\r\n    // to clean up the experience and avoid unnecessary polluting of the URL\r\n    if (queryParams[this.queryParam] === this.defaultPage) {\r\n      delete queryParams[this.queryParam];\r\n    }\r\n    return queryParams;\r\n  }\r\n\r\n  pageChange(page: PaginationItem): void {\r\n    this.viewPageEvent.emit(page.number);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { provideDefaultConfig } from '@spartacus/core';\r\nimport { defaultPaginationConfig } from './config/index';\r\nimport { PaginationComponent } from './pagination.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule],\r\n  providers: [provideDefaultConfig(defaultPaginationConfig)],\r\n  declarations: [PaginationComponent],\r\n  exports: [PaginationComponent],\r\n})\r\nexport class PaginationModule {}\r\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[];\n  @Input()\n  selectedOption: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string };\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { PaginationComponent, PaginationModule } from './pagination/index';\r\nimport { SortingComponent } from './sorting/sorting.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, NgSelectModule, FormsModule, PaginationModule],\r\n  declarations: [SortingComponent],\r\n  exports: [SortingComponent, PaginationComponent],\r\n})\r\nexport class ListNavigationModule {}\r\n","import { MediaFormatSize } from './media.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n/**\r\n * Provides configuration specific to Media, such as images. This is used to optimize\r\n * rendering of the media, SEO and performance.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class MediaConfig {\r\n  /**\r\n   * Media _format_ configuration holds the size of the media's assigned to\r\n   * a format.\r\n   */\r\n  mediaFormats?: {\r\n    /**\r\n     * Represents the media format code, that is the key to distinguish different\r\n     * media in a container.\r\n     */\r\n    [format: string]: MediaFormatSize;\r\n  };\r\n}\r\n","import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * A reference to a newly opened modal\n *\n * @todo remove ngb dependency and create our own implementation of ModalRef\n */\nexport class ModalRef extends NgbModalRef {}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalRef } from './modal-ref';\nimport { ModalOptions } from './modal-options';\n\n/**\n * A service to handle modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: ModalRef[] = [];\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(content: any, options?: ModalOptions): ModalRef {\n    let activeModal: ModalRef;\n\n    activeModal = this.ngbModalService.open(content, options);\n    this.modals.push(activeModal);\n\n    return activeModal;\n  }\n\n  getActiveModal(): ModalRef {\n    const modal = this.modals[this.modals.length - 1];\n    return modal ? modal : null;\n  }\n\n  dismissActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.dismiss(reason);\n      this.modals.pop();\n    }\n  }\n\n  closeActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.close(reason);\n      this.modals.pop();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  GlobalMessageEntities,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-global-message',\r\n  templateUrl: './global-message.component.html',\r\n})\r\nexport class GlobalMessageComponent implements OnInit {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  messages$: Observable<GlobalMessageEntities>;\r\n  messageType: typeof GlobalMessageType = GlobalMessageType;\r\n\r\n  constructor(protected globalMessageService: GlobalMessageService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.messages$ = this.globalMessageService.get();\r\n  }\r\n\r\n  clear(type: GlobalMessageType, index: number): void {\r\n    this.globalMessageService.remove(type, index);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { GlobalMessageComponent } from './global-message.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule, IconModule, I18nModule],\r\n  declarations: [GlobalMessageComponent],\r\n  exports: [GlobalMessageComponent],\r\n})\r\nexport class GlobalMessageComponentModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n/**\r\n * Configuration options for the Qualtrics integration, which allows you to\r\n * specify the qualtrics project and deployment script.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class QualtricsConfig {\r\n  /**\r\n   * Holds the qualtrics integration options.\r\n   */\r\n  qualtrics?: {\r\n    /**\r\n     * Deployment script, loaded from a resource, to integrate the deployment of the qualtrics project.\r\n     * You would typically store the file in the local assets folder.\r\n     *\r\n     * Defaults to `assets/qualtricsIntegration.js`\r\n     */\r\n    scriptSource?: string;\r\n  };\r\n}\r\n","import {\r\n  Injectable,\r\n  isDevMode,\r\n  Renderer2,\r\n  RendererFactory2,\r\n} from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { fromEvent, Observable, of } from 'rxjs';\r\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\r\n\r\nexport const QUALTRICS_EVENT_NAME = 'qsi_js_loaded';\r\n\r\n/**\r\n * Service to integration Qualtrics.\r\n *\r\n * The integration observes the Qualtrics API, and when available, it runs the QSI API\r\n * to let Qualtrics evaluate the application.\r\n *\r\n * The service supports an additional _hook_ (`isDataLoaded()`) that can be used to load application\r\n * data before pulling the QSI API. This is beneficial in a single page application when additional\r\n * data is required before the Qualtrics _creatives_ run.\r\n *\r\n * This service also supports the creation of the Qualtrics deployment script. This is optional, as\r\n * the script can be added in alternatives ways.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QualtricsLoaderService {\r\n  /**\r\n   * Reference to the QSI API.\r\n   */\r\n  protected qsiApi: any;\r\n\r\n  /**\r\n   * QSI load event that happens when the QSI JS file is loaded.\r\n   */\r\n  private qsiLoaded$: Observable<any> = this.winRef?.nativeWindow\r\n    ? fromEvent(this.winRef.nativeWindow, QUALTRICS_EVENT_NAME)\r\n    : of();\r\n\r\n  /**\r\n   * Emits the Qualtrics Site Intercept (QSI) JavaScript API whenever available.\r\n   *\r\n   * The API is emitted when the JavaScript resource holding this API is fully loaded.\r\n   * The API is also stored locally in the service, in case it's required later on.\r\n   */\r\n  protected qsi$: Observable<any> = this.qsiLoaded$.pipe(\r\n    switchMap(() => this.isDataLoaded()),\r\n    map(() => this.winRef?.nativeWindow['QSI']),\r\n    filter((api) => Boolean(api)),\r\n    tap((qsi) => (this.qsiApi = qsi))\r\n  );\r\n\r\n  constructor(\r\n    protected winRef: WindowRef,\r\n    protected rendererFactory: RendererFactory2\r\n  ) {\r\n    this.initialize();\r\n  }\r\n\r\n  /**\r\n   * Starts observing the Qualtrics integration. The integration is based on a\r\n   * Qualtrics specific event (`qsi_js_loaded`). As soon as this events happens,\r\n   * we run the API.\r\n   */\r\n  protected initialize() {\r\n    this.qsi$.subscribe(() => this.run());\r\n  }\r\n\r\n  /**\r\n   * Evaluates the Qualtrics project code for the application.\r\n   *\r\n   * In order to reload the evaluation in Qualtrics, the API requires to unload the API before\r\n   * running it again. We don't do this by default, but offer a flag to conditionally unload the API.\r\n   */\r\n  protected run(reload = false): void {\r\n    if (!this.qsiApi?.API) {\r\n      if (isDevMode()) {\r\n        console.log('The QSI api is not available');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (reload) {\r\n      // Removes any currently displaying creatives\r\n      this.qsiApi.API.unload();\r\n    }\r\n\r\n    // Starts the intercept code evaluation right after loading the Site Intercept\r\n    // code for any defined intercepts or creatives\r\n    this.qsiApi.API.load().done(this.qsiApi.API.run());\r\n  }\r\n\r\n  /**\r\n   * Adds the deployment script to the DOM.\r\n   *\r\n   * The script will not be added twice if it was loaded before. In that case, we use\r\n   * the Qualtrics API directly to _unload_ and _run_ the project.\r\n   */\r\n  addScript(scriptSource: string): void {\r\n    if (this.hasScript(scriptSource)) {\r\n      this.run(true);\r\n    } else {\r\n      const script: HTMLScriptElement = this.renderer.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.defer = true;\r\n      script.src = scriptSource;\r\n      this.renderer.appendChild(this.winRef.document.body, script);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This logic exist in order to let the client(s) add their own logic to wait for any kind of page data.\r\n   * You can observe any data in this method.\r\n   *\r\n   * Defaults to true.\r\n   */\r\n  protected isDataLoaded(): Observable<boolean> {\r\n    return of(true);\r\n  }\r\n\r\n  /**\r\n   * Indicates if the script is already added to the DOM.\r\n   */\r\n  protected hasScript(source?: string): boolean {\r\n    return !!this.winRef.document.querySelector(`script[src=\"${source}\"]`);\r\n  }\r\n\r\n  protected get renderer(): Renderer2 {\r\n    return this.rendererFactory.createRenderer(null, null);\r\n  }\r\n}\r\n","import { Component, isDevMode } from '@angular/core';\r\nimport { QualtricsConfig } from './config/qualtrics-config';\r\nimport { QualtricsLoaderService } from './qualtrics-loader.service';\r\n/**\r\n * Adds the Qualtrics deployment script whenever the component is loaded. The\r\n * deployment script is loaded from the global configuration (`qualtrics.scriptSource`).\r\n */\r\n@Component({\r\n  selector: 'cx-qualtrics',\r\n  template: ``,\r\n})\r\nexport class QualtricsComponent {\r\n  constructor(\r\n    protected qualtricsLoader: QualtricsLoaderService,\r\n    protected config: QualtricsConfig\r\n  ) {\r\n    if (this.config.qualtrics?.scriptSource) {\r\n      this.qualtricsLoader.addScript(this.config.qualtrics.scriptSource);\r\n    } else if (isDevMode()) {\r\n      console.warn(\r\n        `We're unable to add the Qualtrics deployment code as there is no script source defined in config.qualtrics.scriptSource.`\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { QualtricsConfig } from './qualtrics-config';\n\nexport const defaultQualtricsConfig: QualtricsConfig = {\n  qualtrics: {},\n};\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { defaultQualtricsConfig } from './config/default-qualtrics-config';\r\nimport { QualtricsComponent } from './qualtrics.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule],\r\n  declarations: [QualtricsComponent],\r\n  entryComponents: [QualtricsComponent],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        QualtricsComponent: {\r\n          component: QualtricsComponent,\r\n        },\r\n      },\r\n    }),\r\n    provideDefaultConfig(defaultQualtricsConfig),\r\n  ],\r\n})\r\nexport class QualtricsModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector context=\"language\"></cx-site-context-selector>\n    <cx-site-context-selector context=\"currency\"></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","import { Injectable, Injector, Optional } from '@angular/core';\r\nimport {\r\n  CmsSiteContextSelectorComponent,\r\n  ContextServiceMap,\r\n  CURRENCY_CONTEXT_ID,\r\n  LANGUAGE_CONTEXT_ID,\r\n  SiteContext,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map, switchMap, take } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { SiteContextType } from './site-context.model';\r\n\r\nconst LABELS = {\r\n  [LANGUAGE_CONTEXT_ID]: 'Language',\r\n  [CURRENCY_CONTEXT_ID]: 'Currency',\r\n};\r\n\r\n@Injectable()\r\nexport class SiteContextComponentService {\r\n  constructor(\r\n    @Optional()\r\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\r\n    private contextServiceMap: ContextServiceMap,\r\n    protected injector: Injector\r\n  ) {}\r\n\r\n  getItems(context?: SiteContextType): Observable<any> {\r\n    return this.getService(context).pipe(\r\n      switchMap((service: SiteContext<any>) => service.getAll()),\r\n      switchMap((items) =>\r\n        this.getContext(context).pipe(\r\n          switchMap((ctx) => {\r\n            const itemsCopy = [];\r\n            for (const item of items) {\r\n              itemsCopy.push({\r\n                ...item,\r\n                label: this.getOptionLabel(item, ctx),\r\n              });\r\n            }\r\n            return of(itemsCopy);\r\n          })\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getActiveItem(context?: SiteContextType): Observable<string> {\r\n    return this.getService(context).pipe(\r\n      switchMap((service: SiteContext<any>) => service.getActive())\r\n    );\r\n  }\r\n\r\n  getLabel(context?: SiteContextType): Observable<any> {\r\n    return this.getContext(context).pipe(\r\n      map((ctx) => {\r\n        return LABELS[ctx];\r\n      })\r\n    );\r\n  }\r\n\r\n  setActive(value: string, context?: SiteContextType): void {\r\n    this.getService(context)\r\n      .pipe(take(1))\r\n      .subscribe((service) => {\r\n        service.setActive(value);\r\n      });\r\n  }\r\n\r\n  protected getService(\r\n    context?: SiteContextType\r\n  ): Observable<SiteContext<any>> {\r\n    return this.getContext(context).pipe(\r\n      map((ctx: string) => (ctx ? this.getInjectedService(ctx) : undefined)),\r\n      filter((s) => !!s)\r\n    );\r\n  }\r\n\r\n  protected getContext(context?: SiteContextType): Observable<string> {\r\n    if (context) {\r\n      return of(context);\r\n    } else if (this.componentData) {\r\n      return this.componentData.data$.pipe(\r\n        map((data) => data?.context),\r\n        map((ctx) => {\r\n          switch (ctx) {\r\n            case 'LANGUAGE':\r\n              return LANGUAGE_CONTEXT_ID;\r\n            case 'CURRENCY':\r\n              return CURRENCY_CONTEXT_ID;\r\n            default:\r\n              return ctx;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  protected getInjectedService(context: string): SiteContext<any> {\r\n    return this.injector.get<SiteContext<any>>(\r\n      this.contextServiceMap[context],\r\n      null\r\n    );\r\n  }\r\n\r\n  protected getOptionLabel(item: any, context?: string): string {\r\n    switch (context) {\r\n      case LANGUAGE_CONTEXT_ID:\r\n        return item.nativeName;\r\n      case CURRENCY_CONTEXT_ID:\r\n        return item.symbol + ' ' + item.isocode;\r\n      default:\r\n        return item.isocode;\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { Injector, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  ContextServiceMap,\r\n  provideDefaultConfig,\r\n  SiteContextModule,\r\n} from '@spartacus/core';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { IconModule } from '../icon/index';\r\nimport { LanguageCurrencyComponent } from './language-currency.component';\r\nimport { SiteContextComponentService } from './site-context-component.service';\r\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, SiteContextModule, IconModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSSiteContextComponent: {\r\n          component: SiteContextSelectorComponent,\r\n          providers: [\r\n            {\r\n              provide: SiteContextComponentService,\r\n              useClass: SiteContextComponentService,\r\n              deps: [CmsComponentData, ContextServiceMap, Injector],\r\n            },\r\n          ],\r\n        },\r\n        LanguageCurrencyComponent: {\r\n          component: LanguageCurrencyComponent,\r\n        },\r\n      },\r\n    }),\r\n    SiteContextComponentService,\r\n  ],\r\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\r\n  entryComponents: [SiteContextSelectorComponent, LanguageCurrencyComponent],\r\n  exports: [SiteContextSelectorComponent, LanguageCurrencyComponent],\r\n})\r\nexport class SiteContextSelectorModule {}\r\n","export enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\r\n\r\n@Component({\r\n  selector: 'cx-star-rating',\r\n  templateUrl: './star-rating.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class StarRatingComponent implements OnInit {\r\n  /**\r\n   * The rating component can be used in disabled mode,\r\n   * so that the interation is not provided.\r\n   */\r\n  @Input() @HostBinding('attr.disabled') disabled = false;\r\n\r\n  /**\r\n   * The rating will be used to render some colorful stars in the UI.\r\n   */\r\n  @Input() rating: number;\r\n\r\n  /**\r\n   * Emits the given rating when the user clicks on a star.\r\n   */\r\n  // tslint:disable-next-line:no-output-native\r\n  @Output() change = new EventEmitter<number>();\r\n\r\n  private initialRate = 0;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(protected el: ElementRef, protected renderer: Renderer2) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setRate(this.rating, true);\r\n  }\r\n\r\n  setRate(value: number, force?: boolean): void {\r\n    if (!this.disabled || force) {\r\n      this.renderer.setAttribute(\r\n        this.el.nativeElement,\r\n        'style',\r\n        `--star-fill:${value || this.initialRate};`\r\n      );\r\n    }\r\n  }\r\n\r\n  saveRate(rating: number): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    this.initialRate = rating;\r\n    this.setRate(rating);\r\n    this.change.emit(rating);\r\n  }\r\n\r\n  setRateOnEvent(event: any, rating: number) {\r\n    if (event.code === 'Space') {\r\n      event.preventDefault();\r\n      this.setRate(rating);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class ViewConfig {\r\n  view?: {\r\n    /**\r\n     * Configurations related to the view of the application\r\n     */\r\n    infiniteScroll?: {\r\n      active?: boolean;\r\n      productLimit?: number;\r\n      showMoreButton?: boolean;\r\n    };\r\n  };\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { provideDefaultConfig } from '@spartacus/core';\r\n\r\n@NgModule({})\r\nexport class ViewConfigModule {\r\n  static forRoot(): ModuleWithProviders<ViewConfigModule> {\r\n    return {\r\n      ngModule: ViewConfigModule,\r\n      providers: [\r\n        provideDefaultConfig({\r\n          view: {},\r\n        }),\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Order, RoutingService, UserOrderService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderDetailsService {\r\n  orderCode$: Observable<string>;\r\n  orderLoad$: Observable<{}>;\r\n\r\n  constructor(\r\n    private userOrderService: UserOrderService,\r\n    private routingService: RoutingService\r\n  ) {\r\n    this.orderCode$ = this.routingService\r\n      .getRouterState()\r\n      .pipe(map((routingData) => routingData.state.params.orderCode));\r\n\r\n    this.orderLoad$ = this.orderCode$.pipe(\r\n      tap((orderCode) => {\r\n        if (orderCode) {\r\n          this.userOrderService.loadOrderDetails(orderCode);\r\n        } else {\r\n          this.userOrderService.clearOrderDetails();\r\n        }\r\n      }),\r\n      shareReplay({ bufferSize: 1, refCount: true })\r\n    );\r\n  }\r\n\r\n  getOrderDetails(): Observable<Order> {\r\n    return this.orderLoad$.pipe(\r\n      switchMap(() => this.userOrderService.getOrderDetails())\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  CheckoutService,\r\n  Order,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../../../cms-components/myaccount/order/order-details/order-details.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PromotionService {\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected checkoutService: CheckoutService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  getOrderPromotions(\r\n    promotionLocation: PromotionLocation\r\n  ): Observable<PromotionResult[]> {\r\n    switch (promotionLocation) {\r\n      case PromotionLocation.ActiveCart:\r\n        return this.getOrderPromotionsFromCart();\r\n      case PromotionLocation.Checkout:\r\n        return this.getOrderPromotionsFromCheckout();\r\n      case PromotionLocation.Order:\r\n        return this.getOrderPromotionsFromOrder();\r\n      default:\r\n        return of([]);\r\n    }\r\n  }\r\n\r\n  getOrderPromotionsFromCart(): Observable<PromotionResult[]> {\r\n    return this.activeCartService\r\n      .getActive()\r\n      .pipe(map((cart) => this.getOrderPromotionsFromCartHelper(cart)));\r\n  }\r\n\r\n  private getOrderPromotionsFromCartHelper(cart: Cart): PromotionResult[] {\r\n    const potentialPromotions = [];\r\n    potentialPromotions.push(...(cart.potentialOrderPromotions || []));\r\n\r\n    const appliedPromotions = [];\r\n    appliedPromotions.push(...(cart.appliedOrderPromotions || []));\r\n\r\n    return [...potentialPromotions, ...appliedPromotions];\r\n  }\r\n\r\n  getOrderPromotionsFromCheckout(): Observable<PromotionResult[]> {\r\n    return this.checkoutService\r\n      .getOrderDetails()\r\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\r\n  }\r\n\r\n  getOrderPromotionsFromOrder(): Observable<PromotionResult[]> {\r\n    return this.orderDetailsService\r\n      .getOrderDetails()\r\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\r\n  }\r\n\r\n  private getOrderPromotionsFromOrderHelper(order: Order): PromotionResult[] {\r\n    const appliedOrderPromotions = [];\r\n    appliedOrderPromotions.push(...(order.appliedOrderPromotions || []));\r\n\r\n    return appliedOrderPromotions;\r\n  }\r\n\r\n  getProductPromotionForEntry(\r\n    item: OrderEntry,\r\n    promotionLocation: PromotionLocation\r\n  ): Observable<PromotionResult[]> {\r\n    switch (promotionLocation) {\r\n      case PromotionLocation.ActiveCart:\r\n        return this.activeCartService\r\n          .getActive()\r\n          .pipe(\r\n            map((cart) =>\r\n              this.getProductPromotion(\r\n                item,\r\n                cart.appliedProductPromotions || []\r\n              )\r\n            )\r\n          );\r\n      case PromotionLocation.Checkout:\r\n        return this.checkoutService\r\n          .getOrderDetails()\r\n          .pipe(\r\n            map((order) =>\r\n              this.getProductPromotion(\r\n                item,\r\n                order.appliedProductPromotions || []\r\n              )\r\n            )\r\n          );\r\n      case PromotionLocation.Order:\r\n        return this.orderDetailsService\r\n          .getOrderDetails()\r\n          .pipe(\r\n            map((order) =>\r\n              this.getProductPromotion(\r\n                item,\r\n                order.appliedProductPromotions || []\r\n              )\r\n            )\r\n          );\r\n    }\r\n  }\r\n\r\n  private getProductPromotion(\r\n    item: OrderEntry,\r\n    promotions: PromotionResult[]\r\n  ): PromotionResult[] {\r\n    const entryPromotions: PromotionResult[] = [];\r\n    if (promotions && promotions.length > 0) {\r\n      for (const promotion of promotions) {\r\n        if (\r\n          promotion.description &&\r\n          promotion.consumedEntries &&\r\n          promotion.consumedEntries.length > 0\r\n        ) {\r\n          for (const consumedEntry of promotion.consumedEntries) {\r\n            if (this.isConsumedByEntry(consumedEntry, item)) {\r\n              entryPromotions.push(promotion);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return entryPromotions;\r\n  }\r\n\r\n  private isConsumedByEntry(consumedEntry: any, entry: any): boolean {\r\n    const consumedEntryNumber = consumedEntry.orderEntryNumber;\r\n    if (entry.entries && entry.entries.length > 0) {\r\n      for (const subEntry of entry.entries) {\r\n        if (subEntry.entryNumber === consumedEntryNumber) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    } else {\r\n      return consumedEntryNumber === entry.entryNumber;\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl, ValidationErrors, FormGroup } from '@angular/forms';\r\nimport { EMAIL_PATTERN, PASSWORD_PATTERN } from '@spartacus/core';\r\n\r\nexport class CustomFormValidators {\r\n  /**\r\n   * Checks control's value with predefined email regexp\r\n   *\r\n   * NOTE: Use it as a control validator\r\n   *\r\n   * @static\r\n   * @param {AbstractControl} control\r\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidEmail' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\r\n    const email = control.value as string;\r\n\r\n    return !email.length || email.match(EMAIL_PATTERN)\r\n      ? null\r\n      : { cxInvalidEmail: true };\r\n  }\r\n\r\n  /**\r\n   * Checks control's value with predefined password regexp\r\n   *\r\n   * NOTE: Use it as a control validator\r\n   *\r\n   * @static\r\n   * @param {AbstractControl} control\r\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidPassword' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\r\n    const password = control.value as string;\r\n\r\n    return !password.length || password.match(PASSWORD_PATTERN)\r\n      ? null\r\n      : { cxInvalidPassword: true };\r\n  }\r\n\r\n  /**\r\n   * Checks if control's value is between 1 and 5\r\n   *\r\n   * NOTE: Use it as a control validator\r\n   *\r\n   * @static\r\n   * @param {AbstractControl} control\r\n   * @returns {(ValidationErrors | null)} Uses 'cxStarRatingEmpty' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static starRatingEmpty(control: AbstractControl): ValidationErrors | null {\r\n    const rating = control.value as number;\r\n\r\n    return rating >= 1 && rating <= 5 ? null : { cxStarRatingEmpty: true };\r\n  }\r\n\r\n  /**\r\n   * Checks if two password controls match\r\n   *\r\n   * NOTE: Use it as a form validator and pass password control names as parameters\r\n   *\r\n   * @static\r\n   * @param {string} password First password control name\r\n   * @param {string} passwordConfirmation Second password control name\r\n   * @returns Uses 'cxPasswordsMustMatch' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static passwordsMustMatch(\r\n    password: string,\r\n    passwordConfirmation: string\r\n  ): any {\r\n    const validator = (formGroup: FormGroup) =>\r\n      controlsMustMatch(\r\n        formGroup,\r\n        password,\r\n        passwordConfirmation,\r\n        'cxPasswordsMustMatch'\r\n      );\r\n\r\n    return validator;\r\n  }\r\n\r\n  /**\r\n   * Checks if two email controls match\r\n   *\r\n   * NOTE: Use it as a form validator and pass email control names as parameters\r\n   *\r\n   * @static\r\n   * @param {string} email First email control name\r\n   * @param {string} emailConfirmation Second email control name\r\n   * @returns Uses 'cxEmailsMustMatch' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static emailsMustMatch(email: string, emailConfirmation: string): any {\r\n    const validator = (formGroup: FormGroup) =>\r\n      controlsMustMatch(\r\n        formGroup,\r\n        email,\r\n        emailConfirmation,\r\n        'cxEmailsMustMatch'\r\n      );\r\n\r\n    return validator;\r\n  }\r\n}\r\n\r\n/**\r\n * Generic function for validators, which checks if two passed controls match.\r\n *\r\n * @param formGroup\r\n * @param firstControlName First control to check\r\n * @param secondControlName Second control to check\r\n * @param errorName Error which will be returned by validator\r\n */\r\nexport function controlsMustMatch(\r\n  formGroup: FormGroup,\r\n  firstControlName: string,\r\n  secondControlName: string,\r\n  errorName: string\r\n): void {\r\n  const firstControl = formGroup.controls[firstControlName];\r\n  const secondControl = formGroup.controls[secondControlName];\r\n\r\n  if (secondControl.errors && !secondControl.errors[errorName]) {\r\n    return;\r\n  }\r\n\r\n  secondControl.setErrors(\r\n    firstControl.value !== secondControl.value ? { [errorName]: true } : null\r\n  );\r\n}\r\n","import { Title } from '@spartacus/core';\n\nexport const titleScores = {\n  mr: 1,\n  mrs: 2,\n  miss: 3,\n  ms: 4,\n  dr: 5,\n  rev: 6,\n};\n\nexport function sortTitles(title1: Title, title2: Title) {\n  if (!titleScores[title1.code] || !titleScores[title2.code]) {\n    return 1;\n  } else {\n    return titleScores[title1.code] - titleScores[title2.code];\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport {\r\n  CmsComponentMapping,\r\n  CmsConfig,\r\n  DeferLoadingStrategy,\r\n} from '@spartacus/core';\r\nimport { Route } from '@angular/router';\r\nimport { isPlatformServer } from '@angular/common';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsComponentsService {\r\n  private missingComponents: string[] = [];\r\n\r\n  constructor(\r\n    protected config: CmsConfig,\r\n    @Inject(PLATFORM_ID) protected platformId: Object\r\n  ) {}\r\n\r\n  /**\r\n   * Should be called to make sure all component mappings are determined,\r\n   * especially lazy loaded ones.\r\n   *\r\n   * It's recommended way to make sure all other methods of CmsComponentService\r\n   * will be able to work synchronously for asked component types and avoid risk\r\n   * of potential errors that could be thrown otherwise.\r\n   */\r\n  determineMappings(componentTypes: string[]): Observable<string[]> {\r\n    return of(componentTypes);\r\n  }\r\n\r\n  /**\r\n   * Return collection of component mapping configuration for specified list of\r\n   * component types.\r\n   *\r\n   * If component mapping can't be determined synchronously, for example, lazy\r\n   * loaded one, it will throw an error.\r\n   *\r\n   * To make sure component mapping is available, determineMappings()\r\n   * should be called and completed first.\r\n   */\r\n  getMapping(componentType: string): CmsComponentMapping {\r\n    const componentConfig = this.config.cmsComponents?.[componentType];\r\n\r\n    if (!componentConfig) {\r\n      if (!this.missingComponents.includes(componentType)) {\r\n        this.missingComponents.push(componentType);\r\n        console.warn(\r\n          `No component implementation found for the CMS component type '${componentType}'.\\n`,\r\n          `Make sure you implement a component and register it in the mapper.`\r\n        );\r\n      }\r\n    }\r\n\r\n    return componentConfig;\r\n  }\r\n\r\n  /**\r\n   * Checks, if component should be rendered as some components\r\n   * could be disabled for server side renderings\r\n   */\r\n  shouldRender(componentType: string): boolean {\r\n    const isSSR = isPlatformServer(this.platformId);\r\n    return !(isSSR && this.getMapping(componentType)?.disableSSR);\r\n  }\r\n\r\n  /**\r\n   * Return DeferLoadingStrategy for component type.\r\n   */\r\n  getDeferLoadingStrategy(componentType: string): DeferLoadingStrategy {\r\n    return this.config.cmsComponents?.[componentType]?.deferLoading;\r\n  }\r\n\r\n  /**\r\n   * Get cms driven child routes for components\r\n   */\r\n  getChildRoutes(componentTypes: string[]): Route[] {\r\n    const routes = [];\r\n    for (const componentType of componentTypes) {\r\n      if (this.shouldRender(componentType)) {\r\n        routes.push(...(this.getMapping(componentType)?.childRoutes ?? []));\r\n      }\r\n    }\r\n    return routes;\r\n  }\r\n\r\n  /**\r\n   * Get cms driven guards for components\r\n   */\r\n  getGuards(componentTypes: string[]): any[] {\r\n    const guards = new Set<any>();\r\n    for (const componentType of componentTypes) {\r\n      this.getMapping(componentType)?.guards?.forEach((guard) =>\r\n        guards.add(guard)\r\n      );\r\n    }\r\n    return Array.from(guards);\r\n  }\r\n\r\n  /**\r\n   * Get i18n keys associated with components\r\n   */\r\n  getI18nKeys(componentTypes: string[]): string[] {\r\n    const i18nKeys = new Set<string>();\r\n    for (const componentType of componentTypes) {\r\n      if (this.shouldRender(componentType)) {\r\n        this.getMapping(componentType)?.i18nKeys?.forEach((key) =>\r\n          i18nKeys.add(key)\r\n        );\r\n      }\r\n    }\r\n    return Array.from(i18nKeys);\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { CmsComponentData } from '../../model';\r\nimport { CmsComponent, CmsService } from '@spartacus/core';\r\nimport { CmsComponentsService } from '../../../services/cms-components.service';\r\n\r\n/**\r\n * Used to prepare injector for CMS components.\r\n *\r\n * Injector will take into account configured providers and provides CmsComponentData\r\n * for specified component's uid\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsInjectorService {\r\n  constructor(\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected injector: Injector\r\n  ) {}\r\n\r\n  private getCmsData<T extends CmsComponent>(\r\n    uid: string,\r\n    parentInjector?: Injector\r\n  ): CmsComponentData<T> {\r\n    return {\r\n      uid: uid,\r\n      data$: (parentInjector ?? this.injector)\r\n        .get(CmsService)\r\n        .getComponentData<T>(uid),\r\n    };\r\n  }\r\n\r\n  public getInjector(\r\n    type: string,\r\n    uid: string,\r\n    parentInjector?: Injector\r\n  ): Injector {\r\n    const configProviders =\r\n      this.cmsComponentsService.getMapping(type)?.providers ?? [];\r\n    return Injector.create({\r\n      providers: [\r\n        {\r\n          provide: CmsComponentData,\r\n          useValue: this.getCmsData(uid),\r\n        },\r\n        ...configProviders,\r\n      ],\r\n      parent: parentInjector ?? this.injector,\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  ElementRef,\r\n  Injector,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Applicable, CmsComponentMapping, Priority } from '@spartacus/core';\r\n\r\n/**\r\n * ComponentHandler implementations can be used for instantiating and launching\r\n * different types of CMS mapped components\r\n */\r\nexport abstract class ComponentHandler implements Applicable {\r\n  /**\r\n   * Returns component resource - an observable stream used to launch and dispose\r\n   * component.\r\n   *\r\n   * Instantiate and launch component by subscribing to launcher.\r\n   * Successful component launch will be followed by emission of ElementRef\r\n   * (and in case of native Angular component, also ComponentRef).\r\n   * Unsubscribing from the launcher will remove and tear down the component.\r\n   *\r\n   * @param componentMapping\r\n   * @param viewContainerRef\r\n   * @param elementInjector\r\n   */\r\n  abstract launcher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }>;\r\n\r\n  abstract hasMatch(componentMapping: CmsComponentMapping): boolean;\r\n  abstract getPriority?(): Priority;\r\n}\r\n","import {\r\n  ComponentRef,\r\n  ElementRef,\r\n  Inject,\r\n  Injectable,\r\n  Injector,\r\n  isDevMode,\r\n  Optional,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ComponentHandler } from '../handlers/component-handler';\r\nimport { CmsComponentMapping, resolveApplicable } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * Responsible for obtaining component handler for specified component mapping\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComponentHandlerService {\r\n  constructor(\r\n    @Optional()\r\n    @Inject(ComponentHandler)\r\n    protected handlers: ComponentHandler[]\r\n  ) {}\r\n\r\n  protected invalidMappings = new Set<CmsComponentMapping>();\r\n\r\n  /**\r\n   * Get best matching component handler\r\n   *\r\n   * @param componentMapping\r\n   */\r\n  protected resolve(componentMapping: CmsComponentMapping): ComponentHandler {\r\n    const handler = resolveApplicable(this.handlers, [componentMapping]);\r\n\r\n    if (isDevMode() && !handler) {\r\n      if (!this.invalidMappings.has(componentMapping)) {\r\n        this.invalidMappings.add(componentMapping);\r\n        console.warn(\r\n          \"Can't resolve handler for component mapping: \",\r\n          componentMapping\r\n        );\r\n      }\r\n    }\r\n\r\n    return handler;\r\n  }\r\n\r\n  /**\r\n   * Get launcher for specified component mapping\r\n   *\r\n   * @param componentMapping\r\n   * @param viewContainerRef\r\n   * @param elementInjector\r\n   */\r\n  getLauncher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\r\n    return this.resolve(componentMapping)?.launcher(\r\n      componentMapping,\r\n      viewContainerRef,\r\n      elementInjector\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  Injector,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {\r\n  ContentSlotComponentData,\r\n  DynamicAttributeService,\r\n} from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CmsComponentsService } from '../../services/cms-components.service';\r\nimport { CmsInjectorService } from './services/cms-injector.service';\r\nimport { ComponentHandlerService } from './services/component-handler.service';\r\n\r\n/**\r\n * Directive used to facilitate instantiation of CMS driven dynamic components\r\n */\r\n@Directive({\r\n  selector: '[cxComponentWrapper]',\r\n})\r\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\r\n  @Input() cxComponentWrapper: ContentSlotComponentData;\r\n\r\n  /**\r\n   * @deprecated since 2.0\r\n   *\r\n   * This property in unsafe, i.e.\r\n   * - cmpRef can be set later because of lazy loading or deferred loading\r\n   * - cmpRef can be not set at all if for example, web components are used as cms components\r\n   */\r\n  cmpRef?: ComponentRef<any>;\r\n\r\n  private launcherResource?: Subscription;\r\n\r\n  constructor(\r\n    protected vcr: ViewContainerRef,\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected injector: Injector,\r\n    protected dynamicAttributeService: DynamicAttributeService,\r\n    protected renderer: Renderer2,\r\n    protected componentHandler: ComponentHandlerService,\r\n    protected cmsInjector: CmsInjectorService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.cmsComponentsService\r\n      .determineMappings([this.cxComponentWrapper.flexType])\r\n      .subscribe(() => {\r\n        if (\r\n          this.cmsComponentsService.shouldRender(\r\n            this.cxComponentWrapper.flexType\r\n          )\r\n        ) {\r\n          this.launchComponent();\r\n        }\r\n      });\r\n  }\r\n\r\n  private launchComponent() {\r\n    const componentMapping = this.cmsComponentsService.getMapping(\r\n      this.cxComponentWrapper.flexType\r\n    );\r\n\r\n    if (!componentMapping) {\r\n      return;\r\n    }\r\n\r\n    this.launcherResource = this.componentHandler\r\n      .getLauncher(\r\n        componentMapping,\r\n        this.vcr,\r\n        this.cmsInjector.getInjector(\r\n          this.cxComponentWrapper.flexType,\r\n          this.cxComponentWrapper.uid,\r\n          this.injector\r\n        )\r\n      )\r\n      ?.subscribe(({ elementRef, componentRef }) => {\r\n        this.cmpRef = componentRef;\r\n        this.decorate(elementRef);\r\n      });\r\n  }\r\n\r\n  private decorate(elementRef: ElementRef): void {\r\n    this.dynamicAttributeService.addDynamicAttributes(\r\n      elementRef.nativeElement,\r\n      this.renderer,\r\n      { componentData: this.cxComponentWrapper }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.launcherResource) {\r\n      this.launcherResource.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ElementRef,\r\n  Injectable,\r\n  Injector,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ComponentHandler } from './component-handler';\r\nimport { Observable } from 'rxjs';\r\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\r\n\r\n/**\r\n * Default component handler used for dynamically launching cms components implemented\r\n * as native Angular components.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DefaultComponentHandler implements ComponentHandler {\r\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\r\n    return typeof componentMapping.component === 'function';\r\n  }\r\n\r\n  getPriority(): Priority {\r\n    return Priority.FALLBACK;\r\n  }\r\n\r\n  launcher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\r\n    return new Observable<{\r\n      elementRef: ElementRef;\r\n      componentRef?: ComponentRef<any>;\r\n    }>((subscriber) => {\r\n      let componentRef: ComponentRef<any>;\r\n\r\n      const injector = elementInjector ?? viewContainerRef.injector;\r\n\r\n      const dispose = () => {\r\n        if (componentRef) {\r\n          componentRef.destroy();\r\n        }\r\n      };\r\n\r\n      const factory = this.getComponentFactory(\r\n        injector,\r\n        componentMapping.component\r\n      );\r\n\r\n      if (factory) {\r\n        componentRef = viewContainerRef.createComponent(\r\n          factory,\r\n          undefined,\r\n          injector\r\n        );\r\n        subscriber.next({ elementRef: componentRef.location, componentRef });\r\n      }\r\n\r\n      return dispose;\r\n    });\r\n  }\r\n\r\n  protected getComponentFactory(injector: Injector, component: any): any {\r\n    if (!component) {\r\n      return null;\r\n    }\r\n    const factory = injector\r\n      .get(ComponentFactoryResolver)\r\n      .resolveComponentFactory(component);\r\n\r\n    return factory;\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  ElementRef,\r\n  Injectable,\r\n  Injector,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\r\nimport { from, Observable } from 'rxjs';\r\nimport { DefaultComponentHandler } from './default-component.handler';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ComponentHandler } from './component-handler';\r\n\r\n/**\r\n * Lazy component handler used for launching lazy loaded cms components implemented\r\n * as native Angular components.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyComponentHandler implements ComponentHandler {\r\n  constructor(protected defaultHandler: DefaultComponentHandler) {}\r\n\r\n  /**\r\n   * We want to mach dynamic import signature () => import('')\r\n   */\r\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\r\n    return (\r\n      typeof componentMapping.component === 'function' &&\r\n      this.isNotClass(componentMapping.component)\r\n    );\r\n  }\r\n\r\n  private isNotClass(symbol: any): boolean {\r\n    const signature = symbol.toString().substr(0, 20).replace(' ', '');\r\n    return signature.startsWith('function()') || signature.startsWith('()=>');\r\n  }\r\n\r\n  getPriority(): Priority {\r\n    return Priority.LOW;\r\n  }\r\n\r\n  launcher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\r\n    return from(componentMapping.component()).pipe(\r\n      switchMap((component) =>\r\n        this.defaultHandler.launcher(\r\n          { ...componentMapping, component },\r\n          viewContainerRef,\r\n          elementInjector\r\n        )\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\r\nimport { ComponentHandler } from './handlers/component-handler';\r\nimport { DefaultComponentHandler } from './handlers/default-component.handler';\r\nimport { LazyComponentHandler } from './handlers/lazy-component.handler';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    {\r\n      provide: ComponentHandler,\r\n      useExisting: DefaultComponentHandler,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: ComponentHandler,\r\n      useExisting: LazyComponentHandler,\r\n      multi: true,\r\n    },\r\n  ],\r\n  declarations: [ComponentWrapperDirective],\r\n  exports: [ComponentWrapperDirective],\r\n})\r\nexport class PageComponentModule {}\r\n","export const ASM_ENABLED_LOCAL_STORAGE_KEY = 'asm_enabled';\n","import { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { LAUNCH_CALLER } from '../../../layout/launch-dialog/config/index';\r\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\r\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\r\n\r\n/**\r\n * The AsmEnablerService is used to enable ASM for those scenario's\r\n * where it's actually used. This service is added to avoid any polution\r\n * of the UI and runtime performance for the ordinary production user.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AsmEnablerService {\r\n  constructor(\r\n    protected location: Location,\r\n    protected winRef: WindowRef,\r\n    protected launchDialogService: LaunchDialogService\r\n  ) {}\r\n\r\n  /**\r\n   * Loads the ASM UI if needed. The ASM UI will be added based on the\r\n   * existence of a URL parameter or previous usage given by local storage.\r\n   */\r\n  load(): void {\r\n    if (this.isEnabled()) {\r\n      this.addUi();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the ASM module is enabled.\r\n   */\r\n  isEnabled(): boolean {\r\n    if (this.isLaunched() && !this.isUsedBefore()) {\r\n      if (this.winRef.localStorage) {\r\n        this.winRef.localStorage.setItem(ASM_ENABLED_LOCAL_STORAGE_KEY, 'true');\r\n      }\r\n    }\r\n    return this.isLaunched() || this.isUsedBefore();\r\n  }\r\n\r\n  /**\r\n   * Indicates whether ASM is launched through the URL,\r\n   * using the asm flag in the URL.\r\n   */\r\n  protected isLaunched(): boolean {\r\n    const params = this.location.path().split('?')[1];\r\n    return params && params.split('&').includes('asm=true');\r\n  }\r\n\r\n  /**\r\n   * Evaluates local storage where we persist the usage of ASM.\r\n   */\r\n  protected isUsedBefore(): boolean {\r\n    return (\r\n      this.winRef.localStorage &&\r\n      this.winRef.localStorage.getItem(ASM_ENABLED_LOCAL_STORAGE_KEY) === 'true'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Adds the ASM UI by using the `cx-storefront` outlet.\r\n   */\r\n  protected addUi(): void {\r\n    this.launchDialogService.launch(LAUNCH_CALLER.ASM);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\r\nimport { PageComponentModule } from '../../cms-structure/page/component/page-component.module';\r\nimport { AsmEnablerService } from './services/asm-enabler.service';\r\n\r\n/**\r\n * The ASM loader module takes care of loading the ASM UI\r\n * only in case there's a reason to do so.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PageComponentModule],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: asmFactory,\r\n      deps: [AsmEnablerService],\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class AsmLoaderModule {}\r\n\r\n/**\r\n *\r\n * We do not like to block the UI, which is why we delgate loading of ASM\r\n * to a real component; the router and state aren't available in an optimized\r\n * way during the APP_INITIALIZER.\r\n */\r\nexport function asmFactory(asmEnablerService: AsmEnablerService) {\r\n  const isReady = () => {\r\n    asmEnablerService.load();\r\n  };\r\n  return isReady;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  AsmAuthService,\r\n  AuthService,\r\n  RoutingService,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AsmComponentService {\r\n  constructor(\r\n    protected authService: AuthService,\r\n    protected asmAuthService: AsmAuthService,\r\n    protected routingService: RoutingService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  logoutCustomerSupportAgentAndCustomer(): void {\r\n    this.authService\r\n      .getUserToken()\r\n      .pipe(take(1))\r\n      .subscribe((token) => {\r\n        if (this.asmAuthService.isCustomerEmulationToken(token)) {\r\n          this.logoutCustomer();\r\n        }\r\n        this.asmAuthService.logoutCustomerSupportAgent();\r\n      });\r\n  }\r\n\r\n  logoutCustomer(): void {\r\n    this.authService.logout();\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  isCustomerEmulationSessionInProgress(): Observable<boolean> {\r\n    return this.authService\r\n      .getUserToken()\r\n      .pipe(\r\n        mergeMap((userToken) =>\r\n          of(this.asmAuthService.isCustomerEmulationToken(userToken))\r\n        )\r\n      );\r\n  }\r\n\r\n  /**\r\n   * We're currently only removing the persisted storage in the browser\r\n   * to ensure the ASM experience isn't loaded on the next visit. There are a few\r\n   * optimsiations we could think of:\r\n   * - drop the `asm` parameter from the URL, in case it's still there\r\n   * - remove the generated UI from the DOM (outlets currently do not support this)\r\n   */\r\n  unload() {\r\n    if (this.winRef.localStorage) {\r\n      this.winRef.localStorage.removeItem(ASM_ENABLED_LOCAL_STORAGE_KEY);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  HostBinding,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  AsmAuthService,\r\n  AsmService,\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  User,\r\n  UserService,\r\n  UserToken,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, take } from 'rxjs/operators';\r\nimport { AsmComponentService } from '../services/asm-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-asm-main-ui',\r\n  templateUrl: './asm-main-ui.component.html',\r\n  styleUrls: ['./asm-main-ui.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AsmMainUiComponent implements OnInit {\r\n  csAgentToken$: Observable<UserToken>;\r\n  csAgentTokenLoading$: Observable<boolean>;\r\n  customer$: Observable<User>;\r\n  isCollapsed$: Observable<boolean>;\r\n\r\n  @HostBinding('class.hidden') disabled = false;\r\n\r\n  private startingCustomerSession = false;\r\n\r\n  constructor(\r\n    protected authService: AuthService,\r\n    protected asmAuthService: AsmAuthService,\r\n    protected userService: UserService,\r\n    protected asmComponentService: AsmComponentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected routingService: RoutingService,\r\n    protected asmService: AsmService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.csAgentToken$ = this.asmAuthService.getCustomerSupportAgentToken();\r\n    this.csAgentTokenLoading$ = this.asmAuthService.getCustomerSupportAgentTokenLoading();\r\n    this.customer$ = this.authService.getUserToken().pipe(\r\n      switchMap((token) => {\r\n        if (token && !!token.access_token) {\r\n          this.handleCustomerSessionStartRedirection(token);\r\n          return this.userService.get();\r\n        } else {\r\n          return of(undefined);\r\n        }\r\n      })\r\n    );\r\n    this.isCollapsed$ = this.asmService\r\n      .getAsmUiState()\r\n      .pipe(map((uiState) => uiState.collapsed));\r\n  }\r\n\r\n  private handleCustomerSessionStartRedirection(token: UserToken): void {\r\n    if (\r\n      this.startingCustomerSession &&\r\n      this.asmAuthService.isCustomerEmulationToken(token)\r\n    ) {\r\n      this.startingCustomerSession = false;\r\n      this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\r\n      this.routingService.go('/');\r\n    }\r\n  }\r\n\r\n  loginCustomerSupportAgent({\r\n    userId,\r\n    password,\r\n  }: {\r\n    userId: string;\r\n    password: string;\r\n  }): void {\r\n    this.asmAuthService.authorizeCustomerSupportAgent(userId, password);\r\n  }\r\n\r\n  logout(): void {\r\n    this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\r\n  }\r\n\r\n  startCustomerEmulationSession({ customerId }: { customerId: string }): void {\r\n    this.asmAuthService\r\n      .getCustomerSupportAgentToken()\r\n      .pipe(take(1))\r\n      .subscribe((customerSupportAgentToken) =>\r\n        this.asmAuthService.startCustomerEmulationSession(\r\n          customerSupportAgentToken,\r\n          customerId\r\n        )\r\n      )\r\n      .unsubscribe();\r\n    this.startingCustomerSession = true;\r\n  }\r\n\r\n  hideUi(): void {\r\n    this.disabled = true;\r\n    this.asmComponentService.unload();\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { AsmConfig, AuthService, RoutingService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { AsmComponentService } from '../services/asm-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-asm-session-timer',\r\n  templateUrl: './asm-session-timer.component.html',\r\n  styleUrls: ['./asm-session-timer.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AsmSessionTimerComponent implements OnInit, OnDestroy {\r\n  private subscriptions = new Subscription();\r\n  private interval: any;\r\n  private maxStartDelayInSeconds = 60000;\r\n  timeLeft: number;\r\n\r\n  constructor(\r\n    private config: AsmConfig,\r\n    private asmComponentService: AsmComponentService,\r\n    private authService: AuthService,\r\n    private routingService: RoutingService,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.timeLeft = this.getTimerStartDelayInSeconds();\r\n    this.interval = setInterval(() => {\r\n      if (this.timeLeft > 0) {\r\n        this.timeLeft--;\r\n      } else {\r\n        clearInterval(this.interval);\r\n        this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\r\n      }\r\n      this.changeDetectorRef.markForCheck();\r\n    }, 1000);\r\n\r\n    this.resetOnNavigate();\r\n    this.resetOnCustomerSessionChange();\r\n  }\r\n\r\n  private resetOnNavigate(): void {\r\n    this.subscriptions.add(\r\n      this.routingService.isNavigating().subscribe((isNavigating) => {\r\n        if (isNavigating) {\r\n          this.resetTimer();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private resetOnCustomerSessionChange(): void {\r\n    this.subscriptions.add(\r\n      this.authService\r\n        .getOccUserId()\r\n        .pipe(distinctUntilChanged())\r\n        .subscribe(() => this.resetTimer())\r\n    );\r\n  }\r\n\r\n  resetTimer(): void {\r\n    if (this.timeLeft > 0) {\r\n      this.timeLeft = this.getTimerStartDelayInSeconds();\r\n    }\r\n  }\r\n\r\n  private getTimerStartDelayInSeconds(): number {\r\n    if (\r\n      this.config.asm.agentSessionTimer.startingDelayInSeconds >\r\n      this.maxStartDelayInSeconds\r\n    ) {\r\n      return this.maxStartDelayInSeconds;\r\n    } else {\r\n      return this.config.asm.agentSessionTimer.startingDelayInSeconds;\r\n    }\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatTimer',\n})\nexport class FormatTimerPipe implements PipeTransform {\n  transform(totalSeconds: number): string {\n    if (totalSeconds < 0) {\n      totalSeconds = 0;\n    }\n    const minutes: number = Math.floor(totalSeconds / 60);\n    const seconds: number = totalSeconds % 60;\n    let zeroPaddedMinutes: string;\n    if (minutes < 10) {\n      zeroPaddedMinutes = ('00' + minutes).slice(-2);\n    } else {\n      zeroPaddedMinutes = minutes + '';\n    }\n    const zeroPaddedSeconds: string = ('00' + seconds).slice(-2);\n    return `${zeroPaddedMinutes}:${zeroPaddedSeconds}`;\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AsmService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-asm-toggle-ui',\r\n  templateUrl: './asm-toggle-ui.component.html',\r\n  styleUrls: ['./asm-toggle-ui.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AsmToggleUiComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n  isCollapsed: boolean;\r\n\r\n  constructor(protected asmService: AsmService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.asmService.getAsmUiState().subscribe((uiState) => {\r\n        this.isCollapsed = uiState.collapsed;\r\n      })\r\n    );\r\n  }\r\n\r\n  toggleUi(): void {\r\n    this.asmService.updateAsmUiState({ collapsed: !this.isCollapsed });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'cx-csagent-login-form',\r\n  templateUrl: './csagent-login-form.component.html',\r\n  styleUrls: ['./csagent-login-form.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CSAgentLoginFormComponent implements OnInit {\r\n  csAgentLoginForm: FormGroup;\r\n\r\n  @Input()\r\n  csAgentTokenLoading = false;\r\n\r\n  @Output()\r\n  submitEvent = new EventEmitter<{ userId: string; password: string }>();\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.csAgentLoginForm = this.fb.group({\r\n      userId: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.csAgentLoginForm.valid) {\r\n      this.submitEvent.emit({\r\n        userId: this.csAgentLoginForm.get('userId').value,\r\n        password: this.csAgentLoginForm.get('password').value,\r\n      });\r\n    } else {\r\n      this.csAgentLoginForm.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { User, UserService } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AsmComponentService } from '../services/asm-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-customer-emulation',\r\n  templateUrl: './customer-emulation.component.html',\r\n  styleUrls: ['./customer-emulation.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CustomerEmulationComponent implements OnInit, OnDestroy {\r\n  customer: User;\r\n  isCustomerEmulationSessionInProgress$: Observable<boolean>;\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    protected asmComponentService: AsmComponentService,\r\n    protected userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.userService.get().subscribe((user) => (this.customer = user))\r\n    );\r\n    this.isCustomerEmulationSessionInProgress$ = this.asmComponentService.isCustomerEmulationSessionInProgress();\r\n  }\r\n\r\n  logoutCustomer() {\r\n    this.asmComponentService.logoutCustomer();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  AsmConfig,\r\n  AsmService,\r\n  CustomerSearchPage,\r\n  User,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-customer-selection',\r\n  templateUrl: './customer-selection.component.html',\r\n  styleUrls: ['./customer-selection.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  // tslint:disable-next-line:no-host-metadata-property\r\n  host: {\r\n    '(document:click)': 'onDocumentClick($event)',\r\n  },\r\n})\r\nexport class CustomerSelectionComponent implements OnInit, OnDestroy {\r\n  customerSelectionForm: FormGroup;\r\n  private subscription = new Subscription();\r\n  searchResultsLoading$: Observable<boolean>;\r\n  searchResults: Observable<CustomerSearchPage>;\r\n  selectedCustomer: User;\r\n\r\n  @Output()\r\n  submitEvent = new EventEmitter<{ customerId: string }>();\r\n\r\n  @ViewChild('resultList') resultList: ElementRef;\r\n  @ViewChild('searchTerm') searchTerm: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private asmService: AsmService,\r\n    private config: AsmConfig\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.customerSelectionForm = this.fb.group({\r\n      searchTerm: ['', Validators.required],\r\n    });\r\n    this.asmService.customerSearchReset();\r\n    this.searchResultsLoading$ = this.asmService.getCustomerSearchResultsLoading();\r\n    this.searchResults = this.asmService.getCustomerSearchResults();\r\n\r\n    this.subscription.add(\r\n      this.customerSelectionForm.controls.searchTerm.valueChanges\r\n        .pipe(debounceTime(300))\r\n        .subscribe((searchTermValue) => {\r\n          this.handleSearchTerm(searchTermValue);\r\n        })\r\n    );\r\n  }\r\n\r\n  private handleSearchTerm(searchTermValue: string) {\r\n    if (\r\n      Boolean(this.selectedCustomer) &&\r\n      searchTermValue !== this.selectedCustomer.name\r\n    ) {\r\n      this.selectedCustomer = undefined;\r\n    }\r\n    if (Boolean(this.selectedCustomer)) {\r\n      return;\r\n    }\r\n    this.asmService.customerSearchReset();\r\n    if (searchTermValue.trim().length >= 3) {\r\n      this.asmService.customerSearch({\r\n        query: searchTermValue,\r\n        pageSize: this.config.asm.customerSearch.maxResults,\r\n      });\r\n    }\r\n  }\r\n\r\n  selectCustomerFromList(customer: User) {\r\n    this.selectedCustomer = customer;\r\n    this.customerSelectionForm.controls.searchTerm.setValue(\r\n      this.selectedCustomer.name\r\n    );\r\n    this.asmService.customerSearchReset();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.customerSelectionForm.valid && Boolean(this.selectedCustomer)) {\r\n      this.submitEvent.emit({ customerId: this.selectedCustomer.customerId });\r\n    } else {\r\n      this.customerSelectionForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onDocumentClick(event) {\r\n    if (Boolean(this.resultList)) {\r\n      if (\r\n        this.resultList.nativeElement.contains(event.target) ||\r\n        this.searchTerm.nativeElement.contains(event.target)\r\n      ) {\r\n        return;\r\n      } else {\r\n        this.asmService.customerSearchReset();\r\n      }\r\n    }\r\n  }\r\n\r\n  closeResults() {\r\n    this.asmService.customerSearchReset();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n    this.asmService.customerSearchReset();\r\n  }\r\n}\r\n","import { LayoutConfig } from '../../layout/config/layout-config';\r\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\r\n\r\nexport const defaultAsmLayoutConfig: LayoutConfig = {\r\n  launch: {\r\n    ASM: {\r\n      outlet: 'cx-storefront',\r\n      component: AsmMainUiComponent,\r\n    },\r\n  },\r\n};\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AsmModule as AsmCoreModule,\r\n  I18nModule,\r\n  provideConfig,\r\n} from '@spartacus/core';\r\nimport { FormErrorsModule } from '../../shared/index';\r\nimport { AsmLoaderModule } from './asm-loader.module';\r\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\r\nimport { AsmSessionTimerComponent } from './asm-session-timer/asm-session-timer.component';\r\nimport { FormatTimerPipe } from './asm-session-timer/format-timer.pipe';\r\nimport { AsmToggleUiComponent } from './asm-toggle-ui/asm-toggle-ui.component';\r\nimport { CSAgentLoginFormComponent } from './csagent-login-form/csagent-login-form.component';\r\nimport { CustomerEmulationComponent } from './customer-emulation/customer-emulation.component';\r\nimport { CustomerSelectionComponent } from './customer-selection/customer-selection.component';\r\nimport { defaultAsmLayoutConfig } from './default-asm-layout.config';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    I18nModule,\r\n    AsmCoreModule.forRoot(),\r\n    AsmLoaderModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [\r\n    AsmMainUiComponent,\r\n    CSAgentLoginFormComponent,\r\n    CustomerSelectionComponent,\r\n    AsmSessionTimerComponent,\r\n    FormatTimerPipe,\r\n    CustomerEmulationComponent,\r\n    AsmToggleUiComponent,\r\n  ],\r\n  providers: [provideConfig(defaultAsmLayoutConfig)],\r\n  entryComponents: [AsmMainUiComponent],\r\n})\r\nexport class AsmModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Product,\r\n  ProductScope,\r\n  ProductService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CurrentProductService {\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private productService: ProductService\r\n  ) {}\r\n\r\n  protected readonly DEFAULT_PRODUCT_SCOPE = ProductScope.DETAILS;\r\n\r\n  /**\r\n   * Will emit current product or null, if there is no current product (i.e. we are not on PDP)\r\n   *\r\n   * @param scopes\r\n   */\r\n  getProduct(\r\n    scopes?: (ProductScope | string)[] | ProductScope | string\r\n  ): Observable<Product | null> {\r\n    return this.routingService.getRouterState().pipe(\r\n      map((state) => state.state.params['productCode']),\r\n      switchMap((productCode: string) => {\r\n        return productCode\r\n          ? this.productService.get(\r\n              productCode,\r\n              scopes || this.DEFAULT_PRODUCT_SCOPE\r\n            )\r\n          : of(null);\r\n      }),\r\n      filter((x) => x !== undefined),\r\n      distinctUntilChanged()\r\n    );\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport {\r\n  Cart,\r\n  ActiveCartService,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, startWith, switchMap, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\r\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\n@Component({\r\n  selector: 'cx-added-to-cart-dialog',\r\n  templateUrl: './added-to-cart-dialog.component.html',\r\n})\r\nexport class AddedToCartDialogComponent implements OnInit {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  entry$: Observable<OrderEntry>;\r\n  cart$: Observable<Cart>;\r\n  loaded$: Observable<boolean>;\r\n  increment: boolean;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  quantity = 0;\r\n  modalIsOpen = false;\r\n\r\n  @ViewChild('dialog', { read: ElementRef })\r\n  dialog: ElementRef;\r\n\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  private quantityControl$: Observable<FormControl>;\r\n\r\n  constructor(\r\n    protected modalService: ModalService,\r\n    protected cartService: ActiveCartService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n  /**\r\n   * Returns an observable formControl with the quantity of the cartEntry,\r\n   * but also updates the entry in case of a changed value.\r\n   * The quantity can be set to zero in order to remove the entry.\r\n   */\r\n  getQuantityControl(): Observable<FormControl> {\r\n    if (!this.quantityControl$) {\r\n      this.quantityControl$ = this.entry$.pipe(\r\n        filter((e) => !!e),\r\n        map((entry) => this.getFormControl(entry)),\r\n        switchMap(() =>\r\n          this.form.valueChanges.pipe(\r\n            // tslint:disable-next-line:deprecation\r\n            startWith(null),\r\n            tap((valueChange) => {\r\n              if (valueChange) {\r\n                this.cartService.updateEntry(\r\n                  valueChange.entryNumber,\r\n                  valueChange.quantity\r\n                );\r\n                if (valueChange.quantity === 0) {\r\n                  this.dismissModal('Removed');\r\n                }\r\n              } else {\r\n                this.form.markAsPristine();\r\n              }\r\n            })\r\n          )\r\n        ),\r\n        map(() => <FormControl>this.form.get('quantity'))\r\n      );\r\n    }\r\n    return this.quantityControl$;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  private getFormControl(entry: OrderEntry): FormControl {\r\n    if (!this.form.get('quantity')) {\r\n      const quantity = new FormControl(entry.quantity, { updateOn: 'blur' });\r\n      this.form.addControl('quantity', quantity);\r\n\r\n      const entryNumber = new FormControl(entry.entryNumber);\r\n      this.form.addControl('entryNumber', entryNumber);\r\n    }\r\n    return <FormControl>this.form.get('quantity');\r\n  }\r\n\r\n  dismissModal(reason?: any): void {\r\n    this.modalService.dismissActiveModal(reason);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActiveCartService, OrderEntry, Product } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ModalRef } from '../../../shared/components/modal/modal-ref';\r\nimport { ModalService } from '../../../shared/components/modal/modal.service';\r\nimport { CurrentProductService } from '../../product/current-product.service';\r\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\r\n\r\n@Component({\r\n  selector: 'cx-add-to-cart',\r\n  templateUrl: './add-to-cart.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddToCartComponent implements OnInit, OnDestroy {\r\n  @Input() productCode: string;\r\n  @Input() showQuantity = true;\r\n\r\n  /**\r\n   * As long as we do not support #5026, we require product input, as we need\r\n   *  a reference to the product model to fetch the stock data.\r\n   */\r\n  @Input() product: Product;\r\n\r\n  maxQuantity: number;\r\n  modalRef: ModalRef;\r\n\r\n  hasStock = false;\r\n  quantity = 1;\r\n  increment = false;\r\n  cartEntry$: Observable<OrderEntry>;\r\n\r\n  subscription: Subscription;\r\n\r\n  addToCartForm = new FormGroup({\r\n    quantity: new FormControl(1),\r\n  });\r\n\r\n  constructor(\r\n    protected modalService: ModalService,\r\n    protected currentProductService: CurrentProductService,\r\n    private cd: ChangeDetectorRef,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.product) {\r\n      this.productCode = this.product.code;\r\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\r\n      this.setStockInfo(this.product);\r\n      this.cd.markForCheck();\r\n    } else if (this.productCode) {\r\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\r\n      // force hasStock and quantity for the time being, as we do not have more info:\r\n      this.quantity = 1;\r\n      this.hasStock = true;\r\n      this.cd.markForCheck();\r\n    } else {\r\n      this.subscription = this.currentProductService\r\n        .getProduct()\r\n        .pipe(filter(Boolean))\r\n        .subscribe((product: Product) => {\r\n          this.productCode = product.code;\r\n          this.setStockInfo(product);\r\n          this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\r\n          this.cd.markForCheck();\r\n        });\r\n    }\r\n  }\r\n\r\n  private setStockInfo(product: Product): void {\r\n    this.quantity = 1;\r\n    this.hasStock =\r\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\r\n    if (this.hasStock && product.stock.stockLevel) {\r\n      this.maxQuantity = product.stock.stockLevel;\r\n    }\r\n  }\r\n\r\n  updateCount(value: number): void {\r\n    this.quantity = value;\r\n  }\r\n\r\n  addToCart() {\r\n    const quantity = this.addToCartForm.get('quantity').value;\r\n    if (!this.productCode || quantity <= 0) {\r\n      return;\r\n    }\r\n    // check item is already present in the cart\r\n    // so modal will have proper header text displayed\r\n    this.activeCartService\r\n      .getEntry(this.productCode)\r\n      .subscribe((entry) => {\r\n        if (entry) {\r\n          this.increment = true;\r\n        }\r\n        this.openModal();\r\n        this.activeCartService.addEntry(this.productCode, quantity);\r\n        this.increment = false;\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  private openModal() {\r\n    let modalInstance: any;\r\n    this.modalRef = this.modalService.open(AddedToCartDialogComponent, {\r\n      centered: true,\r\n      size: 'lg',\r\n    });\r\n\r\n    modalInstance = this.modalRef.componentInstance;\r\n    modalInstance.entry$ = this.cartEntry$;\r\n    modalInstance.cart$ = this.activeCartService.getActive();\r\n    modalInstance.loaded$ = this.activeCartService.isStable();\r\n    modalInstance.quantity = this.quantity;\r\n    modalInstance.increment = this.increment;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PromotionsComponent } from './promotions.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PromotionsComponent],\r\n  exports: [PromotionsComponent],\r\n})\r\nexport class PromotionsModule {}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Voucher, CartVoucherService } from '@spartacus/core';\r\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-applied-coupons',\r\n  templateUrl: './applied-coupons.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppliedCouponsComponent {\r\n  @Input()\r\n  vouchers: Voucher[];\r\n  @Input()\r\n  cartIsLoading = false;\r\n  @Input()\r\n  isReadOnly = false;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(private cartVoucherService: CartVoucherService) {}\r\n\r\n  public get sortedVouchers(): Voucher[] {\r\n    this.vouchers = this.vouchers || [];\r\n    return this.vouchers.slice().sort((a, b) => {\r\n      return a.code.localeCompare(b.code);\r\n    });\r\n  }\r\n\r\n  removeVoucher(voucherId: string) {\r\n    this.cartVoucherService.removeVoucher(voucherId);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  CartVoucherService,\r\n  CustomerCoupon,\r\n  CustomerCouponSearchResult,\r\n  CustomerCouponService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-cart-coupon',\r\n  templateUrl: './cart-coupon.component.html',\r\n})\r\nexport class CartCouponComponent implements OnInit, OnDestroy {\r\n  MAX_CUSTOMER_COUPON_PAGE = 100;\r\n  couponForm: FormGroup;\r\n  cartIsLoading$: Observable<boolean>;\r\n  cart$: Observable<Cart>;\r\n  cartId: string;\r\n  applicableCoupons: CustomerCoupon[];\r\n\r\n  private ignoreCloseEvent = false;\r\n\r\n  private subscription = new Subscription();\r\n\r\n  couponBoxIsActive = false;\r\n\r\n  constructor(\r\n    protected cartVoucherService: CartVoucherService,\r\n    protected formBuilder: FormBuilder,\r\n    protected customerCouponService: CustomerCouponService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.customerCouponService) {\r\n      this.customerCouponService.loadCustomerCoupons(\r\n        this.MAX_CUSTOMER_COUPON_PAGE\r\n      );\r\n    }\r\n\r\n    this.cart$ = combineLatest([\r\n      this.activeCartService.getActive(),\r\n      this.activeCartService.getActiveCartId(),\r\n      this.customerCouponService.getCustomerCoupons(\r\n        this.MAX_CUSTOMER_COUPON_PAGE\r\n      ),\r\n    ]).pipe(\r\n      tap(\r\n        ([cart, activeCardId, customerCoupons]: [\r\n          Cart,\r\n          string,\r\n          CustomerCouponSearchResult\r\n        ]) => {\r\n          this.cartId = activeCardId;\r\n          this.getApplicableCustomerCoupons(cart, customerCoupons.coupons);\r\n        }\r\n      ),\r\n      map(([cart]: [Cart, string, CustomerCouponSearchResult]) => cart)\r\n    );\r\n\r\n    this.cartIsLoading$ = this.activeCartService\r\n      .isStable()\r\n      .pipe(map((loaded) => !loaded));\r\n\r\n    this.cartVoucherService.resetAddVoucherProcessingState();\r\n\r\n    this.couponForm = this.formBuilder.group({\r\n      couponCode: ['', [Validators.required]],\r\n    });\r\n\r\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\r\n    this.subscription.add(\r\n      this.cartVoucherService\r\n        .getAddVoucherResultSuccess()\r\n        .subscribe((success) => {\r\n          this.onSuccess(success);\r\n        })\r\n    );\r\n\r\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\r\n    this.subscription.add(\r\n      this.cartVoucherService.getAddVoucherResultError().subscribe((error) => {\r\n        this.onError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  protected onError(error: boolean) {\r\n    if (error) {\r\n      this.customerCouponService.loadCustomerCoupons(\r\n        this.MAX_CUSTOMER_COUPON_PAGE\r\n      );\r\n      this.cartVoucherService.resetAddVoucherProcessingState();\r\n    }\r\n  }\r\n\r\n  onSuccess(success: boolean) {\r\n    if (success) {\r\n      this.couponForm.reset();\r\n      this.cartVoucherService.resetAddVoucherProcessingState();\r\n    }\r\n  }\r\n\r\n  protected getApplicableCustomerCoupons(\r\n    cart: Cart,\r\n    coupons: CustomerCoupon[]\r\n  ): void {\r\n    this.applicableCoupons = coupons || [];\r\n    if (cart.appliedVouchers) {\r\n      cart.appliedVouchers.forEach((appliedVoucher) => {\r\n        this.applicableCoupons = this.applicableCoupons.filter(\r\n          (coupon) => coupon.couponId !== appliedVoucher.code\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  applyVoucher(): void {\r\n    if (this.couponForm.valid) {\r\n      this.cartVoucherService.addVoucher(\r\n        this.couponForm.value.couponCode,\r\n        this.cartId\r\n      );\r\n    } else {\r\n      this.couponForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  applyCustomerCoupon(couponId: string): void {\r\n    this.cartVoucherService.addVoucher(couponId, this.cartId);\r\n    this.couponBoxIsActive = false;\r\n  }\r\n\r\n  close(event: UIEvent): void {\r\n    if (!this.ignoreCloseEvent) {\r\n      this.couponBoxIsActive = false;\r\n      if (event && event.target) {\r\n        (<HTMLElement>event.target).blur();\r\n      }\r\n    }\r\n    this.ignoreCloseEvent = false;\r\n  }\r\n\r\n  disableClose(): void {\r\n    this.ignoreCloseEvent = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.cartVoucherService.resetAddVoucherProcessingState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { AppliedCouponsComponent } from './applied-coupons/applied-coupons.component';\r\nimport { CartCouponComponent } from './cart-coupon.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  declarations: [CartCouponComponent, AppliedCouponsComponent],\r\n  exports: [CartCouponComponent, AppliedCouponsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    I18nModule,\r\n    IconModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CartApplyCouponComponent: {\r\n          component: CartCouponComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n\r\n  entryComponents: [CartCouponComponent],\r\n})\r\nexport class CartCouponModule {}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport {\r\n  ActiveCartService,\r\n  ConsignmentEntry,\r\n  PromotionLocation,\r\n  SelectiveCartService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport {\r\n  CartItemComponentOptions,\r\n  Item,\r\n} from '../cart-item/cart-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-cart-item-list',\r\n  templateUrl: './cart-item-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CartItemListComponent {\r\n  @Input() readonly = false;\r\n\r\n  @Input() hasHeader = true;\r\n\r\n  @Input() options: CartItemComponentOptions = {\r\n    isSaveForLater: false,\r\n    optionalBtn: null,\r\n  };\r\n\r\n  private _items: Item[] = [];\r\n  form: FormGroup;\r\n\r\n  @Input('items')\r\n  // TODO: currently we're getting a new array of items if the cart changes.\r\n  // pretty annoying as it forces a repaint on the screen,\r\n  // which is noticable in the UI.\r\n  set items(items: Item[]) {\r\n    this.resolveItems(items);\r\n    this.createForm();\r\n  }\r\n  get items(): Item[] {\r\n    return this._items;\r\n  }\r\n\r\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  @Input('cartIsLoading') set setLoading(value: boolean) {\r\n    if (!this.readonly) {\r\n      // Whenver the cart is loading, we disable the complete form\r\n      // to avoid any user interaction with the cart.\r\n      value\r\n        ? this.form.disable({ emitEvent: false })\r\n        : this.form.enable({ emitEvent: false });\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected activeCartService: ActiveCartService,\r\n    protected selectiveCartService: SelectiveCartService\r\n  ) {}\r\n\r\n  /**\r\n   * The items we're getting form the input do not have a consistent model.\r\n   * In case of a `consignmentEntry`, we need to normalize the data from the orderEntry.\r\n   */\r\n  private resolveItems(items: Item[]): void {\r\n    if (items.every((item) => item.hasOwnProperty('orderEntry'))) {\r\n      this._items = items.map((consignmentEntry) => {\r\n        const entry = Object.assign(\r\n          {},\r\n          (consignmentEntry as ConsignmentEntry).orderEntry\r\n        );\r\n        entry.quantity = consignmentEntry.quantity;\r\n        return entry;\r\n      });\r\n    } else {\r\n      this._items = items;\r\n    }\r\n  }\r\n\r\n  private createForm(): void {\r\n    this.form = new FormGroup({});\r\n    this._items.forEach((item) => {\r\n      const { code } = item.product;\r\n      const group = new FormGroup({\r\n        entryNumber: new FormControl((<any>item).entryNumber),\r\n        quantity: new FormControl(item.quantity, { updateOn: 'blur' }),\r\n      });\r\n      if (!item.updateable || this.readonly) {\r\n        group.disable();\r\n      }\r\n      this.form.addControl(code, group);\r\n    });\r\n  }\r\n\r\n  removeEntry(item: Item): void {\r\n    if (this.selectiveCartService && this.options.isSaveForLater) {\r\n      this.selectiveCartService.removeEntry(item);\r\n    } else {\r\n      this.activeCartService.removeEntry(item);\r\n    }\r\n    delete this.form.controls[item.product.code];\r\n  }\r\n\r\n  getControl(item: Item): Observable<FormGroup> {\r\n    return this.form.get(item.product.code).valueChanges.pipe(\r\n      // tslint:disable-next-line:deprecation\r\n      startWith(null),\r\n      map((value) => {\r\n        if (value && this.selectiveCartService && this.options.isSaveForLater) {\r\n          this.selectiveCartService.updateEntry(\r\n            value.entryNumber,\r\n            value.quantity\r\n          );\r\n        } else if (value) {\r\n          this.activeCartService.updateEntry(value.entryNumber, value.quantity);\r\n        }\r\n      }),\r\n      map(() => <FormGroup>this.form.get(item.product.code))\r\n    );\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { PromotionLocation, PromotionResult } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\nexport interface Item {\r\n  product?: any;\r\n  quantity?: any;\r\n  basePrice?: any;\r\n  totalPrice?: any;\r\n  updateable?: boolean;\r\n}\r\n\r\nexport interface CartItemComponentOptions {\r\n  isSaveForLater?: boolean;\r\n  optionalBtn?: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-cart-item',\r\n  templateUrl: './cart-item.component.html',\r\n})\r\nexport class CartItemComponent implements OnInit {\r\n  @Input() compact = false;\r\n  @Input() item: Item;\r\n  @Input() readonly = false;\r\n  @Input() quantityControl: FormControl;\r\n\r\n  @Output() view = new EventEmitter<any>();\r\n\r\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  // TODO: evaluate whether this is generic enough\r\n  @Input() options: CartItemComponentOptions = {\r\n    isSaveForLater: false,\r\n    optionalBtn: null,\r\n  };\r\n\r\n  appliedProductPromotions$: Observable<PromotionResult[]>;\r\n\r\n  constructor(protected promotionService: PromotionService) {}\r\n\r\n  ngOnInit() {\r\n    this.appliedProductPromotions$ = this.promotionService.getProductPromotionForEntry(\r\n      this.item,\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  isProductOutOfStock(product: any) {\r\n    // TODO Move stocklevelstatuses across the app to an enum\r\n    return (\r\n      product &&\r\n      product.stock &&\r\n      product.stock.stockLevelStatus === 'outOfStock'\r\n    );\r\n  }\r\n\r\n  removeItem() {\r\n    this.quantityControl.setValue(0);\r\n    this.quantityControl.markAsDirty();\r\n  }\r\n\r\n  viewItem() {\r\n    this.view.emit();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\nimport { Cart } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-summary',\n  templateUrl: './order-summary.component.html',\n})\nexport class OrderSummaryComponent {\n  @Input()\n  cart: Cart;\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FeaturesConfigModule, I18nModule, UrlModule } from '@spartacus/core';\r\nimport { ItemCounterModule } from '../../../shared/components/item-counter/item-counter.module';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\r\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\r\nimport { CartItemListComponent } from './cart-item-list/cart-item-list.component';\r\nimport { CartItemComponent } from './cart-item/cart-item.component';\r\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    CartCouponModule,\r\n    ReactiveFormsModule,\r\n    UrlModule,\r\n    NgbModule,\r\n    PromotionsModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    ItemCounterModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  declarations: [\r\n    CartItemComponent,\r\n    OrderSummaryComponent,\r\n    CartItemListComponent,\r\n  ],\r\n  exports: [CartItemComponent, CartItemListComponent, OrderSummaryComponent],\r\n})\r\nexport class CartSharedModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { ItemCounterModule, SpinnerModule } from '../../../shared/index';\r\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\r\nimport { CartSharedModule } from './../cart-shared/cart-shared.module';\r\nimport { AddToCartComponent } from './add-to-cart.component';\r\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    CartSharedModule,\r\n    RouterModule,\r\n    SpinnerModule,\r\n    PromotionsModule,\r\n    FeaturesConfigModule,\r\n    UrlModule,\r\n    IconModule,\r\n    I18nModule,\r\n    ItemCounterModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductAddToCartComponent: {\r\n          component: AddToCartComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [AddToCartComponent, AddedToCartDialogComponent],\r\n  entryComponents: [AddToCartComponent, AddedToCartDialogComponent],\r\n  exports: [AddToCartComponent, AddedToCartDialogComponent],\r\n})\r\nexport class AddToCartModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  AuthService,\r\n  Cart,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n  RoutingService,\r\n  SelectiveCartService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { PromotionService } from '../../../shared/services/promotion/promotion.service';\r\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-cart-details',\r\n  templateUrl: './cart-details.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CartDetailsComponent implements OnInit {\r\n  cart$: Observable<Cart>;\r\n  entries$: Observable<OrderEntry[]>;\r\n  cartLoaded$: Observable<boolean>;\r\n  loggedIn = false;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n  promotions$: Observable<PromotionResult[]>;\r\n  selectiveCartEnabled: boolean;\r\n\r\n  constructor(\r\n    protected activeCartService: ActiveCartService,\r\n    protected promotionService: PromotionService,\r\n    protected selectiveCartService: SelectiveCartService,\r\n    protected authService: AuthService,\r\n    protected routingService: RoutingService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.promotions$ = this.promotionService.getOrderPromotionsFromCart();\r\n\r\n    this.entries$ = this.activeCartService\r\n      .getEntries()\r\n      .pipe(filter((entries) => entries.length > 0));\r\n\r\n    this.selectiveCartEnabled = this.selectiveCartService.isEnabled();\r\n\r\n    this.cartLoaded$ = combineLatest([\r\n      this.activeCartService.isStable(),\r\n      this.selectiveCartEnabled\r\n        ? this.selectiveCartService.getLoaded()\r\n        : of(false),\r\n      this.authService.isUserLoggedIn(),\r\n    ]).pipe(\r\n      tap(([, , loggedIn]) => (this.loggedIn = loggedIn)),\r\n      map(([cartLoaded, sflLoaded, loggedIn]) =>\r\n        loggedIn && this.selectiveCartEnabled\r\n          ? cartLoaded && sflLoaded\r\n          : cartLoaded\r\n      )\r\n    );\r\n\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  saveForLater(item: Item) {\r\n    if (this.loggedIn) {\r\n      this.activeCartService.removeEntry(item);\r\n      this.selectiveCartService.addEntry(item.product.code, item.quantity);\r\n    } else {\r\n      this.routingService.go({ cxRoute: 'login' });\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\r\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\r\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\r\nimport { CartDetailsComponent } from './cart-details.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CartSharedModule,\r\n    CommonModule,\r\n    CartCouponModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    PromotionsModule,\r\n    FeaturesConfigModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CartComponent: {\r\n          component: CartDetailsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CartDetailsComponent],\r\n  exports: [CartDetailsComponent],\r\n  entryComponents: [CartDetailsComponent],\r\n})\r\nexport class CartDetailsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { ActiveCartService, Cart, RoutingService } from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CartNotEmptyGuard implements CanActivate {\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return combineLatest([\r\n      this.activeCartService.getActive(),\r\n      this.activeCartService.isStable(),\r\n    ]).pipe(\r\n      filter(([_, loaded]) => loaded),\r\n      map(([cart]) => {\r\n        if (this.isEmpty(cart)) {\r\n          this.routingService.go({ cxRoute: 'home' });\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  private isEmpty(cart: Cart): boolean {\r\n    return cart && !cart.totalItems;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActiveCartService, Cart, SelectiveCartService } from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PageLayoutHandler } from '../../cms-structure/page/page-layout/page-layout-handler';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CartPageLayoutHandler implements PageLayoutHandler {\r\n  constructor(\r\n    protected activeCartService: ActiveCartService,\r\n    protected selectiveCartService: SelectiveCartService\r\n  ) {}\r\n\r\n  handle(\r\n    slots$: Observable<string[]>,\r\n    pageTemplate?: string,\r\n    section?: string\r\n  ) {\r\n    if (pageTemplate === 'CartPageTemplate' && !section) {\r\n      return combineLatest([\r\n        slots$,\r\n        this.activeCartService.getActive(),\r\n        this.selectiveCartService.isEnabled()\r\n          ? this.selectiveCartService.getCart()\r\n          : of({} as Cart),\r\n        this.activeCartService.getLoading(),\r\n      ]).pipe(\r\n        map(([slots, cart, selectiveCart, loadingCart]) => {\r\n          const exclude = (arr, args) =>\r\n            arr.filter((item) => args.every((arg) => arg !== item));\r\n          return Object.keys(cart).length === 0 && loadingCart\r\n            ? exclude(slots, [\r\n                'TopContent',\r\n                'CenterRightContentSlot',\r\n                'EmptyCartMiddleContent',\r\n              ])\r\n            : cart.totalItems\r\n            ? exclude(slots, ['EmptyCartMiddleContent'])\r\n            : selectiveCart.totalItems\r\n            ? exclude(slots, [\r\n                'EmptyCartMiddleContent',\r\n                'CenterRightContentSlot',\r\n              ])\r\n            : exclude(slots, ['TopContent', 'CenterRightContentSlot']);\r\n        })\r\n      );\r\n    }\r\n    return slots$;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActiveCartService, Cart, OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-cart-totals',\r\n  templateUrl: './cart-totals.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CartTotalsComponent implements OnInit {\r\n  cart$: Observable<Cart>;\r\n  entries$: Observable<OrderEntry[]>;\r\n\r\n  constructor(protected activeCartService: ActiveCartService) {}\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.entries$ = this.activeCartService\r\n      .getEntries()\r\n      .pipe(filter((entries) => entries.length > 0));\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\r\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\r\nimport { CartTotalsComponent } from './cart-totals.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    CartSharedModule,\r\n    I18nModule,\r\n    CartCouponModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CartTotalsComponent: {\r\n          component: CartTotalsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CartTotalsComponent],\r\n  exports: [CartTotalsComponent],\r\n  entryComponents: [CartTotalsComponent],\r\n})\r\nexport class CartTotalsModule {}\r\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler[]>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActiveCartService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, startWith } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-mini-cart',\r\n  templateUrl: './mini-cart.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MiniCartComponent {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  quantity$: Observable<number> = this.activeCartService.getActive().pipe(\r\n    startWith({ deliveryItemsQuantity: 0 }),\r\n    map((cart) => cart.deliveryItemsQuantity || 0)\r\n  );\r\n\r\n  total$: Observable<string> = this.activeCartService.getActive().pipe(\r\n    filter((cart) => !!cart.totalPrice),\r\n    map((cart) => cart.totalPrice.formattedValue)\r\n  );\r\n\r\n  constructor(protected activeCartService: ActiveCartService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { MiniCartComponent } from './mini-cart.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, UrlModule, IconModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        MiniCartComponent: {\r\n          component: MiniCartComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [MiniCartComponent],\r\n  exports: [MiniCartComponent],\r\n  entryComponents: [MiniCartComponent],\r\n})\r\nexport class MiniCartModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport {\r\n  AuthService,\r\n  OrderEntry,\r\n  Product,\r\n  WishListService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\nimport { CurrentProductService } from '../../product/current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-add-to-wishlist',\r\n  templateUrl: './add-to-wish-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddToWishListComponent {\r\n  product$: Observable<Product> = this.currentProductService.getProduct().pipe(\r\n    filter((product) => Boolean(product)),\r\n    tap((product) => this.setStockInfo(product))\r\n  );\r\n\r\n  wishListEntries$: Observable<\r\n    OrderEntry[]\r\n  > = this.wishListService.getWishList().pipe(\r\n    filter((wishlist) => Boolean(wishlist)),\r\n    map((wishList) => wishList.entries)\r\n  );\r\n\r\n  userLoggedIn$: Observable<boolean> = this.authService.isUserLoggedIn();\r\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\r\n\r\n  hasStock = false;\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(\r\n    protected wishListService: WishListService,\r\n    protected currentProductService: CurrentProductService,\r\n    protected authService: AuthService\r\n  ) {}\r\n\r\n  add(product: Product): void {\r\n    this.wishListService.addEntry(product.code);\r\n  }\r\n\r\n  remove(entry: OrderEntry): void {\r\n    this.wishListService.removeEntry(entry);\r\n  }\r\n\r\n  getProductInWishList(product: Product, entries: OrderEntry[]): OrderEntry {\r\n    const item = entries.find((entry) => entry.product.code === product.code);\r\n    return item;\r\n  }\r\n\r\n  private setStockInfo(product: Product): void {\r\n    this.hasStock =\r\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { AddToWishListComponent } from './add-to-wish-list.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, IconModule, RouterModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AddToWishListComponent: {\r\n          component: AddToWishListComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [AddToWishListComponent],\r\n  entryComponents: [AddToWishListComponent],\r\n  exports: [AddToWishListComponent],\r\n})\r\nexport class AddToWishListModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  CmsParagraphComponent,\r\n  CmsService,\r\n  OrderEntry,\r\n  SelectiveCartService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-save-for-later',\r\n  templateUrl: './save-for-later.component.html',\r\n})\r\nexport class SaveForLaterComponent implements OnInit {\r\n  saveForLater$: Observable<Cart>;\r\n  cart$: Observable<Cart>;\r\n  entries$: Observable<OrderEntry[]>;\r\n  cartLoaded$: Observable<boolean>;\r\n  data$: Observable<CmsParagraphComponent>;\r\n  isCartEmpty$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected cmsService: CmsService,\r\n    protected cartService: ActiveCartService,\r\n    protected selectiveCartService: SelectiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isCartEmpty$ = this.cartService\r\n      .getActive()\r\n      .pipe(map((cart) => !(cart && cart.totalItems && cart.totalItems > 0)));\r\n    this.saveForLater$ = this.selectiveCartService.getCart();\r\n    this.entries$ = this.selectiveCartService\r\n      .getEntries()\r\n      .pipe(filter((entries) => entries.length > 0));\r\n    this.cartLoaded$ = combineLatest([\r\n      this.cartService.isStable(),\r\n      this.selectiveCartService.getLoaded(),\r\n    ]).pipe(map(([cartLoaded, sflLoaded]) => cartLoaded && sflLoaded));\r\n    this.data$ = this.cmsService.getComponentData(\r\n      'EmptyCartParagraphComponent'\r\n    );\r\n  }\r\n\r\n  moveToCart(item: Item) {\r\n    this.selectiveCartService.removeEntry(item);\r\n    this.cartService.addEntry(item.product.code, item.quantity);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\r\nimport { SaveForLaterComponent } from './save-for-later.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, CartSharedModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\r\n      cmsComponents: {\r\n        SaveForLaterComponent: {\r\n          component: SaveForLaterComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [SaveForLaterComponent],\r\n  exports: [SaveForLaterComponent],\r\n  entryComponents: [SaveForLaterComponent],\r\n})\r\nexport class SaveForLaterModule {}\r\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartModule } from '@spartacus/core';\nimport { PAGE_LAYOUT_HANDLER } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { AddToCartModule } from './add-to-cart/add-to-cart.module';\nimport { CartDetailsModule } from './cart-details/cart-details.module';\nimport { CartPageLayoutHandler } from './cart-page-layout-handler';\nimport { CartSharedModule } from './cart-shared/cart-shared.module';\nimport { CartTotalsModule } from './cart-totals/cart-totals.module';\nimport { MiniCartModule } from './mini-cart/mini-cart.module';\nimport { AddToWishListModule } from './add-to-wishlist/add-to-wish-list.module';\nimport { SaveForLaterModule } from './save-for-later/save-for-later.module';\n@NgModule({\n  imports: [\n    NgbModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    SaveForLaterModule,\n  ],\n  exports: [\n    AddToWishListModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    AddToCartModule,\n    MiniCartModule,\n    CartModule,\n    SaveForLaterModule,\n  ],\n  declarations: [],\n  providers: [\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useExisting: CartPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CartComponentModule {}\n","export enum CheckoutStepType {\n  SHIPPING_ADDRESS = 'shippingAddress',\n  DELIVERY_MODE = 'deliveryMode',\n  PAYMENT_DETAILS = 'paymentDetails',\n  REVIEW_ORDER = 'reviewOrder',\n}\n\nexport interface CheckoutStep {\n  id: string;\n  name: string;\n  routeName: string;\n  type: Array<CheckoutStepType>;\n}\n","import { CheckoutStep } from '../model/checkout-step.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\nexport enum DeliveryModePreferences {\r\n  FREE = 'FREE',\r\n  LEAST_EXPENSIVE = 'LEAST_EXPENSIVE', // but not free\r\n  MOST_EXPENSIVE = 'MOST_EXPENSIVE',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class CheckoutConfig {\r\n  checkout?: {\r\n    /**\r\n     * Set checkout steps as ordered array of pages.\r\n     */\r\n    steps?: Array<CheckoutStep>;\r\n    /**\r\n     * Allow for express checkout when default shipping method and payment method are available.\r\n     */\r\n    express?: boolean;\r\n    /**\r\n     * Default delivery mode for i.a. express checkout. Set preferences in order with general preferences (eg. DeliveryModePreferences.LEAST_EXPENSIVE) or specific delivery codes.\r\n     */\r\n    defaultDeliveryMode?: Array<DeliveryModePreferences | string>;\r\n    /**\r\n     * Allow for guest checkout.\r\n     */\r\n    guest?: boolean;\r\n  };\r\n}\r\n","import { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfig, DeliveryModePreferences } from './checkout-config';\n\nexport const defaultCheckoutConfig: CheckoutConfig = {\n  checkout: {\n    steps: [\n      {\n        id: 'shippingAddress',\n        name: 'checkoutProgress.shippingAddress',\n        routeName: 'checkoutShippingAddress',\n        type: [CheckoutStepType.SHIPPING_ADDRESS],\n      },\n      {\n        id: 'deliveryMode',\n        name: 'checkoutProgress.deliveryMode',\n        routeName: 'checkoutDeliveryMode',\n        type: [CheckoutStepType.DELIVERY_MODE],\n      },\n      {\n        id: 'paymentDetails',\n        name: 'checkoutProgress.paymentDetails',\n        routeName: 'checkoutPaymentDetails',\n        type: [CheckoutStepType.PAYMENT_DETAILS],\n      },\n      {\n        id: 'reviewOrder',\n        name: 'checkoutProgress.reviewOrder',\n        routeName: 'checkoutReviewOrder',\n        type: [CheckoutStepType.REVIEW_ORDER],\n      },\n    ],\n    express: false,\n    defaultDeliveryMode: [DeliveryModePreferences.FREE],\n    guest: false,\n  },\n};\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DeliveryMode, RoutingConfigService } from '@spartacus/core';\r\nimport {\r\n  CheckoutConfig,\r\n  DeliveryModePreferences,\r\n} from '../config/checkout-config';\r\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutConfigService {\r\n  steps: CheckoutStep[] = this.checkoutConfig.checkout.steps;\r\n  private express: boolean = this.checkoutConfig.checkout.express;\r\n  private guest: boolean = this.checkoutConfig.checkout.guest;\r\n  private defaultDeliveryMode: Array<DeliveryModePreferences | string> =\r\n    this.checkoutConfig.checkout.defaultDeliveryMode || [];\r\n\r\n  constructor(\r\n    private checkoutConfig: CheckoutConfig,\r\n    private routingConfigService: RoutingConfigService\r\n  ) {}\r\n\r\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep {\r\n    return this.steps[this.getCheckoutStepIndex('type', currentStepType)];\r\n  }\r\n\r\n  getCheckoutStepRoute(currentStepType: CheckoutStepType): string {\r\n    return this.getCheckoutStep(currentStepType).routeName;\r\n  }\r\n\r\n  getFirstCheckoutStepRoute(): string {\r\n    return this.steps[0].routeName;\r\n  }\r\n\r\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\r\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\r\n\r\n    return stepIndex >= 0 && this.steps[stepIndex + 1]\r\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex + 1].routeName)\r\n      : null;\r\n  }\r\n\r\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\r\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\r\n\r\n    return stepIndex >= 0 && this.steps[stepIndex - 1]\r\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex - 1].routeName)\r\n      : null;\r\n  }\r\n\r\n  getCurrentStepIndex(activatedRoute: ActivatedRoute): number | null {\r\n    const currentStepUrl: string = this.getStepUrlFromActivatedRoute(\r\n      activatedRoute\r\n    );\r\n\r\n    let stepIndex: number;\r\n    let index = 0;\r\n    for (const step of this.steps) {\r\n      if (\r\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\r\n      ) {\r\n        stepIndex = index;\r\n      } else {\r\n        index++;\r\n      }\r\n    }\r\n\r\n    return stepIndex >= 0 ? stepIndex : null;\r\n  }\r\n\r\n  protected compareDeliveryCost(\r\n    deliveryMode1: DeliveryMode,\r\n    deliveryMode2: DeliveryMode\r\n  ): number {\r\n    if (deliveryMode1.deliveryCost.value > deliveryMode2.deliveryCost.value) {\r\n      return 1;\r\n    } else if (\r\n      deliveryMode1.deliveryCost.value < deliveryMode2.deliveryCost.value\r\n    ) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  protected findMatchingDeliveryMode(\r\n    deliveryModes: DeliveryMode[],\r\n    index = 0\r\n  ): string {\r\n    switch (this.defaultDeliveryMode[index]) {\r\n      case DeliveryModePreferences.FREE:\r\n        if (deliveryModes[0].deliveryCost.value === 0) {\r\n          return deliveryModes[0].code;\r\n        }\r\n        break;\r\n      case DeliveryModePreferences.LEAST_EXPENSIVE:\r\n        const leastExpensiveFound = deliveryModes.find(\r\n          (deliveryMode) => deliveryMode.deliveryCost.value !== 0\r\n        );\r\n        if (leastExpensiveFound) {\r\n          return leastExpensiveFound.code;\r\n        }\r\n        break;\r\n      case DeliveryModePreferences.MOST_EXPENSIVE:\r\n        return deliveryModes[deliveryModes.length - 1].code;\r\n      default:\r\n        const codeFound = deliveryModes.find(\r\n          (deliveryMode) =>\r\n            deliveryMode.code === this.defaultDeliveryMode[index]\r\n        );\r\n        if (codeFound) {\r\n          return codeFound.code;\r\n        }\r\n    }\r\n    const lastMode = this.defaultDeliveryMode.length - 1 <= index;\r\n    return lastMode\r\n      ? deliveryModes[0].code\r\n      : this.findMatchingDeliveryMode(deliveryModes, index + 1);\r\n  }\r\n\r\n  getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string {\r\n    deliveryModes.sort(this.compareDeliveryCost);\r\n    return this.findMatchingDeliveryMode(deliveryModes);\r\n  }\r\n\r\n  isExpressCheckout(): boolean {\r\n    return this.express;\r\n  }\r\n\r\n  isGuestCheckout(): boolean {\r\n    return this.guest;\r\n  }\r\n\r\n  private getStepUrlFromActivatedRoute(\r\n    activatedRoute: ActivatedRoute\r\n  ): string | null {\r\n    return activatedRoute &&\r\n      activatedRoute.snapshot &&\r\n      activatedRoute.snapshot.url\r\n      ? `/${activatedRoute.snapshot.url.join('/')}`\r\n      : null;\r\n  }\r\n\r\n  private getStepUrlFromStepRoute(stepRoute: string): string {\r\n    return this.routingConfigService.getRouteConfig(stepRoute).paths[0];\r\n  }\r\n\r\n  private getCheckoutStepIndex(key: string, value: any): number | null {\r\n    return key && value\r\n      ? this.steps.findIndex((step: CheckoutStep) => step[key].includes(value))\r\n      : null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  AuthRedirectService,\r\n  AuthService,\r\n  RoutingService,\r\n  User,\r\n  UserToken,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CheckoutConfigService } from '../services/checkout-config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutAuthGuard implements CanActivate {\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected authService: AuthService,\r\n    protected authRedirectService: AuthRedirectService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return combineLatest([\r\n      this.authService.getUserToken(),\r\n      this.activeCartService.getAssignedUser(),\r\n    ]).pipe(\r\n      map(([token, user]: [UserToken, User]) => {\r\n        if (!token.access_token) {\r\n          if (this.activeCartService.isGuestCart()) {\r\n            return Boolean(user);\r\n          }\r\n          if (this.checkoutConfigService.isGuestCheckout()) {\r\n            this.routingService.go({ cxRoute: 'login' }, { forced: true });\r\n          } else {\r\n            this.routingService.go({ cxRoute: 'login' });\r\n          }\r\n          this.authRedirectService.reportAuthGuard();\r\n        }\r\n        return !!token.access_token;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  CheckoutService,\r\n  OCC_USER_ID_ANONYMOUS,\r\n  PaymentDetails,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  filter,\r\n  map,\r\n  shareReplay,\r\n  skipWhile,\r\n  switchMap,\r\n  tap,\r\n} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutDetailsService {\r\n  cartId$: Observable<string>;\r\n  getCheckoutDetailsLoaded$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {\r\n    this.cartId$ = this.activeCartService.getActive().pipe(\r\n      map((cartData) => {\r\n        if (\r\n          (cartData.user && cartData.user.uid === OCC_USER_ID_ANONYMOUS) ||\r\n          this.activeCartService.isGuestCart()\r\n        ) {\r\n          return cartData.guid;\r\n        }\r\n        return cartData.code;\r\n      }),\r\n      filter((cartId) => !!cartId)\r\n    );\r\n\r\n    this.getCheckoutDetailsLoaded$ = this.cartId$.pipe(\r\n      tap((cartId) => this.checkoutService.loadCheckoutDetails(cartId)),\r\n      shareReplay(1),\r\n      switchMap(() => this.checkoutService.getCheckoutDetailsLoaded()),\r\n      skipWhile((loaded) => !loaded)\r\n    );\r\n  }\r\n\r\n  getDeliveryAddress(): Observable<Address> {\r\n    return this.getCheckoutDetailsLoaded$.pipe(\r\n      switchMap(() => this.checkoutDeliveryService.getDeliveryAddress())\r\n    );\r\n  }\r\n\r\n  getSelectedDeliveryModeCode(): Observable<string> {\r\n    return this.getCheckoutDetailsLoaded$.pipe(\r\n      switchMap(() =>\r\n        this.checkoutDeliveryService.getSelectedDeliveryModeCode()\r\n      )\r\n    );\r\n  }\r\n\r\n  getPaymentDetails(): Observable<PaymentDetails> {\r\n    return this.getCheckoutDetailsLoaded$.pipe(\r\n      switchMap(() => this.checkoutPaymentService.getPaymentDetails())\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { combineLatest, of, Observable } from 'rxjs';\r\nimport { filter, map, switchMap, tap, debounceTime } from 'rxjs/operators';\r\n\r\nimport {\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  UserAddressService,\r\n  UserPaymentService,\r\n  PaymentDetails,\r\n  DeliveryMode,\r\n  CheckoutPaymentService,\r\n  StateUtils,\r\n} from '@spartacus/core';\r\nimport { CheckoutConfigService } from './checkout-config.service';\r\nimport { CheckoutDetailsService } from './checkout-details.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExpressCheckoutService {\r\n  private shippingAddressSet$: Observable<boolean>;\r\n  private deliveryModeSet$: Observable<boolean>;\r\n  private paymentMethodSet$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected userAddressService: UserAddressService,\r\n    protected userPaymentService: UserPaymentService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected checkoutDetailsService: CheckoutDetailsService,\r\n    protected checkoutConfigService: CheckoutConfigService\r\n  ) {\r\n    this.setShippingAddress();\r\n    this.setDeliveryMode();\r\n    this.setPaymentMethod();\r\n  }\r\n\r\n  protected setShippingAddress() {\r\n    this.shippingAddressSet$ = combineLatest([\r\n      this.userAddressService.getAddresses(),\r\n      this.userAddressService.getAddressesLoadedSuccess(),\r\n      this.checkoutDeliveryService.getSetDeliveryAddressProcess(),\r\n    ]).pipe(\r\n      debounceTime(0),\r\n      tap(\r\n        ([, addressesLoadedSuccess]: [\r\n          Address[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          if (!addressesLoadedSuccess) {\r\n            this.userAddressService.loadAddresses();\r\n          }\r\n        }\r\n      ),\r\n      filter(\r\n        ([, addressesLoadedSuccess]: [\r\n          Address[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => addressesLoadedSuccess\r\n      ),\r\n      switchMap(\r\n        ([addresses, , setDeliveryAddressProcess]: [\r\n          Address[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          const defaultAddress =\r\n            addresses.find((address) => address.defaultAddress) || addresses[0];\r\n          if (defaultAddress && Object.keys(defaultAddress).length) {\r\n            if (\r\n              !(\r\n                setDeliveryAddressProcess.success ||\r\n                setDeliveryAddressProcess.error ||\r\n                setDeliveryAddressProcess.loading\r\n              )\r\n            ) {\r\n              this.checkoutDeliveryService.setDeliveryAddress(defaultAddress);\r\n            }\r\n            return of(setDeliveryAddressProcess).pipe(\r\n              filter(\r\n                (\r\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  return (\r\n                    (setDeliveryAddressProcessState.success ||\r\n                      setDeliveryAddressProcessState.error) &&\r\n                    !setDeliveryAddressProcessState.loading\r\n                  );\r\n                }\r\n              ),\r\n              switchMap(\r\n                (\r\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  if (setDeliveryAddressProcessState.success) {\r\n                    return this.checkoutDetailsService.getDeliveryAddress();\r\n                  }\r\n                  return of(false);\r\n                }\r\n              ),\r\n              map((data) => Boolean(data && Object.keys(data).length))\r\n            );\r\n          }\r\n          return of(false);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  protected setPaymentMethod() {\r\n    this.paymentMethodSet$ = combineLatest([\r\n      this.userPaymentService.getPaymentMethods(),\r\n      this.userPaymentService.getPaymentMethodsLoadedSuccess(),\r\n      this.checkoutPaymentService.getSetPaymentDetailsResultProcess(),\r\n    ]).pipe(\r\n      debounceTime(0),\r\n      tap(\r\n        ([, paymentMethodsLoadedSuccess]: [\r\n          PaymentDetails[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          if (!paymentMethodsLoadedSuccess) {\r\n            this.userPaymentService.loadPaymentMethods();\r\n          }\r\n        }\r\n      ),\r\n      filter(\r\n        ([, success]: [\r\n          PaymentDetails[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => success\r\n      ),\r\n      switchMap(\r\n        ([payments, , setPaymentDetailsProcess]: [\r\n          PaymentDetails[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          const defaultPayment =\r\n            payments.find((address) => address.defaultPayment) || payments[0];\r\n          if (defaultPayment && Object.keys(defaultPayment).length) {\r\n            if (\r\n              !(\r\n                setPaymentDetailsProcess.success ||\r\n                setPaymentDetailsProcess.error ||\r\n                setPaymentDetailsProcess.loading\r\n              )\r\n            ) {\r\n              this.checkoutPaymentService.setPaymentDetails(defaultPayment);\r\n            }\r\n            return of(setPaymentDetailsProcess).pipe(\r\n              filter(\r\n                (\r\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  return (\r\n                    (setPaymentDetailsProcessState.success ||\r\n                      setPaymentDetailsProcessState.error) &&\r\n                    !setPaymentDetailsProcessState.loading\r\n                  );\r\n                }\r\n              ),\r\n              switchMap(\r\n                (\r\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  if (setPaymentDetailsProcessState.success) {\r\n                    return this.checkoutDetailsService.getPaymentDetails();\r\n                  }\r\n                  return of(false);\r\n                }\r\n              ),\r\n              map((data) => Boolean(data && Object.keys(data).length))\r\n            );\r\n          }\r\n          return of(false);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  protected setDeliveryMode() {\r\n    this.deliveryModeSet$ = combineLatest([\r\n      this.shippingAddressSet$,\r\n      this.checkoutDeliveryService.getSupportedDeliveryModes(),\r\n      this.checkoutDeliveryService.getSetDeliveryModeProcess(),\r\n      this.checkoutDeliveryService.getLoadSupportedDeliveryModeProcess(),\r\n    ]).pipe(\r\n      debounceTime(0),\r\n      switchMap(\r\n        ([\r\n          addressSet,\r\n          supportedDeliveryModes,\r\n          setDeliveryModeStatusFlag,\r\n          loadSupportedDeliveryModeStatus,\r\n        ]: [\r\n          boolean,\r\n          DeliveryMode[],\r\n          StateUtils.LoaderState<void>,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          if (addressSet) {\r\n            return of([\r\n              supportedDeliveryModes,\r\n              setDeliveryModeStatusFlag,\r\n              loadSupportedDeliveryModeStatus,\r\n            ]).pipe(\r\n              filter(\r\n                ([, , supportedDeliveryModeStatus]: [\r\n                  DeliveryMode[],\r\n                  StateUtils.LoaderState<void>,\r\n                  StateUtils.LoaderState<void>\r\n                ]) => supportedDeliveryModeStatus.success\r\n              ),\r\n              switchMap(\r\n                ([deliveryModes, setDeliveryModeStatus, ,]: [\r\n                  DeliveryMode[],\r\n                  StateUtils.LoaderState<void>,\r\n                  StateUtils.LoaderState<void>\r\n                ]) => {\r\n                  if (Boolean(deliveryModes.length)) {\r\n                    const preferredDeliveryMode = this.checkoutConfigService.getPreferredDeliveryMode(\r\n                      deliveryModes\r\n                    );\r\n                    return of([\r\n                      preferredDeliveryMode,\r\n                      setDeliveryModeStatus,\r\n                    ]).pipe(\r\n                      tap(\r\n                        ([deliveryMode, deliveryModeLoadingStatus]: [\r\n                          string,\r\n                          StateUtils.LoaderState<void>\r\n                        ]) => {\r\n                          if (\r\n                            deliveryMode &&\r\n                            !(\r\n                              deliveryModeLoadingStatus.success ||\r\n                              deliveryModeLoadingStatus.error ||\r\n                              deliveryModeLoadingStatus.loading\r\n                            )\r\n                          ) {\r\n                            this.checkoutDeliveryService.setDeliveryMode(\r\n                              deliveryMode\r\n                            );\r\n                          }\r\n                        }\r\n                      ),\r\n                      filter(\r\n                        ([, deliveryModeLoadingStatus]: [\r\n                          string,\r\n                          StateUtils.LoaderState<void>\r\n                        ]) => {\r\n                          return (\r\n                            (deliveryModeLoadingStatus.success ||\r\n                              deliveryModeLoadingStatus.error) &&\r\n                            !deliveryModeLoadingStatus.loading\r\n                          );\r\n                        }\r\n                      ),\r\n                      switchMap(\r\n                        ([, deliveryModeLoadingStatus]: [\r\n                          string,\r\n                          StateUtils.LoaderState<void>\r\n                        ]) => {\r\n                          if (deliveryModeLoadingStatus.success) {\r\n                            return this.checkoutDetailsService.getSelectedDeliveryModeCode();\r\n                          }\r\n                          return of(false);\r\n                        }\r\n                      ),\r\n                      map((data) => Boolean(data))\r\n                    );\r\n                  }\r\n                  return of(false);\r\n                }\r\n              )\r\n            );\r\n          } else {\r\n            return of(false);\r\n          }\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  protected resetCheckoutProcesses() {\r\n    this.checkoutDeliveryService.resetSetDeliveryAddressProcess();\r\n    this.checkoutPaymentService.resetSetPaymentDetailsProcess();\r\n    this.checkoutDeliveryService.resetSetDeliveryModeProcess();\r\n  }\r\n\r\n  public trySetDefaultCheckoutDetails(): Observable<boolean> {\r\n    this.resetCheckoutProcesses();\r\n    return combineLatest([this.deliveryModeSet$, this.paymentMethodSet$]).pipe(\r\n      map(([deliveryModeSet, paymentMethodSet]) =>\r\n        Boolean(deliveryModeSet && paymentMethodSet)\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, UrlTree } from '@angular/router';\r\nimport { ActiveCartService, RoutingConfigService } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { CheckoutStepType } from '../model/checkout-step.model';\r\nimport { CheckoutConfigService } from '../services/checkout-config.service';\r\nimport { ExpressCheckoutService } from '../services/express-checkout.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutGuard implements CanActivate {\r\n  private readonly firstStep$: Observable<UrlTree>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected routingConfigService: RoutingConfigService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected expressCheckoutService: ExpressCheckoutService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {\r\n    this.firstStep$ = of(\r\n      this.router.parseUrl(\r\n        this.routingConfigService.getRouteConfig(\r\n          this.checkoutConfigService.getFirstCheckoutStepRoute()\r\n        ).paths[0]\r\n      )\r\n    );\r\n  }\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    if (\r\n      this.checkoutConfigService.isExpressCheckout() &&\r\n      !this.activeCartService.isGuestCart()\r\n    ) {\r\n      return this.expressCheckoutService.trySetDefaultCheckoutDetails().pipe(\r\n        switchMap((expressCheckoutPossible: boolean) => {\r\n          return expressCheckoutPossible\r\n            ? of(\r\n                this.router.parseUrl(\r\n                  this.routingConfigService.getRouteConfig(\r\n                    this.checkoutConfigService.getCheckoutStepRoute(\r\n                      CheckoutStepType.REVIEW_ORDER\r\n                    )\r\n                  ).paths[0]\r\n                )\r\n              )\r\n            : this.firstStep$;\r\n        })\r\n      );\r\n    }\r\n    return this.firstStep$;\r\n  }\r\n}\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  templateUrl: './checkout-orchestrator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { CheckoutGuard } from '../../guards/checkout.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutOrchestrator: {\r\n          component: CheckoutOrchestratorComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutOrchestratorComponent],\r\n  entryComponents: [CheckoutOrchestratorComponent],\r\n  exports: [CheckoutOrchestratorComponent],\r\n})\r\nexport class CheckoutOrchestratorModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActiveCartService, Cart } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n@Component({\r\n  selector: 'cx-checkout-order-summary',\r\n  templateUrl: './checkout-order-summary.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CheckoutOrderSummaryComponent {\r\n  cart$: Observable<Cart>;\r\n\r\n  constructor(protected activeCartService: ActiveCartService) {\r\n    this.cart$ = this.activeCartService.getActive();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\r\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CartSharedModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutOrderSummary: {\r\n          component: CheckoutOrderSummaryComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutOrderSummaryComponent],\r\n  entryComponents: [CheckoutOrderSummaryComponent],\r\n  exports: [CheckoutOrderSummaryComponent],\r\n})\r\nexport class CheckoutOrderSummaryModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RoutingService, RoutingConfigService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CheckoutConfig } from '../../../config/checkout-config';\r\nimport { CheckoutStep } from '../../../model/checkout-step.model';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-progress-mobile-bottom',\r\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\r\n})\r\nexport class CheckoutProgressMobileBottomComponent implements OnInit {\r\n  constructor(\r\n    protected config: CheckoutConfig,\r\n    protected routingService: RoutingService,\r\n    protected routingConfigService: RoutingConfigService\r\n  ) {}\r\n\r\n  steps: Array<CheckoutStep>;\r\n  routerState$: Observable<any>;\r\n  activeStepIndex: number;\r\n  activeStepUrl: string;\r\n\r\n  ngOnInit() {\r\n    this.steps = this.config.checkout.steps;\r\n    this.routerState$ = this.routingService.getRouterState().pipe(\r\n      tap((router) => {\r\n        this.activeStepUrl = router.state.context.id;\r\n\r\n        this.steps.forEach((step, index) => {\r\n          const routeUrl = `/${\r\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\r\n          }`;\r\n          if (routeUrl === this.activeStepUrl) {\r\n            this.activeStepIndex = index;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\r\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutProgressMobileBottom: {\r\n          component: CheckoutProgressMobileBottomComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutProgressMobileBottomComponent],\r\n  entryComponents: [CheckoutProgressMobileBottomComponent],\r\n  exports: [CheckoutProgressMobileBottomComponent],\r\n})\r\nexport class CheckoutProgressMobileBottomModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  RoutingConfigService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CheckoutConfig } from '../../../config/checkout-config';\r\nimport { CheckoutStep } from '../../../model/checkout-step.model';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-progress-mobile-top',\r\n  templateUrl: './checkout-progress-mobile-top.component.html',\r\n})\r\nexport class CheckoutProgressMobileTopComponent implements OnInit {\r\n  constructor(\r\n    protected config: CheckoutConfig,\r\n    protected routingService: RoutingService,\r\n    protected routingConfigService: RoutingConfigService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  steps: Array<CheckoutStep>;\r\n  routerState$: Observable<any>;\r\n  cart$: Observable<Cart>;\r\n  activeStepIndex: number;\r\n  activeStepUrl: string;\r\n\r\n  ngOnInit(): void {\r\n    this.steps = this.config.checkout.steps;\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.routerState$ = this.routingService.getRouterState().pipe(\r\n      tap((router) => {\r\n        this.activeStepUrl = router.state.context.id;\r\n\r\n        this.steps.forEach((step, index) => {\r\n          const routeUrl = `/${\r\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\r\n          }`;\r\n          if (routeUrl === this.activeStepUrl) {\r\n            this.activeStepIndex = index;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\r\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutProgressMobileTop: {\r\n          component: CheckoutProgressMobileTopComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutProgressMobileTopComponent],\r\n  entryComponents: [CheckoutProgressMobileTopComponent],\r\n  exports: [CheckoutProgressMobileTopComponent],\r\n})\r\nexport class CheckoutProgressMobileTopModule {}\r\n","import { RoutingService, RoutingConfigService } from '@spartacus/core';\r\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\nimport { CheckoutConfig } from '../../config/checkout-config';\r\nimport { CheckoutStep } from '../../model/checkout-step.model';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-progress',\r\n  templateUrl: './checkout-progress.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CheckoutProgressComponent implements OnInit {\r\n  constructor(\r\n    protected config: CheckoutConfig,\r\n    protected routingService: RoutingService,\r\n    protected routingConfigService: RoutingConfigService\r\n  ) {}\r\n\r\n  steps: Array<CheckoutStep>;\r\n  routerState$: Observable<any>;\r\n  activeStepIndex: number;\r\n  activeStepUrl: string;\r\n\r\n  ngOnInit(): void {\r\n    this.steps = this.config.checkout.steps;\r\n    this.routerState$ = this.routingService.getRouterState().pipe(\r\n      tap((router) => {\r\n        this.activeStepUrl = router.state.context.id;\r\n\r\n        this.steps.forEach((step, index) => {\r\n          const routeUrl = `/${\r\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\r\n          }`;\r\n          if (routeUrl === this.activeStepUrl) {\r\n            this.activeStepIndex = index;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  getTabIndex(stepIndex: number): number {\r\n    return !this.isActive(stepIndex) && !this.isDisabled(stepIndex) ? 0 : -1;\r\n  }\r\n\r\n  isActive(index: number): boolean {\r\n    return index === this.activeStepIndex;\r\n  }\r\n\r\n  isDisabled(index: number): boolean {\r\n    return index > this.activeStepIndex;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutProgressComponent } from './checkout-progress.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\r\n  declarations: [CheckoutProgressComponent],\r\n  entryComponents: [CheckoutProgressComponent],\r\n  exports: [CheckoutProgressComponent],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutProgress: {\r\n          component: CheckoutProgressComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n})\r\nexport class CheckoutProgressModule {}\r\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Address, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShippingAddressSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.SHIPPING_ADDRESS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.SHIPPING_ADDRESS} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getDeliveryAddress()\n      .pipe(\n        map((deliveryAddress: Address) =>\n          deliveryAddress && Object.keys(deliveryAddress).length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  CheckoutDeliveryService,\r\n  DeliveryMode,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, withLatestFrom } from 'rxjs/operators';\r\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\r\n\r\n@Component({\r\n  selector: 'cx-delivery-mode',\r\n  templateUrl: './delivery-mode.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DeliveryModeComponent implements OnInit, OnDestroy {\r\n  supportedDeliveryModes$: Observable<DeliveryMode[]>;\r\n  selectedDeliveryMode$: Observable<DeliveryMode>;\r\n  currentDeliveryModeId: string;\r\n  checkoutStepUrlNext: string;\r\n  checkoutStepUrlPrevious: string;\r\n  private allowRedirect = false;\r\n\r\n  deliveryModeSub: Subscription;\r\n\r\n  mode: FormGroup = this.fb.group({\r\n    deliveryModeId: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private checkoutDeliveryService: CheckoutDeliveryService,\r\n    private routingService: RoutingService,\r\n    private checkoutConfigService: CheckoutConfigService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n\r\n    this.supportedDeliveryModes$ = this.checkoutDeliveryService.getSupportedDeliveryModes();\r\n\r\n    this.deliveryModeSub = this.supportedDeliveryModes$\r\n      .pipe(\r\n        withLatestFrom(\r\n          this.checkoutDeliveryService\r\n            .getSelectedDeliveryMode()\r\n            .pipe(\r\n              map((deliveryMode: DeliveryMode) =>\r\n                deliveryMode && deliveryMode.code ? deliveryMode.code : null\r\n              )\r\n            )\r\n        )\r\n      )\r\n      .subscribe(([deliveryModes, code]: [DeliveryMode[], string]) => {\r\n        if (!code && deliveryModes && deliveryModes.length) {\r\n          code = this.checkoutConfigService.getPreferredDeliveryMode(\r\n            deliveryModes\r\n          );\r\n        }\r\n        if (\r\n          this.allowRedirect &&\r\n          !!code &&\r\n          code === this.currentDeliveryModeId\r\n        ) {\r\n          this.routingService.go(this.checkoutStepUrlNext);\r\n        }\r\n        if (code) {\r\n          this.mode.controls['deliveryModeId'].setValue(code);\r\n          if (code !== this.currentDeliveryModeId) {\r\n            this.checkoutDeliveryService.setDeliveryMode(code);\r\n          }\r\n        }\r\n        this.currentDeliveryModeId = code;\r\n      });\r\n  }\r\n\r\n  changeMode(code: string): void {\r\n    if (code !== this.currentDeliveryModeId) {\r\n      this.checkoutDeliveryService.setDeliveryMode(code);\r\n      this.currentDeliveryModeId = code;\r\n    }\r\n  }\r\n\r\n  next(): void {\r\n    this.allowRedirect = true;\r\n    if (this.mode.valid && this.mode.value) {\r\n      if (!this.currentDeliveryModeId) {\r\n        this.currentDeliveryModeId = this.mode.value.deliveryModeId;\r\n      }\r\n      this.checkoutDeliveryService.setDeliveryMode(this.currentDeliveryModeId);\r\n    }\r\n  }\r\n\r\n  back(): void {\r\n    this.routingService.go(this.checkoutStepUrlPrevious);\r\n  }\r\n\r\n  get deliveryModeInvalid(): boolean {\r\n    return this.mode.controls['deliveryModeId'].invalid;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.deliveryModeSub) {\r\n      this.deliveryModeSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { DeliveryModeComponent } from './delivery-mode.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, I18nModule, SpinnerModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutDeliveryMode: {\r\n          component: DeliveryModeComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            ShippingAddressSetGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [DeliveryModeComponent],\r\n  entryComponents: [DeliveryModeComponent],\r\n  exports: [DeliveryModeComponent],\r\n})\r\nexport class DeliveryModeModule {}\r\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryModeSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.DELIVERY_MODE\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.DELIVERY_MODE} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { ModalService } from '../../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  constructor(protected modalService: ModalService) {}\n\n  @Input()\n  suggestedAddresses: Address[];\n  @Input()\n  enteredAddress: Address;\n\n  selectedAddress: Address;\n\n  ngOnInit(): void {\n    this.selectedAddress = this.suggestedAddresses.length\n      ? this.suggestedAddresses[0]\n      : this.enteredAddress;\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  Address,\r\n  AddressValidation,\r\n  CardType,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  Country,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  Region,\r\n  StateUtils,\r\n  UserAddressService,\r\n  UserPaymentService,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { Card } from '../../../../../shared/components/card/card.component'; // tslint:disable-line\r\nimport {\r\n  ModalRef,\r\n  ModalService,\r\n} from '../../../../../shared/components/modal/index';\r\nimport { ICON_TYPE } from '../../../../misc/icon/index';\r\nimport { SuggestedAddressDialogComponent } from '../../shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component'; // tslint:disable-line\r\n\r\n@Component({\r\n  selector: 'cx-payment-form',\r\n  templateUrl: './payment-form.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaymentFormComponent implements OnInit, OnDestroy {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  private addressVerifySub: Subscription;\r\n  suggestedAddressModalRef: ModalRef;\r\n  months: string[] = [];\r\n  years: number[] = [];\r\n\r\n  cardTypes$: Observable<CardType[]>;\r\n  shippingAddress$: Observable<Address>;\r\n  countries$: Observable<Country[]>;\r\n  loading$: Observable<StateUtils.LoaderState<void>>;\r\n  sameAsShippingAddress = true;\r\n  regions$: Observable<Region[]>;\r\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n  showSameAsShippingAddressCheckbox$: Observable<boolean>;\r\n\r\n  @Input()\r\n  setAsDefaultField: boolean;\r\n\r\n  @Input()\r\n  paymentMethodsCount: number;\r\n\r\n  @Output()\r\n  goBack = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  closeForm = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  setPaymentDetails = new EventEmitter<any>();\r\n\r\n  paymentForm: FormGroup = this.fb.group({\r\n    cardType: this.fb.group({\r\n      code: [null, Validators.required],\r\n    }),\r\n    accountHolderName: ['', Validators.required],\r\n    cardNumber: ['', Validators.required],\r\n    expiryMonth: [null, Validators.required],\r\n    expiryYear: [null, Validators.required],\r\n    cvn: ['', Validators.required],\r\n    defaultPayment: [false],\r\n  });\r\n\r\n  billingAddressForm: FormGroup = this.fb.group({\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    line1: ['', Validators.required],\r\n    line2: [''],\r\n    town: ['', Validators.required],\r\n    region: this.fb.group({\r\n      isocodeShort: [null, Validators.required],\r\n    }),\r\n    country: this.fb.group({\r\n      isocode: [null, Validators.required],\r\n    }),\r\n    postalCode: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected userPaymentService: UserPaymentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected fb: FormBuilder,\r\n    protected modalService: ModalService,\r\n    protected userAddressService: UserAddressService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.expMonthAndYear();\r\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\r\n      tap((countries) => {\r\n        // If the store is empty fetch countries. This is also used when changing language.\r\n        if (Object.keys(countries).length === 0) {\r\n          this.userPaymentService.loadBillingCountries();\r\n        }\r\n      })\r\n    );\r\n\r\n    this.cardTypes$ = this.checkoutPaymentService.getCardTypes().pipe(\r\n      tap((cardTypes) => {\r\n        if (Object.keys(cardTypes).length === 0) {\r\n          this.checkoutPaymentService.loadSupportedCardTypes();\r\n        }\r\n      })\r\n    );\r\n\r\n    this.shippingAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\r\n    this.loading$ = this.checkoutPaymentService.getSetPaymentDetailsResultProcess();\r\n\r\n    this.showSameAsShippingAddressCheckbox$ = combineLatest([\r\n      this.countries$,\r\n      this.shippingAddress$,\r\n    ]).pipe(\r\n      map(([countries, address]) => {\r\n        return (\r\n          address?.country &&\r\n          !!countries.filter(\r\n            (country: Country): boolean =>\r\n              country.isocode === address.country.isocode\r\n          ).length\r\n        );\r\n      }),\r\n      tap((shouldShowCheckbox) => {\r\n        this.sameAsShippingAddress = shouldShowCheckbox;\r\n      })\r\n    );\r\n\r\n    // verify the new added address\r\n    this.addressVerifySub = this.checkoutDeliveryService\r\n      .getAddressVerificationResults()\r\n      .subscribe((results: AddressValidation) => {\r\n        if (results.decision === 'FAIL') {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'ACCEPT') {\r\n          this.next();\r\n        } else if (results.decision === 'REJECT') {\r\n          this.globalMessageService.add(\r\n            { key: 'addressForm.invalidAddress' },\r\n            GlobalMessageType.MSG_TYPE_ERROR\r\n          );\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'REVIEW') {\r\n          this.openSuggestedAddress(results);\r\n        }\r\n      });\r\n\r\n    this.regions$ = this.selectedCountry$.pipe(\r\n      switchMap((country) => this.userAddressService.getRegions(country)),\r\n      tap((regions) => {\r\n        const regionControl = this.billingAddressForm.get(\r\n          'region.isocodeShort'\r\n        );\r\n        if (regions.length > 0) {\r\n          regionControl.enable();\r\n        } else {\r\n          regionControl.disable();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  expMonthAndYear(): void {\r\n    const year = new Date().getFullYear();\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      this.years.push(year + i);\r\n    }\r\n\r\n    for (let j = 1; j <= 12; j++) {\r\n      if (j < 10) {\r\n        this.months.push(`0${j}`);\r\n      } else {\r\n        this.months.push(j.toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleDefaultPaymentMethod(): void {\r\n    this.paymentForm.value.defaultPayment = !this.paymentForm.value\r\n      .defaultPayment;\r\n  }\r\n\r\n  toggleSameAsShippingAddress(): void {\r\n    this.sameAsShippingAddress = !this.sameAsShippingAddress;\r\n  }\r\n\r\n  getAddressCardContent(address: Address): Card {\r\n    let region = '';\r\n    if (address.region && address.region.isocode) {\r\n      region = address.region.isocode + ', ';\r\n    }\r\n\r\n    return {\r\n      textBold: address.firstName + ' ' + address.lastName,\r\n      text: [\r\n        address.line1,\r\n        address.line2,\r\n        address.town + ', ' + region + address.country.isocode,\r\n        address.postalCode,\r\n        address.phone,\r\n      ],\r\n    };\r\n  }\r\n\r\n  openSuggestedAddress(results: AddressValidation): void {\r\n    if (!this.suggestedAddressModalRef) {\r\n      this.suggestedAddressModalRef = this.modalService.open(\r\n        SuggestedAddressDialogComponent,\r\n        { centered: true, size: 'lg' }\r\n      );\r\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.billingAddressForm.value;\r\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\r\n        results.suggestedAddresses;\r\n      this.suggestedAddressModalRef.result\r\n        .then(() => {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          this.suggestedAddressModalRef = null;\r\n        })\r\n        .catch(() => {\r\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          this.suggestedAddressModalRef = null;\r\n        });\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    this.closeForm.emit();\r\n  }\r\n\r\n  back(): void {\r\n    this.goBack.emit();\r\n  }\r\n\r\n  verifyAddress(): void {\r\n    if (this.sameAsShippingAddress) {\r\n      this.next();\r\n    } else {\r\n      this.checkoutDeliveryService.verifyAddress(this.billingAddressForm.value);\r\n    }\r\n  }\r\n\r\n  countrySelected(country: Country): void {\r\n    this.billingAddressForm.get('country.isocode').setValue(country.isocode);\r\n    this.selectedCountry$.next(country.isocode);\r\n  }\r\n\r\n  next(): void {\r\n    if (this.paymentForm.valid) {\r\n      if (this.sameAsShippingAddress) {\r\n        this.setPaymentDetails.emit({\r\n          paymentDetails: this.paymentForm.value,\r\n          billingAddress: null,\r\n        });\r\n      } else {\r\n        if (this.billingAddressForm.valid) {\r\n          this.setPaymentDetails.emit({\r\n            paymentDetails: this.paymentForm.value,\r\n            billingAddress: this.billingAddressForm.value,\r\n          });\r\n        } else {\r\n          this.billingAddressForm.markAllAsTouched();\r\n        }\r\n      }\r\n    } else {\r\n      this.paymentForm.markAllAsTouched();\r\n\r\n      if (!this.sameAsShippingAddress) {\r\n        this.billingAddressForm.markAllAsTouched();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.addressVerifySub) {\r\n      this.addressVerifySub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { CardModule } from '../../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../../shared/components/spinner/spinner.module';\r\nimport { IconModule } from '../../../../misc/icon/icon.module';\r\nimport { PaymentFormComponent } from './payment-form.component';\r\nimport { FormErrorsModule } from '../../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    CardModule,\r\n    I18nModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [PaymentFormComponent],\r\n  entryComponents: [PaymentFormComponent],\r\n  exports: [PaymentFormComponent],\r\n})\r\nexport class PaymentFormModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  CheckoutService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  PaymentDetails,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserPaymentService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\nimport { ICON_TYPE } from '../../../misc/icon';\r\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\r\n\r\n@Component({\r\n  selector: 'cx-payment-method',\r\n  templateUrl: './payment-method.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaymentMethodComponent implements OnInit, OnDestroy {\r\n  iconTypes = ICON_TYPE;\r\n  existingPaymentMethods$: Observable<PaymentDetails[]>;\r\n  isLoading$: Observable<boolean>;\r\n  cards$: Observable<{ content: Card; paymentMethod: PaymentDetails }[]>;\r\n  selectedMethod$: Observable<PaymentDetails>;\r\n  isGuestCheckout = false;\r\n  newPaymentFormManuallyOpened = false;\r\n\r\n  protected shouldRedirect: boolean;\r\n  protected deliveryAddress: Address;\r\n  protected checkoutStepUrlNext: string;\r\n  protected checkoutStepUrlPrevious: string;\r\n\r\n  constructor(\r\n    protected userPaymentService: UserPaymentService,\r\n    protected checkoutService: CheckoutService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected routingService: RoutingService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected translation: TranslationService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.shouldRedirect = false;\r\n    this.isLoading$ = this.userPaymentService.getPaymentMethodsLoading();\r\n\r\n    if (!this.activeCartService.isGuestCart()) {\r\n      this.userPaymentService.loadPaymentMethods();\r\n    } else {\r\n      this.isGuestCheckout = true;\r\n    }\r\n\r\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n\r\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n\r\n    this.checkoutDeliveryService\r\n      .getDeliveryAddress()\r\n      .pipe(take(1))\r\n      .subscribe((address: Address) => {\r\n        this.deliveryAddress = address;\r\n      });\r\n\r\n    this.existingPaymentMethods$ = this.userPaymentService.getPaymentMethods();\r\n\r\n    this.selectedMethod$ = this.checkoutPaymentService.getPaymentDetails().pipe(\r\n      tap((paymentInfo) => {\r\n        if (paymentInfo && !!Object.keys(paymentInfo).length) {\r\n          if (paymentInfo['hasError']) {\r\n            Object.keys(paymentInfo).forEach((key) => {\r\n              if (key.startsWith('InvalidField')) {\r\n                this.sendPaymentMethodFailGlobalMessage(paymentInfo[key]);\r\n              }\r\n            });\r\n            this.checkoutService.clearCheckoutStep(3);\r\n          } else if (this.shouldRedirect) {\r\n            this.routingService.go(this.checkoutStepUrlNext);\r\n          }\r\n        }\r\n      })\r\n    );\r\n\r\n    this.cards$ = combineLatest([\r\n      this.existingPaymentMethods$.pipe(\r\n        switchMap((methods) => {\r\n          return !methods?.length\r\n            ? of([])\r\n            : combineLatest(\r\n                methods.map((method) =>\r\n                  combineLatest([\r\n                    of(method),\r\n                    this.translation.translate('paymentCard.expires', {\r\n                      month: method.expiryMonth,\r\n                      year: method.expiryYear,\r\n                    }),\r\n                  ]).pipe(\r\n                    map(([payment, translation]) => ({\r\n                      payment,\r\n                      expiryTranslation: translation,\r\n                    }))\r\n                  )\r\n                )\r\n              );\r\n        })\r\n      ),\r\n      this.selectedMethod$,\r\n      this.translation.translate('paymentForm.useThisPayment'),\r\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\r\n      this.translation.translate('paymentCard.selected'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          paymentMethods,\r\n          selectedMethod,\r\n          textUseThisPayment,\r\n          textDefaultPaymentMethod,\r\n          textSelected,\r\n        ]) => {\r\n          if (\r\n            paymentMethods.length &&\r\n            (!selectedMethod || Object.keys(selectedMethod).length === 0)\r\n          ) {\r\n            const defaultPaymentMethod = paymentMethods.find(\r\n              (paymentMethod) => paymentMethod.payment.defaultPayment\r\n            );\r\n            if (defaultPaymentMethod) {\r\n              selectedMethod = defaultPaymentMethod.payment;\r\n              this.checkoutPaymentService.setPaymentDetails(selectedMethod);\r\n            }\r\n          }\r\n          return paymentMethods.map((payment) => ({\r\n            content: this.createCard(\r\n              payment.payment,\r\n              {\r\n                textExpires: payment.expiryTranslation,\r\n                textUseThisPayment,\r\n                textDefaultPaymentMethod,\r\n                textSelected,\r\n              },\r\n              selectedMethod\r\n            ),\r\n            paymentMethod: payment.payment,\r\n          }));\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  selectPaymentMethod(paymentDetails: PaymentDetails): void {\r\n    this.checkoutPaymentService.setPaymentDetails(paymentDetails);\r\n  }\r\n\r\n  showNewPaymentForm(): void {\r\n    this.newPaymentFormManuallyOpened = true;\r\n  }\r\n\r\n  hideNewPaymentForm(): void {\r\n    this.newPaymentFormManuallyOpened = false;\r\n  }\r\n\r\n  setPaymentDetails({\r\n    paymentDetails,\r\n    billingAddress,\r\n  }: {\r\n    paymentDetails: PaymentDetails;\r\n    billingAddress?: Address;\r\n  }): void {\r\n    const details: PaymentDetails = { ...paymentDetails };\r\n    details.billingAddress = billingAddress || this.deliveryAddress;\r\n    this.checkoutPaymentService.createPaymentDetails(details);\r\n    this.shouldRedirect = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.checkoutPaymentService.paymentProcessSuccess();\r\n  }\r\n\r\n  protected getCardIcon(code: string): string {\r\n    let ccIcon: string;\r\n    if (code === 'visa') {\r\n      ccIcon = this.iconTypes.VISA;\r\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\r\n      ccIcon = this.iconTypes.MASTER_CARD;\r\n    } else if (code === 'diners') {\r\n      ccIcon = this.iconTypes.DINERS_CLUB;\r\n    } else if (code === 'amex') {\r\n      ccIcon = this.iconTypes.AMEX;\r\n    } else {\r\n      ccIcon = this.iconTypes.CREDIT_CARD;\r\n    }\r\n\r\n    return ccIcon;\r\n  }\r\n\r\n  protected sendPaymentMethodFailGlobalMessage(field: string) {\r\n    this.globalMessageService.add(\r\n      {\r\n        key: 'paymentMethods.invalidField',\r\n        params: { field },\r\n      },\r\n      GlobalMessageType.MSG_TYPE_ERROR\r\n    );\r\n  }\r\n\r\n  protected createCard(\r\n    paymentDetails: PaymentDetails,\r\n    cardLabels: {\r\n      textDefaultPaymentMethod: string;\r\n      textExpires: string;\r\n      textUseThisPayment: string;\r\n      textSelected: string;\r\n    },\r\n    selected: PaymentDetails\r\n  ): Card {\r\n    return {\r\n      title: paymentDetails.defaultPayment\r\n        ? cardLabels.textDefaultPaymentMethod\r\n        : '',\r\n      textBold: paymentDetails.accountHolderName,\r\n      text: [paymentDetails.cardNumber, cardLabels.textExpires],\r\n      img: this.getCardIcon(paymentDetails.cardType.code),\r\n      actions: [{ name: cardLabels.textUseThisPayment, event: 'send' }],\r\n      header:\r\n        selected?.id === paymentDetails.id\r\n          ? cardLabels.textSelected\r\n          : undefined,\r\n    };\r\n  }\r\n\r\n  goNext(): void {\r\n    this.routingService.go(this.checkoutStepUrlNext);\r\n  }\r\n\r\n  goPrevious(): void {\r\n    this.routingService.go(this.checkoutStepUrlPrevious);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\r\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { PaymentFormModule } from './payment-form/payment-form.module';\r\nimport { PaymentMethodComponent } from './payment-method.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    PaymentFormModule,\r\n    CardModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutPaymentDetails: {\r\n          component: PaymentMethodComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            ShippingAddressSetGuard,\r\n            DeliveryModeSetGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [PaymentMethodComponent],\r\n  entryComponents: [PaymentMethodComponent],\r\n  exports: [PaymentMethodComponent],\r\n})\r\nexport class PaymentMethodModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CheckoutService, RoutingService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-place-order',\r\n  templateUrl: './place-order.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PlaceOrderComponent implements OnInit, OnDestroy {\r\n  placeOrderSubscription: Subscription;\r\n\r\n  checkoutSubmitForm: FormGroup = this.fb.group({\r\n    termsAndConditions: [false, Validators.requiredTrue],\r\n  });\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    protected routingService: RoutingService,\r\n    protected fb: FormBuilder\r\n  ) {}\r\n\r\n  submitForm(): void {\r\n    if (this.checkoutSubmitForm.valid) {\r\n      this.checkoutService.placeOrder();\r\n    } else {\r\n      this.checkoutSubmitForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.placeOrderSubscription = this.checkoutService\r\n      .getOrderDetails()\r\n      .pipe(filter((order) => Object.keys(order).length !== 0))\r\n      .subscribe(() => {\r\n        this.routingService.go({ cxRoute: 'orderConfirmation' });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.placeOrderSubscription) {\r\n      this.placeOrderSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CartNotEmptyGuard } from '../../../cart/cart-not-empty.guard';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { PlaceOrderComponent } from './place-order.component';\r\nimport { FormErrorsModule } from '../../../../shared/index';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    ReactiveFormsModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutPlaceOrder: {\r\n          component: PlaceOrderComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [PlaceOrderComponent],\r\n  entryComponents: [PlaceOrderComponent],\r\n  exports: [PlaceOrderComponent],\r\n})\r\nexport class PlaceOrderModule {}\r\n","import { Injectable, isDevMode } from '@angular/core';\r\nimport { CanActivate, Router, UrlTree } from '@angular/router';\r\nimport { RoutingConfigService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\r\nimport { CheckoutConfigService } from '../services/checkout-config.service';\r\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PaymentDetailsSetGuard implements CanActivate {\r\n  constructor(\r\n    private checkoutDetailsService: CheckoutDetailsService,\r\n    private checkoutConfigService: CheckoutConfigService,\r\n    private routingConfigService: RoutingConfigService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\r\n      CheckoutStepType.PAYMENT_DETAILS\r\n    );\r\n\r\n    if (!checkoutStep && isDevMode()) {\r\n      console.warn(\r\n        `Missing step with type ${CheckoutStepType.PAYMENT_DETAILS} in checkout configuration.`\r\n      );\r\n    }\r\n\r\n    return this.checkoutDetailsService\r\n      .getPaymentDetails()\r\n      .pipe(\r\n        map((paymentDetails) =>\r\n          paymentDetails && Object.keys(paymentDetails).length !== 0\r\n            ? true\r\n            : this.router.parseUrl(\r\n                checkoutStep &&\r\n                  this.routingConfigService.getRouteConfig(\r\n                    checkoutStep.routeName\r\n                  ).paths[0]\r\n              )\r\n        )\r\n      );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n  Address,\r\n  Cart,\r\n  ActiveCartService,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  Country,\r\n  DeliveryMode,\r\n  OrderEntry,\r\n  PaymentDetails,\r\n  TranslationService,\r\n  UserAddressService,\r\n  PromotionResult,\r\n  PromotionLocation,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\nimport { CheckoutStepType } from '../../model/index';\r\nimport { CheckoutConfigService } from '../../services/index';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\n@Component({\r\n  selector: 'cx-review-submit',\r\n  templateUrl: './review-submit.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReviewSubmitComponent implements OnInit {\r\n  checkoutStepType = CheckoutStepType;\r\n  entries$: Observable<OrderEntry[]>;\r\n  cart$: Observable<Cart>;\r\n  deliveryMode$: Observable<DeliveryMode>;\r\n  countryName$: Observable<string>;\r\n  deliveryAddress$: Observable<Address>;\r\n  paymentDetails$: Observable<PaymentDetails>;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  constructor(\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected userAddressService: UserAddressService,\r\n    protected activeCartService: ActiveCartService,\r\n    protected translation: TranslationService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.entries$ = this.activeCartService.getEntries();\r\n    this.deliveryAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\r\n    this.paymentDetails$ = this.checkoutPaymentService.getPaymentDetails();\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n\r\n    this.deliveryMode$ = this.checkoutDeliveryService\r\n      .getSelectedDeliveryMode()\r\n      .pipe(\r\n        tap((selected: DeliveryMode) => {\r\n          if (selected === null) {\r\n            this.checkoutDeliveryService.loadSupportedDeliveryModes();\r\n          }\r\n        })\r\n      );\r\n\r\n    this.countryName$ = this.deliveryAddress$.pipe(\r\n      switchMap((address: Address) =>\r\n        this.userAddressService.getCountry(address.country.isocode)\r\n      ),\r\n      tap((country: Country) => {\r\n        if (country === null) {\r\n          this.userAddressService.loadDeliveryCountries();\r\n        }\r\n      }),\r\n      map((country: Country) => country && country.name)\r\n    );\r\n  }\r\n\r\n  getShippingAddressCard(\r\n    deliveryAddress: Address,\r\n    countryName: string\r\n  ): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('addressCard.shipTo'),\r\n    ]).pipe(\r\n      map(([textTitle]) => {\r\n        if (!countryName) {\r\n          countryName = deliveryAddress.country.isocode;\r\n        }\r\n\r\n        let region = '';\r\n        if (deliveryAddress.region && deliveryAddress.region.isocode) {\r\n          region = deliveryAddress.region.isocode + ', ';\r\n        }\r\n\r\n        return {\r\n          title: textTitle,\r\n          textBold: deliveryAddress.firstName + ' ' + deliveryAddress.lastName,\r\n          text: [\r\n            deliveryAddress.line1,\r\n            deliveryAddress.line2,\r\n            deliveryAddress.town + ', ' + region + countryName,\r\n            deliveryAddress.postalCode,\r\n            deliveryAddress.phone,\r\n          ],\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('checkoutShipping.shippingMethod'),\r\n    ]).pipe(\r\n      map(([textTitle]) => {\r\n        return {\r\n          title: textTitle,\r\n          textBold: deliveryMode.name,\r\n          text: [deliveryMode.description],\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('paymentForm.payment'),\r\n      this.translation.translate('paymentCard.expires', {\r\n        month: paymentDetails.expiryMonth,\r\n        year: paymentDetails.expiryYear,\r\n      }),\r\n    ]).pipe(\r\n      map(([textTitle, textExpires]) => {\r\n        return {\r\n          title: textTitle,\r\n          textBold: paymentDetails.accountHolderName,\r\n          text: [paymentDetails.cardNumber, textExpires],\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  getCheckoutStepUrl(stepType: CheckoutStepType): string {\r\n    const step = this.checkoutConfigService.getCheckoutStep(stepType);\r\n    return step && step.routeName;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\r\nimport { PaymentDetailsSetGuard } from '../../guards/payment-details-set.guard';\r\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { ReviewSubmitComponent } from './review-submit.component';\r\nimport { PromotionsModule } from '../promotions/promotions.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardModule,\r\n    CartSharedModule,\r\n    I18nModule,\r\n    UrlModule,\r\n    RouterModule,\r\n    PromotionsModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutReviewOrder: {\r\n          component: ReviewSubmitComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            ShippingAddressSetGuard,\r\n            DeliveryModeSetGuard,\r\n            PaymentDetailsSetGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ReviewSubmitComponent],\r\n  entryComponents: [ReviewSubmitComponent],\r\n  exports: [ReviewSubmitComponent],\r\n})\r\nexport class ReviewSubmitModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  Address,\r\n  AddressValidation,\r\n  CheckoutDeliveryService,\r\n  Country,\r\n  ErrorModel,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  Region,\r\n  Title,\r\n  UserAddressService,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport {\r\n  ModalRef,\r\n  ModalService,\r\n} from '../../../../../shared/components/modal/index';\r\nimport { sortTitles } from '../../../../../shared/utils/forms/title-utils';\r\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\r\n\r\n@Component({\r\n  selector: 'cx-address-form',\r\n  templateUrl: './address-form.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddressFormComponent implements OnInit, OnDestroy {\r\n  countries$: Observable<Country[]>;\r\n  titles$: Observable<Title[]>;\r\n  regions$: Observable<Region[]>;\r\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n  @Input()\r\n  addressData: Address;\r\n\r\n  @Input()\r\n  actionBtnLabel: string;\r\n\r\n  @Input()\r\n  cancelBtnLabel: string;\r\n\r\n  @Input()\r\n  setAsDefaultField = true;\r\n\r\n  @Input()\r\n  showTitleCode: boolean;\r\n\r\n  @Input()\r\n  showCancelBtn = true;\r\n\r\n  @Output()\r\n  submitAddress = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  backToAddress = new EventEmitter<any>();\r\n\r\n  addressVerifySub: Subscription;\r\n  regionsSub: Subscription;\r\n  suggestedAddressModalRef: ModalRef;\r\n\r\n  addressForm: FormGroup = this.fb.group({\r\n    country: this.fb.group({\r\n      isocode: [null, Validators.required],\r\n    }),\r\n    titleCode: [''],\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    line1: ['', Validators.required],\r\n    line2: [''],\r\n    town: ['', Validators.required],\r\n    region: this.fb.group({\r\n      isocode: [null, Validators.required],\r\n    }),\r\n    postalCode: ['', Validators.required],\r\n    phone: '',\r\n    defaultAddress: [false],\r\n  });\r\n\r\n  constructor(\r\n    protected fb: FormBuilder,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected userService: UserService,\r\n    protected userAddressService: UserAddressService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected modalService: ModalService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // Fetching countries\r\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\r\n      tap((countries: Country[]) => {\r\n        if (Object.keys(countries).length === 0) {\r\n          this.userAddressService.loadDeliveryCountries();\r\n        }\r\n      })\r\n    );\r\n\r\n    // Fetching titles\r\n    this.titles$ = this.userService.getTitles().pipe(\r\n      tap((titles: Title[]) => {\r\n        if (Object.keys(titles).length === 0) {\r\n          this.userService.loadTitles();\r\n        }\r\n      }),\r\n      map((titles) => {\r\n        titles.sort(sortTitles);\r\n        const noneTitle = { code: '', name: 'Title' };\r\n        return [noneTitle, ...titles];\r\n      })\r\n    );\r\n\r\n    // Fetching regions\r\n    this.regions$ = this.selectedCountry$.pipe(\r\n      switchMap((country) => this.userAddressService.getRegions(country)),\r\n      tap((regions: Region[]) => {\r\n        const regionControl = this.addressForm.get('region.isocode');\r\n        if (regions && regions.length > 0) {\r\n          regionControl.enable();\r\n        } else {\r\n          regionControl.disable();\r\n        }\r\n      })\r\n    );\r\n\r\n    // verify the new added address\r\n    this.addressVerifySub = this.checkoutDeliveryService\r\n      .getAddressVerificationResults()\r\n      .subscribe((results: AddressValidation) => {\r\n        if (results.decision === 'FAIL') {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'ACCEPT') {\r\n          this.submitAddress.emit(this.addressForm.value);\r\n        } else if (results.decision === 'REJECT') {\r\n          // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\r\n          if (\r\n            results.errors.errors.some(\r\n              (error: ErrorModel) => error.subject === 'titleCode'\r\n            )\r\n          ) {\r\n            this.globalMessageService.add(\r\n              { key: 'addressForm.titleRequired' },\r\n              GlobalMessageType.MSG_TYPE_ERROR\r\n            );\r\n          } else {\r\n            this.globalMessageService.add(\r\n              { key: 'addressForm.invalidAddress' },\r\n              GlobalMessageType.MSG_TYPE_ERROR\r\n            );\r\n          }\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'REVIEW') {\r\n          this.openSuggestedAddress(results);\r\n        }\r\n      });\r\n\r\n    if (this.addressData && Object.keys(this.addressData).length !== 0) {\r\n      this.addressForm.patchValue(this.addressData);\r\n\r\n      this.countrySelected(this.addressData.country);\r\n      if (this.addressData.region) {\r\n        this.regionSelected(this.addressData.region);\r\n      }\r\n    }\r\n  }\r\n\r\n  countrySelected(country: Country): void {\r\n    this.addressForm['controls'].country['controls'].isocode.setValue(\r\n      country.isocode\r\n    );\r\n    this.selectedCountry$.next(country.isocode);\r\n  }\r\n\r\n  regionSelected(region: Region): void {\r\n    this.addressForm['controls'].region['controls'].isocode.setValue(\r\n      region.isocode\r\n    );\r\n  }\r\n\r\n  toggleDefaultAddress(): void {\r\n    this.addressForm['controls'].defaultAddress.setValue(\r\n      this.addressForm.value.defaultAddress\r\n    );\r\n  }\r\n\r\n  back(): void {\r\n    this.backToAddress.emit();\r\n  }\r\n\r\n  verifyAddress(): void {\r\n    if (this.addressForm.valid) {\r\n      if (this.addressForm.get('region').value.isocode) {\r\n        this.regionsSub = this.regions$.pipe(take(1)).subscribe((regions) => {\r\n          const obj = regions.find(\r\n            (region) =>\r\n              region.isocode ===\r\n              this.addressForm.controls['region'].value.isocode\r\n          );\r\n          Object.assign(this.addressForm.value.region, {\r\n            isocodeShort: obj.isocodeShort,\r\n          });\r\n        });\r\n      }\r\n\r\n      if (this.addressForm.dirty) {\r\n        this.checkoutDeliveryService.verifyAddress(this.addressForm.value);\r\n      } else {\r\n        // address form value not changed\r\n        // ignore duplicate address\r\n        this.submitAddress.emit(undefined);\r\n      }\r\n    } else {\r\n      this.addressForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  openSuggestedAddress(results: AddressValidation): void {\r\n    if (!this.suggestedAddressModalRef) {\r\n      this.suggestedAddressModalRef = this.modalService.open(\r\n        SuggestedAddressDialogComponent,\r\n        { centered: true, size: 'lg' }\r\n      );\r\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.addressForm.value;\r\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\r\n        results.suggestedAddresses;\r\n      this.suggestedAddressModalRef.result\r\n        .then((address) => {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          if (address) {\r\n            address = Object.assign(\r\n              {\r\n                titleCode: this.addressForm.value.titleCode,\r\n                phone: this.addressForm.value.phone,\r\n                selected: true,\r\n              },\r\n              address\r\n            );\r\n            this.submitAddress.emit(address);\r\n          }\r\n          this.suggestedAddressModalRef = null;\r\n        })\r\n        .catch(() => {\r\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          const address = Object.assign(\r\n            {\r\n              selected: true,\r\n            },\r\n            this.addressForm.value\r\n          );\r\n          this.submitAddress.emit(address);\r\n          this.suggestedAddressModalRef = null;\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutDeliveryService.clearAddressVerificationResults();\r\n\r\n    if (this.addressVerifySub) {\r\n      this.addressVerifySub.unsubscribe();\r\n    }\r\n\r\n    if (this.regionsSub) {\r\n      this.regionsSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../../misc/icon/index';\r\nimport { AddressFormComponent } from './address-form.component';\r\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\r\nimport { FormErrorsModule } from '../../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    NgSelectModule,\r\n    IconModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\r\n  entryComponents: [SuggestedAddressDialogComponent],\r\n  exports: [AddressFormComponent, SuggestedAddressDialogComponent],\r\n})\r\nexport class AddressFormModule {}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsLoadedGuard implements CanActivate {\n  constructor(private checkoutDetailsService: CheckoutDetailsService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.checkoutDetailsService.getCheckoutDetailsLoaded$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserAddressService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, take, filter } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\r\n\r\nexport interface CardWithAddress {\r\n  card: Card;\r\n  address: Address;\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-shipping-address',\r\n  templateUrl: './shipping-address.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShippingAddressComponent implements OnInit {\r\n  existingAddresses$: Observable<Address[]>;\r\n  newAddressFormManuallyOpened = false;\r\n  isLoading$: Observable<boolean>;\r\n  cards$: Observable<CardWithAddress[]>;\r\n  selectedAddress$: Observable<Address>;\r\n  forceLoader = false; // this helps with smoother steps transition\r\n  isGuestCheckout = false;\r\n\r\n  constructor(\r\n    protected userAddressService: UserAddressService,\r\n    protected routingService: RoutingService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected translation: TranslationService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading$ = this.userAddressService.getAddressesLoading();\r\n    this.existingAddresses$ = this.userAddressService.getAddresses();\r\n    this.selectedAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\r\n\r\n    this.cards$ = combineLatest([\r\n      this.existingAddresses$,\r\n      this.selectedAddress$,\r\n      this.translation.translate('checkoutAddress.defaultShippingAddress'),\r\n      this.translation.translate('checkoutAddress.shipToThisAddress'),\r\n      this.translation.translate('addressCard.selected'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          addresses,\r\n          selected,\r\n          textDefaultShippingAddress,\r\n          textShipToThisAddress,\r\n          textSelected,\r\n        ]) => {\r\n          // Select default address if none selected\r\n          if (\r\n            addresses.length &&\r\n            (!selected || Object.keys(selected).length === 0)\r\n          ) {\r\n            const defaultAddress = addresses.find(\r\n              (address) => address.defaultAddress\r\n            );\r\n            selected = defaultAddress;\r\n            this.selectAddress(defaultAddress);\r\n          }\r\n          return addresses.map((address) => {\r\n            const card = this.getCardContent(\r\n              address,\r\n              selected,\r\n              textDefaultShippingAddress,\r\n              textShipToThisAddress,\r\n              textSelected\r\n            );\r\n            return {\r\n              address,\r\n              card,\r\n            };\r\n          });\r\n        }\r\n      )\r\n    );\r\n\r\n    if (!this.activeCartService.isGuestCart()) {\r\n      this.userAddressService.loadAddresses();\r\n    } else {\r\n      this.isGuestCheckout = true;\r\n    }\r\n  }\r\n\r\n  getCardContent(\r\n    address: Address,\r\n    selected: any,\r\n    textDefaultShippingAddress: string,\r\n    textShipToThisAddress: string,\r\n    textSelected: string\r\n  ): Card {\r\n    let region = '';\r\n\r\n    if (address.region && address.region.isocode) {\r\n      region = address.region.isocode + ', ';\r\n    }\r\n\r\n    return {\r\n      title: address.defaultAddress ? textDefaultShippingAddress : '',\r\n      textBold: address.firstName + ' ' + address.lastName,\r\n      text: [\r\n        address.line1,\r\n        address.line2,\r\n        address.town + ', ' + region + address.country.isocode,\r\n        address.postalCode,\r\n        address.phone,\r\n      ],\r\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\r\n      header: selected && selected.id === address.id ? textSelected : '',\r\n    };\r\n  }\r\n\r\n  selectAddress(address: Address): void {\r\n    this.checkoutDeliveryService.setDeliveryAddress(address);\r\n  }\r\n\r\n  addAddress(address: Address): void {\r\n    this.selectedAddress$\r\n      .pipe(\r\n        filter((selected) => !!selected?.shippingAddress),\r\n        take(1)\r\n      )\r\n      .subscribe(() => this.goNext());\r\n\r\n    this.forceLoader = true;\r\n\r\n    this.existingAddresses$.pipe(take(1)).subscribe((addresses) => {\r\n      addresses.includes(address)\r\n        ? this.selectAddress(address)\r\n        : this.checkoutDeliveryService.createAndSetAddress(address);\r\n    });\r\n  }\r\n\r\n  showNewAddressForm(): void {\r\n    this.newAddressFormManuallyOpened = true;\r\n  }\r\n\r\n  hideNewAddressForm(goPrevious: boolean = false): void {\r\n    this.newAddressFormManuallyOpened = false;\r\n    if (goPrevious) {\r\n      this.goPrevious();\r\n    }\r\n  }\r\n\r\n  goNext(): void {\r\n    this.routingService.go(\r\n      this.checkoutConfigService.getNextCheckoutStepUrl(this.activatedRoute)\r\n    );\r\n  }\r\n\r\n  goPrevious(): void {\r\n    this.routingService.go(\r\n      this.checkoutConfigService.getPreviousCheckoutStepUrl(\r\n        this.activatedRoute\r\n      ) || 'cart'\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CheckoutProgressMobileBottomModule } from '../checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\r\nimport { CheckoutProgressMobileTopModule } from '../checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { AddressFormModule } from './address-form/address-form.module';\r\nimport { CheckoutDetailsLoadedGuard } from '../../guards/checkout-details-loaded.guard';\r\nimport { ShippingAddressComponent } from './shipping-address.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    AddressFormModule,\r\n    CardModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    CheckoutProgressMobileTopModule,\r\n    CheckoutProgressMobileBottomModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutShippingAddress: {\r\n          component: ShippingAddressComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            CheckoutDetailsLoadedGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ShippingAddressComponent],\r\n  entryComponents: [ShippingAddressComponent],\r\n  exports: [ShippingAddressComponent],\r\n})\r\nexport class ShippingAddressModule {}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutOrchestratorModule } from './components/checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './components/checkout-order-summary/checkout-order-summary.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileBottomModule } from './components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileTopModule } from './components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './components/checkout-progress/checkout-progress.module';\nimport { DeliveryModeModule } from './components/delivery-mode/delivery-mode.module';\nimport { PaymentMethodModule } from './components/payment-method/payment-method.module';\nimport { PlaceOrderModule } from './components/place-order/place-order.module';\nimport { PromotionsModule } from './components/promotions/promotions.module';\nimport { ReviewSubmitModule } from './components/review-submit/review-submit.module';\nimport { ShippingAddressModule } from './components/shipping-address/shipping-address.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    DeliveryModeModule,\n    PaymentMethodModule,\n    PlaceOrderModule,\n    PromotionsModule,\n    ReviewSubmitModule,\n    ShippingAddressModule,\n  ],\n})\nexport class CheckoutComponentModule {}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  AuthService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NotCheckoutAuthGuard implements CanActivate {\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected authService: AuthService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.authService.getUserToken().pipe(\r\n      map((token) => {\r\n        if (token.access_token) {\r\n          this.routingService.go({ cxRoute: 'home' });\r\n        } else if (this.activeCartService.isGuestCart()) {\r\n          this.routingService.go({ cxRoute: 'cart' });\r\n          return false;\r\n        }\r\n        return !token.access_token;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class SkipLinkConfig {\r\n  skipLinks?: SkipLink[];\r\n}\r\n\r\nexport abstract class SkipLink {\r\n  key: string;\r\n  i18nKey: string;\r\n  target?: HTMLElement;\r\n  position?: SkipLinkScrollPosition;\r\n}\r\n\r\nexport enum SkipLinkScrollPosition {\r\n  BEFORE = 'BEFORE',\r\n  AFTER = 'AFTER',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { KeyboardFocusService } from '../../keyboard-focus/services/keyboard-focus.service';\r\nimport { SkipLink, SkipLinkConfig } from '../config/skip-link.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SkipLinkService {\r\n  private skipLinks$ = new BehaviorSubject<SkipLink[]>([]);\r\n\r\n  constructor(\r\n    protected config: SkipLinkConfig,\r\n    protected keyboardFocusService: KeyboardFocusService\r\n  ) {}\r\n\r\n  getSkipLinks(): Observable<SkipLink[]> {\r\n    return this.skipLinks$;\r\n  }\r\n\r\n  add(key: string, target: HTMLElement): void {\r\n    const found: SkipLink = this.config.skipLinks.find(\r\n      (skipLink) => skipLink.key === key\r\n    );\r\n\r\n    if (found) {\r\n      const existing: SkipLink[] = this.skipLinks$.value;\r\n      existing.splice(this.getSkipLinkIndexInArray(key), 0, {\r\n        target,\r\n        i18nKey: found.i18nKey,\r\n        position: found.position,\r\n        key,\r\n      });\r\n      this.skipLinks$.next(existing);\r\n    }\r\n  }\r\n\r\n  remove(key: string): void {\r\n    const found: SkipLink = this.config.skipLinks.find(\r\n      (skipLink) => skipLink.key === key\r\n    );\r\n\r\n    if (found) {\r\n      let existing: SkipLink[] = this.skipLinks$.value;\r\n      existing = existing.filter((skipLink) => skipLink.key !== key);\r\n      this.skipLinks$.next(existing);\r\n    }\r\n  }\r\n\r\n  scrollToTarget(skipLink: SkipLink): void {\r\n    const target =\r\n      skipLink.target instanceof HTMLElement\r\n        ? skipLink.target\r\n        : (skipLink.target as Element).parentElement;\r\n\r\n    // focus first focusable element in the\r\n    const firstFocusable =\r\n      this.keyboardFocusService.findFirstFocusable(target) || target;\r\n\r\n    // we force a tabindex if not available, to ensure we can focus into the element\r\n    const hasTabindex = firstFocusable.hasAttribute('tabindex');\r\n    if (!hasTabindex) {\r\n      firstFocusable.setAttribute('tabindex', '-1');\r\n    }\r\n\r\n    firstFocusable.focus();\r\n\r\n    // drop the tmp tabindex\r\n    if (!hasTabindex) {\r\n      firstFocusable.removeAttribute('tabindex');\r\n    }\r\n  }\r\n\r\n  protected getSkipLinkIndexInArray(key: string): number {\r\n    let index: number = this.config.skipLinks.findIndex(\r\n      (skipLink) => skipLink.key === key\r\n    );\r\n\r\n    while (index > 0) {\r\n      index--;\r\n      const previous: SkipLink = this.config.skipLinks[index];\r\n      if (previous) {\r\n        const existing: SkipLink[] = this.skipLinks$.value;\r\n        const found: number = existing.findIndex(\r\n          (skipLink) => skipLink.key === previous.key\r\n        );\r\n        if (found > -1) {\r\n          return found + 1;\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { SkipLink } from '../config/skip-link.config';\r\nimport { SkipLinkService } from '../service/skip-link.service';\r\n\r\n@Component({\r\n  selector: 'cx-skip-link',\r\n  templateUrl: './skip-link.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SkipLinkComponent {\r\n  skipLinks$: Observable<SkipLink[]> = this.skipLinkService.getSkipLinks();\r\n\r\n  constructor(private skipLinkService: SkipLinkService) {}\r\n\r\n  scrollToTarget(skipLink: SkipLink): void {\r\n    this.skipLinkService.scrollToTarget(skipLink);\r\n  }\r\n}\r\n","import { SkipLinkConfig } from './skip-link.config';\r\n\r\nexport const defaultSkipLinkConfig: SkipLinkConfig = {\r\n  skipLinks: [\r\n    {\r\n      key: 'cx-header',\r\n      i18nKey: 'skipLink.labels.header',\r\n    },\r\n    {\r\n      key: 'cx-main',\r\n      i18nKey: 'skipLink.labels.main',\r\n    },\r\n    { key: 'cx-footer', i18nKey: 'skipLink.labels.footer' },\r\n  ],\r\n};\r\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { SkipLinkService } from '../service/skip-link.service';\r\n\r\n@Directive({\r\n  selector: '[cxSkipLink]',\r\n})\r\nexport class SkipLinkDirective implements OnInit, OnDestroy {\r\n  @Input() cxSkipLink: string;\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected skipLinkService: SkipLinkService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.skipLinkService.add(this.cxSkipLink, this.elementRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.skipLinkService.remove(this.cxSkipLink);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  APP_INITIALIZER,\r\n  ComponentFactoryResolver,\r\n  NgModule,\r\n} from '@angular/core';\r\nimport {\r\n  ConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\r\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\r\nimport { KeyboardFocusModule } from '../keyboard-focus/keyboard-focus.module';\r\nimport { SkipLinkComponent } from './component/skip-link.component';\r\nimport { defaultSkipLinkConfig } from './config/default-skip-link.config';\r\nimport { SkipLinkDirective } from './directive/skip-link.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    ConfigModule.withConfig(defaultSkipLinkConfig),\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [SkipLinkComponent, SkipLinkDirective],\r\n  exports: [SkipLinkDirective],\r\n  entryComponents: [SkipLinkComponent],\r\n\r\n  providers: [\r\n    provideDefaultConfig(defaultSkipLinkConfig),\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: skipLinkFactory,\r\n      deps: [ComponentFactoryResolver, OutletService],\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class SkipLinkModule {}\r\n\r\n/**\r\n * Adds the skip link component before the cx-storefront.\r\n */\r\nexport function skipLinkFactory(\r\n  componentFactoryResolver: ComponentFactoryResolver,\r\n  outletService: OutletService\r\n) {\r\n  const isReady = () => {\r\n    const factory = componentFactoryResolver.resolveComponentFactory(\r\n      SkipLinkComponent\r\n    );\r\n    outletService.add('cx-storefront', <any>factory, OutletPosition.BEFORE);\r\n  };\r\n  return isReady;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HamburgerMenuService {\r\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  constructor(router: Router) {\r\n    router.events\r\n      .pipe(filter((event) => event instanceof NavigationStart))\r\n      .subscribe(() => {\r\n        this.toggle(true);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * toggles the expand state of the hamburger menu\r\n   */\r\n  toggle(forceCollapse?: boolean): void {\r\n    if (forceCollapse) {\r\n      this.isExpanded.next(false);\r\n    } else {\r\n      this.isExpanded.next(!this.isExpanded.value);\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        HamburgerMenuComponent: {\r\n          component: HamburgerMenuComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [HamburgerMenuComponent],\r\n  exports: [HamburgerMenuComponent],\r\n  entryComponents: [HamburgerMenuComponent],\r\n})\r\nexport class HamburgerMenuModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { OutletRefModule } from '../cms-structure/outlet/outlet-ref/outlet-ref.module';\r\nimport { LaunchDialogModule } from './launch-dialog/index';\r\n\r\n@NgModule({\r\n  imports: [OutletRefModule, LaunchDialogModule.forRoot()],\r\n  exports: [OutletRefModule],\r\n})\r\nexport class LayoutModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport {\r\n  CmsService,\r\n  ContentSlotComponentData,\r\n  ContentSlotData,\r\n  DynamicAttributeService,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\r\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\r\nimport { CmsComponentsService } from '../../services/cms-components.service';\r\n\r\n/**\r\n * The `PageSlotComponent` is used to render the CMS page slot and it's components.\r\n *\r\n * The Page slot host element will be supplemented with css classes so that the layout\r\n * can be fully controlled by customers:\r\n * - The page slot _position_ is added as a css class by default.\r\n * - The `cx-pending` is added for as long as the slot hasn't start loading.\r\n * - The `page-fold` style class is added for the page slot which is configured as the page fold.\r\n */\r\n@Component({\r\n  selector: 'cx-page-slot,[cx-page-slot]',\r\n  templateUrl: './page-slot.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PageSlotComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * The position represents the unique key for a page slot on a single page, but can\r\n   * be reused cross pages.\r\n   *\r\n   * The position is used to find the CMS components for the page slot. It is also\r\n   * added as an additional CSS class so that layoutt can be applied.\r\n   */\r\n  @Input() set position(value: string) {\r\n    this.position$.next(value);\r\n  }\r\n  get position(): string {\r\n    return this.position$.value;\r\n  }\r\n\r\n  /**\r\n   * Maintains css classes introduced by the host and adds additional classes.\r\n   */\r\n  @Input() @HostBinding() class: string;\r\n\r\n  /**\r\n   * Indicates that the page slot is the last page slot above the fold.\r\n   */\r\n  @HostBinding('class.page-fold') @Input() isPageFold = false;\r\n\r\n  /**\r\n   * Indicates that the components of the page slot haven't been loaded as long\r\n   * as the isPending state is true.\r\n   */\r\n  @HostBinding('class.cx-pending') isPending = true;\r\n\r\n  /**\r\n   * Indicates that the page slot doesn't contain any components. This is no\r\n   * longer used in spartacus, but kept for backwards compatibility.\r\n   */\r\n  @HostBinding('class.has-components') @Input() hasComponents = false;\r\n\r\n  protected position$: BehaviorSubject<string> = new BehaviorSubject(undefined);\r\n\r\n  components: ContentSlotComponentData[];\r\n\r\n  protected slot$: Observable<ContentSlotData> = this.position$.pipe(\r\n    switchMap((position) => this.cmsService.getContentSlot(position)),\r\n    distinctUntilChanged(this.isDistinct)\r\n  );\r\n\r\n  /** Observes the components for the given page slot. */\r\n  components$: Observable<ContentSlotComponentData[]> = this.slot$.pipe(\r\n    map((slot) => slot?.components ?? [])\r\n  );\r\n\r\n  protected subscription: Subscription = new Subscription();\r\n\r\n  /** Keeps track of the pending components that must be loaded for the page slot */\r\n  private pendingComponentCount = 0;\r\n\r\n  /** Tracks the last used position, in case the page slot is used dynamically */\r\n  private lastPosition: string;\r\n  constructor(\r\n    protected cmsService: CmsService,\r\n    protected dynamicAttributeService: DynamicAttributeService,\r\n    protected renderer: Renderer2,\r\n    protected elementRef: ElementRef,\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.slot$.pipe(tap((slot) => this.decorate(slot))).subscribe((value) => {\r\n        this.components = value?.components || [];\r\n        this.cd.markForCheck();\r\n      })\r\n    );\r\n  }\r\n\r\n  protected decorate(slot: ContentSlotData): void {\r\n    let cls = this.class || '';\r\n\r\n    if (this.lastPosition && cls.indexOf(this.lastPosition) > -1) {\r\n      cls = cls.replace(this.lastPosition, '');\r\n    }\r\n    if (this.position$.value) {\r\n      cls += ` ${this.position$.value}`;\r\n      this.lastPosition = this.position$.value;\r\n    }\r\n\r\n    // host bindings\r\n    this.pending = slot?.components?.length || 0;\r\n    this.hasComponents = slot?.components?.length > 0;\r\n    if (cls && cls !== this.class) {\r\n      this.class = cls;\r\n    }\r\n\r\n    this.addSmartEditSlotClass(slot);\r\n  }\r\n\r\n  /**\r\n   * Sets the pending count for the page slot components. Once all pending components are\r\n   * loaded, the `isPending` flag is updated, so that the associated class can be updated\r\n   */\r\n  protected set pending(count: number) {\r\n    this.pendingComponentCount = count;\r\n    this.isPending = this.pendingComponentCount > 0;\r\n  }\r\n\r\n  protected get pending(): number {\r\n    return this.pendingComponentCount;\r\n  }\r\n\r\n  /*\r\n   * Is triggered when a component is added to the view. This is used to\r\n   * update the pending count\r\n   */\r\n  isLoaded(loadState: boolean) {\r\n    if (loadState) {\r\n      this.pending--;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The `DeferLoadingStrategy` indicates whether the component should be\r\n   * rendered instantly or whether it should be deferred.\r\n   */\r\n  getComponentDeferOptions(componentType: string): IntersectionOptions {\r\n    const deferLoading = this.cmsComponentsService.getDeferLoadingStrategy(\r\n      componentType\r\n    );\r\n    return { deferLoading };\r\n  }\r\n\r\n  protected isDistinct(old: ContentSlotData, current: ContentSlotData) {\r\n    return (\r\n      current.components &&\r\n      old.components?.length === current.components.length &&\r\n      !old.components.find(\r\n        (el, index) => el.uid !== current.components[index].uid\r\n      )\r\n    );\r\n  }\r\n\r\n  private addSmartEditSlotClass(slot: ContentSlotData): void {\r\n    if (slot) {\r\n      this.dynamicAttributeService.addDynamicAttributes(\r\n        this.elementRef.nativeElement,\r\n        this.renderer,\r\n        { slotData: slot }\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription?.unsubscribe();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { OutletModule } from '../../outlet/outlet.module';\r\nimport { PageComponentModule } from '../component/page-component.module';\r\nimport { PageSlotComponent } from './page-slot.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OutletModule, PageComponentModule],\r\n  providers: [],\r\n  declarations: [PageSlotComponent],\r\n  exports: [PageSlotComponent],\r\n})\r\nexport class PageSlotModule {}\r\n","import { Inject, Injectable, isDevMode, Optional } from '@angular/core';\r\nimport { CmsService, Page } from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\r\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\r\nimport {\r\n  BREAKPOINT,\r\n  LayoutConfig,\r\n  LayoutSlotConfig,\r\n  SlotConfig,\r\n} from '../../../layout/config/layout-config';\r\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PageLayoutService {\r\n  constructor(\r\n    private cms: CmsService,\r\n    private config: LayoutConfig,\r\n    private breakpointService: BreakpointService,\r\n    @Optional()\r\n    @Inject(PAGE_LAYOUT_HANDLER)\r\n    private handlers: PageLayoutHandler[]\r\n  ) {}\r\n\r\n  // Prints warn messages for missing layout configs.\r\n  // The warnings are only printed once per config\r\n  // to not pollute the console log.\r\n  private warnLogMessages = {};\r\n  private logSlots = {};\r\n\r\n  getSlots(section?: string): Observable<string[]> {\r\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\r\n      map(([page, breakpoint]) => {\r\n        const pageTemplate = page.template;\r\n        const slots = this.resolveSlots(page, section, breakpoint);\r\n        return { slots, pageTemplate, breakpoint };\r\n      }),\r\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\r\n        let result = of(slots);\r\n        for (const handler of this.handlers || []) {\r\n          result = handler.handle(result, pageTemplate, section, breakpoint);\r\n        }\r\n        return result;\r\n      }),\r\n      distinctUntilChanged((a, b) => {\r\n        if (a.length !== b.length) {\r\n          return false;\r\n        }\r\n        for (let i = 0; i < a.length; i++) {\r\n          if (a[i] !== b[i]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns an observable with the last page slot above-the-fold\r\n   * for the given pageTemplate / breakpoint.\r\n   *\r\n   * The page fold is configurable in the `LayoutConfig` for each page layout.\r\n   */\r\n  getPageFoldSlot(pageTemplate: string): Observable<string> {\r\n    return this.breakpointService.breakpoint$.pipe(\r\n      map((breakpoint) => {\r\n        if (!this.config.layoutSlots) {\r\n          // no layout config available\r\n          return null;\r\n        }\r\n        const pageTemplateConfig = this.config.layoutSlots[pageTemplate];\r\n        const config = this.getResponsiveSlotConfig(\r\n          <LayoutSlotConfig>pageTemplateConfig,\r\n          'pageFold',\r\n          breakpoint\r\n        );\r\n        return config ? config.pageFold : null;\r\n      })\r\n    );\r\n  }\r\n\r\n  private resolveSlots(page, section, breakpoint): string[] {\r\n    const config = this.getSlotConfig(\r\n      page.template,\r\n      'slots',\r\n      section,\r\n      breakpoint\r\n    );\r\n    if (config && config.slots) {\r\n      const pageSlots = Object.keys(page.slots);\r\n      return config.slots.filter((slot) => pageSlots.includes(slot));\r\n    } else if (!section) {\r\n      this.logMissingLayoutConfig(page);\r\n      return Object.keys(page.slots);\r\n    } else {\r\n      this.logMissingLayoutConfig(page, section);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  get page$(): Observable<Page> {\r\n    return this.cms.getCurrentPage().pipe(filter((page) => !!page));\r\n  }\r\n\r\n  get templateName$(): Observable<string> {\r\n    return this.page$.pipe(\r\n      filter((page) => !!page.template),\r\n      map((page: Page) => page.template)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * load slots from the layout configuration. The breakpoint is used\r\n   * to load a specific configuration for the given breakpoint. If there's\r\n   * no configuration available for the given breakpoint the default slot\r\n   * configuration is returned.\r\n   */\r\n  protected getSlotConfig(\r\n    templateUid: string,\r\n    configAttribute: string,\r\n    section?: string,\r\n    breakpoint?: BREAKPOINT\r\n  ): SlotConfig {\r\n    if (!this.config.layoutSlots) {\r\n      return null;\r\n    }\r\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\r\n\r\n    if (section) {\r\n      return this.getSlotConfigForSection(\r\n        templateUid,\r\n        configAttribute,\r\n        section,\r\n        breakpoint\r\n      );\r\n    }\r\n\r\n    if (pageTemplateConfig) {\r\n      return this.getResponsiveSlotConfig(\r\n        <LayoutSlotConfig>pageTemplateConfig,\r\n        configAttribute,\r\n        breakpoint\r\n      );\r\n    }\r\n  }\r\n\r\n  protected getSlotConfigForSection(\r\n    templateUid: string,\r\n    configAttribute: string,\r\n    section?: string,\r\n    breakpoint?: BREAKPOINT\r\n  ): SlotConfig {\r\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\r\n\r\n    if (!pageTemplateConfig) {\r\n      return null;\r\n    }\r\n\r\n    // if there's no section config on the page layout\r\n    // we fall back to the global section config\r\n    const sectionConfig = pageTemplateConfig[section]\r\n      ? pageTemplateConfig[section]\r\n      : this.config.layoutSlots[section];\r\n\r\n    if (!sectionConfig) {\r\n      return null;\r\n    }\r\n\r\n    const responsiveConfig = this.getResponsiveSlotConfig(\r\n      <LayoutSlotConfig>sectionConfig,\r\n      configAttribute,\r\n      breakpoint\r\n    );\r\n\r\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\r\n      return responsiveConfig;\r\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\r\n      return pageTemplateConfig[section];\r\n    } else if (this.config.layoutSlots[section]) {\r\n      return <SlotConfig>this.config.layoutSlots[section];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a list of slots for a breakpoint specific configuratoin\r\n   * If there's no specific configuration for the breakpoint,\r\n   * the closest available configuration will be returned.\r\n   */\r\n  protected getResponsiveSlotConfig(\r\n    layoutSlotConfig: LayoutSlotConfig,\r\n    configAttribute: string,\r\n    breakpoint?: BREAKPOINT\r\n  ): SlotConfig {\r\n    let slotConfig = <SlotConfig>layoutSlotConfig;\r\n\r\n    // fallback to default slot config\r\n    if (!layoutSlotConfig || !breakpoint) {\r\n      return slotConfig;\r\n    }\r\n\r\n    // we have a config for the specific breakpoint\r\n    if (\r\n      layoutSlotConfig[breakpoint] &&\r\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\r\n    ) {\r\n      return <SlotConfig>layoutSlotConfig[breakpoint];\r\n    }\r\n\r\n    // find closest config\r\n    const all = this.breakpointService.breakpoints;\r\n\r\n    for (const br of all.splice(0, all.indexOf(breakpoint))) {\r\n      if (\r\n        layoutSlotConfig[br] &&\r\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\r\n      ) {\r\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\r\n      }\r\n    }\r\n    return slotConfig;\r\n  }\r\n\r\n  /**\r\n   * In order to help developers, we print some detailed log information in\r\n   * case there's no layout configuration available for the given page template\r\n   * or section. Additionally, the slot positions are printed in the console\r\n   * in a format that can be copied / paste to the configuration.\r\n   */\r\n  private logMissingLayoutConfig(page: Page, section?: string): void {\r\n    if (!isDevMode()) {\r\n      return;\r\n    }\r\n    if (!this.logSlots[page.template]) {\r\n      // the info log is not printed in production\r\n      // tslint:disable-next-line: no-console\r\n      console.info(\r\n        `Available CMS page slots: '${Object.keys(page.slots).join(`','`)}'`\r\n      );\r\n      this.logSlots[page.template] = true;\r\n    }\r\n\r\n    const cacheKey = section || page.template;\r\n    if (!this.warnLogMessages[cacheKey]) {\r\n      console.warn(\r\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\r\n      );\r\n      this.warnLogMessages[cacheKey] = true;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { PageLayoutService } from './page-layout.service';\r\n\r\n@Component({\r\n  selector: 'cx-page-layout',\r\n  templateUrl: './page-layout.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PageLayoutComponent {\r\n  @Input() set section(value: string) {\r\n    this.section$.next(value);\r\n  }\r\n  readonly section$: BehaviorSubject<string> = new BehaviorSubject(undefined);\r\n  readonly templateName$: Observable<string> = this.pageLayoutService\r\n    .templateName$;\r\n\r\n  readonly layoutName$: Observable<string> = this.section$.pipe(\r\n    switchMap((section) => (section ? of(section) : this.templateName$)),\r\n    tap((name) => {\r\n      this.styleClass = name;\r\n    })\r\n  );\r\n\r\n  readonly slots$: Observable<string[]> = this.section$.pipe(\r\n    switchMap((section) => this.pageLayoutService.getSlots(section))\r\n  );\r\n\r\n  readonly pageFoldSlot$: Observable<string> = this.templateName$.pipe(\r\n    switchMap((templateName) =>\r\n      this.pageLayoutService.getPageFoldSlot(templateName)\r\n    ),\r\n    distinctUntilChanged()\r\n  );\r\n\r\n  private currentClass;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private pageLayoutService: PageLayoutService\r\n  ) {}\r\n\r\n  set styleClass(cls: string) {\r\n    if (this.currentClass) {\r\n      this.renderer.removeClass(this.el.nativeElement, this.currentClass);\r\n    }\r\n    this.renderer.addClass(this.el.nativeElement, cls);\r\n    this.currentClass = cls;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\r\nimport { OutletModule } from '../../outlet/outlet.module';\r\nimport { PageLayoutComponent } from './page-layout.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OutletModule, PageSlotModule],\r\n  declarations: [PageLayoutComponent],\r\n  exports: [PageLayoutComponent],\r\n})\r\nexport class PageLayoutModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class PWAModuleConfig {\r\n  pwa?: {\r\n    enabled?: boolean;\r\n    addToHomeScreen?: boolean;\r\n  };\r\n}\r\n\r\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\r\n  pwa: {\r\n    enabled: false,\r\n    addToHomeScreen: false,\r\n  },\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { PWAModuleConfig } from '../pwa.module-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AddToHomeScreenService {\r\n  private deferredEvent: any;\r\n\r\n  private canPrompt = new BehaviorSubject<boolean>(false);\r\n\r\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\r\n\r\n  constructor(\r\n    private config: PWAModuleConfig,\r\n    private globalMessageService: GlobalMessageService,\r\n    private winRef: WindowRef\r\n  ) {\r\n    if (this.config.pwa.addToHomeScreen) {\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  init() {\r\n    if (this.winRef.nativeWindow) {\r\n      this.winRef.nativeWindow.addEventListener(\r\n        'beforeinstallprompt',\r\n        (event) => {\r\n          event.preventDefault();\r\n          this.deferredEvent = event;\r\n          this.enableAddToHomeScreen();\r\n        }\r\n      );\r\n\r\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\r\n        this.globalMessageService.add(\r\n          { key: 'pwa.addedToHomeScreen' },\r\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n        );\r\n\r\n        this.disableAddToHomeScreen();\r\n        this.deferredEvent = null;\r\n      });\r\n    }\r\n  }\r\n\r\n  enableAddToHomeScreen(): void {\r\n    this.canPrompt.next(true);\r\n  }\r\n\r\n  disableAddToHomeScreen(): void {\r\n    this.canPrompt.next(false);\r\n  }\r\n\r\n  firePrompt(): void {\r\n    if (this.deferredEvent) {\r\n      this.deferredEvent.prompt();\r\n    }\r\n  }\r\n}\r\n","import { OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { APP_INITIALIZER, isDevMode, NgModule } from '@angular/core';\r\nimport {\r\n  ServiceWorkerModule,\r\n  SwRegistrationOptions,\r\n} from '@angular/service-worker';\r\nimport { Config, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\r\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\r\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\r\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\r\n\r\nexport function pwaConfigurationFactory(\r\n  pwaConfig: PWAModuleConfig\r\n): SwRegistrationOptions {\r\n  return { enabled: (!isDevMode() && pwaConfig.pwa.enabled) || false };\r\n}\r\n\r\nexport function pwaFactory(addToHomeScreenService): any {\r\n  const result = () => addToHomeScreenService;\r\n  return result;\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ServiceWorkerModule.register('/ngsw-worker.js'),\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(defaultPWAModuleConfig),\r\n    {\r\n      provide: SwRegistrationOptions,\r\n      useFactory: pwaConfigurationFactory,\r\n      deps: [Config],\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: pwaFactory,\r\n      deps: [AddToHomeScreenService],\r\n      multi: true,\r\n    },\r\n  ],\r\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\r\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\r\n})\r\nexport class PwaModule {}\r\n","import { APP_INITIALIZER, Provider } from '@angular/core';\r\nimport { LanguageService, WindowRef } from '@spartacus/core';\r\n\r\nexport const htmlLangProvider: Provider = {\r\n  provide: APP_INITIALIZER,\r\n  multi: true,\r\n  useFactory: setHtmlLangAttribute,\r\n  deps: [WindowRef, LanguageService],\r\n};\r\n\r\n/**\r\n * Sets active language in <html lang=\"\">\r\n */\r\nexport function setHtmlLangAttribute(\r\n  winRef: WindowRef,\r\n  languageService: LanguageService\r\n) {\r\n  const result = () => {\r\n    languageService.getActive().subscribe((lang) => {\r\n      winRef.document.documentElement.lang = lang.replace(/_/g, '-');\r\n    });\r\n  };\r\n  return result;\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\r\nimport { PageMeta, PageMetaService, PageRobotsMeta } from '@spartacus/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SeoMetaService implements OnDestroy {\r\n  constructor(\r\n    protected ngTitle: Title,\r\n    protected ngMeta: Meta,\r\n    protected pageMetaService: PageMetaService\r\n  ) {}\r\n\r\n  private subscription: Subscription;\r\n\r\n  init() {\r\n    this.subscription = this.pageMetaService\r\n      .getMeta()\r\n      .pipe(filter(Boolean))\r\n      .subscribe((meta: PageMeta) => (this.meta = meta));\r\n  }\r\n\r\n  protected set meta(meta: PageMeta) {\r\n    this.title = meta.title;\r\n    this.description = meta.description;\r\n    this.image = meta.image;\r\n    this.robots = meta.robots || [PageRobotsMeta.INDEX, PageRobotsMeta.FOLLOW];\r\n  }\r\n\r\n  protected set title(title: string) {\r\n    this.ngTitle.setTitle(title || '');\r\n  }\r\n\r\n  protected set description(value: string) {\r\n    this.addTag({ name: 'description', content: value });\r\n  }\r\n\r\n  protected set image(imageUrl: string) {\r\n    if (imageUrl) {\r\n      this.addTag({ name: 'og:image', content: imageUrl });\r\n    }\r\n  }\r\n\r\n  protected set robots(value: PageRobotsMeta[]) {\r\n    if (value) {\r\n      this.addTag({ name: 'robots', content: value.join(', ') });\r\n    }\r\n  }\r\n\r\n  protected addTag(meta: MetaDefinition) {\r\n    if (meta.content) {\r\n      this.ngMeta.updateTag(meta);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  PLATFORM_ID,\n  Renderer2,\n  RendererFactory2,\n  SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdScriptFactory {\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: string,\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  build(schema: {}[]): void {\n    if (schema && this.isJsonLdRequired()) {\n      this.createJsonLdScriptElement().innerHTML = this.sanitize(schema);\n    }\n  }\n\n  /**\n   * Only return schema data in case of SSR or development mode,\n   * to not waste memory unnecessary.\n   */\n  isJsonLdRequired(): boolean {\n    return !isPlatformBrowser(this.platformId) || isDevMode();\n  }\n\n  private createJsonLdScriptElement(): HTMLScriptElement {\n    const id = 'json-ld';\n    let scriptElement: HTMLScriptElement = <HTMLScriptElement>(\n      this.winRef.document.getElementById(id)\n    );\n\n    if (!scriptElement) {\n      const renderer: Renderer2 = this.rendererFactory.createRenderer(\n        null,\n        null\n      );\n      const script: HTMLScriptElement = renderer.createElement('script');\n      script.id = id;\n      script.type = 'application/ld+json';\n      renderer.appendChild(this.winRef.document.body, script);\n      scriptElement = script;\n    }\n    return scriptElement;\n  }\n\n  /**\n   * Sanitizes the given json-ld schema by leveraging the angular HTML sanitizer.\n   *\n   * The given schema is not trusted, as malicious code could be injected (XSS)\n   * into the json-ld script.\n   */\n  sanitize(schema: {}): string {\n    return JSON.stringify(schema, (_key, value) =>\n      typeof value === 'string'\n        ? this.sanitizer.sanitize(SecurityContext.HTML, value)\n        : value\n    );\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Low level directive that adds a json-ld script tag to the component.\n * This code bypasses the strict XSS security, as otherwise we're not able\n * to append a script tag with JS inside.\n */\n@Directive({\n  selector: '[cxJsonLd]',\n})\nexport class JsonLdDirective {\n  @Input() set cxJsonLd(schema: string | number) {\n    this.writeJsonLd(schema);\n  }\n\n  @HostBinding('innerHTML') jsonLD: SafeHtml;\n\n  constructor(\n    protected jsonLdScriptFactory: JsonLdScriptFactory,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  private writeJsonLd(schema: {}) {\n    if (schema && this.jsonLdScriptFactory.isJsonLdRequired()) {\n      const sanitizedSchema = this.jsonLdScriptFactory.sanitize(schema);\n      const html = `<script type=\"application/ld+json\">${sanitizedSchema}</script>`;\n      this.jsonLD = this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Injection token to extend schema builders for adding structural data (json-ld).\n *\n * Some builders (i.e. `JSONLD_PRODUCT_BUILDER`) might have additional\n * lowever level builder to further extend the schema.\n */\nexport const SCHEMA_BUILDER = new InjectionToken('SchemaBuilderToken');\n\n/**\n * Injection token to add specific json-ld builders for product related schema's.\n * See see https://schema.org/product for more information.\n */\nexport const JSONLD_PRODUCT_BUILDER = new InjectionToken(\n  'JsonLdProductBuilderToken'\n);\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\r\nimport { combineLatest, Observable, of, Subscription } from 'rxjs';\r\nimport { SchemaBuilder } from './builders/schema.interface';\r\nimport { SCHEMA_BUILDER } from './builders/tokens';\r\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StructuredDataFactory implements OnDestroy {\r\n  constructor(\r\n    private scriptBuilder: JsonLdScriptFactory,\r\n    @Optional()\r\n    @Inject(SCHEMA_BUILDER)\r\n    private builders: SchemaBuilder[]\r\n  ) {}\r\n\r\n  private subscription: Subscription;\r\n\r\n  build() {\r\n    this.subscription = this.collectSchemas().subscribe((schema: {}[]) => {\r\n      this.scriptBuilder.build(schema);\r\n    });\r\n  }\r\n\r\n  private collectSchemas(): Observable<any[]> {\r\n    if (!this.scriptBuilder.isJsonLdRequired() || !this.builders) {\r\n      return of();\r\n    }\r\n    return combineLatest(\r\n      this.builders.map((builder) => builder.build())\r\n    ).pipe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { JsonLdDirective } from './json-ld.directive';\nimport { StructuredDataFactory } from './structured-data.factory';\n\n/**\n * Factory to build the structure data\n * without any interaction with the UI.\n */\nexport function getStructuredDataFactory(injector: Injector) {\n  const result = () => {\n    const factory = injector.get(StructuredDataFactory);\n    factory.build();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [JsonLdDirective],\n  exports: [JsonLdDirective],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getStructuredDataFactory,\n      deps: [Injector],\n      multi: true,\n    },\n  ],\n})\nexport class StructuredDataModule {}\n","import { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { htmlLangProvider } from './html-lang-provider';\nimport { SeoMetaService } from './seo-meta.service';\nimport { StructuredDataModule } from './structured-data/structured-data.module';\n\nexport function initSeoService(injector: Injector) {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [StructuredDataModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport {\r\n  FocusConfig,\r\n  KeyboardFocusService,\r\n} from '../a11y/keyboard-focus/index';\r\nimport { SkipLinkComponent } from '../a11y/skip-link/index';\r\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\r\n\r\n@Component({\r\n  selector: 'cx-storefront',\r\n  templateUrl: './storefront.component.html',\r\n})\r\nexport class StorefrontComponent implements OnInit, OnDestroy {\r\n  navigateSubscription: Subscription;\r\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\r\n\r\n  @HostBinding('class.start-navigating') startNavigating;\r\n  @HostBinding('class.stop-navigating') stopNavigating;\r\n\r\n  // required by esc focus\r\n  @HostBinding('tabindex') tabindex = '0';\r\n\r\n  @ViewChild(SkipLinkComponent) child: SkipLinkComponent;\r\n\r\n  private keyboardFocusConfig: FocusConfig = {\r\n    focusOnEscape: true,\r\n    focusOnDoubleEscape: true,\r\n  };\r\n\r\n  @HostListener('keydown.escape', ['$event'])\r\n  handleEscape(event: KeyboardEvent): void {\r\n    this.keyboardFocusService.handleEscape(\r\n      this.elementRef.nativeElement,\r\n      this.keyboardFocusConfig,\r\n      event\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private hamburgerMenuService: HamburgerMenuService,\r\n    private routingService: RoutingService,\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected keyboardFocusService: KeyboardFocusService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.navigateSubscription = this.routingService\r\n      .isNavigating()\r\n      .subscribe((val) => {\r\n        this.startNavigating = val === true;\r\n        this.stopNavigating = val === false;\r\n      });\r\n  }\r\n\r\n  collapseMenuIfClickOutside(event: MouseEvent) {\r\n    if ((<HTMLElement>event.target).className.includes('is-expanded')) {\r\n      this.collapseMenu();\r\n    }\r\n  }\r\n\r\n  collapseMenu(): void {\r\n    this.hamburgerMenuService.toggle(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.navigateSubscription) {\r\n      this.navigateSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FeaturesConfigModule } from '@spartacus/core';\r\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\r\nimport { OutletRefModule } from '../../cms-structure/outlet/outlet-ref/outlet-ref.module';\r\nimport { OutletModule } from '../../cms-structure/outlet/outlet.module';\r\nimport { PageLayoutModule } from '../../cms-structure/page/page-layout/page-layout.module';\r\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\r\nimport { PwaModule } from '../../cms-structure/pwa/pwa.module';\r\nimport { SeoModule } from '../../cms-structure/seo/seo.module';\r\nimport { AnonymousConsentsDialogModule } from '../../shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module';\r\nimport { KeyboardFocusModule } from '../a11y/keyboard-focus/keyboard-focus.module';\r\nimport { SkipLinkModule } from '../a11y/skip-link/skip-link.module';\r\nimport { StorefrontComponent } from './storefront.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    GlobalMessageComponentModule,\r\n    OutletModule,\r\n    OutletRefModule,\r\n    PwaModule,\r\n    PageLayoutModule,\r\n    SeoModule,\r\n    PageSlotModule,\r\n    AnonymousConsentsDialogModule,\r\n    FeaturesConfigModule,\r\n\r\n    SkipLinkModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [StorefrontComponent],\r\n  exports: [StorefrontComponent],\r\n})\r\nexport class MainModule {}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { CmsActivatedRouteSnapshot } from '@spartacus/core';\r\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\r\nimport { endWith, first, skipWhile } from 'rxjs/operators';\r\nimport { CmsComponentsService } from './cms-components.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsGuardsService {\r\n  constructor(\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected injector: Injector\r\n  ) {}\r\n\r\n  cmsPageCanActivate(\r\n    componentTypes: string[],\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    const guards = this.cmsComponentsService.getGuards(componentTypes);\r\n\r\n    if (guards.length) {\r\n      const canActivateObservables = guards.map((guardClass) => {\r\n        const guard = this.injector.get<CanActivate>(guardClass, null);\r\n        if (isCanActivate(guard)) {\r\n          return wrapIntoObservable(guard.canActivate(route, state)).pipe(\r\n            first()\r\n          );\r\n        } else {\r\n          throw new Error('Invalid CanActivate guard in cmsMapping');\r\n        }\r\n      });\r\n\r\n      return concat(...canActivateObservables).pipe(\r\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\r\n        endWith(true),\r\n        first()\r\n      );\r\n    } else {\r\n      return of(true);\r\n    }\r\n  }\r\n}\r\n\r\nfunction wrapIntoObservable<T>(\r\n  value: T | Promise<T> | Observable<T>\r\n): Observable<T> {\r\n  if (isObservable(value)) {\r\n    return value;\r\n  }\r\n\r\n  if (isPromise(value)) {\r\n    return from(Promise.resolve(value));\r\n  }\r\n\r\n  return of(value);\r\n}\r\n\r\nfunction isPromise(obj: any): obj is Promise<any> {\r\n  return !!obj && typeof obj.then === 'function';\r\n}\r\n\r\nfunction isCanActivate(guard: any): guard is CanActivate {\r\n  return guard && isFunction<CanActivate>(guard.canActivate);\r\n}\r\n\r\nfunction isFunction<T>(v: any): v is T {\r\n  return typeof v === 'function';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslationChunkService, TranslationService } from '@spartacus/core';\r\nimport { CmsComponentsService } from './cms-components.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsI18nService {\r\n  constructor(\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected translation: TranslationService,\r\n    protected translationChunk: TranslationChunkService\r\n  ) {}\r\n\r\n  loadForComponents(componentTypes: string[]) {\r\n    const i18nKeys = this.cmsComponentsService.getI18nKeys(componentTypes);\r\n    const i18nChunks = new Set<string>();\r\n    for (const key of i18nKeys) {\r\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\r\n    }\r\n    this.translation.loadChunks(Array.from(i18nChunks));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\nimport { CmsRoute, PageContext, PageType } from '@spartacus/core';\r\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\r\nimport { CmsComponentsService } from './cms-components.service';\r\n\r\n// This service should be exposed in public API only after the refactor planned in https://github.com/SAP/spartacus/issues/7070\r\n@Injectable({ providedIn: 'root' })\r\nexport class CmsRoutesImplService {\r\n  constructor(\r\n    private router: Router,\r\n    private cmsComponentsService: CmsComponentsService\r\n  ) {}\r\n\r\n  private cmsRouteExists(url: string): boolean {\r\n    const isCmsDrivenRoute = url.startsWith('/');\r\n\r\n    if (!isCmsDrivenRoute) {\r\n      return false;\r\n    }\r\n\r\n    const routePath = url.substr(1);\r\n\r\n    return (\r\n      isCmsDrivenRoute &&\r\n      !!this.router.config.find(\r\n        (route: CmsRoute) =>\r\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\r\n   *\r\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\r\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\r\n   *\r\n   * @param pageContext\r\n   * @param currentUrl\r\n   */\r\n  handleCmsRoutesInGuard(\r\n    pageContext: PageContext,\r\n    componentTypes: string[],\r\n    currentUrl: string,\r\n    currentPageLabel: string\r\n  ): boolean {\r\n    if (this.cmsRouteExists(currentPageLabel)) {\r\n      return true;\r\n    }\r\n\r\n    const componentRoutes = this.cmsComponentsService.getChildRoutes(\r\n      componentTypes\r\n    );\r\n    if (componentRoutes.length) {\r\n      if (this.updateRouting(pageContext, currentPageLabel, componentRoutes)) {\r\n        this.router.navigateByUrl(currentUrl);\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private updateRouting(\r\n    pageContext: PageContext,\r\n    pageLabel: string,\r\n    routes: Route[]\r\n  ): boolean {\r\n    if (\r\n      pageContext.type === PageType.CONTENT_PAGE &&\r\n      pageLabel.startsWith('/') &&\r\n      pageLabel.length > 1\r\n    ) {\r\n      const newRoute: CmsRoute = {\r\n        path: pageLabel.substr(1),\r\n        component: PageLayoutComponent,\r\n        children: routes,\r\n        data: {\r\n          cxCmsRouteContext: {\r\n            type: pageContext.type,\r\n            id: pageLabel,\r\n          },\r\n        },\r\n      };\r\n\r\n      this.router.resetConfig([newRoute, ...this.router.config]);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PageContext } from '@spartacus/core';\r\nimport { CmsRoutesImplService } from './cms-routes-impl.service';\r\n\r\n// Public injection token for the private implementation of the service `CmsRoutesImplService`.\r\n// After #7070, this class should be replaced with a real implementation.\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: CmsRoutesImplService,\r\n})\r\nexport abstract class CmsRoutesService {\r\n  abstract handleCmsRoutesInGuard(\r\n    pageContext: PageContext,\r\n    componentTypes: string[],\r\n    currentUrl: string,\r\n    currentPageLabel: string\r\n  ): boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport {\r\n  CmsActivatedRouteSnapshot,\r\n  CmsService,\r\n  Page,\r\n  PageContext,\r\n  PageType,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport {\r\n  filter,\r\n  map,\r\n  switchMap,\r\n  take,\r\n  tap,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\nimport { CmsGuardsService } from '../services/cms-guards.service';\r\nimport { CmsI18nService } from '../services/cms-i18n.service';\r\nimport { CmsRoutesService } from '../services/cms-routes.service';\r\nimport { CmsComponentsService } from '../services';\r\n\r\n/**\r\n * Helper service for `CmsPageGuard`\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsPageGuardService {\r\n  constructor(\r\n    protected semanticPathService: SemanticPathService,\r\n    protected cmsService: CmsService,\r\n    protected cmsRoutes: CmsRoutesService,\r\n    protected cmsI18n: CmsI18nService,\r\n    protected cmsGuards: CmsGuardsService,\r\n    protected cmsComponentsService: CmsComponentsService\r\n  ) {}\r\n\r\n  /**\r\n   * Takes CMS components types in the current CMS page, triggers (configurable) side effects and returns a boolean - whether the route can be activated.\r\n   *\r\n   * Based on `cmsComponents` config for the components in the page:\r\n   * - Evaluates components' guards; if one of them emits false or UrlTree - the route cannot be activated or redirects to the given UrlTree, respectively.\r\n   * - If all components' guards emitted true, then the route can be activated\r\n   * - Then we trigger loading of configured i18n chunks in parallel\r\n   * - And we register the configured children routes of cms components\r\n   *\r\n   * @param pageContext current cms page context\r\n   * @param pageData cms page data\r\n   * @param route activated route snapshot\r\n   * @param state router state snapshot\r\n   *\r\n   * @returns boolean observable - whether the route can be activated\r\n   */\r\n  canActivatePage(\r\n    pageContext: PageContext,\r\n    pageData: Page,\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\r\n      take(1),\r\n      switchMap((componentTypes) =>\r\n        this.cmsComponentsService.determineMappings(componentTypes)\r\n      ),\r\n      switchMap((componentTypes) =>\r\n        this.cmsGuards\r\n          .cmsPageCanActivate(componentTypes, route, state)\r\n          .pipe(withLatestFrom(of(componentTypes)))\r\n      ),\r\n      tap(([canActivate, componentTypes]) => {\r\n        if (canActivate === true) {\r\n          this.cmsI18n.loadForComponents(componentTypes);\r\n        }\r\n      }),\r\n      map(([canActivate, componentTypes]) => {\r\n        const pageLabel = pageData.label || pageContext.id; // for content pages the page label returned from backend can be different than ID initially assumed from route\r\n        if (canActivate === true && !route?.data?.cxCmsRouteContext) {\r\n          return this.cmsRoutes.handleCmsRoutesInGuard(\r\n            pageContext,\r\n            componentTypes,\r\n            state.url,\r\n            pageLabel\r\n          );\r\n        }\r\n        return canActivate;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Activates the \"NOT FOUND\" cms page.\r\n   *\r\n   * It loads cms page data for the \"NOT FOUND\" page and puts it in the state of the the requested page label.\r\n   * Then it processes its CMS components with the method `canActivatePage()` of this service. For more, see its docs.\r\n   */\r\n  canActivateNotFoundPage(\r\n    pageContext: PageContext,\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    const notFoundCmsPageContext: PageContext = {\r\n      type: PageType.CONTENT_PAGE,\r\n      id: this.semanticPathService.get('notFound'),\r\n    };\r\n\r\n    return this.cmsService.getPage(notFoundCmsPageContext).pipe(\r\n      switchMap((notFoundPage) => {\r\n        if (notFoundPage) {\r\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\r\n            tap((notFoundIndex) => {\r\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\r\n            }),\r\n            switchMap((notFoundIndex) =>\r\n              this.cmsService.getPageIndex(pageContext).pipe(\r\n                // we have to wait for page index update\r\n                filter((index) => index === notFoundIndex)\r\n              )\r\n            ),\r\n            switchMap(() =>\r\n              this.canActivatePage(pageContext, notFoundPage, route, state)\r\n            )\r\n          );\r\n        }\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport {\r\n  CmsActivatedRouteSnapshot,\r\n  CmsService,\r\n  ProtectedRoutesGuard,\r\n  RouteLoadStrategy,\r\n  RoutingConfigService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { first, switchMap } from 'rxjs/operators';\r\nimport { CmsPageGuardService } from './cms-page-guard.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsPageGuard implements CanActivate {\r\n  static guardName = 'CmsPageGuard';\r\n\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected cmsService: CmsService,\r\n    protected protectedRoutesGuard: ProtectedRoutesGuard,\r\n    protected service: CmsPageGuardService,\r\n    protected routingConfig: RoutingConfigService\r\n  ) {}\r\n\r\n  /**\r\n   * Tries to load the CMS page data for the anticipated route and returns:\r\n   * - `true` - if it can be activated\r\n   * - `false` - if it cannot be activated\r\n   * - `UrlTree` - if user should be redirected to a given `UrlTree`\r\n   *\r\n   * If the route can be activated, it fires additional calculations on the CMS components present on this CMS page,\r\n   * based on their configuration (`cmsComponents` config).\r\n   *\r\n   * For more, see docs of the `CmsPageGuardService.canActivatePage`.\r\n   */\r\n  canActivate(\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    return this.protectedRoutesGuard.canActivate(route).pipe(\r\n      switchMap((canActivate) =>\r\n        canActivate\r\n          ? this.routingService.getNextPageContext().pipe(\r\n              switchMap((pageContext) =>\r\n                this.cmsService.getPage(pageContext, this.shouldReload()).pipe(\r\n                  first(),\r\n                  switchMap((pageData) =>\r\n                    pageData\r\n                      ? this.service.canActivatePage(\r\n                          pageContext,\r\n                          pageData,\r\n                          route,\r\n                          state\r\n                        )\r\n                      : this.service.canActivateNotFoundPage(\r\n                          pageContext,\r\n                          route,\r\n                          state\r\n                        )\r\n                  )\r\n                )\r\n              )\r\n            )\r\n          : of(false)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns whether we should reload the CMS page data, even when it was loaded before.\r\n   */\r\n  private shouldReload(): boolean {\r\n    return this.routingConfig.getLoadStrategy() !== RouteLoadStrategy.ONCE;\r\n  }\r\n}\r\n","import { Injector } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../page/page-layout/page-layout.component';\r\n\r\nconst cmsRoute: Route = {\r\n  path: '**',\r\n  canActivate: [CmsPageGuard],\r\n  component: PageLayoutComponent,\r\n};\r\n\r\nexport function addCmsRoute(injector: Injector) {\r\n  const result = () => {\r\n    const router = injector.get(Router);\r\n    router.config.push(cmsRoute);\r\n  };\r\n  return result;\r\n}\r\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","import { RoutesConfig, RoutingConfig } from '@spartacus/core';\r\n\r\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\r\n  home: { paths: [''] },\r\n  notFound: { paths: ['not-found'] },\r\n  cart: { paths: ['cart'] },\r\n\r\n  // semantic links for login related pages\r\n  login: { paths: ['login'], protected: false },\r\n  register: { paths: ['login/register'], protected: false },\r\n  forgotPassword: { paths: ['login/forgot-password'], protected: false },\r\n  resetPassword: { paths: ['login/pw/change'], protected: false },\r\n  logout: { paths: ['logout'] },\r\n  checkoutLogin: { paths: ['checkout-login'] },\r\n\r\n  checkout: { paths: ['checkout'] },\r\n  checkoutShippingAddress: { paths: ['checkout/shipping-address'] },\r\n  checkoutDeliveryMode: { paths: ['checkout/delivery-mode'] },\r\n  checkoutPaymentDetails: { paths: ['checkout/payment-details'] },\r\n  checkoutReviewOrder: { paths: ['checkout/review-order'] },\r\n  orderConfirmation: { paths: ['order-confirmation'] },\r\n\r\n  // plp routes\r\n  search: { paths: ['search/:query'] },\r\n  category: {\r\n    paths: ['category/:categoryCode'],\r\n    paramsMapping: { categoryCode: 'code' },\r\n  },\r\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\r\n\r\n  // pdp routes\r\n  product: {\r\n    paths: ['product/:productCode/:name'],\r\n    paramsMapping: { productCode: 'code' },\r\n  },\r\n\r\n  termsAndConditions: { paths: ['terms-and-conditions'] },\r\n  orders: {\r\n    paths: ['my-account/orders'],\r\n  },\r\n  orderDetails: {\r\n    paths: ['my-account/order/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderGuest: {\r\n    paths: ['guest/order/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderReturn: {\r\n    paths: ['my-account/order/return/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderReturnConfirmation: {\r\n    paths: ['my-account/order/return/confirmation/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderCancel: {\r\n    paths: ['my-account/order/cancel/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderCancelConfirmation: {\r\n    paths: ['my-account/order/cancel/confirmation/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  returnRequestDetails: {\r\n    paths: ['my-account/return-request/:returnCode'],\r\n    paramsMapping: { returnCode: 'rma' },\r\n  },\r\n  coupons: { paths: ['my-account/coupons'] },\r\n  couponClaim: {\r\n    paths: ['my-account/coupon/claim/:couponCode'],\r\n    paramsMapping: { couponCode: 'code' },\r\n  },\r\n};\r\n\r\nexport const defaultRoutingConfig: RoutingConfig = {\r\n  routing: {\r\n    routes: defaultStorefrontRoutesConfig,\r\n  },\r\n};\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport {\r\n  provideDefaultConfig,\r\n  RoutingModule as CoreRoutingModule,\r\n} from '@spartacus/core';\r\nimport { CmsRouteModule } from './cms-route/cms-route.module';\r\nimport { defaultRoutingConfig } from './default-routing-config';\r\n\r\n@NgModule({\r\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\r\n})\r\nexport class RoutingModule {\r\n  static forRoot(): ModuleWithProviders<RoutingModule> {\r\n    return {\r\n      ngModule: RoutingModule,\r\n      providers: [provideDefaultConfig(defaultRoutingConfig)],\r\n    };\r\n  }\r\n}\r\n","import { isDevMode } from '@angular/core';\r\nimport { UrlMatchResult, UrlSegment } from '@angular/router';\r\n\r\n/**\r\n * Matches the pattern '[ ** / ] marker / :paramName'\r\n *\r\n * @param marker phrase that indicates the start of the match\r\n * @param paramName name of the parameter present after the marker\r\n * @param precedingParamName name of the parameter for every preceding url segment\r\n *        i.e. `param` will result in `param0`, `param1`, ...\r\n */\r\nexport function getSuffixUrlMatcher({\r\n  marker,\r\n  paramName,\r\n  precedingParamName,\r\n}: {\r\n  marker: string;\r\n  paramName: string;\r\n  precedingParamName?: string;\r\n}) {\r\n  precedingParamName = precedingParamName || 'param';\r\n  const matcher = function suffixUrlMatcher(\r\n    segments: UrlSegment[]\r\n  ): UrlMatchResult | null {\r\n    const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\r\n    const isMarkerLastSegment = markerIndex === segments.length - 1;\r\n\r\n    if (markerIndex === -1 || isMarkerLastSegment) {\r\n      return null;\r\n    }\r\n\r\n    const paramIndex = markerIndex + 1;\r\n    const posParams: { [name: string]: UrlSegment } = {\r\n      [paramName]: segments[paramIndex],\r\n    };\r\n\r\n    for (let i = 0; i < markerIndex; i++) {\r\n      posParams[`${precedingParamName}${i}`] = segments[i];\r\n    }\r\n\r\n    return { consumed: segments.slice(0, paramIndex + 1), posParams };\r\n  };\r\n\r\n  if (isDevMode()) {\r\n    matcher['_suffixRouteConfig'] = { marker, paramName, precedingParamName }; // property added for easier debugging of routes\r\n  }\r\n\r\n  return matcher;\r\n}\r\n\r\nfunction findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\r\n  for (let index = elements.length - 1; index >= 0; index--) {\r\n    if (predicate(elements[index])) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PageMeta, PageMetaService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SchemaBuilder } from '../schema.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BreadcrumbSchemaBuilder implements SchemaBuilder {\r\n  constructor(protected pageMetaService: PageMetaService) {}\r\n\r\n  build(): Observable<any> {\r\n    return this.pageMetaService\r\n      .getMeta()\r\n      .pipe(map((pageMeta: PageMeta) => this.collect(pageMeta)));\r\n  }\r\n\r\n  protected collect(pageMeta: PageMeta): any {\r\n    if (!pageMeta?.breadcrumbs) {\r\n      return;\r\n    }\r\n    const crumbs = pageMeta.breadcrumbs.map((crumb, index) => {\r\n      return {\r\n        '@type': 'ListItem',\r\n        position: index + 1,\r\n        item: {\r\n          '@id': crumb.link,\r\n          name: crumb.label,\r\n        },\r\n      };\r\n    });\r\n\r\n    if (pageMeta.title) {\r\n      crumbs.push({\r\n        '@type': 'ListItem',\r\n        position: crumbs.length + 1,\r\n        item: {\r\n          '@id': pageMeta.title,\r\n          name: pageMeta.title,\r\n        },\r\n      });\r\n    }\r\n\r\n    return {\r\n      '@context': 'http://schema.org',\r\n      '@type': 'BreadcrumbList',\r\n      itemListElement: crumbs,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the basic structured data for the product, see https://schema.org/product.\n * This builder includes data for sku number, name, description, brand and main image.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdBaseProductBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    return of({\n      ...this.getProductBase(product),\n      ...this.getProductBrand(product),\n      ...this.getProductImage(product),\n    });\n  }\n\n  private getProductBase(product: Product) {\n    const result: any = { sku: product.code };\n    if (product.name) {\n      result.name = product.name;\n    }\n    if (product.summary) {\n      result.description = product.summary;\n    }\n    return result;\n  }\n\n  private getProductImage(product: Product) {\n    return product.images &&\n      product.images.PRIMARY &&\n      product.images.PRIMARY['zoom'] &&\n      product.images.PRIMARY['zoom'].url\n      ? {\n          image: product.images.PRIMARY['zoom'].url,\n        }\n      : {};\n  }\n\n  private getProductBrand(product: Product) {\n    return product['manufacturer']\n      ? {\n          brand: product['manufacturer'],\n        }\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product offer, see https://schema.org/offers.\n * The data includes the price, currency and availability level.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductOfferBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    const schema: any = { '@type': 'Offer' };\n    if (product.price) {\n      if (product.price.value) {\n        schema.price = product.price.value;\n      }\n      if (product.price.currencyIso) {\n        schema.priceCurrency = product.price.currencyIso;\n      }\n    }\n\n    if (product.stock && product.stock.stockLevelStatus) {\n      schema.availability =\n        product.stock.stockLevelStatus === 'inStock' ? 'InStock' : 'OutOfStock';\n    }\n\n    return of({\n      offers: schema,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { JsonLdBuilder } from '../schema.interface';\r\n\r\n/**\r\n * Builds the structured data for the product reviews, see https://schema.org/Review.\r\n * The data includes the aggregated product rating and the individual reviews.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JsonLdProductReviewBuilder implements JsonLdBuilder<Product> {\r\n  constructor(private reviewService: ProductReviewService) {}\r\n\r\n  build(product: Product): Observable<any> {\r\n    return this.reviewService.getByProductCode(product.code).pipe(\r\n      filter(Boolean),\r\n      map((reviews: Review[]) => {\r\n        return {\r\n          aggregateRating: this.buildAggregatedReviews(product, reviews),\r\n          review: reviews.map((review) => this.buildReviews(review)),\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildAggregatedReviews(product: Product, reviews: Review[]) {\r\n    const aggregated: any = {\r\n      '@type': 'AggregateRating',\r\n    };\r\n    if (product.averageRating) {\r\n      aggregated.ratingValue = product.averageRating;\r\n    }\r\n    if (reviews) {\r\n      aggregated.ratingCount = reviews.filter((rev) => !!rev.rating).length;\r\n      aggregated.reviewCount = reviews.filter((rev) => !!rev.comment).length;\r\n    }\r\n    return aggregated;\r\n  }\r\n\r\n  private buildReviews(review: Review) {\r\n    const reviewSchema: any = {\r\n      '@type': 'review',\r\n    };\r\n\r\n    if (review.principal && review.principal.name) {\r\n      reviewSchema.author = review.principal.name;\r\n    }\r\n    if (review.date) {\r\n      const date = new Date(review.date);\r\n      reviewSchema.datePublished = `${date.getFullYear()}-${\r\n        date.getMonth() + 1\r\n      }-${date.getDate()}`;\r\n    }\r\n    if (review.headline) {\r\n      reviewSchema.name = review.headline;\r\n    }\r\n    if (review.comment) {\r\n      reviewSchema.description = review.comment;\r\n    }\r\n    if (review.rating) {\r\n      reviewSchema.reviewRating = {\r\n        '@type': 'Rating',\r\n        ratingValue: review.rating.toString(),\r\n      };\r\n    }\r\n\r\n    return reviewSchema;\r\n  }\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Product } from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { CurrentProductService } from '../../../../../cms-components/product/current-product.service';\r\nimport { JsonLdBuilder, SchemaBuilder } from '../schema.interface';\r\nimport { JSONLD_PRODUCT_BUILDER } from '../tokens';\r\n\r\n/**\r\n * Adds the minimal structured data for the product, see https://schema.org/product.\r\n * The actual data collection is delegated to `JsonLdBuilder`s, which can be injected\r\n * using the `JSONLD_PRODUCT_BUILDER` token.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductSchemaBuilder implements SchemaBuilder {\r\n  constructor(\r\n    private currentProduct: CurrentProductService,\r\n    @Optional()\r\n    @Inject(JSONLD_PRODUCT_BUILDER)\r\n    protected builders: JsonLdBuilder<Product>[]\r\n  ) {}\r\n\r\n  build(): Observable<any> {\r\n    return this.currentProduct.getProduct().pipe(\r\n      switchMap((product: Product) => {\r\n        if (product) {\r\n          return combineLatest(this.collect(product)).pipe(\r\n            map((res: {}[]) => Object.assign({}, ...res))\r\n          );\r\n        }\r\n        return of({});\r\n      })\r\n    );\r\n  }\r\n\r\n  protected collect(product: Product): Observable<any>[] {\r\n    if (!product || !product.code) {\r\n      return [];\r\n    }\r\n    const builders = this.builders\r\n      ? this.builders.map((builder) => builder.build(product))\r\n      : [];\r\n    return [\r\n      of({\r\n        '@context': 'http://schema.org',\r\n        '@type': 'Product',\r\n      }),\r\n      ...builders,\r\n    ];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BreadcrumbSchemaBuilder } from './breadcrumb/index';\nimport {\n  JsonLdBaseProductBuilder,\n  JsonLdProductOfferBuilder,\n  JsonLdProductReviewBuilder,\n  ProductSchemaBuilder,\n} from './product/index';\nimport { JSONLD_PRODUCT_BUILDER, SCHEMA_BUILDER } from './tokens';\n\n/**\n * Provides several standard json-ld builders that contribute\n * to colleting and building json-ld data.\n */\n@NgModule({\n  providers: [\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: ProductSchemaBuilder,\n      multi: true,\n    },\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: BreadcrumbSchemaBuilder,\n      multi: true,\n    },\n    // lower level json-ld builder classes offering fine-graiend control\n    // for product related schema's\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdBaseProductBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductOfferBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductReviewBuilder,\n      multi: true,\n    },\n  ],\n})\nexport class JsonLdBuilderModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\r\nimport {\r\n  CmsBannerCarouselComponent as model,\r\n  CmsService,\r\n  ContentSlotComponentData,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/index';\r\n\r\n/**\r\n * Generic carousel that renders CMS Components.\r\n */\r\n@Component({\r\n  selector: 'cx-banner-carousel',\r\n  templateUrl: 'banner-carousel.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BannerCarouselComponent {\r\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\r\n    filter(Boolean),\r\n    tap((d: model) => (this.theme = `${d.effect}-theme`))\r\n  );\r\n\r\n  private items$: Observable<\r\n    Observable<ContentSlotComponentData>[]\r\n  > = this.componentData$.pipe(\r\n    map((data) => data.banners.trim().split(' ')),\r\n    map((codes) => codes.map((code) => this.cmsService.getComponentData(code)))\r\n  );\r\n\r\n  /**\r\n   * Adds a specific theme for the carousel. The effect can be\r\n   * used in CSS customisations.\r\n   */\r\n  @HostBinding('class') theme = '';\r\n\r\n  constructor(\r\n    private componentData: CmsComponentData<model>,\r\n    private cmsService: CmsService\r\n  ) {}\r\n\r\n  /**\r\n   * Returns an Obervable with an Array of Observables. This is done, so that\r\n   * the component UI could consider to lazy load the UI components when they're\r\n   * in the viewpoint.\r\n   */\r\n  getItems(): Observable<Observable<ContentSlotComponentData>[]> {\r\n    return this.items$;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\r\nimport { CarouselModule, MediaModule } from '../../../shared/components/index';\r\nimport { BannerCarouselComponent } from './banner-carousel.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PageComponentModule, CarouselModule, MediaModule],\r\n  providers: [\r\n    provideDefaultConfig({\r\n      cmsComponents: {\r\n        RotatingImagesComponent: {\r\n          component: BannerCarouselComponent,\r\n        },\r\n      },\r\n    } as CmsConfig),\r\n  ],\r\n  declarations: [BannerCarouselComponent],\r\n  entryComponents: [BannerCarouselComponent],\r\n  exports: [BannerCarouselComponent],\r\n})\r\nexport class BannerCarouselModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsBannerComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  constructor(public component: CmsComponentData<CmsBannerComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { BannerComponent } from './banner.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, GenericLinkModule, MediaModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        SimpleResponsiveBannerComponent: {\r\n          component: BannerComponent,\r\n        },\r\n        BannerComponent: {\r\n          component: BannerComponent,\r\n        },\r\n        SimpleBannerComponent: {\r\n          component: BannerComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [BannerComponent],\r\n  entryComponents: [BannerComponent],\r\n  exports: [BannerComponent],\r\n})\r\nexport class BannerModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  constructor(public component: CmsComponentData<CmsLinkComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { LinkComponent } from './link.component';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, GenericLinkModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSLinkComponent: { component: LinkComponent },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [LinkComponent],\r\n  exports: [LinkComponent],\r\n  entryComponents: [LinkComponent],\r\n})\r\nexport class LinkModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  constructor(public component: CmsComponentData<CmsParagraphComponent>) {}\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ParagraphComponent } from './paragraph.component';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSParagraphComponent: {\r\n          component: ParagraphComponent,\r\n        },\r\n        CMSTabParagraphComponent: {\r\n          component: ParagraphComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ParagraphComponent],\r\n  exports: [ParagraphComponent],\r\n  entryComponents: [ParagraphComponent],\r\n})\r\nexport class CmsParagraphModule {}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChildren,\r\n} from '@angular/core';\r\nimport {\r\n  CmsService,\r\n  CMSTabParagraphContainer,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap } from 'rxjs/operators';\r\nimport { ComponentWrapperDirective } from '../../../cms-structure/page/component/component-wrapper.directive';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\r\n\r\n@Component({\r\n  selector: 'cx-tab-paragraph-container',\r\n  templateUrl: './tab-paragraph-container.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TabParagraphContainerComponent\r\n  implements AfterViewInit, OnInit, OnDestroy {\r\n  activeTabNum = 0;\r\n\r\n  @ViewChildren(ComponentWrapperDirective) children!: QueryList<\r\n    ComponentWrapperDirective\r\n  >;\r\n\r\n  tabTitleParams: Observable<any>[] = [];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\r\n    protected cmsService: CmsService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  components$: Observable<any[]> = this.componentData.data$.pipe(\r\n    distinctUntilChanged((x, y) => x?.components === y?.components),\r\n    switchMap((data) =>\r\n      combineLatest(\r\n        (data?.components ?? '').split(' ').map((component) =>\r\n          this.cmsService.getComponentData<any>(component).pipe(\r\n            distinctUntilChanged(),\r\n            map((tab) => {\r\n              if (!tab) {\r\n                return undefined;\r\n              }\r\n\r\n              if (!tab.flexType) {\r\n                tab = {\r\n                  ...tab,\r\n                  flexType: tab.typeCode,\r\n                };\r\n              }\r\n\r\n              return {\r\n                ...tab,\r\n                title: `${data.uid}.tabs.${tab.uid}`,\r\n              };\r\n            })\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  select(tabNum: number): void {\r\n    this.activeTabNum = tabNum;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activeTabNum =\r\n      this.winRef.nativeWindow?.history?.state?.activeTab ?? this.activeTabNum;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // If the sub cms components data exist, the components created before ngAfterViewInit are called.\r\n    // In this case, the title parameters are directly pulled from them.\r\n    // If the sub cms components data does not exist, it should should be loaded first.\r\n    // In this case, listen to the changes to wait for them to be created.\r\n    if (this.children.length > 0) {\r\n      this.getTitleParams(this.children);\r\n    } else {\r\n      this.subscription = this.children.changes.subscribe(\r\n        (tabComps: QueryList<ComponentWrapperDirective>) =>\r\n          this.getTitleParams(tabComps)\r\n      );\r\n    }\r\n  }\r\n\r\n  private getTitleParams(children: QueryList<ComponentWrapperDirective>) {\r\n    children.forEach((comp) => {\r\n      if (comp.cmpRef && comp.cmpRef.instance.tabTitleParam$) {\r\n        this.tabTitleParams.push(comp.cmpRef.instance.tabTitleParam$);\r\n      } else {\r\n        this.tabTitleParams.push(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\r\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\r\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PageComponentModule, OutletModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSTabParagraphContainer: {\r\n          component: TabParagraphContainerComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [TabParagraphContainerComponent],\r\n  entryComponents: [TabParagraphContainerComponent],\r\n  exports: [TabParagraphContainerComponent],\r\n})\r\nexport class TabParagraphContainerModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  UserAddressService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AddressBookComponentService {\r\n  constructor(\r\n    protected userAddressService: UserAddressService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService\r\n  ) {}\r\n\r\n  getAddresses(): Observable<Address[]> {\r\n    return this.userAddressService.getAddresses();\r\n  }\r\n\r\n  getAddressesStateLoading(): Observable<boolean> {\r\n    return this.userAddressService.getAddressesLoading();\r\n  }\r\n\r\n  loadAddresses() {\r\n    this.userAddressService.loadAddresses();\r\n  }\r\n\r\n  addUserAddress(address: Address) {\r\n    this.userAddressService.addUserAddress(address);\r\n  }\r\n\r\n  updateUserAddress(addressId: string, address: Address) {\r\n    this.userAddressService.updateUserAddress(addressId, address);\r\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  Address,\r\n  TranslationService,\r\n  UserAddressService,\r\n  CheckoutDeliveryService,\r\n} from '@spartacus/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { AddressBookComponentService } from './address-book.component.service';\r\nimport { Card } from '../../../shared/components/card';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-address-book',\r\n  templateUrl: './address-book.component.html',\r\n})\r\nexport class AddressBookComponent implements OnInit {\r\n  addresses$: Observable<Address[]>;\r\n  cards$: Observable<Card[]>;\r\n  addressesStateLoading$: Observable<boolean>;\r\n  currentAddress: Address;\r\n\r\n  showAddAddressForm = false;\r\n  showEditAddressForm = false;\r\n  editCard: string;\r\n\r\n  constructor(\r\n    public service: AddressBookComponentService,\r\n    protected translation: TranslationService,\r\n    protected userAddressService: UserAddressService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.addresses$ = this.service.getAddresses();\r\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\r\n    this.service.loadAddresses();\r\n  }\r\n\r\n  addAddressButtonHandle(): void {\r\n    this.showEditAddressForm = false;\r\n    this.showAddAddressForm = true;\r\n  }\r\n\r\n  editAddressButtonHandle(address: Address): void {\r\n    this.showAddAddressForm = false;\r\n    this.showEditAddressForm = true;\r\n    this.currentAddress = address;\r\n  }\r\n\r\n  addAddressSubmit(address: Address): void {\r\n    this.showAddAddressForm = false;\r\n    this.service.addUserAddress(address);\r\n  }\r\n\r\n  addAddressCancel(): void {\r\n    this.showAddAddressForm = false;\r\n  }\r\n\r\n  editAddressSubmit(address: Address): void {\r\n    this.showEditAddressForm = false;\r\n    this.service.updateUserAddress(this.currentAddress['id'], address);\r\n  }\r\n\r\n  editAddressCancel(): void {\r\n    this.showEditAddressForm = false;\r\n  }\r\n\r\n  getCardContent(address: Address) {\r\n    return combineLatest([\r\n      this.translation.translate('addressCard.default'),\r\n      this.translation.translate('addressCard.setAsDefault'),\r\n      this.translation.translate('common.delete'),\r\n      this.translation.translate('common.edit'),\r\n      this.translation.translate('addressBook.areYouSureToDeleteAddress'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          defaultText,\r\n          setAsDefaultText,\r\n          textDelete,\r\n          textEdit,\r\n          textVerifyDeleteMsg,\r\n        ]) => {\r\n          let region = '';\r\n\r\n          if (address.region && address.region.isocode) {\r\n            region = address.region.isocode + ', ';\r\n          }\r\n\r\n          const actions: { name: string; event: string }[] = [];\r\n          if (!address.defaultAddress) {\r\n            actions.push({ name: setAsDefaultText, event: 'default' });\r\n          }\r\n          actions.push({ name: textEdit, event: 'edit' });\r\n          actions.push({ name: textDelete, event: 'delete' });\r\n\r\n          return {\r\n            textBold: address.firstName + ' ' + address.lastName,\r\n            text: [\r\n              address.line1,\r\n              address.line2,\r\n              address.town + ', ' + region + address.country.isocode,\r\n              address.postalCode,\r\n              address.phone,\r\n            ],\r\n            actions: actions,\r\n            header: address.defaultAddress ? `✓ ${defaultText}` : '',\r\n            deleteMsg: textVerifyDeleteMsg,\r\n          };\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  setAddressAsDefault(addressId: string): void {\r\n    this.userAddressService.setAddressAsDefault(addressId);\r\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\r\n  }\r\n\r\n  deleteAddress(addressId: string): void {\r\n    this.userAddressService.deleteUserAddress(addressId);\r\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\r\n  }\r\n\r\n  setEdit(addressId: string): void {\r\n    if (this.editCard !== addressId) {\r\n      this.editCard = addressId;\r\n    } else {\r\n      this.deleteAddress(addressId);\r\n    }\r\n  }\r\n\r\n  cancelCard(): void {\r\n    this.editCard = null;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UserAddressService,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { AddressFormModule } from '../../checkout/components/shipping-address/address-form/address-form.module';\r\nimport { AddressBookComponent } from './address-book.component';\r\nimport { AddressBookComponentService } from './address-book.component.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardModule,\r\n    AddressFormModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n  ],\r\n  declarations: [AddressBookComponent],\r\n  exports: [AddressBookComponent],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AccountAddressBookComponent: {\r\n          component: AddressBookComponent,\r\n          providers: [\r\n            {\r\n              provide: AddressBookComponentService,\r\n              useClass: AddressBookComponentService,\r\n              deps: [UserAddressService],\r\n            },\r\n          ],\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n    UserAddressService,\r\n  ],\r\n  entryComponents: [AddressBookComponent],\r\n})\r\nexport class AddressBookModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserService,\r\n  UserToken,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\r\nimport { ModalService } from '../../../../../shared/components/modal/modal.service';\r\n\r\n@Component({\r\n  selector: 'cx-close-account-modal',\r\n  templateUrl: './close-account-modal.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CloseAccountModalComponent implements OnInit, OnDestroy {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  private subscription = new Subscription();\r\n  userToken$: Observable<UserToken>;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected modalService: ModalService,\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n    private globalMessageService: GlobalMessageService,\r\n    private routingService: RoutingService,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.userToken$ = this.authService.getUserToken();\r\n    this.userService.resetRemoveUserProcessState();\r\n    this.subscription.add(\r\n      this.userService\r\n        .getRemoveUserResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.userService\r\n        .getRemoveUserResultError()\r\n        .subscribe((error) => this.onError(error))\r\n    );\r\n    this.isLoading$ = this.userService.getRemoveUserResultLoading();\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.dismissModal();\r\n      this.translationService\r\n        .translate('closeAccount.accountClosedSuccessfully')\r\n        .pipe(first())\r\n        .subscribe((text) => {\r\n          this.globalMessageService.add(\r\n            text,\r\n            GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n          );\r\n        });\r\n      this.routingService.go({ cxRoute: 'home' });\r\n    }\r\n  }\r\n\r\n  onError(error: boolean): void {\r\n    if (error) {\r\n      this.dismissModal();\r\n      this.translationService\r\n        .translate('closeAccount.accountClosedFailure')\r\n        .pipe(first())\r\n        .subscribe((text) => {\r\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_ERROR);\r\n        });\r\n    }\r\n  }\r\n\r\n  dismissModal(reason?: any): void {\r\n    this.modalService.dismissActiveModal(reason);\r\n  }\r\n\r\n  closeAccount() {\r\n    this.userService.remove();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { CloseAccountModalComponent } from '../close-account-modal/close-account-modal.component';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account',\n  templateUrl: './close-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountComponent {\n  modal: any;\n  constructor(private modalService: ModalService) {}\n\n  openModal(): void {\n    this.modal = this.modalService.open(CloseAccountModalComponent, {\n      centered: true,\n    }).componentInstance;\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { CloseAccountModalComponent } from './components/close-account-modal/close-account-modal.component';\r\nimport { IconModule } from '../../../cms-components/misc/icon/index';\r\nimport { CloseAccountComponent } from './components/close-account/close-account.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CloseAccountComponent: {\r\n          component: CloseAccountComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CloseAccountComponent, CloseAccountModalComponent],\r\n  exports: [CloseAccountComponent, CloseAccountModalComponent],\r\n  entryComponents: [CloseAccountComponent, CloseAccountModalComponent],\r\n})\r\nexport class CloseAccountModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { RoutingService, UserService } from '@spartacus/core';\r\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\r\n@Component({\r\n  selector: 'cx-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      userEmail: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.emailValidator],\r\n      ],\r\n    });\r\n  }\r\n\r\n  requestForgotPasswordEmail() {\r\n    if (this.forgotPasswordForm.valid) {\r\n      this.userService.requestForgotPasswordEmail(\r\n        this.forgotPasswordForm.value.userEmail\r\n      );\r\n      this.routingService.go({ cxRoute: 'login' });\r\n    } else {\r\n      this.forgotPasswordForm.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ForgotPasswordComponent } from './forgot-password.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ForgotPasswordComponent: {\r\n          component: ForgotPasswordComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ForgotPasswordComponent],\r\n  exports: [ForgotPasswordComponent],\r\n  entryComponents: [ForgotPasswordComponent],\r\n})\r\nexport class ForgotPasswordModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  HostBinding,\r\n  Input,\r\n} from '@angular/core';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'cx-amend-order-actions',\r\n  templateUrl: './amend-order-actions.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AmendOrderActionsComponent {\r\n  @Input() orderCode: string;\r\n  @Input() amendOrderForm: FormGroup;\r\n  @Input() backRoute: string;\r\n  @Input() forwardRoute: string;\r\n\r\n  @HostBinding('class') styles = 'row';\r\n\r\n  constructor(protected routingService: RoutingService) {}\r\n\r\n  continue(event: Event): void {\r\n    if (this.amendOrderForm.valid) {\r\n      this.routingService.go({\r\n        cxRoute: this.forwardRoute,\r\n        params: { code: this.orderCode },\r\n      });\r\n    } else {\r\n      this.amendOrderForm.markAllAsTouched();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { AmendOrderActionsComponent } from './amend-order-actions.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [AmendOrderActionsComponent],\n  exports: [AmendOrderActionsComponent],\n})\nexport class AmendOrderActionsModule {}\n","export enum AmendOrderType {\n  CANCEL,\n  RETURN,\n}\n","import { formatCurrency, getCurrencySymbol } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Order, OrderEntry, Price } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../order-details/order-details.service';\r\nimport { AmendOrderType } from './amend-order.model';\r\n\r\nfunction ValidateQuantityToCancel(control: FormControl) {\r\n  if (!control.value) {\r\n    return null;\r\n  }\r\n  const quantity = Object.values(control.value).reduce(\r\n    (acc: number, val: number) => acc + val,\r\n    0\r\n  );\r\n  return quantity > 0 ? null : { cxNoSelectedItemToCancel: true };\r\n}\r\n\r\n@Injectable()\r\nexport abstract class OrderAmendService {\r\n  protected amendType: AmendOrderType;\r\n  protected form: FormGroup;\r\n\r\n  constructor(protected orderDetailsService: OrderDetailsService) {}\r\n\r\n  /**\r\n   * Returns entries for the given order.\r\n   */\r\n  abstract getEntries(): Observable<OrderEntry[]>;\r\n\r\n  /**\r\n   * Returns entries with an amended quantity.\r\n   */\r\n  getAmendedEntries(): Observable<OrderEntry[]> {\r\n    return this.getForm().pipe(\r\n      switchMap((form) => {\r\n        return this.getEntries().pipe(\r\n          map((entries) =>\r\n            entries.filter(\r\n              (entry) => this.getFormControl(form, entry).value > 0\r\n            )\r\n          )\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Submits the amended order.\r\n   */\r\n  abstract save(): void;\r\n\r\n  getOrder(): Observable<Order> {\r\n    return this.orderDetailsService.getOrderDetails();\r\n  }\r\n\r\n  /**\r\n   * returns the form with form data at runtime\r\n   */\r\n  getForm(): Observable<FormGroup> {\r\n    return this.getOrder().pipe(\r\n      tap((order) => {\r\n        if (!this.form || this.form.get('orderCode').value !== order.code) {\r\n          this.buildForm(order);\r\n        }\r\n      }),\r\n      map(() => this.form)\r\n    );\r\n  }\r\n\r\n  private buildForm(order: Order): void {\r\n    this.form = new FormGroup({});\r\n    this.form.addControl('orderCode', new FormControl(order.code));\r\n\r\n    const entryGroup = new FormGroup(\r\n      {},\r\n      { validators: [ValidateQuantityToCancel] }\r\n    );\r\n    this.form.addControl('entries', entryGroup);\r\n\r\n    (order.entries || []).forEach((entry) => {\r\n      const key = entry.entryNumber.toString();\r\n      entryGroup.addControl(\r\n        key,\r\n        new FormControl(0, {\r\n          validators: [\r\n            Validators.min(0),\r\n            Validators.max(this.getMaxAmendQuantity(entry)),\r\n          ],\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  protected getFormControl(form: FormGroup, entry: OrderEntry): FormControl {\r\n    return <FormControl>form.get('entries').get(entry.entryNumber.toString());\r\n  }\r\n\r\n  /**\r\n   * As discussed, this calculation is moved to SPA side.\r\n   * The calculation and validation should be in backend facade layer.\r\n   */\r\n  getAmendedPrice(entry: OrderEntry): Price {\r\n    const amendedQuantity = this.getFormControl(this.form, entry).value;\r\n    const amendedPrice = Object.assign({}, entry.basePrice);\r\n    amendedPrice.value =\r\n      Math.round(entry.basePrice.value * amendedQuantity * 100) / 100;\r\n\r\n    amendedPrice.formattedValue = formatCurrency(\r\n      amendedPrice.value,\r\n      // TODO: user current language\r\n      'en',\r\n      getCurrencySymbol(amendedPrice.currencyIso, 'narrow'),\r\n      amendedPrice.currencyIso\r\n    );\r\n\r\n    return amendedPrice;\r\n  }\r\n\r\n  getMaxAmendQuantity(entry: OrderEntry) {\r\n    return (\r\n      (this.isCancellation()\r\n        ? entry.cancellableQuantity\r\n        : entry.returnableQuantity) || entry.quantity\r\n    );\r\n  }\r\n\r\n  isCancellation() {\r\n    return this.amendType === AmendOrderType.CANCEL;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { OrderEntry, Price } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderAmendService } from '../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-amend-order-items',\r\n  templateUrl: './amend-order-items.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CancelOrReturnItemsComponent {\r\n  @Input() entries: OrderEntry[];\r\n  @Input() isConfirmation = false;\r\n\r\n  form$: Observable<FormGroup> = this.orderAmendService.getForm();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n\r\n  getControl(form: FormGroup, entry: OrderEntry): FormControl {\r\n    const control = <FormControl>(\r\n      form.get('entries').get(entry.entryNumber.toString())\r\n    );\r\n    return control;\r\n  }\r\n\r\n  setAll(form: FormGroup): void {\r\n    this.entries.forEach((entry) =>\r\n      this.getControl(form, entry).setValue(this.getMaxAmendQuantity(entry))\r\n    );\r\n  }\r\n\r\n  getItemPrice(entry: OrderEntry): Price {\r\n    return this.orderAmendService.getAmendedPrice(entry);\r\n  }\r\n\r\n  getMaxAmendQuantity(entry: OrderEntry) {\r\n    return this.orderAmendService.getMaxAmendQuantity(entry);\r\n  }\r\n\r\n  isCancellation() {\r\n    return this.orderAmendService.isCancellation();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { I18nModule, FeaturesConfigModule } from '@spartacus/core';\r\nimport {\r\n  FormErrorsModule,\r\n  ItemCounterModule,\r\n  MediaModule,\r\n} from '../../../../../shared/index';\r\nimport { CancelOrReturnItemsComponent } from './amend-order-items.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    ItemCounterModule,\r\n    FeaturesConfigModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [CancelOrReturnItemsComponent],\r\n  exports: [CancelOrReturnItemsComponent],\r\n  entryComponents: [CancelOrReturnItemsComponent],\r\n})\r\nexport class AmendOrderItemsModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-cancel-order-confirmation',\r\n  templateUrl: './cancel-order-confirmation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CancelOrderConfirmationComponent {\r\n  orderCode: string;\r\n\r\n  form$ = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<\r\n    OrderEntry[]\r\n  > = this.orderAmendService.getAmendedEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n\r\n  submit(form: FormGroup) {\r\n    if (form.valid) {\r\n      this.orderAmendService.save();\r\n    } else {\r\n      form.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CancelOrReturnRequestEntryInput,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  OrderEntry,\r\n  RoutingService,\r\n  UserOrderService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, first, map } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../../order-details/order-details.service';\r\nimport { AmendOrderType } from '../amend-order.model';\r\nimport { OrderAmendService } from '../amend-order.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderCancellationService extends OrderAmendService {\r\n  amendType = AmendOrderType.CANCEL;\r\n\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected userOrderService: UserOrderService,\r\n    protected routing: RoutingService,\r\n    protected globalMessageService: GlobalMessageService\r\n  ) {\r\n    super(orderDetailsService);\r\n  }\r\n  /**\r\n   * Return cancellable order entries.\r\n   */\r\n  getEntries(): Observable<OrderEntry[]> {\r\n    return this.getOrder().pipe(\r\n      filter((order) => !!order?.entries),\r\n      map((order) =>\r\n        order.entries.filter(\r\n          (entry) => entry.entryNumber !== -1 && entry.cancellableQuantity > 0\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  save(): void {\r\n    const orderCode = this.form.value.orderCode;\r\n    const entries = this.form.value.entries;\r\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\r\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\r\n      .map(\r\n        (entryNumber) =>\r\n          ({\r\n            orderEntryNumber: Number(entryNumber),\r\n            quantity: <number>entries[entryNumber],\r\n          } as CancelOrReturnRequestEntryInput)\r\n      );\r\n\r\n    this.form.reset();\r\n\r\n    this.userOrderService.cancelOrder(orderCode, {\r\n      cancellationRequestEntryInputs: inputs,\r\n    });\r\n\r\n    this.userOrderService\r\n      .getCancelOrderSuccess()\r\n      .pipe(first(Boolean))\r\n      .subscribe(() => this.afterSave(orderCode));\r\n  }\r\n\r\n  private afterSave(orderCode: string): void {\r\n    this.userOrderService.resetCancelOrderProcessState();\r\n    this.globalMessageService.add(\r\n      {\r\n        key: 'orderDetails.cancellationAndReturn.cancelSuccess',\r\n        params: { orderCode },\r\n      },\r\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n    );\r\n    this.routing.go({\r\n      cxRoute: 'orders',\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree } from '@angular/router';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderCancellationService } from './order-cancellation.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderCancellationGuard implements CanActivate {\r\n  constructor(\r\n    protected routing: RoutingService,\r\n    protected orderAmendService: OrderCancellationService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.orderAmendService.getForm().pipe(\r\n      map((form) => {\r\n        if (!form.valid) {\r\n          // the order code is not available in the route\r\n          // as long as we're inside a guard, hence we redirect\r\n          // to the common orders page.\r\n          this.routing.go({ cxRoute: 'orders' });\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderCancellationGuard } from '../order-cancellation.guard';\r\nimport { OrderCancellationService } from '../order-cancellation.service';\r\nimport { CancelOrderConfirmationComponent } from './cancel-order-confirmation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderCancelConfirmation',\r\n        },\r\n      },\r\n    ]),\r\n    ReactiveFormsModule,\r\n    AmendOrderItemsModule,\r\n    AmendOrderActionsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CancelOrderConfirmationComponent: {\r\n          component: CancelOrderConfirmationComponent,\r\n          guards: [AuthGuard, OrderCancellationGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderCancellationService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CancelOrderConfirmationComponent],\r\n  exports: [CancelOrderConfirmationComponent],\r\n  entryComponents: [CancelOrderConfirmationComponent],\r\n})\r\nexport class CancelOrderConfirmationModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-cancel-order',\r\n  templateUrl: './cancel-order.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CancelOrderComponent {\r\n  orderCode: string;\r\n\r\n  form$: Observable<FormGroup> = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport {\r\n  CmsPageGuard,\r\n  PageLayoutComponent,\r\n} from '../../../../../../cms-structure/index';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderCancellationService } from '../order-cancellation.service';\r\nimport { CancelOrderComponent } from './cancel-order.component';\r\nimport { FormErrorsModule } from '../../../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderCancel',\r\n        },\r\n      },\r\n    ]),\r\n    AmendOrderItemsModule,\r\n    AmendOrderActionsModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CancelOrderComponent: {\r\n          component: CancelOrderComponent,\r\n          guards: [AuthGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderCancellationService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CancelOrderComponent],\r\n  exports: [CancelOrderComponent],\r\n  entryComponents: [CancelOrderComponent],\r\n})\r\nexport class CancelOrderModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CancelOrderConfirmationModule } from './cancel-order-confirmation/cancel-order-confirmation.module';\nimport { CancelOrderModule } from './cancel-order/cancel-order.module';\n\n@NgModule({\n  imports: [CancelOrderModule, CancelOrderConfirmationModule],\n})\nexport class OrderCancellationModule {}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CancelOrReturnRequestEntryInput,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  OrderEntry,\r\n  OrderReturnRequestService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, first, map } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../../order-details/order-details.service';\r\nimport { AmendOrderType } from '../amend-order.model';\r\nimport { OrderAmendService } from '../amend-order.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderReturnService extends OrderAmendService {\r\n  amendType = AmendOrderType.RETURN;\r\n\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected returnRequestService: OrderReturnRequestService,\r\n    protected routing: RoutingService,\r\n    protected globalMessageService: GlobalMessageService\r\n  ) {\r\n    super(orderDetailsService);\r\n  }\r\n\r\n  getEntries(): Observable<OrderEntry[]> {\r\n    return this.getOrder().pipe(\r\n      filter((order) => !!order.entries),\r\n      map((order) =>\r\n        order.entries.filter(\r\n          (entry) => entry.entryNumber !== -1 && entry.returnableQuantity > 0\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  save(): void {\r\n    const orderCode = this.form.value.orderCode;\r\n    const entries = this.form.value.entries;\r\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\r\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\r\n      .map(\r\n        (entryNumber) =>\r\n          ({\r\n            orderEntryNumber: Number(entryNumber),\r\n            quantity: <number>entries[entryNumber],\r\n          } as CancelOrReturnRequestEntryInput)\r\n      );\r\n\r\n    this.form.reset();\r\n\r\n    this.returnRequestService.createOrderReturnRequest({\r\n      orderCode,\r\n      returnRequestEntryInputs: inputs,\r\n    });\r\n\r\n    this.returnRequestService\r\n      .getReturnRequestSuccess()\r\n      .pipe(first(Boolean))\r\n      .subscribe(() => this.afterSave());\r\n  }\r\n\r\n  private afterSave(): void {\r\n    this.returnRequestService\r\n      .getOrderReturnRequest()\r\n      .pipe(first((r) => !!r))\r\n      .subscribe((returnRequest) => {\r\n        const rma = returnRequest.rma;\r\n        this.globalMessageService.add(\r\n          {\r\n            key: 'orderDetails.cancellationAndReturn.returnSuccess',\r\n            params: { rma },\r\n          },\r\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n        );\r\n        this.routing.go({\r\n          cxRoute: 'returnRequestDetails',\r\n          params: { rma },\r\n        });\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree } from '@angular/router';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderReturnService } from './order-return.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderReturnGuard implements CanActivate {\r\n  constructor(\r\n    protected routing: RoutingService,\r\n    protected orderAmendService: OrderReturnService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.orderAmendService.getForm().pipe(\r\n      map((form) => {\r\n        if (!form.valid) {\r\n          // the order code is not available in the route\r\n          // as long as we're inside a guard, hence we redirect\r\n          // to the common orders page.\r\n          this.routing.go({ cxRoute: 'orders' });\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-return-order-confirmation',\r\n  templateUrl: './return-order-confirmation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReturnOrderConfirmationComponent {\r\n  orderCode: string;\r\n\r\n  form$ = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<\r\n    OrderEntry[]\r\n  > = this.orderAmendService.getAmendedEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n\r\n  submit(form: FormGroup): void {\r\n    form.disable();\r\n    this.orderAmendService.save();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderReturnGuard } from '../order-return.guard';\r\nimport { OrderReturnService } from '../order-return.service';\r\nimport { ReturnOrderConfirmationComponent } from './return-order-confirmation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderReturnConfirmation',\r\n        },\r\n      },\r\n    ]),\r\n    AmendOrderItemsModule,\r\n    I18nModule,\r\n    ReactiveFormsModule,\r\n    AmendOrderActionsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturnOrderConfirmationComponent: {\r\n          component: ReturnOrderConfirmationComponent,\r\n          guards: [AuthGuard, OrderReturnGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderReturnService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ReturnOrderConfirmationComponent],\r\n  exports: [ReturnOrderConfirmationComponent],\r\n  entryComponents: [ReturnOrderConfirmationComponent],\r\n})\r\nexport class ReturnOrderConfirmationModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-return-order',\r\n  templateUrl: './return-order.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReturnOrderComponent {\r\n  orderCode: string;\r\n\r\n  form$: Observable<FormGroup> = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderReturnService } from '../order-return.service';\r\nimport { ReturnOrderComponent } from './return-order.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderReturn',\r\n        },\r\n      },\r\n    ]),\r\n    AmendOrderItemsModule,\r\n    AmendOrderActionsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturnOrderComponent: {\r\n          component: ReturnOrderComponent,\r\n          guards: [AuthGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderReturnService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ReturnOrderComponent],\r\n  exports: [ReturnOrderComponent],\r\n  entryComponents: [ReturnOrderComponent],\r\n})\r\nexport class ReturnOrderModule {}\r\n","import { NgModule } from '@angular/core';\nimport { ReturnOrderConfirmationModule } from './return-order-confirmation/return-order-confirmation.module';\nimport { ReturnOrderModule } from './return-order/return-order.module';\n\n@NgModule({\n  imports: [ReturnOrderModule, ReturnOrderConfirmationModule],\n})\nexport class OrderReturnModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-headline',\n  templateUrl: './order-detail-headline.component.html',\n})\nexport class OrderDetailHeadlineComponent implements OnInit {\n  constructor(private orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","export const completedValues = ['DELIVERY_COMPLETED', 'PICKUP_COMPLETE'];\nexport const cancelledValues = ['CANCELLED'];\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  Consignment,\r\n  Order,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PromotionService } from '../../../../../shared/services/promotion/promotion.service';\r\nimport { OrderDetailsService } from '../order-details.service';\r\nimport {\r\n  cancelledValues,\r\n  completedValues,\r\n} from './order-consigned-entries/order-consigned-entries.model';\r\n\r\n@Component({\r\n  selector: 'cx-order-details-items',\r\n  templateUrl: './order-detail-items.component.html',\r\n})\r\nexport class OrderDetailItemsComponent implements OnInit {\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n\r\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\r\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  others$: Observable<Consignment[]>;\r\n  completed$: Observable<Consignment[]>;\r\n  cancel$: Observable<Consignment[]>;\r\n\r\n  ngOnInit() {\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n    this.others$ = this.getOtherStatus(...completedValues, ...cancelledValues);\r\n    this.completed$ = this.getExactStatus(completedValues);\r\n    this.cancel$ = this.getExactStatus(cancelledValues);\r\n  }\r\n\r\n  private getExactStatus(\r\n    consignmentStatus: string[]\r\n  ): Observable<Consignment[]> {\r\n    return this.order$.pipe(\r\n      map((order) => {\r\n        if (Boolean(order.consignments)) {\r\n          return order.consignments.filter((consignment) =>\r\n            consignmentStatus.includes(consignment.status)\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private getOtherStatus(\r\n    ...consignmentStatus: string[]\r\n  ): Observable<Consignment[]> {\r\n    return this.order$.pipe(\r\n      map((order) => {\r\n        if (Boolean(order.consignments)) {\r\n          return order.consignments.filter(\r\n            (consignment) => !consignmentStatus.includes(consignment.status)\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConsignmentTracking, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-tracking-events',\n  templateUrl: './tracking-events.component.html',\n})\nexport class TrackingEventsComponent implements OnDestroy {\n  tracking$: Observable<ConsignmentTracking>;\n  shipDate: Date;\n  consignmentCode: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private userOrderService: UserOrderService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  ConsignmentTracking,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../../shared/components/modal/index';\nimport { TrackingEventsComponent } from './tracking-events/tracking-events.component';\n\n@Component({\n  selector: 'cx-consignment-tracking',\n  templateUrl: './consignment-tracking.component.html',\n})\nexport class ConsignmentTrackingComponent implements OnInit, OnDestroy {\n  consignmentStatus: string[] = [\n    'SHIPPED',\n    'IN_TRANSIT',\n    'DELIVERY_COMPLETED',\n    'DELIVERY_REJECTED',\n    'DELIVERING',\n  ];\n  modalRef: ModalRef;\n\n  @Input()\n  consignment: Consignment;\n  @Input()\n  orderCode: string;\n  consignmentTracking$: Observable<ConsignmentTracking>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.consignmentTracking$ = this.userOrderService.getConsignmentTracking();\n  }\n\n  openTrackingDialog(consignment: Consignment) {\n    this.userOrderService.loadConsignmentTracking(\n      this.orderCode,\n      consignment.code\n    );\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(TrackingEventsComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.tracking$ = this.consignmentTracking$;\n    modalInstance.shipDate = consignment.statusDate;\n    modalInstance.consignmentCode = consignment.code;\n  }\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input } from '@angular/core';\r\nimport {\r\n  Consignment,\r\n  Order,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-order-consigned-entries',\r\n  templateUrl: './order-consigned-entries.component.html',\r\n})\r\nexport class OrderConsignedEntriesComponent {\r\n  @Input() consignments: Consignment[];\r\n  @Input() order: Order;\r\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\r\n\r\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\r\n    const products: OrderEntry[] = [];\r\n    consignment.entries.forEach((element) => {\r\n      products.push(element.orderEntry);\r\n    });\r\n\r\n    return products;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { Card } from '../../../../../shared/components/card/card.component';\nimport { OrderDetailsService } from '../order-details.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-details-shipping',\n  templateUrl: './order-detail-shipping.component.html',\n})\nexport class OrderDetailShippingComponent implements OnInit {\n  constructor(\n    private orderDetailsService: OrderDetailsService,\n    private translation: TranslationService\n  ) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n\n  getAddressCardContent(address: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${address.firstName} ${address.lastName}`,\n          text: [\n            address.line1,\n            address.line2,\n            `${address.town}, ${address.country.isocode}, ${address.postalCode}`,\n            address.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.billTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n          text: [\n            billingAddress.line1,\n            billingAddress.line2,\n            `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\n            billingAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getPaymentCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: payment.accountHolderName,\n          text: [payment.cardType.name, payment.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n\n  getShippingMethodCardContent(shipping: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: shipping.name,\n          text: [shipping.description],\n        };\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from '@spartacus/core';\n\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-totals',\n  templateUrl: './order-detail-totals.component.html',\n})\nexport class OrderDetailTotalsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-actions',\n  templateUrl: './order-detail-actions.component.html',\n})\nexport class OrderDetailActionsComponent {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  FeaturesConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ConsignmentTrackingComponent } from '../../../../cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component';\r\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\r\nimport { PromotionsModule } from '../../../checkout/components/promotions/promotions.module';\r\nimport { OrderDetailActionsComponent } from './order-detail-actions/order-detail-actions.component';\r\nimport { OrderDetailHeadlineComponent } from './order-detail-headline/order-detail-headline.component';\r\nimport { TrackingEventsComponent } from './order-detail-items/consignment-tracking/tracking-events/tracking-events.component';\r\nimport { OrderConsignedEntriesComponent } from './order-detail-items/order-consigned-entries/order-consigned-entries.component';\r\nimport { OrderDetailItemsComponent } from './order-detail-items/order-detail-items.component';\r\nimport { OrderDetailShippingComponent } from './order-detail-shipping/order-detail-shipping.component';\r\nimport { OrderDetailTotalsComponent } from './order-detail-totals/order-detail-totals.component';\r\nimport { OrderDetailsService } from './order-details.service';\r\n\r\nconst moduleComponents = [\r\n  OrderDetailActionsComponent,\r\n  OrderDetailHeadlineComponent,\r\n  OrderDetailItemsComponent,\r\n  OrderDetailTotalsComponent,\r\n  OrderDetailShippingComponent,\r\n  TrackingEventsComponent,\r\n  ConsignmentTrackingComponent,\r\n  OrderConsignedEntriesComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CartSharedModule,\r\n    CardModule,\r\n    CommonModule,\r\n    I18nModule,\r\n    FeaturesConfigModule,\r\n    PromotionsModule,\r\n    UrlModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { pageLabel: 'order', cxRoute: 'orderGuest' },\r\n      },\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'orderDetails' },\r\n      },\r\n    ]),\r\n    SpinnerModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\r\n      cmsComponents: {\r\n        AccountOrderDetailsActionsComponent: {\r\n          component: OrderDetailActionsComponent,\r\n        },\r\n        AccountOrderDetailsHeadlineComponent: {\r\n          component: OrderDetailHeadlineComponent,\r\n        },\r\n        AccountOrderDetailsItemsComponent: {\r\n          component: OrderDetailItemsComponent,\r\n        },\r\n        AccountOrderDetailsTotalsComponent: {\r\n          component: OrderDetailTotalsComponent,\r\n        },\r\n        AccountOrderDetailsShippingComponent: {\r\n          component: OrderDetailShippingComponent,\r\n        },\r\n      },\r\n      features: {\r\n        consignmentTracking: '1.2',\r\n      },\r\n    }),\r\n    OrderDetailsService,\r\n  ],\r\n  declarations: [...moduleComponents],\r\n  exports: [...moduleComponents],\r\n  entryComponents: [...moduleComponents],\r\n})\r\nexport class OrderDetailsModule {}\r\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport {\r\n  Order,\r\n  OrderHistoryList,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserOrderService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, tap, filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-order-history',\r\n  templateUrl: './order-history.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderHistoryComponent implements OnDestroy {\r\n  constructor(\r\n    private routing: RoutingService,\r\n    private userOrderService: UserOrderService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  private PAGE_SIZE = 5;\r\n  sortType: string;\r\n\r\n  orders$: Observable<\r\n    OrderHistoryList\r\n  > = this.userOrderService.getOrderHistoryList(this.PAGE_SIZE).pipe(\r\n    tap((orders: OrderHistoryList) => {\r\n      if (orders.pagination) {\r\n        this.sortType = orders.pagination.sort;\r\n      }\r\n    })\r\n  );\r\n\r\n  isLoaded$: Observable<\r\n    boolean\r\n  > = this.userOrderService.getOrderHistoryListLoaded();\r\n\r\n  /**\r\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\r\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\r\n   */\r\n  tabTitleParam$: Observable<number> = this.orders$.pipe(\r\n    map((order) => order.pagination.totalResults),\r\n    filter((totalResults) => totalResults !== undefined),\r\n    take(1)\r\n  );\r\n\r\n  ngOnDestroy(): void {\r\n    this.userOrderService.clearOrderList();\r\n  }\r\n\r\n  changeSortCode(sortCode: string): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode,\r\n      currentPage: 0,\r\n    };\r\n    this.sortType = sortCode;\r\n    this.fetchOrders(event);\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode: this.sortType,\r\n      currentPage: page,\r\n    };\r\n    this.fetchOrders(event);\r\n  }\r\n\r\n  goToOrderDetail(order: Order): void {\r\n    this.routing.go({\r\n      cxRoute: 'orderDetails',\r\n      params: order,\r\n    });\r\n  }\r\n\r\n  getSortLabels(): Observable<{ byDate: string; byOrderNumber: string }> {\r\n    return combineLatest([\r\n      this.translation.translate('sorting.date'),\r\n      this.translation.translate('sorting.orderNumber'),\r\n    ]).pipe(\r\n      map(([textByDate, textByOrderNumber]) => {\r\n        return {\r\n          byDate: textByDate,\r\n          byOrderNumber: textByOrderNumber,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private fetchOrders(event: { sortCode: string; currentPage: number }): void {\r\n    this.userOrderService.loadOrderList(\r\n      this.PAGE_SIZE,\r\n      event.currentPage,\r\n      event.sortCode\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\r\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { OrderHistoryComponent } from './order-history.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'orders' },\r\n      },\r\n    ]),\r\n    RouterModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ListNavigationModule,\r\n    UrlModule,\r\n    I18nModule,\r\n  ],\r\n  declarations: [OrderHistoryComponent],\r\n  exports: [OrderHistoryComponent],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AccountOrderHistoryComponent: {\r\n          component: OrderHistoryComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  entryComponents: [OrderHistoryComponent],\r\n})\r\nexport class OrderHistoryModule {}\r\n","import { Injectable } from '@angular/core';\nimport {\n  OrderReturnRequestService,\n  RoutingService,\n  ReturnRequest,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, map, tap, distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReturnRequestService {\n  constructor(\n    protected routingService: RoutingService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  get isCancelling$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestLoading();\n  }\n\n  get isCancelSuccess$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestSuccess();\n  }\n\n  getReturnRequest(): Observable<ReturnRequest> {\n    return combineLatest([\n      this.routingService.getRouterState(),\n      this.returnRequestService.getOrderReturnRequest(),\n      this.returnRequestService.getReturnRequestLoading(),\n    ]).pipe(\n      map(([routingState, returnRequest, isLoading]) => [\n        routingState.state.params['returnCode'],\n        returnRequest,\n        isLoading,\n      ]),\n      filter(([returnCode]) => Boolean(returnCode)),\n      tap(([returnCode, returnRequest, isLoading]) => {\n        if (\n          (returnRequest === undefined || returnRequest.rma !== returnCode) &&\n          !isLoading\n        ) {\n          this.returnRequestService.loadOrderReturnRequestDetail(returnCode);\n        }\n      }),\n      map(([_, returnRequest]) => returnRequest),\n      filter(Boolean),\n      distinctUntilChanged()\n    );\n  }\n\n  clearReturnRequest(): void {\n    this.returnRequestService.clearOrderReturnRequestDetail();\n  }\n\n  cancelReturnRequest(returnRequestCode: string): void {\n    this.returnRequestService.cancelOrderReturnRequest(returnRequestCode, {\n      status: 'CANCELLING',\n    });\n  }\n\n  cancelSuccess(rma: string): void {\n    this.returnRequestService.resetCancelReturnRequestProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'returnRequest.cancelSuccess',\n        params: { rma },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routingService.go({\n      cxRoute: 'orders',\n    });\n  }\n\n  backToList(): void {\n    this.routingService.go({ cxRoute: 'orders' }, null, {\n      state: {\n        activeTab: 1,\n      },\n    });\n  }\n}\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ReturnRequest } from '@spartacus/core';\r\nimport { ReturnRequestService } from '../return-request.service';\r\n\r\n@Component({\r\n  selector: 'cx-return-request-overview',\r\n  templateUrl: './return-request-overview.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReturnRequestOverviewComponent implements OnInit, OnDestroy {\r\n  constructor(protected returnRequestService: ReturnRequestService) {}\r\n\r\n  rma: string;\r\n  subscription: Subscription;\r\n\r\n  returnRequest$: Observable<\r\n    ReturnRequest\r\n  > = this.returnRequestService\r\n    .getReturnRequest()\r\n    .pipe(tap((returnRequest) => (this.rma = returnRequest.rma)));\r\n\r\n  isCancelling$ = this.returnRequestService.isCancelling$;\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.returnRequestService.isCancelSuccess$.subscribe(\r\n      (success) => {\r\n        if (success) {\r\n          this.returnRequestService.cancelSuccess(this.rma);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  cancelReturn(returnRequestCode: string): void {\r\n    this.returnRequestService.cancelReturnRequest(returnRequestCode);\r\n  }\r\n\r\n  back(): void {\r\n    this.returnRequestService.backToList();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-items',\n  templateUrl: './return-request-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestItemsComponent {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-totals',\n  templateUrl: './return-request-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestTotalsComponent implements OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n\n  ngOnDestroy() {\n    this.returnRequestService.clearReturnRequest();\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { MediaModule } from '../../../../shared/index';\r\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { ReturnRequestOverviewComponent } from './return-request-overview/return-request-overview.component';\r\nimport { ReturnRequestItemsComponent } from './return-request-items/return-request-items.component';\r\nimport { ReturnRequestTotalsComponent } from './return-request-totals/return-request-totals.component';\r\n\r\nconst components = [\r\n  ReturnRequestOverviewComponent,\r\n  ReturnRequestItemsComponent,\r\n  ReturnRequestTotalsComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'returnRequestDetails' },\r\n      },\r\n    ]),\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturnRequestOverviewComponent: {\r\n          component: ReturnRequestOverviewComponent,\r\n        },\r\n        ReturnRequestItemsComponent: {\r\n          component: ReturnRequestItemsComponent,\r\n        },\r\n        ReturnRequestTotalsComponent: {\r\n          component: ReturnRequestTotalsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [...components],\r\n  exports: [...components],\r\n  entryComponents: [...components],\r\n})\r\nexport class ReturnRequestDetailModule {}\r\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport {\r\n  ReturnRequestList,\r\n  OrderReturnRequestService,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { tap, map, filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-order-return-request-list',\r\n  templateUrl: './order-return-request-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderReturnRequestListComponent implements OnDestroy {\r\n  constructor(\r\n    private returnRequestService: OrderReturnRequestService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  private PAGE_SIZE = 5;\r\n  sortType: string;\r\n\r\n  returnRequests$: Observable<\r\n    ReturnRequestList\r\n  > = this.returnRequestService.getOrderReturnRequestList(this.PAGE_SIZE).pipe(\r\n    tap((requestList: ReturnRequestList) => {\r\n      if (requestList.pagination) {\r\n        this.sortType = requestList.pagination.sort;\r\n      }\r\n    })\r\n  );\r\n\r\n  /**\r\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\r\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\r\n   */\r\n  tabTitleParam$: Observable<number> = this.returnRequests$.pipe(\r\n    map((returnRequests) => returnRequests.pagination.totalResults),\r\n    filter((totalResults) => totalResults !== undefined),\r\n    take(1)\r\n  );\r\n\r\n  ngOnDestroy(): void {\r\n    this.returnRequestService.clearOrderReturnRequestList();\r\n  }\r\n\r\n  changeSortCode(sortCode: string): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode,\r\n      currentPage: 0,\r\n    };\r\n    this.sortType = sortCode;\r\n    this.fetchReturnRequests(event);\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode: this.sortType,\r\n      currentPage: page,\r\n    };\r\n    this.fetchReturnRequests(event);\r\n  }\r\n\r\n  getSortLabels(): Observable<{ byDate: string; byRMA: string }> {\r\n    return combineLatest([\r\n      this.translation.translate('sorting.date'),\r\n      this.translation.translate('sorting.rma'),\r\n    ]).pipe(\r\n      map(([textByDate, textByRma]) => {\r\n        return {\r\n          byDate: textByDate,\r\n          byRMA: textByRma,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private fetchReturnRequests(event: {\r\n    sortCode: string;\r\n    currentPage: number;\r\n  }): void {\r\n    this.returnRequestService.loadOrderReturnRequestList(\r\n      this.PAGE_SIZE,\r\n      event.currentPage,\r\n      event.sortCode\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\r\nimport { OrderReturnRequestListComponent } from './order-return-request-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ListNavigationModule,\r\n    UrlModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        OrderReturnRequestListComponent: {\r\n          component: OrderReturnRequestListComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [OrderReturnRequestListComponent],\r\n  exports: [OrderReturnRequestListComponent],\r\n  entryComponents: [OrderReturnRequestListComponent],\r\n})\r\nexport class ReturnRequestListModule {}\r\n","import { NgModule } from '@angular/core';\nimport {\n  OrderCancellationModule,\n  OrderReturnModule,\n} from './amend-order/index';\nimport { OrderDetailsModule } from './order-details/order-details.module';\nimport { OrderHistoryModule } from './order-history/order-history.module';\nimport { ReturnRequestDetailModule } from './return-request-detail/return-request-detail.module';\nimport { ReturnRequestListModule } from './return-request-list/order-return-request-list.module';\n\n@NgModule({\n  imports: [\n    OrderHistoryModule,\n    OrderDetailsModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n  ],\n})\nexport class OrderModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  PaymentDetails,\r\n  TranslationService,\r\n  UserPaymentService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\r\nimport { Card } from '../../../shared/components/card/card.component';\r\n\r\n@Component({\r\n  selector: 'cx-payment-methods',\r\n  templateUrl: './payment-methods.component.html',\r\n})\r\nexport class PaymentMethodsComponent implements OnInit {\r\n  paymentMethods$: Observable<PaymentDetails[]>;\r\n  editCard: string;\r\n  iconTypes = ICON_TYPE;\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private userPaymentService: UserPaymentService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\r\n      tap((paymentDetails) => {\r\n        // Set first payment method to DEFAULT if none is set\r\n        if (\r\n          paymentDetails.length > 0 &&\r\n          !paymentDetails.find((paymentDetail) => paymentDetail.defaultPayment)\r\n        ) {\r\n          this.setDefaultPaymentMethod(paymentDetails[0]);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.editCard = null;\r\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\r\n    this.userPaymentService.loadPaymentMethods();\r\n  }\r\n\r\n  getCardContent({\r\n    defaultPayment,\r\n    accountHolderName,\r\n    expiryMonth,\r\n    expiryYear,\r\n    cardNumber,\r\n    cardType,\r\n  }: PaymentDetails): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('paymentCard.setAsDefault'),\r\n      this.translation.translate('common.delete'),\r\n      this.translation.translate('paymentCard.deleteConfirmation'),\r\n      this.translation.translate('paymentCard.expires', {\r\n        month: expiryMonth,\r\n        year: expiryYear,\r\n      }),\r\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          textSetAsDefault,\r\n          textDelete,\r\n          textDeleteConfirmation,\r\n          textExpires,\r\n          textDefaultPaymentMethod,\r\n        ]) => {\r\n          const actions: { name: string; event: string }[] = [];\r\n          if (!defaultPayment) {\r\n            actions.push({ name: textSetAsDefault, event: 'default' });\r\n          }\r\n          actions.push({ name: textDelete, event: 'edit' });\r\n          const card: Card = {\r\n            header: defaultPayment ? textDefaultPaymentMethod : null,\r\n            textBold: accountHolderName,\r\n            text: [cardNumber, textExpires],\r\n            actions,\r\n            deleteMsg: textDeleteConfirmation,\r\n            img: this.getCardIcon(cardType.code),\r\n          };\r\n\r\n          return card;\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\r\n    this.userPaymentService.deletePaymentMethod(paymentMethod.id);\r\n    this.editCard = null;\r\n  }\r\n\r\n  setEdit(paymentMethod: PaymentDetails): void {\r\n    this.editCard = paymentMethod.id;\r\n  }\r\n\r\n  cancelCard(): void {\r\n    this.editCard = null;\r\n  }\r\n\r\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\r\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id);\r\n  }\r\n\r\n  getCardIcon(code: string): string {\r\n    let ccIcon: string;\r\n    if (code === 'visa') {\r\n      ccIcon = this.iconTypes.VISA;\r\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\r\n      ccIcon = this.iconTypes.MASTER_CARD;\r\n    } else if (code === 'diners') {\r\n      ccIcon = this.iconTypes.DINERS_CLUB;\r\n    } else if (code === 'amex') {\r\n      ccIcon = this.iconTypes.AMEX;\r\n    } else {\r\n      ccIcon = this.iconTypes.CREDIT_CARD;\r\n    }\r\n\r\n    return ccIcon;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { PaymentMethodsComponent } from './payment-methods.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CardModule, SpinnerModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AccountPaymentDetailsComponent: {\r\n          component: PaymentMethodsComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [PaymentMethodsComponent],\r\n  exports: [PaymentMethodsComponent],\r\n  entryComponents: [PaymentMethodsComponent],\r\n})\r\nexport class PaymentMethodsModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { RoutingService, UserService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-reset-password-form',\r\n  templateUrl: './reset-password-form.component.html',\r\n})\r\nexport class ResetPasswordFormComponent implements OnInit, OnDestroy {\r\n  token: string;\r\n  subscription = new Subscription();\r\n\r\n  resetPasswordForm: FormGroup = this.fb.group(\r\n    {\r\n      password: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.passwordValidator],\r\n      ],\r\n      repassword: ['', [Validators.required]],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.passwordsMustMatch(\r\n        'password',\r\n        'repassword'\r\n      ),\r\n    }\r\n  );\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private routingService: RoutingService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.routingService\r\n        .getRouterState()\r\n        .subscribe((state) => (this.token = state.state.queryParams['token']))\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.userService.isPasswordReset().subscribe((reset) => {\r\n        if (reset) {\r\n          this.routingService.go({ cxRoute: 'login' });\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  resetPassword() {\r\n    if (this.resetPasswordForm.valid) {\r\n      const password = this.resetPasswordForm.get('password').value;\r\n      this.userService.resetPassword(this.token, password);\r\n    } else {\r\n      this.resetPasswordForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { ResetPasswordFormComponent } from './reset-password-form.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ResetPasswordComponent: {\r\n          component: ResetPasswordFormComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ResetPasswordFormComponent],\r\n  exports: [ResetPasswordFormComponent],\r\n  entryComponents: [ResetPasswordFormComponent],\r\n})\r\nexport class ResetPasswordModule {}\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-update-email-form',\r\n  templateUrl: './update-email-form.component.html',\r\n})\r\nexport class UpdateEmailFormComponent {\r\n  @Output()\r\n  saveEmail = new EventEmitter<{\r\n    newUid: string;\r\n    password: string;\r\n  }>();\r\n\r\n  @Output()\r\n  cancelEmail = new EventEmitter<void>();\r\n\r\n  updateEmailForm: FormGroup = this.fb.group(\r\n    {\r\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\r\n      confirmEmail: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.emailsMustMatch('email', 'confirmEmail'),\r\n    }\r\n  );\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  onSubmit(): void {\r\n    if (this.updateEmailForm.valid) {\r\n      const newUid = this.updateEmailForm.get('confirmEmail').value;\r\n      const password = this.updateEmailForm.get('password').value;\r\n\r\n      this.saveEmail.emit({ newUid, password });\r\n    } else {\r\n      this.updateEmailForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancelEmail.emit();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-update-email',\r\n  templateUrl: './update-email.component.html',\r\n})\r\nexport class UpdateEmailComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private globalMessageService: GlobalMessageService,\r\n    private userService: UserService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  private subscription = new Subscription();\r\n  private newUid: string;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  ngOnInit() {\r\n    this.userService.resetUpdateEmailResultState();\r\n    this.subscription.add(\r\n      this.userService\r\n        .getUpdateEmailResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n    this.isLoading$ = this.userService.getUpdateEmailResultLoading();\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  onSubmit({ newUid, password }: { newUid: string; password: string }): void {\r\n    this.newUid = newUid;\r\n    this.userService.updateEmail(password, newUid);\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.globalMessageService.add(\r\n        {\r\n          key: 'updateEmailForm.emailUpdateSuccess',\r\n          params: { newUid: this.newUid },\r\n        },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n      this.authService.logout();\r\n      this.routingService.go({ cxRoute: 'login' }, null, {\r\n        state: {\r\n          newUid: this.newUid,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.userService.resetUpdateEmailResultState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { UpdateEmailFormComponent } from './update-email-form/update-email-form.component';\r\nimport { UpdateEmailComponent } from './update-email.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        UpdateEmailComponent: {\r\n          component: UpdateEmailComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [UpdateEmailFormComponent, UpdateEmailComponent],\r\n  exports: [UpdateEmailComponent, UpdateEmailFormComponent],\r\n  entryComponents: [UpdateEmailComponent],\r\n})\r\nexport class UpdateEmailModule {}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomFormValidators } from '../../../../../shared/utils/validators/custom-form-validators';\r\n@Component({\r\n  selector: 'cx-update-password-form',\r\n  templateUrl: './update-password-form.component.html',\r\n})\r\nexport class UpdatePasswordFormComponent implements OnInit {\r\n  updatePasswordForm: FormGroup;\r\n\r\n  @Output()\r\n  submitted = new EventEmitter<{ oldPassword: string; newPassword: string }>();\r\n\r\n  @Output()\r\n  cancelled = new EventEmitter<void>();\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.updatePasswordForm = this.fb.group(\r\n      {\r\n        oldPassword: ['', [Validators.required]],\r\n        newPassword: [\r\n          '',\r\n          [Validators.required, CustomFormValidators.passwordValidator],\r\n        ],\r\n        newPasswordConfirm: ['', [Validators.required]],\r\n      },\r\n      {\r\n        validators: CustomFormValidators.passwordsMustMatch(\r\n          'newPassword',\r\n          'newPasswordConfirm'\r\n        ),\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.updatePasswordForm.valid) {\r\n      this.submitted.emit({\r\n        oldPassword: this.updatePasswordForm.value.oldPassword,\r\n        newPassword: this.updatePasswordForm.value.newPassword,\r\n      });\r\n    } else {\r\n      this.updatePasswordForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancelled.emit();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-update-password',\r\n  templateUrl: './update-password.component.html',\r\n})\r\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private userService: UserService,\r\n    private globalMessageService: GlobalMessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userService.resetUpdatePasswordProcessState();\r\n    this.loading$ = this.userService.getUpdatePasswordResultLoading();\r\n    this.subscription.add(\r\n      this.userService\r\n        .getUpdatePasswordResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.globalMessageService.add(\r\n        { key: 'updatePasswordForm.passwordUpdateSuccess' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n      this.routingService.go({ cxRoute: 'home' });\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  onSubmit({\r\n    oldPassword,\r\n    newPassword,\r\n  }: {\r\n    oldPassword: string;\r\n    newPassword: string;\r\n  }): void {\r\n    this.userService.updatePassword(oldPassword, newPassword);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n\r\n    this.userService.resetUpdatePasswordProcessState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { UpdatePasswordFormComponent } from './components/update-password-form/update-password-form.component';\r\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        UpdatePasswordComponent: {\r\n          component: UpdatePasswordComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [UpdatePasswordComponent, UpdatePasswordFormComponent],\r\n  exports: [UpdatePasswordComponent, UpdatePasswordFormComponent],\r\n  entryComponents: [UpdatePasswordComponent],\r\n})\r\nexport class UpdatePasswordModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Title, User } from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-update-profile-form',\r\n  templateUrl: './update-profile-form.component.html',\r\n})\r\nexport class UpdateProfileFormComponent implements OnInit {\r\n  @Input()\r\n  user: User;\r\n\r\n  @Input()\r\n  titles: Title[];\r\n\r\n  @Output()\r\n  submitted = new EventEmitter<{ userUpdates: User }>();\r\n\r\n  @Output()\r\n  cancelled = new EventEmitter<void>();\r\n\r\n  updateProfileForm: FormGroup = this.fb.group({\r\n    titleCode: [''],\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n  });\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    if (this.user) {\r\n      this.updateProfileForm.patchValue(this.user);\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.updateProfileForm.valid) {\r\n      this.submitted.emit({\r\n        userUpdates: { ...this.updateProfileForm.value },\r\n      });\r\n    } else {\r\n      this.updateProfileForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancelled.emit();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  Title,\r\n  User,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-update-profile',\r\n  templateUrl: './update-profile.component.html',\r\n})\r\nexport class UpdateProfileComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  titles$: Observable<Title[]>;\r\n  user$: Observable<User>;\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private userService: UserService,\r\n    private globalMessageService: GlobalMessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // reset the previous form processing state\r\n    this.userService.resetUpdatePersonalDetailsProcessingState();\r\n\r\n    this.user$ = this.userService.get();\r\n    this.titles$ = this.userService.getTitles().pipe(\r\n      tap((titles) => {\r\n        if (Object.keys(titles).length === 0) {\r\n          this.userService.loadTitles();\r\n        }\r\n      })\r\n    );\r\n    this.loading$ = this.userService.getUpdatePersonalDetailsResultLoading();\r\n\r\n    this.subscription.add(\r\n      this.userService\r\n        .getUpdatePersonalDetailsResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.globalMessageService.add(\r\n        { key: 'updateProfileForm.profileUpdateSuccess' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n      this.routingService.go({ cxRoute: 'home' });\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  onSubmit({ userUpdates }: { userUpdates: User }): void {\r\n    this.userService.updatePersonalDetails(userUpdates);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n\r\n    // clean up the state\r\n    this.userService.resetUpdatePersonalDetailsProcessingState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { UpdateProfileFormComponent } from './components/update-profile-form.component';\r\nimport { UpdateProfileComponent } from './update-profile.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        UpdateProfileComponent: {\r\n          component: UpdateProfileComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [UpdateProfileComponent, UpdateProfileFormComponent],\r\n  exports: [UpdateProfileComponent, UpdateProfileFormComponent],\r\n  entryComponents: [UpdateProfileComponent],\r\n})\r\nexport class UpdateProfileModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CustomerCoupon,\r\n  RoutingService,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { combineLatest, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MyCouponsComponentService {\r\n  sortLabels: Observable<{\r\n    byStartDateAsc: string;\r\n    byStartDateDesc: string;\r\n    byEndDateAsc: string;\r\n    byEndDateDesc: string;\r\n  }>;\r\n\r\n  protected readonly RELEVANCE = ':relevance';\r\n  protected readonly CUSTOMER_COUPON_CODE = ':customerCouponCode:';\r\n\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected translation: TranslationService\r\n  ) {}\r\n\r\n  launchSearchPage(coupon: CustomerCoupon): void {\r\n    this.routingService.go(\r\n      {\r\n        cxRoute: 'search',\r\n        params: { query: this.buildSearchParam(coupon) },\r\n      },\r\n      { couponcode: coupon.couponId }\r\n    );\r\n  }\r\n\r\n  private buildSearchParam(coupon: CustomerCoupon): string {\r\n    return coupon.allProductsApplicable\r\n      ? this.RELEVANCE\r\n      : this.RELEVANCE + this.CUSTOMER_COUPON_CODE + coupon.couponId;\r\n  }\r\n\r\n  getSortLabels(): Observable<{\r\n    byStartDateAsc: string;\r\n    byStartDateDesc: string;\r\n    byEndDateAsc: string;\r\n    byEndDateDesc: string;\r\n  }> {\r\n    return combineLatest([\r\n      this.translation.translate('myCoupons.startDateAsc'),\r\n      this.translation.translate('myCoupons.startDateDesc'),\r\n      this.translation.translate('myCoupons.endDateAsc'),\r\n      this.translation.translate('myCoupons.endDateDesc'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          textByStartDateAsc,\r\n          textByStartDateDesc,\r\n          textByEndDateAsc,\r\n          textByEndDateDesc,\r\n        ]) => {\r\n          return {\r\n            byStartDateAsc: textByStartDateAsc,\r\n            byStartDateDesc: textByStartDateDesc,\r\n            byEndDateAsc: textByEndDateAsc,\r\n            byEndDateDesc: textByEndDateDesc,\r\n          };\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  CustomerCouponSearchResult,\r\n  CustomerCouponService,\r\n  PaginationModel,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\r\nimport { MyCouponsComponentService } from './my-coupons.component.service';\r\n\r\n@Component({\r\n  selector: 'cx-my-coupons',\r\n  templateUrl: './my-coupons.component.html',\r\n})\r\nexport class MyCouponsComponent implements OnInit, OnDestroy {\r\n  couponResult$: Observable<CustomerCouponSearchResult>;\r\n  couponsLoading$: Observable<boolean>;\r\n  couponSubscriptionLoading$: Observable<boolean>;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  private subscriptions = new Subscription();\r\n\r\n  private PAGE_SIZE = 10;\r\n  private sortMapping = {\r\n    byStartDateAsc: 'startDate:asc',\r\n    byStartDateDesc: 'startDate:desc',\r\n    byEndDateAsc: 'endDate:asc',\r\n    byEndDateDesc: 'endDate:desc',\r\n  };\r\n  sort = 'byStartDateAsc';\r\n\r\n  sortOptions = [\r\n    {\r\n      code: 'byStartDateAsc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byStartDateDesc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byEndDateAsc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byEndDateDesc',\r\n      selected: false,\r\n    },\r\n  ];\r\n\r\n  pagination: PaginationModel;\r\n  sortLabels: Observable<{\r\n    byStartDateAsc: string;\r\n    byStartDateDesc: string;\r\n    byEndDateAsc: string;\r\n    byEndDateDesc: string;\r\n  }>;\r\n\r\n  constructor(\r\n    protected couponService: CustomerCouponService,\r\n    protected myCouponsComponentService: MyCouponsComponentService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.couponResult$ = this.couponService\r\n      .getCustomerCoupons(this.PAGE_SIZE)\r\n      .pipe(\r\n        tap(\r\n          (coupons) =>\r\n            (this.pagination = {\r\n              currentPage: coupons.pagination.page,\r\n              pageSize: coupons.pagination.count,\r\n              totalPages: coupons.pagination.totalPages,\r\n              totalResults: coupons.pagination.totalCount,\r\n              sort: this.sort,\r\n            })\r\n        )\r\n      );\r\n    this.couponsLoading$ = this.couponService.getCustomerCouponsLoading();\r\n    this.couponSubscriptionLoading$ = combineLatest([\r\n      this.couponService.getSubscribeCustomerCouponResultLoading(),\r\n      this.couponService.getUnsubscribeCustomerCouponResultLoading(),\r\n    ]).pipe(\r\n      map(([subscribing, unsubscribing]) => subscribing || unsubscribing)\r\n    );\r\n    this.sortLabels = this.myCouponsComponentService.getSortLabels();\r\n\r\n    this.subscriptions\r\n      .add(\r\n        this.couponService\r\n          .getSubscribeCustomerCouponResultError()\r\n          .subscribe((error) => {\r\n            this.subscriptionFail(error);\r\n          })\r\n      )\r\n      .add(\r\n        this.couponService\r\n          .getUnsubscribeCustomerCouponResultError()\r\n          .subscribe((error) => {\r\n            this.subscriptionFail(error);\r\n          })\r\n      );\r\n  }\r\n\r\n  private subscriptionFail(error: boolean) {\r\n    if (error) {\r\n      this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\r\n    }\r\n  }\r\n\r\n  sortChange(sort: string): void {\r\n    this.sort = sort;\r\n\r\n    this.couponService.loadCustomerCoupons(\r\n      this.PAGE_SIZE,\r\n      this.pagination.currentPage,\r\n      this.sortMapping[sort]\r\n    );\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    this.couponService.loadCustomerCoupons(\r\n      this.PAGE_SIZE,\r\n      page,\r\n      this.sortMapping[this.sort]\r\n    );\r\n  }\r\n\r\n  notificationChange({\r\n    couponId,\r\n    notification,\r\n  }: {\r\n    couponId: string;\r\n    notification: boolean;\r\n  }): void {\r\n    if (notification) {\r\n      this.couponService.subscribeCustomerCoupon(couponId);\r\n    } else {\r\n      this.couponService.unsubscribeCustomerCoupon(couponId);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { ModalService } from '../../../../../shared/components/modal/index';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\r\nimport { CustomerCoupon } from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-coupon-dialog',\r\n  templateUrl: './coupon-dialog.component.html',\r\n})\r\nexport class CouponDialogComponent {\r\n  iconTypes = ICON_TYPE;\r\n  coupon: CustomerCoupon;\r\n\r\n  @ViewChild('dialog', { read: ElementRef })\r\n  dialog: ElementRef;\r\n\r\n  constructor(protected modalService: ModalService) {}\r\n\r\n  dismissModal(reason?: any): void {\r\n    this.modalService.dismissActiveModal(reason);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../shared/components/modal/index';\nimport { CouponDialogComponent } from './coupon-dialog/coupon-dialog.component';\nimport { CustomerCoupon } from '@spartacus/core';\nimport { MyCouponsComponentService } from '../my-coupons.component.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-coupon-card',\n  templateUrl: './coupon-card.component.html',\n})\nexport class CouponCardComponent {\n  @Input() coupon: CustomerCoupon;\n  @Input() couponSubscriptionLoading$: Observable<boolean>;\n  modalRef: ModalRef;\n\n  @Output()\n  notificationChanged = new EventEmitter<{\n    couponId: string;\n    notification: boolean;\n  }>();\n\n  constructor(\n    protected modalService: ModalService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  onSubscriptionChange(): void {\n    this.notificationChanged.emit({\n      couponId: this.coupon.couponId,\n      notification: !this.coupon.notificationOn,\n    });\n  }\n\n  readMore() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(CouponDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.coupon = this.coupon;\n  }\n\n  findProducts(): void {\n    this.myCouponsComponentService.launchSearchPage(this.coupon);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  RoutingService,\r\n  CustomerCouponService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n} from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  templateUrl: './coupon-claim.component.html',\r\n  selector: 'cx-coupon-claim',\r\n})\r\nexport class CouponClaimComponent implements OnInit, OnDestroy {\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    protected couponService: CustomerCouponService,\r\n    protected routingService: RoutingService,\r\n    protected messageService: GlobalMessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.routingService\r\n      .getRouterState()\r\n      .subscribe((k) => {\r\n        const couponCode = k.state.params.couponCode;\r\n        if (couponCode) {\r\n          this.couponService.claimCustomerCoupon(couponCode);\r\n          this.subscription = this.couponService\r\n            .getClaimCustomerCouponResultSuccess()\r\n            .subscribe((success) => {\r\n              if (success) {\r\n                this.messageService.add(\r\n                  { key: 'myCoupons.claimCustomerCoupon' },\r\n                  GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n                );\r\n              }\r\n              this.routingService.go({ cxRoute: 'coupons' });\r\n            });\r\n        } else {\r\n          this.routingService.go({ cxRoute: 'notFound' });\r\n        }\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { MyCouponsComponent } from './my-coupons.component';\r\nimport { CouponCardComponent } from './coupon-card/coupon-card.component';\r\n\r\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\r\nimport { CouponDialogComponent } from './coupon-card/coupon-dialog/coupon-dialog.component';\r\nimport { CouponClaimComponent } from './coupon-claim/coupon-claim.component';\r\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    IconModule,\r\n    ListNavigationModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'couponClaim' },\r\n      },\r\n    ]),\r\n  ],\r\n  declarations: [\r\n    MyCouponsComponent,\r\n    CouponCardComponent,\r\n    CouponDialogComponent,\r\n    CouponClaimComponent,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        MyCouponsComponent: {\r\n          component: MyCouponsComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n        CouponClaimComponent: {\r\n          component: CouponClaimComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  exports: [MyCouponsComponent, CouponClaimComponent],\r\n  entryComponents: [\r\n    MyCouponsComponent,\r\n    CouponDialogComponent,\r\n    CouponClaimComponent,\r\n  ],\r\n})\r\nexport class MyCouponsModule {}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport {\r\n  NotificationPreference,\r\n  UserNotificationPreferenceService,\r\n} from '@spartacus/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-notification-preference',\r\n  templateUrl: './notification-preference.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NotificationPreferenceComponent implements OnInit {\r\n  preferences$: Observable<NotificationPreference[]>;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  protected preferences: NotificationPreference[] = [];\r\n\r\n  constructor(\r\n    private notificationPreferenceService: UserNotificationPreferenceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.notificationPreferenceService.resetNotificationPreferences();\r\n    this.preferences$ = this.notificationPreferenceService\r\n      .getPreferences()\r\n      .pipe(tap((preferences) => (this.preferences = preferences)));\r\n    this.notificationPreferenceService.loadPreferences();\r\n\r\n    this.isLoading$ = combineLatest([\r\n      this.notificationPreferenceService.getPreferencesLoading(),\r\n      this.notificationPreferenceService.getUpdatePreferencesResultLoading(),\r\n    ]).pipe(\r\n      map(([prefsLoading, updateLoading]) => prefsLoading || updateLoading)\r\n    );\r\n  }\r\n\r\n  updatePreference(preference: NotificationPreference) {\r\n    const updatedPreferences = [];\r\n    this.preferences.forEach((p) => {\r\n      if (p.channel === preference.channel) {\r\n        updatedPreferences.push({\r\n          ...p,\r\n          enabled: !p.enabled,\r\n        });\r\n      } else {\r\n        updatedPreferences.push(p);\r\n      }\r\n    });\r\n    this.notificationPreferenceService.updatePreferences(updatedPreferences);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { NotificationPreferenceComponent } from './notification-preference.component';\r\n\r\n@NgModule({\r\n  declarations: [NotificationPreferenceComponent],\r\n  imports: [CommonModule, SpinnerModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        NotificationPreferenceComponent: {\r\n          component: NotificationPreferenceComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  exports: [NotificationPreferenceComponent],\r\n  entryComponents: [NotificationPreferenceComponent],\r\n})\r\nexport class NotificationPreferenceModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport {\r\n  PaginationModel,\r\n  Product,\r\n  ProductInterestEntryRelation,\r\n  ProductInterestSearchResult,\r\n  ProductScope,\r\n  ProductService,\r\n  TranslationService,\r\n  UserInterestsService,\r\n} from '@spartacus/core';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\ninterface ProductInterestSearchResultUI extends ProductInterestSearchResult {\r\n  results?: (ProductInterestEntryRelation & {\r\n    product$?: Observable<Product>;\r\n  })[];\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-my-interests',\r\n  templateUrl: './my-interests.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MyInterestsComponent implements OnInit, OnDestroy {\r\n  private DEFAULT_PAGE_SIZE = 10;\r\n  private sortMapping = {\r\n    byNameAsc: 'name:asc',\r\n    byNameDesc: 'name:desc',\r\n  };\r\n\r\n  sort = 'byNameAsc';\r\n  sortOptions = [\r\n    {\r\n      code: 'byNameAsc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byNameDesc',\r\n      selected: false,\r\n    },\r\n  ];\r\n  pagination: PaginationModel;\r\n\r\n  interests$: Observable<ProductInterestSearchResultUI>;\r\n  isRemoveDisabled$: Observable<boolean>;\r\n  getInterestsloading$: Observable<boolean>;\r\n  sortLabels: Observable<{ byNameAsc: string; byNameDesc: string }>;\r\n\r\n  constructor(\r\n    private productInterestService: UserInterestsService,\r\n    private translationService: TranslationService,\r\n    private productService: ProductService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.interests$ = this.productInterestService\r\n      .getAndLoadProductInterests(this.DEFAULT_PAGE_SIZE)\r\n      .pipe(\r\n        tap(\r\n          (interests) =>\r\n            (this.pagination = {\r\n              currentPage: interests.pagination.page,\r\n              pageSize: interests.pagination.count,\r\n              totalPages: interests.pagination.totalPages,\r\n              totalResults: interests.pagination.totalCount,\r\n              sort: 'byNameAsc',\r\n            })\r\n        ),\r\n        map((interest) => ({\r\n          ...interest,\r\n          results: interest.results\r\n            ? interest.results.map((result) => ({\r\n                ...result,\r\n                product$: this.getProduct(result),\r\n              }))\r\n            : interest.results,\r\n        }))\r\n      );\r\n\r\n    this.getInterestsloading$ = this.productInterestService.getProdutInterestsLoading();\r\n    this.isRemoveDisabled$ = combineLatest([\r\n      this.getInterestsloading$,\r\n      this.productInterestService.getRemoveProdutInterestLoading(),\r\n    ]).pipe(map(([getLoading, removeLoading]) => getLoading || removeLoading));\r\n\r\n    this.sortLabels = this.getSortLabels();\r\n  }\r\n\r\n  private getSortLabels(): Observable<{\r\n    byNameAsc: string;\r\n    byNameDesc: string;\r\n  }> {\r\n    return combineLatest([\r\n      this.translationService.translate('myInterests.sorting.byNameAsc'),\r\n      this.translationService.translate('myInterests.sorting.byNameDesc'),\r\n    ]).pipe(\r\n      map(([asc, desc]) => {\r\n        return {\r\n          byNameAsc: asc,\r\n          byNameDesc: desc,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private getProduct(\r\n    interest: ProductInterestEntryRelation\r\n  ): Observable<Product> {\r\n    return this.productService.get(interest.product.code, ProductScope.DETAILS);\r\n  }\r\n\r\n  removeInterest(\r\n    relation: ProductInterestEntryRelation & {\r\n      product$?: Observable<Product>;\r\n    }\r\n  ): void {\r\n    this.productInterestService.removeProdutInterest({\r\n      product: relation.product,\r\n      productInterestEntry: relation.productInterestEntry,\r\n    });\r\n  }\r\n\r\n  sortChange(sort: string): void {\r\n    this.sort = sort;\r\n    this.productInterestService.loadProductInterests(\r\n      this.DEFAULT_PAGE_SIZE,\r\n      0,\r\n      this.sortMapping[sort]\r\n    );\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    this.productInterestService.loadProductInterests(\r\n      this.DEFAULT_PAGE_SIZE,\r\n      page,\r\n      this.sortMapping[this.sort]\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.productInterestService.clearProductInterests();\r\n    this.productInterestService.resetRemoveInterestState();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\r\nimport { MyInterestsComponent } from './my-interests.component';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\n\r\n@NgModule({\r\n  declarations: [MyInterestsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    RouterModule,\r\n    ListNavigationModule,\r\n    I18nModule,\r\n    UrlModule,\r\n    MediaModule,\r\n    SpinnerModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        MyInterestsComponent: {\r\n          component: MyInterestsComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  exports: [MyInterestsComponent],\r\n  entryComponents: [MyInterestsComponent],\r\n})\r\nexport class MyInterestsModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n  CmsBreadcrumbsComponent,\r\n  PageMeta,\r\n  PageMetaService,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\n\r\n@Component({\r\n  selector: 'cx-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BreadcrumbComponent implements OnInit {\r\n  title$: Observable<string>;\r\n  crumbs$: Observable<any[]>;\r\n\r\n  constructor(\r\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\r\n    protected pageMetaService: PageMetaService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle();\r\n    this.setCrumbs();\r\n  }\r\n\r\n  private setTitle(): void {\r\n    this.title$ = this.pageMetaService.getMeta().pipe(\r\n      filter(Boolean),\r\n      map((meta: PageMeta) => meta.heading || meta.title)\r\n    );\r\n  }\r\n\r\n  private setCrumbs(): void {\r\n    this.crumbs$ = combineLatest([\r\n      this.pageMetaService.getMeta(),\r\n      this.translation.translate('common.home'),\r\n    ]).pipe(\r\n      map(([meta, textHome]) =>\r\n        meta?.breadcrumbs ? meta.breadcrumbs : [{ label: textHome, link: '/' }]\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  CmsPageTitleModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { BreadcrumbComponent } from './breadcrumb.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, CmsPageTitleModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        BreadcrumbComponent: {\r\n          component: BreadcrumbComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [BreadcrumbComponent],\r\n  exports: [BreadcrumbComponent],\r\n  entryComponents: [BreadcrumbComponent],\r\n})\r\nexport class BreadcrumbModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CmsNavigationComponent,\r\n  CmsService,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\r\nimport { NavigationNode } from './navigation-node.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NavigationService {\r\n  constructor(\r\n    protected cmsService: CmsService,\r\n    protected semanticPathService: SemanticPathService\r\n  ) {}\r\n\r\n  public createNavigation(\r\n    data$: Observable<CmsNavigationComponent>\r\n  ): Observable<NavigationNode> {\r\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\r\n      map(([data, nav]) => {\r\n        return data\r\n          ? {\r\n              title: data.name,\r\n              children: [nav],\r\n            }\r\n          : undefined;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\r\n   * This function will load the navigation underlying entries and childs if they haven't been\r\n   * loaded so far.\r\n   */\r\n  public getNavigationNode(\r\n    data$: Observable<CmsNavigationComponent>\r\n  ): Observable<NavigationNode> {\r\n    if (!data$) {\r\n      return of();\r\n    }\r\n    return data$.pipe(\r\n      filter((data) => !!data),\r\n      switchMap((data) => {\r\n        const navigation = data.navigationNode ? data.navigationNode : data;\r\n        return this.cmsService.getNavigationEntryItems(navigation.uid).pipe(\r\n          tap((items) => {\r\n            if (items === undefined) {\r\n              this.loadNavigationEntryItems(navigation, true);\r\n            } else {\r\n              // we should check whether the existing node items are what expected\r\n              const expectedItems = [];\r\n              this.loadNavigationEntryItems(navigation, false, expectedItems);\r\n              const existingItems = Object.keys(items).map(\r\n                (key) => items[key].uid\r\n              );\r\n              const missingItems = expectedItems.filter(\r\n                (it) => !existingItems.includes(it.id)\r\n              );\r\n              if (missingItems.length > 0) {\r\n                this.cmsService.loadNavigationItems(\r\n                  navigation.uid,\r\n                  missingItems\r\n                );\r\n              }\r\n            }\r\n          }),\r\n          filter(Boolean),\r\n          map((items) => this.populateNavigationNode(navigation, items))\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Loads all navigation entry items' type and id. Dispatch action to load all these items\r\n   * @param nodeData\r\n   * @param root\r\n   * @param itemsList\r\n   */\r\n  private loadNavigationEntryItems(\r\n    nodeData: any,\r\n    root: boolean,\r\n    itemsList = []\r\n  ): void {\r\n    if (nodeData.entries && nodeData.entries.length > 0) {\r\n      nodeData.entries.forEach((entry) => {\r\n        itemsList.push({\r\n          superType: entry.itemSuperType,\r\n          id: entry.itemId,\r\n        });\r\n      });\r\n    }\r\n\r\n    if (nodeData.children && nodeData.children.length > 0) {\r\n      nodeData.children.forEach((child) =>\r\n        this.loadNavigationEntryItems(child, false, itemsList)\r\n      );\r\n    }\r\n\r\n    if (root) {\r\n      this.cmsService.loadNavigationItems(nodeData.uid, itemsList);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a new node tree for the view\r\n   * @param nodeData\r\n   * @param items\r\n   */\r\n  private populateNavigationNode(nodeData: any, items: any): NavigationNode {\r\n    const node: NavigationNode = {};\r\n\r\n    if (nodeData.title) {\r\n      // the node title will be populated by the first entry (if any)\r\n      // if there's no nodeData.title available\r\n      node.title = nodeData.title;\r\n    }\r\n\r\n    if (nodeData.entries && nodeData.entries.length > 0) {\r\n      this.populateLink(node, nodeData.entries[0], items);\r\n    }\r\n\r\n    if (nodeData.children && nodeData.children.length > 0) {\r\n      const children = nodeData.children\r\n        .map((child) => this.populateNavigationNode(child, items))\r\n        .filter(Boolean);\r\n      if (children.length > 0) {\r\n        node.children = children;\r\n      }\r\n    }\r\n\r\n    // return null in case there are no children\r\n    return Object.keys(node).length === 0 ? null : node;\r\n  }\r\n\r\n  /**\r\n   * The node link is driven by the first entry.\r\n   */\r\n  private populateLink(node: NavigationNode, entry, items) {\r\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\r\n\r\n    // now we only consider CMSLinkComponent\r\n    if (item && entry.itemType === 'CMSLinkComponent') {\r\n      if (!node.title) {\r\n        node.title = item.linkName;\r\n      }\r\n      const url = this.getLink(item);\r\n      // only populate the node link if we have a visible node\r\n      if (node.title && url) {\r\n        node.url = url;\r\n        // the backend provide boolean value for the target\r\n        // in case the link should be opened in a new window\r\n        node.target = !!item.target ? '_blank' : '';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Gets the URL or link to a related item (category)\r\n   */\r\n  private getLink(item): string | string[] {\r\n    if (item.url) {\r\n      return item.url;\r\n    } else if (item.categoryCode) {\r\n      return this.semanticPathService.transform({\r\n        cxRoute: 'category',\r\n        params: {\r\n          code: item.categoryCode,\r\n          name: item.name,\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../misc/icon/index';\r\nimport { NavigationNode } from './navigation-node.model';\r\n\r\n@Component({\r\n  selector: 'cx-navigation-ui',\r\n  templateUrl: './navigation-ui.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NavigationUIComponent implements OnDestroy {\r\n  /**\r\n   * The navigation node to render.\r\n   */\r\n  @Input() node: NavigationNode;\r\n\r\n  /**\r\n   * The number of child nodes that must be wrapped.\r\n   */\r\n  @Input() wrapAfter: number;\r\n  /**\r\n   * the icon type that will be used for navigation nodes\r\n   * with children.\r\n   */\r\n  iconType = ICON_TYPE;\r\n\r\n  /**\r\n   * Indicates whether the navigation should support flyout.\r\n   * If flyout is set to true, the\r\n   * nested child navigation nodes will only appear on hover or focus.\r\n   */\r\n  @Input() @HostBinding('class.flyout') flyout = true;\r\n\r\n  @Input() @HostBinding('class.is-open') isOpen = false;\r\n\r\n  private openNodes: HTMLElement[] = [];\r\n  private subscriptions = new Subscription();\r\n  private resize = new EventEmitter();\r\n\r\n  @HostListener('window:resize')\r\n  onResize() {\r\n    this.resize.next();\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private renderer: Renderer2,\r\n    private elemRef: ElementRef\r\n  ) {\r\n    this.subscriptions.add(\r\n      this.router.events\r\n        .pipe(filter((event) => event instanceof NavigationEnd))\r\n        .subscribe(() => this.clear())\r\n    );\r\n    this.subscriptions.add(\r\n      this.resize.pipe(debounceTime(50)).subscribe(() => {\r\n        this.alignWrappersToRightIfStickOut();\r\n      })\r\n    );\r\n  }\r\n\r\n  toggleOpen(event: UIEvent): void {\r\n    if (event.type === 'keydown') {\r\n      event.preventDefault();\r\n    }\r\n    const node = <HTMLElement>event.currentTarget;\r\n    if (this.openNodes.includes(node)) {\r\n      if (event.type === 'keydown') {\r\n        this.back();\r\n      } else {\r\n        this.openNodes = this.openNodes.filter((n) => n !== node);\r\n        this.renderer.removeClass(node, 'is-open');\r\n      }\r\n    } else {\r\n      this.openNodes.push(node);\r\n    }\r\n\r\n    this.updateClasses();\r\n\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  back(): void {\r\n    if (this.openNodes[this.openNodes.length - 1]) {\r\n      this.renderer.removeClass(\r\n        this.openNodes[this.openNodes.length - 1],\r\n        'is-open'\r\n      );\r\n      this.openNodes.pop();\r\n      this.updateClasses();\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.openNodes = [];\r\n    this.updateClasses();\r\n  }\r\n\r\n  onMouseEnter(event: MouseEvent) {\r\n    this.alignWrapperToRightIfStickOut(<HTMLElement>event.currentTarget);\r\n    this.focusAfterPreviousClicked(event);\r\n  }\r\n\r\n  getTotalDepth(node: NavigationNode, depth = 0): number {\r\n    if (node.children && node.children.length > 0) {\r\n      return Math.max(\r\n        ...node.children.map((n) => this.getTotalDepth(n, depth + 1))\r\n      );\r\n    } else {\r\n      return depth;\r\n    }\r\n  }\r\n\r\n  getColumnCount(length: number): number {\r\n    return Math.round(length / (this.wrapAfter || length));\r\n  }\r\n\r\n  focusAfterPreviousClicked(event: MouseEvent) {\r\n    const target: HTMLElement = <HTMLElement>(\r\n      (event.target || event.relatedTarget)\r\n    );\r\n    if (\r\n      target.ownerDocument.activeElement.matches('nav[tabindex]') &&\r\n      target.parentElement.matches('.flyout')\r\n    ) {\r\n      target.focus();\r\n    }\r\n    return target.ownerDocument;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscriptions) {\r\n      this.subscriptions.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private alignWrapperToRightIfStickOut(node: HTMLElement) {\r\n    const wrapper = <HTMLElement>node.querySelector('.wrapper');\r\n    const body = <HTMLElement>node.closest('body');\r\n    if (wrapper) {\r\n      this.renderer.removeStyle(wrapper, 'margin-left');\r\n      if (\r\n        wrapper.offsetLeft + wrapper.offsetWidth >\r\n        body.offsetLeft + body.offsetWidth\r\n      ) {\r\n        this.renderer.setStyle(\r\n          wrapper,\r\n          'margin-left',\r\n          `${node.offsetWidth - wrapper.offsetWidth}px`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private alignWrappersToRightIfStickOut() {\r\n    const navs = <HTMLCollection>this.elemRef.nativeElement.childNodes;\r\n    Array.from(navs)\r\n      .filter((node) => node.tagName === 'NAV')\r\n      .forEach((nav) => this.alignWrapperToRightIfStickOut(<HTMLElement>nav));\r\n  }\r\n\r\n  private updateClasses(): void {\r\n    this.openNodes.forEach((node, i) => {\r\n      if (i + 1 < this.openNodes.length) {\r\n        this.renderer.addClass(node, 'is-opened');\r\n        this.renderer.removeClass(node, 'is-open');\r\n      } else {\r\n        this.renderer.removeClass(node, 'is-opened');\r\n        this.renderer.addClass(node, 'is-open');\r\n      }\r\n    });\r\n\r\n    this.isOpen = this.openNodes.length > 0;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { CmsNavigationComponent } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { NavigationNode } from './navigation-node.model';\r\nimport { NavigationService } from './navigation.service';\r\n\r\n@Component({\r\n  selector: 'cx-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NavigationComponent {\r\n  node$: Observable<NavigationNode> = this.service.createNavigation(\r\n    this.componentData.data$\r\n  );\r\n\r\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\r\n    map((d) => d?.styleClass)\r\n  );\r\n\r\n  constructor(\r\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\r\n    protected service: NavigationService\r\n  ) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { NavigationUIComponent } from './navigation-ui.component';\r\nimport { NavigationComponent } from './navigation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    IconModule,\r\n    GenericLinkModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        NavigationComponent: {\r\n          component: NavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [NavigationComponent, NavigationUIComponent],\r\n  entryComponents: [NavigationComponent],\r\n  exports: [NavigationComponent, NavigationUIComponent],\r\n})\r\nexport class NavigationModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { NavigationModule } from '../navigation/navigation.module';\r\nimport { CategoryNavigationComponent } from './category-navigation.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, NavigationModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CategoryNavigationComponent: {\r\n          component: CategoryNavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CategoryNavigationComponent],\r\n  entryComponents: [CategoryNavigationComponent],\r\n  exports: [CategoryNavigationComponent],\r\n})\r\nexport class CategoryNavigationModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { CmsNavigationComponent } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { NavigationNode } from '../navigation/navigation-node.model';\r\nimport { NavigationService } from '../navigation/navigation.service';\r\n\r\n@Component({\r\n  selector: 'cx-footer-navigation',\r\n  templateUrl: './footer-navigation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FooterNavigationComponent {\r\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\r\n    this.componentData.data$\r\n  );\r\n\r\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\r\n    map((d) => d?.styleClass)\r\n  );\r\n\r\n  constructor(\r\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\r\n    protected service: NavigationService\r\n  ) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\nimport { NavigationModule } from '../navigation/navigation.module';\r\nimport { FooterNavigationComponent } from './footer-navigation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    NavigationModule,\r\n    GenericLinkModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        FooterNavigationComponent: {\r\n          component: FooterNavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [FooterNavigationComponent],\r\n  entryComponents: [FooterNavigationComponent],\r\n  exports: [FooterNavigationComponent],\r\n})\r\nexport class FooterNavigationModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ProductSearchPage,\r\n  RoutingService,\r\n  SearchboxService,\r\n  TranslationService,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\r\n\r\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SearchBoxComponentService {\r\n  constructor(\r\n    public searchService: SearchboxService,\r\n    protected routingService: RoutingService,\r\n    protected translationService: TranslationService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  /**\r\n   * Executes the search for products and suggestions,\r\n   * unless the configuration is setup to not search for\r\n   * products or suggestions.\r\n   */\r\n  search(query: string, config: SearchBoxConfig): void {\r\n    if (!query || query === '') {\r\n      this.clearResults();\r\n      return;\r\n    }\r\n\r\n    if (\r\n      config.minCharactersBeforeRequest &&\r\n      query.length < config.minCharactersBeforeRequest\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (config.displayProducts) {\r\n      this.searchService.search(query, {\r\n        pageSize: config.maxProducts,\r\n      });\r\n    }\r\n\r\n    if (config.displaySuggestions) {\r\n      this.searchService.searchSuggestions(query, {\r\n        pageSize: config.maxSuggestions,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns an observable with the SearchResults. When there's any\r\n   * result, the body tag will get a classname, so that specific style\r\n   * rules can be applied.\r\n   */\r\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\r\n    return combineLatest([\r\n      this.getProductResults(config),\r\n      this.getProductSuggestions(config),\r\n      this.getSearchMessage(config),\r\n    ]).pipe(\r\n      map(([productResults, suggestions, message]) => {\r\n        return {\r\n          products: productResults ? productResults.products : null,\r\n          suggestions,\r\n          message,\r\n        };\r\n      }),\r\n      tap((results) =>\r\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clears the searchbox results, so that old values are\r\n   * no longer emited upon next search.\r\n   */\r\n  clearResults() {\r\n    this.searchService.clearResults();\r\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\r\n  }\r\n\r\n  hasBodyClass(className: string): boolean {\r\n    return this.winRef.document.body.classList.contains(className);\r\n  }\r\n\r\n  toggleBodyClass(className: string, add?: boolean) {\r\n    if (add === undefined) {\r\n      this.winRef.document.body.classList.toggle(className);\r\n    } else {\r\n      add\r\n        ? this.winRef.document.body.classList.add(className)\r\n        : this.winRef.document.body.classList.remove(className);\r\n    }\r\n  }\r\n\r\n  private hasResults(results: SearchResults): boolean {\r\n    return (\r\n      (!!results.products && results.products.length > 0) ||\r\n      (!!results.suggestions && results.suggestions.length > 0) ||\r\n      !!results.message\r\n    );\r\n  }\r\n\r\n  private getProductResults(\r\n    config: SearchBoxConfig\r\n  ): Observable<ProductSearchPage> {\r\n    if (config.displayProducts) {\r\n      return this.searchService.getResults();\r\n    } else {\r\n      return of({});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads suggestions from the backend. In case there's no suggestion\r\n   * available, we try to get an exact match suggestion.\r\n   */\r\n  private getProductSuggestions(config: SearchBoxConfig): Observable<string[]> {\r\n    if (!config.displaySuggestions) {\r\n      return of([]);\r\n    } else {\r\n      return this.searchService.getSuggestionResults().pipe(\r\n        map((res) => res.map((suggestion) => suggestion.value)),\r\n        switchMap((suggestions) => {\r\n          if (suggestions.length === 0) {\r\n            return this.getExactSuggestion(config).pipe(\r\n              map((match) => (match ? [match] : []))\r\n            );\r\n          } else {\r\n            return of(suggestions);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * whenever there is at least 1 product, we simulate\r\n   * a suggestion to provide easy access to the search result page\r\n   */\r\n  private getExactSuggestion(config: SearchBoxConfig): Observable<string> {\r\n    return this.getProductResults(config).pipe(\r\n      switchMap((productResult) => {\r\n        return productResult.products && productResult.products.length > 0\r\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\r\n              term: productResult.freeTextSearch,\r\n            })\r\n          : of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n  private getSearchMessage(config: SearchBoxConfig): Observable<string> {\r\n    return combineLatest([\r\n      this.getProductResults(config),\r\n      this.getProductSuggestions(config),\r\n    ]).pipe(\r\n      switchMap(([productResult, suggestions]) => {\r\n        if (\r\n          productResult &&\r\n          productResult.products &&\r\n          productResult.products.length === 0 &&\r\n          suggestions &&\r\n          suggestions.length === 0\r\n        ) {\r\n          return this.fetchTranslation('searchBox.help.noMatch');\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Navigates to the search result page with a given query\r\n   */\r\n  public launchSearchPage(query: string): void {\r\n    this.routingService.go({\r\n      cxRoute: 'search',\r\n      params: { query },\r\n    });\r\n  }\r\n\r\n  private fetchTranslation(\r\n    translationKey: string,\r\n    options?: any\r\n  ): Observable<string> {\r\n    return this.translationService.translate(translationKey, options);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { CmsSearchBoxComponent, WindowRef } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { SearchBoxComponentService } from './search-box-component.service';\r\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\r\n\r\nconst DEFAULT_SEARCHBOX_CONFIG: SearchBoxConfig = {\r\n  minCharactersBeforeRequest: 1,\r\n  displayProducts: true,\r\n  displaySuggestions: true,\r\n  maxProducts: 5,\r\n  maxSuggestions: 5,\r\n  displayProductImages: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'cx-searchbox',\r\n  templateUrl: './search-box.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SearchBoxComponent {\r\n  config: SearchBoxConfig;\r\n  /**\r\n   * Sets the search box input field\r\n   */\r\n  @Input('queryText')\r\n  set queryText(value: string) {\r\n    if (value) {\r\n      this.search(value);\r\n    }\r\n  }\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  /**\r\n   * In some occasions we need to ignore the close event,\r\n   * for example when we click inside the search result section.\r\n   */\r\n  private ignoreCloseEvent = false;\r\n\r\n  /**\r\n   * The component data is optional, so that this component\r\n   * can be reused without CMS integration.\r\n   */\r\n\r\n  constructor(\r\n    protected searchBoxComponentService: SearchBoxComponentService,\r\n    @Optional()\r\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  results$: Observable<SearchResults> = this.config$.pipe(\r\n    tap((c) => (this.config = c)),\r\n    switchMap((config) => this.searchBoxComponentService.getResults(config))\r\n  );\r\n\r\n  /**\r\n   * Returns the backend configuration or default configuration for the searchbox.\r\n   */\r\n  private get config$(): Observable<SearchBoxConfig> {\r\n    if (this.componentData) {\r\n      return <Observable<SearchBoxConfig>>this.componentData.data$.pipe(\r\n        // Since the backend returns string values (i.e. displayProducts: \"true\") for\r\n        // boolean values, we replace them with boolean values.\r\n        map((c) => {\r\n          return {\r\n            ...c,\r\n            displayProducts:\r\n              <any>c?.displayProducts === 'true' || c?.displayProducts === true,\r\n            displayProductImages:\r\n              <any>c?.displayProductImages === 'true' ||\r\n              c?.displayProductImages === true,\r\n            displaySuggestions:\r\n              <any>c?.displaySuggestions === 'true' ||\r\n              c?.displaySuggestions === true,\r\n          };\r\n        })\r\n      );\r\n    } else {\r\n      return of(DEFAULT_SEARCHBOX_CONFIG);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the searchbox and opens the search result page.\r\n   */\r\n  search(query: string): void {\r\n    this.searchBoxComponentService.search(query, this.config);\r\n    // force the searchbox to open\r\n    this.open();\r\n  }\r\n\r\n  /**\r\n   * Opens the typeahead searchbox\r\n   */\r\n  open(): void {\r\n    this.searchBoxComponentService.toggleBodyClass('searchbox-is-active', true);\r\n  }\r\n\r\n  /**\r\n   * Closes the typehead searchbox.\r\n   */\r\n  close(event: UIEvent, force?: boolean): void {\r\n    // Use timeout to detect changes\r\n    setTimeout(() => {\r\n      if ((!this.ignoreCloseEvent && !this.isSearchboxFocused()) || force) {\r\n        this.blurSearchBox(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected blurSearchBox(event: UIEvent): void {\r\n    this.searchBoxComponentService.toggleBodyClass(\r\n      'searchbox-is-active',\r\n      false\r\n    );\r\n    if (event && event.target) {\r\n      (<HTMLElement>event.target).blur();\r\n    }\r\n  }\r\n\r\n  // Check if focus is on searchbox or result list elements\r\n  private isSearchboxFocused(): boolean {\r\n    return (\r\n      this.getResultElements().includes(this.getFocusedElement()) ||\r\n      this.winRef.document.querySelector('input[aria-label=\"search\"]') ===\r\n        this.getFocusedElement()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Especially in mobile we do not want the search icon\r\n   * to focus the input again when it's already open.\r\n   * */\r\n  avoidReopen(event: UIEvent): void {\r\n    if (this.searchBoxComponentService.hasBodyClass('searchbox-is-active')) {\r\n      this.close(event);\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // Return result list as HTMLElement array\r\n  private getResultElements(): HTMLElement[] {\r\n    return Array.from(\r\n      this.winRef.document.querySelectorAll('.products > a, .suggestions > a')\r\n    );\r\n  }\r\n\r\n  // Return focused element as HTMLElement\r\n  private getFocusedElement(): HTMLElement {\r\n    return <HTMLElement>this.winRef.document.activeElement;\r\n  }\r\n\r\n  private getFocusedIndex(): number {\r\n    return this.getResultElements().indexOf(this.getFocusedElement());\r\n  }\r\n\r\n  // Focus on previous item in results list\r\n  focusPreviousChild(event) {\r\n    event.preventDefault(); // Negate normal keyscroll\r\n    const [results, focusedIndex] = [\r\n      this.getResultElements(),\r\n      this.getFocusedIndex(),\r\n    ];\r\n    // Focus on last index moving to first\r\n    if (results.length) {\r\n      if (focusedIndex < 1) {\r\n        results[results.length - 1].focus();\r\n      } else {\r\n        results[focusedIndex - 1].focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Focus on next item in results list\r\n  focusNextChild(event) {\r\n    event.preventDefault(); // Negate normal keyscroll\r\n    const [results, focusedIndex] = [\r\n      this.getResultElements(),\r\n      this.getFocusedIndex(),\r\n    ];\r\n    // Focus on first index moving to last\r\n    if (results.length) {\r\n      if (focusedIndex >= results.length - 1) {\r\n        results[0].focus();\r\n      } else {\r\n        results[focusedIndex + 1].focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the PLP with the given query.\r\n   *\r\n   * TODO: if there's a single product match, we could open the PDP.\r\n   */\r\n  launchSearchResult(event: UIEvent, query: string): void {\r\n    if (!query || query.trim().length === 0) {\r\n      return;\r\n    }\r\n    this.close(event);\r\n    this.searchBoxComponentService.launchSearchPage(query);\r\n  }\r\n\r\n  /**\r\n   * Disables closing the search result list.\r\n   */\r\n  disableClose(): void {\r\n    this.ignoreCloseEvent = true;\r\n  }\r\n\r\n  /**\r\n   * Clears the search box input field\r\n   */\r\n  public clear(el: HTMLInputElement): void {\r\n    this.disableClose();\r\n    el.value = '';\r\n    this.searchBoxComponentService.clearResults();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { HighlightPipe } from './highlight.pipe';\r\nimport { SearchBoxComponent } from './search-box.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MediaModule,\r\n    IconModule,\r\n    UrlModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        SearchBoxComponent: {\r\n          component: SearchBoxComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [SearchBoxComponent, HighlightPipe],\r\n  entryComponents: [SearchBoxComponent],\r\n  exports: [SearchBoxComponent],\r\n})\r\nexport class SearchBoxModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  CheckoutService,\r\n  Order,\r\n  PromotionResult,\r\n  PromotionLocation,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\n@Component({\r\n  selector: 'cx-order-confirmation-items',\r\n  templateUrl: './order-confirmation-items.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderConfirmationItemsComponent implements OnInit, OnDestroy {\r\n  promotionLocation: PromotionLocation = PromotionLocation.Checkout;\r\n  order$: Observable<Order>;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.order$ = this.checkoutService.getOrderDetails();\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutService.clearCheckoutData();\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  Address,\r\n  CheckoutService,\r\n  DeliveryMode,\r\n  Order,\r\n  PaymentDetails,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\n\r\n@Component({\r\n  selector: 'cx-order-confirmation-overview',\r\n  templateUrl: './order-confirmation-overview.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderConfirmationOverviewComponent implements OnInit, OnDestroy {\r\n  order$: Observable<Order>;\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.order$ = this.checkoutService.getOrderDetails();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutService.clearCheckoutData();\r\n  }\r\n\r\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\r\n    return this.translation.translate('addressCard.shipTo').pipe(\r\n      filter(() => Boolean(deliveryAddress)),\r\n      map((textTitle) => ({\r\n        title: textTitle,\r\n        textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\r\n        text: [\r\n          deliveryAddress.line1,\r\n          deliveryAddress.line2,\r\n          `${deliveryAddress.town}, ${deliveryAddress.country.isocode}, ${deliveryAddress.postalCode}`,\r\n          deliveryAddress.phone,\r\n        ],\r\n      }))\r\n    );\r\n  }\r\n\r\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\r\n    return this.translation.translate('checkoutShipping.shippingMethod').pipe(\r\n      filter(() => Boolean(deliveryMode)),\r\n      map((textTitle) => ({\r\n        title: textTitle,\r\n        textBold: deliveryMode.name,\r\n        text: [deliveryMode.description],\r\n      }))\r\n    );\r\n  }\r\n\r\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\r\n    return this.translation.translate('addressCard.billTo').pipe(\r\n      filter(() => Boolean(billingAddress)),\r\n      map((textTitle) => ({\r\n        title: textTitle,\r\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\r\n        text: [\r\n          billingAddress.line1,\r\n          billingAddress.line2,\r\n          `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\r\n          billingAddress.phone,\r\n        ],\r\n      }))\r\n    );\r\n  }\r\n\r\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('paymentForm.payment'),\r\n      this.translation.translate('paymentCard.expires', {\r\n        month: Boolean(payment) ? payment.expiryMonth : '',\r\n        year: Boolean(payment) ? payment.expiryYear : '',\r\n      }),\r\n    ]).pipe(\r\n      filter(() => Boolean(payment)),\r\n      map(([textTitle, textExpires]) => ({\r\n        title: textTitle,\r\n        textBold: payment.accountHolderName,\r\n        text: [payment.cardNumber, textExpires],\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { CheckoutService, Order } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-order-confirmation-thank-you-message',\r\n  templateUrl: './order-confirmation-thank-you-message.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderConfirmationThankYouMessageComponent\r\n  implements OnInit, OnDestroy {\r\n  order$: Observable<Order>;\r\n  isGuestCustomer = false;\r\n  orderGuid: string;\r\n\r\n  constructor(protected checkoutService: CheckoutService) {}\r\n\r\n  ngOnInit() {\r\n    this.order$ = this.checkoutService.getOrderDetails().pipe(\r\n      tap((order) => {\r\n        this.isGuestCustomer = order.guestCustomer;\r\n        this.orderGuid = order.guid;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutService.clearCheckoutData();\r\n  }\r\n}\r\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-totals',\n  templateUrl: './order-confirmation-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationTotalsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService, RoutingService, UserService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-guest-register-form',\r\n  templateUrl: './guest-register-form.component.html',\r\n})\r\nexport class GuestRegisterFormComponent implements OnDestroy {\r\n  @Input() guid: string;\r\n  @Input() email: string;\r\n\r\n  subscription: Subscription;\r\n  guestRegisterForm: FormGroup = this.fb.group(\r\n    {\r\n      password: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.passwordValidator],\r\n      ],\r\n      passwordconf: ['', Validators.required],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.passwordsMustMatch(\r\n        'password',\r\n        'passwordconf'\r\n      ),\r\n    }\r\n  );\r\n\r\n  constructor(\r\n    protected userService: UserService,\r\n    protected routingService: RoutingService,\r\n    protected authService: AuthService,\r\n    protected fb: FormBuilder\r\n  ) {}\r\n\r\n  submit() {\r\n    if (this.guestRegisterForm.valid) {\r\n      this.userService.registerGuest(\r\n        this.guid,\r\n        this.guestRegisterForm.value.password\r\n      );\r\n      if (!this.subscription) {\r\n        this.subscription = this.authService\r\n          .getUserToken()\r\n          .subscribe((token) => {\r\n            if (token.access_token) {\r\n              this.routingService.go({ cxRoute: 'home' });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      this.guestRegisterForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree, Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { CheckoutService, SemanticPathService } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderConfirmationGuard implements CanActivate {\r\n  constructor(\r\n    private checkoutService: CheckoutService,\r\n    private router: Router,\r\n    private semanticPathService: SemanticPathService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.checkoutService.getOrderDetails().pipe(\r\n      map((orderDetails) => {\r\n        if (orderDetails && Object.keys(orderDetails).length !== 0) {\r\n          return true;\r\n        } else {\r\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../shared/components/card/card.module';\r\nimport { CartSharedModule } from '../cart/cart-shared/cart-shared.module';\r\nimport { PwaModule } from './../../cms-structure/pwa/pwa.module';\r\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\r\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\r\n// tslint:disable-next-line\r\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\r\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\r\nimport { GuestRegisterFormComponent } from './components/guest-register-form/guest-register-form.component';\r\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\r\nimport { PromotionsModule } from '../checkout/components/promotions/promotions.module';\r\nimport { FormErrorsModule } from '../../shared/index';\r\n\r\nconst orderConfirmationComponents = [\r\n  OrderConfirmationItemsComponent,\r\n  OrderConfirmationOverviewComponent,\r\n  OrderConfirmationThankYouMessageComponent,\r\n  OrderConfirmationTotalsComponent,\r\n  GuestRegisterFormComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CartSharedModule,\r\n    CardModule,\r\n    PwaModule,\r\n    PromotionsModule,\r\n    I18nModule,\r\n    ReactiveFormsModule,\r\n    FeaturesConfigModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        OrderConfirmationThankMessageComponent: {\r\n          component: OrderConfirmationThankYouMessageComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n        OrderConfirmationItemsComponent: {\r\n          component: OrderConfirmationItemsComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n        OrderConfirmationTotalsComponent: {\r\n          component: OrderConfirmationTotalsComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n        OrderConfirmationOverviewComponent: {\r\n          component: OrderConfirmationOverviewComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [...orderConfirmationComponents],\r\n  exports: [...orderConfirmationComponents],\r\n  entryComponents: [...orderConfirmationComponents],\r\n})\r\nexport class OrderConfirmationModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Product,\r\n  ProductReference,\r\n  ProductReferenceService,\r\n  ProductService,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ProductCarouselItem } from './product-carousel.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductCarouselService {\r\n  constructor(\r\n    protected productService: ProductService,\r\n    protected referenceService: ProductReferenceService,\r\n    protected semanticPathService: SemanticPathService\r\n  ) {}\r\n\r\n  /**\r\n   * Loads the product data and converts it `CarouselItem`.\r\n   */\r\n  loadProduct(code: string): Observable<ProductCarouselItem> {\r\n    return this.productService.get(code).pipe(\r\n      filter(Boolean),\r\n      map((product) => this.convertProduct(product))\r\n    );\r\n  }\r\n\r\n  getProductReferences(\r\n    code: string,\r\n    referenceType: string,\r\n    displayTitle: boolean,\r\n    displayProductPrices: boolean\r\n  ): Observable<ProductCarouselItem[]> {\r\n    return this.referenceService.get(code, referenceType).pipe(\r\n      filter(Boolean),\r\n      map((refs: ProductReference[]) =>\r\n        refs.map((ref) =>\r\n          this.convertProduct(ref.target, displayTitle, displayProductPrices)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Converts the product to a generic CarouselItem\r\n   */\r\n  private convertProduct(\r\n    source: Product,\r\n    displayTitle = true,\r\n    displayProductPrices = true\r\n  ): ProductCarouselItem {\r\n    const item: ProductCarouselItem = {};\r\n    if (displayTitle) {\r\n      item.title = source.name;\r\n    }\r\n    if (displayProductPrices && source.price && source.price.formattedValue) {\r\n      item.price = source.price.formattedValue;\r\n    }\r\n    if (source.images && source.images.PRIMARY) {\r\n      item.media = {\r\n        container: source.images.PRIMARY,\r\n        format: 'product',\r\n      };\r\n    }\r\n    item.route = this.semanticPathService.transform({\r\n      cxRoute: 'product',\r\n      params: source,\r\n    });\r\n    return item;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport {\r\n  CmsProductCarouselComponent as model,\r\n  Product,\r\n  ProductScope,\r\n  ProductService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\r\n\r\n@Component({\r\n  selector: 'cx-product-carousel',\r\n  templateUrl: './product-carousel.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductCarouselComponent {\r\n  protected readonly PRODUCT_SCOPE = ProductScope.LIST;\r\n\r\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\r\n    filter(Boolean)\r\n  );\r\n\r\n  /**\r\n   * returns an Obervable string for the title.\r\n   */\r\n  title$: Observable<string> = this.componentData$.pipe(\r\n    map((data) => data.title)\r\n  );\r\n\r\n  /**\r\n   * Obervable that holds an Array of Observables. This is done, so that\r\n   * the component UI could consider to lazy load the UI components when they're\r\n   * in the viewpoint.\r\n   */\r\n  items$: Observable<Observable<Product>[]> = this.componentData$.pipe(\r\n    map((data) => data.productCodes.trim().split(' ')),\r\n    map((codes) =>\r\n      codes.map((code) => this.productService.get(code, this.PRODUCT_SCOPE))\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    protected componentData: CmsComponentData<model>,\r\n    protected productService: ProductService\r\n  ) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\r\nimport {\r\n  CarouselModule,\r\n  MediaModule,\r\n} from '../../../../shared/components/index';\r\nimport { ProductCarouselComponent } from './product-carousel.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductCarouselComponent: {\r\n          component: ProductCarouselComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductCarouselComponent],\r\n  entryComponents: [ProductCarouselComponent],\r\n  exports: [ProductCarouselComponent],\r\n})\r\nexport class ProductCarouselModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport {\r\n  CmsProductReferencesComponent,\r\n  Product,\r\n  ProductReference,\r\n  ProductReferenceService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport {\r\n  filter,\r\n  map,\r\n  switchMap,\r\n  tap,\r\n  distinctUntilChanged,\r\n} from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\r\nimport { CurrentProductService } from '../../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-references',\r\n  templateUrl: './product-references.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductReferencesComponent {\r\n  /**\r\n   * returns an Obervable string for the title\r\n   */\r\n  title$ = this.component.data$.pipe(map((d) => d?.title));\r\n\r\n  private currentProductCode$: Observable<\r\n    string\r\n  > = this.current.getProduct().pipe(\r\n    filter(Boolean),\r\n    map((p: Product) => p.code),\r\n    distinctUntilChanged(),\r\n    tap(() => this.referenceService.cleanReferences())\r\n  );\r\n\r\n  /**\r\n   * Obervable with an Array of Observables. This is done, so that\r\n   * the component UI could consider to lazy load the UI components when they're\r\n   * in the viewpoint.\r\n   */\r\n  items$: Observable<Observable<Product>[]> = combineLatest([\r\n    this.currentProductCode$,\r\n    this.component.data$,\r\n  ]).pipe(\r\n    switchMap(([code, data]) =>\r\n      this.getProductReferences(code, data?.productReferenceTypes)\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    protected component: CmsComponentData<CmsProductReferencesComponent>,\r\n    protected current: CurrentProductService,\r\n    protected referenceService: ProductReferenceService\r\n  ) {}\r\n\r\n  private getProductReferences(\r\n    code: string,\r\n    referenceType: string\r\n  ): Observable<Observable<Product>[]> {\r\n    return this.referenceService.get(code, referenceType).pipe(\r\n      filter(Boolean),\r\n      map((refs: ProductReference[]) => refs.map((ref) => of(ref.target)))\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\r\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\r\nimport { MediaModule } from '../../../../shared/components/media/media.module';\r\nimport { ProductReferencesComponent } from './product-references.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductReferencesComponent: {\r\n          component: ProductReferencesComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductReferencesComponent],\r\n  entryComponents: [ProductReferencesComponent],\r\n  exports: [ProductReferencesComponent],\r\n})\r\nexport class ProductReferencesModule {}\r\n","import { ViewConfig } from '../../../shared/config/view-config';\n\nexport const defaultScrollConfig: ViewConfig = {\n  view: {\n    infiniteScroll: {\n      active: false,\n      productLimit: 0,\n      showMoreButton: false,\n    },\n  },\n};\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Product } from '@spartacus/core';\r\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\r\nimport { CurrentProductService } from '../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-images',\r\n  templateUrl: './product-images.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductImagesComponent {\r\n  private mainMediaContainer = new BehaviorSubject(null);\r\n\r\n  private product$: Observable<\r\n    Product\r\n  > = this.currentProductService.getProduct().pipe(\r\n    filter(Boolean),\r\n    distinctUntilChanged(),\r\n    tap((p: Product) => {\r\n      this.mainMediaContainer.next(p.images?.PRIMARY ? p.images.PRIMARY : {});\r\n    })\r\n  );\r\n\r\n  thumbs$: Observable<any[]> = this.product$.pipe(\r\n    map((p: Product) => this.createThumbs(p))\r\n  );\r\n\r\n  mainImage$ = combineLatest([this.product$, this.mainMediaContainer]).pipe(\r\n    map(([, container]) => container)\r\n  );\r\n\r\n  constructor(private currentProductService: CurrentProductService) {}\r\n\r\n  openImage(item: any): void {\r\n    this.mainMediaContainer.next(item);\r\n  }\r\n\r\n  isActive(thumbnail): Observable<boolean> {\r\n    return this.mainMediaContainer.pipe(\r\n      filter(Boolean),\r\n      map((container: any) => {\r\n        return (\r\n          container.zoom &&\r\n          container.zoom.url &&\r\n          thumbnail.zoom &&\r\n          thumbnail.zoom.url &&\r\n          container.zoom.url === thumbnail.zoom.url\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /** find the index of the main media in the list of media */\r\n  getActive(thumbs: any[]): Observable<number> {\r\n    return this.mainMediaContainer.pipe(\r\n      filter(Boolean),\r\n      map((container: any) => {\r\n        const current = thumbs.find(\r\n          (t) =>\r\n            t.media &&\r\n            container.zoom &&\r\n            t.media.container &&\r\n            t.media.container.zoom &&\r\n            t.media.container.zoom.url === container.zoom.url\r\n        );\r\n        return thumbs.indexOf(current);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return an array of CarouselItems for the product thumbnails.\r\n   * In case there are less then 2 thumbs, we return null.\r\n   */\r\n  private createThumbs(product: Product): Observable<any>[] {\r\n    if (\r\n      !product.images ||\r\n      !product.images.GALLERY ||\r\n      product.images.GALLERY.length < 2\r\n    ) {\r\n      return [];\r\n    }\r\n\r\n    return (<any[]>product.images.GALLERY).map((c) => of({ container: c }));\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { OutletModule } from '../../../cms-structure/outlet/index';\r\nimport { CarouselModule } from '../../../shared/components/carousel/index';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { ProductImagesComponent } from './product-images.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MediaModule,\r\n    OutletModule,\r\n    CarouselModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductImagesComponent: {\r\n          component: ProductImagesComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductImagesComponent],\r\n  entryComponents: [ProductImagesComponent],\r\n  exports: [ProductImagesComponent],\r\n})\r\nexport class ProductImagesModule {}\r\n","import {\r\n  AfterContentChecked,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n} from '@angular/core';\r\nimport { Product, TranslationService, WindowRef } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { CurrentProductService } from '../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-intro',\r\n  templateUrl: './product-intro.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductIntroComponent implements AfterContentChecked {\r\n  reviewsTabAvailable = new BehaviorSubject<boolean>(false);\r\n\r\n  product$: Observable<Product> = this.currentProductService.getProduct();\r\n\r\n  constructor(\r\n    protected currentProductService: CurrentProductService,\r\n    private translationService: TranslationService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  ngAfterContentChecked() {\r\n    this.reviewsTabAvailable.next(!!this.getReviewsComponent());\r\n  }\r\n\r\n  // Scroll to views component on page and click \"Reviews\" tab\r\n  showReviews() {\r\n    // Use translated label for Reviews tab reference\r\n    this.translationService\r\n      .translate('TabPanelContainer.tabs.ProductReviewsTabComponent')\r\n      .subscribe((reviewsTabLabel) => {\r\n        const tabsComponent = this.getTabsComponent();\r\n        const reviewsTab = this.getTabByLabel(reviewsTabLabel, tabsComponent);\r\n        const reviewsComponent = this.getReviewsComponent();\r\n        if (reviewsTab && reviewsComponent) {\r\n          this.clickTabIfInactive(reviewsTab);\r\n          setTimeout(\r\n            () => reviewsComponent.scrollIntoView({ behavior: 'smooth' }),\r\n            0\r\n          );\r\n        }\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  // NOTE: Does not currently exists as its own component\r\n  // but part of tabs component. This is likely to change in refactor.\r\n  private getReviewsComponent(): Element {\r\n    return this.winRef.document.querySelector('cx-product-reviews');\r\n  }\r\n\r\n  // Get Tabs Component if exists on page\r\n  private getTabsComponent(): Element {\r\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\r\n  }\r\n\r\n  // Click to activate tab if not already active\r\n  private clickTabIfInactive(tab: HTMLElement): void {\r\n    if (\r\n      !tab.classList.contains('active') ||\r\n      tab.classList.contains('toggled')\r\n    ) {\r\n      tab.click();\r\n    }\r\n  }\r\n\r\n  // Get Tab by label if exists on page\r\n  private getTabByLabel(label: string, tabsComponent: Element): HTMLElement {\r\n    if (tabsComponent) {\r\n      // NOTE: Reads through button tags to click on correct tab\r\n      // There may be a better way of doing this now/after refactor\r\n      const tabElements: HTMLCollectionOf<HTMLElement> = tabsComponent.getElementsByTagName(\r\n        'button'\r\n      );\r\n\r\n      // Look through button tab elements until finding tab with label\r\n      for (const buttonElement of Array.from(tabElements)) {\r\n        if (buttonElement.innerHTML.includes(label)) {\r\n          return buttonElement;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\r\nimport { ProductIntroComponent } from './product-intro.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, StarRatingModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductIntroComponent: {\r\n          component: ProductIntroComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductIntroComponent],\r\n  exports: [ProductIntroComponent],\r\n  entryComponents: [ProductIntroComponent],\r\n})\r\nexport class ProductIntroModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  ActivatedRouterStateSnapshot,\r\n  CurrencyService,\r\n  LanguageService,\r\n  ProductSearchPage,\r\n  ProductSearchService,\r\n  RoutingService,\r\n  SearchConfig,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  filter,\r\n  pluck,\r\n  shareReplay,\r\n  tap,\r\n} from 'rxjs/operators';\r\n\r\ninterface ProductListRouteParams {\r\n  brandCode?: string;\r\n  categoryCode?: string;\r\n  query?: string;\r\n}\r\n\r\ninterface SearchCriteria {\r\n  currentPage?: number;\r\n  pageSize?: number;\r\n  sortCode?: string;\r\n  query?: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductListComponentService {\r\n  // TODO: make it configurable\r\n  protected defaultPageSize = 10;\r\n\r\n  protected sub: Subscription;\r\n\r\n  protected readonly RELEVANCE_ALLCATEGORIES = ':relevance:allCategories:';\r\n\r\n  constructor(\r\n    protected productSearchService: ProductSearchService,\r\n    protected routing: RoutingService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected currencyService: CurrencyService,\r\n    protected languageService: LanguageService,\r\n    protected router: Router\r\n  ) {}\r\n\r\n  private searchResults$: Observable<\r\n    ProductSearchPage\r\n  > = this.productSearchService\r\n    .getResults()\r\n    .pipe(filter((searchResult) => Object.keys(searchResult).length > 0));\r\n\r\n  private searchByRouting$: Observable<\r\n    ActivatedRouterStateSnapshot\r\n  > = combineLatest([\r\n    this.routing.getRouterState().pipe(\r\n      distinctUntilChanged((x, y) => {\r\n        // router emits new value also when the anticipated `nextState` changes\r\n        // but we want to perform search only when current url changes\r\n        return x.state.url === y.state.url;\r\n      })\r\n    ),\r\n    // also trigger search on site context changes\r\n    this.languageService.getActive(),\r\n    this.currencyService.getActive(),\r\n  ]).pipe(\r\n    pluck(0, 'state'),\r\n    tap((state: ActivatedRouterStateSnapshot) => {\r\n      const criteria = this.getCriteriaFromRoute(\r\n        state.params,\r\n        state.queryParams\r\n      );\r\n      this.search(criteria);\r\n    })\r\n  );\r\n\r\n  /**\r\n   * This stream should be used only on the Product Listing Page.\r\n   *\r\n   * It not only emits search results, but also performs a search on every change\r\n   * of the route (i.e. route params or query params).\r\n   *\r\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\r\n   * so no longer the search is performed on route change.\r\n   */\r\n  readonly model$: Observable<ProductSearchPage> = combineLatest([\r\n    this.searchResults$,\r\n    this.searchByRouting$,\r\n  ]).pipe(pluck(0), shareReplay({ bufferSize: 1, refCount: true }));\r\n\r\n  private getCriteriaFromRoute(\r\n    routeParams: ProductListRouteParams,\r\n    queryParams: SearchCriteria\r\n  ): SearchCriteria {\r\n    return {\r\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\r\n      pageSize: queryParams.pageSize || this.defaultPageSize,\r\n      currentPage: queryParams.currentPage,\r\n      sortCode: queryParams.sortCode,\r\n    };\r\n  }\r\n\r\n  private getQueryFromRouteParams({\r\n    brandCode,\r\n    categoryCode,\r\n    query,\r\n  }: ProductListRouteParams) {\r\n    if (query) {\r\n      return query;\r\n    }\r\n    if (categoryCode) {\r\n      return this.RELEVANCE_ALLCATEGORIES + categoryCode;\r\n    }\r\n    if (brandCode) {\r\n      return this.RELEVANCE_ALLCATEGORIES + brandCode;\r\n    }\r\n  }\r\n\r\n  private search(criteria: SearchCriteria): void {\r\n    const query = criteria.query;\r\n    const searchConfig = this.getSearchConfig(criteria);\r\n\r\n    this.productSearchService.search(query, searchConfig);\r\n  }\r\n\r\n  private getSearchConfig(criteria: SearchCriteria): SearchConfig {\r\n    const result: SearchConfig = {\r\n      currentPage: criteria.currentPage,\r\n      pageSize: criteria.pageSize,\r\n      sortCode: criteria.sortCode,\r\n    };\r\n\r\n    // drop empty keys\r\n    Object.keys(result).forEach((key) => !result[key] && delete result[key]);\r\n\r\n    return result;\r\n  }\r\n\r\n  setQuery(query: string): void {\r\n    this.setQueryParams({ query, currentPage: undefined });\r\n  }\r\n\r\n  viewPage(pageNumber: number): void {\r\n    this.setQueryParams({ currentPage: pageNumber });\r\n  }\r\n\r\n  /**\r\n   * Get items from a given page without using navigation\r\n   */\r\n  getPageItems(pageNumber: number): void {\r\n    this.routing\r\n      .getRouterState()\r\n      .subscribe((route) => {\r\n        const routeCriteria = this.getCriteriaFromRoute(\r\n          route.state.params,\r\n          route.state.queryParams\r\n        );\r\n        const criteria = {\r\n          ...routeCriteria,\r\n          currentPage: pageNumber,\r\n        };\r\n        this.search(criteria);\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  sort(sortCode: string): void {\r\n    this.setQueryParams({ sortCode });\r\n  }\r\n\r\n  private setQueryParams(queryParams: SearchCriteria): void {\r\n    this.router.navigate([], {\r\n      queryParams,\r\n      queryParamsHandling: 'merge',\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\r\n\r\nexport enum ViewModes {\r\n  Grid = 'grid',\r\n  List = 'list',\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-product-view',\r\n  templateUrl: './product-view.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductViewComponent {\r\n  iconTypes = ICON_TYPE;\r\n  @Input()\r\n  mode: ViewModes;\r\n  @Output()\r\n  modeChange = new EventEmitter<string>();\r\n\r\n  get buttonClass() {\r\n    const viewName: string = this.viewMode.toLowerCase();\r\n    return `cx-product-${viewName}`;\r\n  }\r\n\r\n  /**\r\n   *   Display icons inversely to allow users\r\n   *   to see the view they will navigate to\r\n   */\r\n  get viewMode() {\r\n    if (this.mode === 'list') {\r\n      return this.iconTypes.GRID;\r\n    } else if (this.mode === 'grid') {\r\n      return this.iconTypes.LIST;\r\n    }\r\n  }\r\n\r\n  changeMode() {\r\n    const newMode =\r\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\r\n    this.modeChange.emit(newMode);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ProductSearchPage } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\r\nimport { ViewConfig } from '../../../../shared/config/view-config';\r\nimport { ViewModes } from '../product-view/product-view.component';\r\nimport { ProductListComponentService } from './product-list-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-list',\r\n  templateUrl: './product-list.component.html',\r\n})\r\nexport class ProductListComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  isInfiniteScroll: boolean;\r\n\r\n  model$: Observable<ProductSearchPage> = this.productListComponentService\r\n    .model$;\r\n\r\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\r\n  ViewModes = ViewModes;\r\n\r\n  constructor(\r\n    private pageLayoutService: PageLayoutService,\r\n    private productListComponentService: ProductListComponentService,\r\n    public scrollConfig: ViewConfig\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isInfiniteScroll = this.scrollConfig.view.infiniteScroll.active;\r\n\r\n    this.subscription.add(\r\n      this.pageLayoutService.templateName$\r\n        .pipe(take(1))\r\n        .subscribe((template) => {\r\n          this.viewMode$.next(\r\n            template === 'ProductGridPageTemplate'\r\n              ? ViewModes.Grid\r\n              : ViewModes.List\r\n          );\r\n        })\r\n    );\r\n  }\r\n\r\n  sortList(sortCode: string): void {\r\n    this.productListComponentService.sort(sortCode);\r\n  }\r\n\r\n  setViewMode(mode: ViewModes): void {\r\n    this.viewMode$.next(mode);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { ProductSearchPage } from '@spartacus/core';\r\nimport { ViewModes } from '../../product-view/product-view.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductListComponentService } from '../product-list-component.service';\r\nimport { ViewConfig } from '../../../../../shared/config/view-config';\r\n\r\n@Component({\r\n  selector: 'cx-product-scroll',\r\n  templateUrl: './product-scroll.component.html',\r\n})\r\nexport class ProductScrollComponent implements OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  @Input('scrollConfig')\r\n  set setConfig(inputConfig: ViewConfig) {\r\n    this.setComponentConfigurations(inputConfig);\r\n  }\r\n\r\n  model: ProductSearchPage;\r\n  @Input('model')\r\n  set setModel(inputModel: ProductSearchPage) {\r\n    this.infiniteScrollOperations(inputModel);\r\n  }\r\n\r\n  inputViewMode: ViewModes;\r\n  @Input('inputViewMode')\r\n  set setViewMode(inputViewMode: ViewModes) {\r\n    this.inputViewMode = inputViewMode;\r\n    //If viewMode is already set (meaning it is not the first load)\r\n    //Reset the product list\r\n    if (this.viewMode) {\r\n      this.resetListOnViewModeChange();\r\n    } else {\r\n      //If viewMode is not set (meaning it is the first load)\r\n      //Set the viewMode\r\n      this.viewMode = inputViewMode;\r\n    }\r\n  }\r\n\r\n  viewMode: ViewModes;\r\n  productLimit: number;\r\n  maxProducts: number;\r\n\r\n  ViewModes = ViewModes;\r\n  appendProducts = false;\r\n  resetList = false;\r\n  isMaxProducts = false;\r\n  isLastPage = false;\r\n  isEmpty = false;\r\n\r\n  constructor(\r\n    private productListComponentService: ProductListComponentService,\r\n    private ref: ChangeDetectorRef\r\n  ) {}\r\n\r\n  scrollPage(pageNumber: number): void {\r\n    this.appendProducts = true;\r\n    this.ref.markForCheck();\r\n    this.productListComponentService.getPageItems(pageNumber);\r\n  }\r\n\r\n  loadNextPage(pageNumber: number): void {\r\n    this.isMaxProducts = false;\r\n    this.scrollPage(pageNumber);\r\n  }\r\n\r\n  scrollToTop(): void {\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  private setComponentConfigurations(scrollConfig: ViewConfig): void {\r\n    const isButton = scrollConfig.view.infiniteScroll.showMoreButton;\r\n    const configProductLimit = scrollConfig.view.infiniteScroll.productLimit;\r\n\r\n    //Display \"show more\" button every time when button configuration is true\r\n    //Otherwise, only display \"show more\" when the configuration product limit is reached\r\n    this.productLimit = isButton ? 1 : configProductLimit;\r\n  }\r\n\r\n  private infiniteScrollOperations(inputModel: ProductSearchPage): void {\r\n    if (this.appendProducts) {\r\n      this.model = {\r\n        ...inputModel,\r\n        products: this.model.products.concat(inputModel.products),\r\n      };\r\n    } else {\r\n      this.model = inputModel;\r\n      this.maxProducts = this.productLimit;\r\n    }\r\n    this.setConditions();\r\n    this.ref.markForCheck();\r\n  }\r\n\r\n  private resetListOnViewModeChange(): void {\r\n    this.scrollToTop();\r\n    this.resetList = true;\r\n    this.productListComponentService.getPageItems(0);\r\n  }\r\n\r\n  //Set booleans after model has been retrieved\r\n  private setConditions(): void {\r\n    this.isEmpty = !this.model.products || this.model.products.length === 0;\r\n\r\n    this.isLastPage =\r\n      this.model.pagination.currentPage ===\r\n      this.model.pagination.totalPages - 1;\r\n\r\n    this.isMaxProducts =\r\n      this.productLimit &&\r\n      this.productLimit !== 0 &&\r\n      this.model.products.length >= this.maxProducts;\r\n\r\n    //Add the productLimit to the current number of products to determine the next max number of products\r\n    if (this.isMaxProducts) {\r\n      this.maxProducts = this.model.products.length + this.productLimit;\r\n    }\r\n\r\n    //Only change viewMode once the new model is set\r\n    //This prevents flickering issues\r\n    if (this.viewMode !== this.inputViewMode) {\r\n      this.viewMode = this.inputViewMode;\r\n    }\r\n\r\n    this.resetList = false;\r\n    this.appendProducts = false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Breadcrumb, Facet } from '@spartacus/core';\r\n\r\n/**\r\n * UI model that holds the full list of facet and active facets for\r\n * the product list.\r\n */\r\nexport interface FacetList {\r\n  facets: Facet[];\r\n  activeFacets?: Breadcrumb[];\r\n}\r\n\r\nexport interface FacetCollapseState {\r\n  /**\r\n   * Indicates whether the facet is toggled to expand or collapse the facet values.\r\n   * Whether the toggle results in an expanded or collapsed state, depends on the\r\n   * experience, which is controlled in CSS.\r\n   */\r\n  toggled?: FacetGroupCollapsedState;\r\n\r\n  /**\r\n   * The top number of facet values that will be visible.\r\n   */\r\n  topVisible?: number;\r\n\r\n  /**\r\n   * The max number of facet values which will be visible. This includes\r\n   * the top visible number.\r\n   */\r\n  maxVisible?: number;\r\n}\r\n\r\nexport enum FacetGroupCollapsedState {\r\n  EXPANDED = 'EXPANDED',\r\n  COLLAPSED = 'COLLAPSED',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Params } from '@angular/router';\r\nimport {\r\n  ActivatedRouterStateSnapshot,\r\n  Breadcrumb,\r\n  PageType,\r\n  ProductSearchPage,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, pluck, switchMap } from 'rxjs/operators';\r\nimport { ProductListComponentService } from '../../container/product-list-component.service';\r\nimport { FacetList } from '../facet.model';\r\n\r\n/**\r\n * Provides access to all the facets and active facets for the Product Listing Page.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductFacetService {\r\n  protected readonly routeState$ = this.routing\r\n    .getRouterState()\r\n    .pipe(pluck('state'));\r\n\r\n  protected readonly searchResult$: Observable<\r\n    ProductSearchPage\r\n  > = this.routeState$.pipe(\r\n    switchMap((state) =>\r\n      this.productListComponentService.model$.pipe(\r\n        filter((page) => this.filterForPage(state, page)),\r\n        map((page) => this.mapResults(state, page))\r\n      )\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    protected routing: RoutingService,\r\n    protected productListComponentService: ProductListComponentService\r\n  ) {}\r\n\r\n  /**\r\n   * Observes the facets and active facets for the given page. The facet data\r\n   * is provided in a `FacetList`.\r\n   */\r\n  readonly facetList$: Observable<FacetList> = this.searchResult$.pipe(\r\n    map(\r\n      (result: ProductSearchPage) =>\r\n        ({\r\n          facets: result.facets,\r\n          activeFacets: result.breadcrumbs,\r\n        } as FacetList)\r\n    )\r\n  );\r\n\r\n  /**\r\n   * Filters the current result by verifying if the result is related to the page.\r\n   * This is done to avoid a combination of the next page and the current search results.\r\n   */\r\n  protected filterForPage(\r\n    state: ActivatedRouterStateSnapshot,\r\n    page: ProductSearchPage\r\n  ): boolean {\r\n    if (state.context.type === PageType.CATEGORY_PAGE) {\r\n      return (\r\n        page.currentQuery?.query?.value?.indexOf(\r\n          `allCategories:${state.context.id}`\r\n        ) > -1\r\n      );\r\n    }\r\n\r\n    if (\r\n      state.context.type === PageType.CONTENT_PAGE &&\r\n      state.context.id === 'search'\r\n    ) {\r\n      return page.currentQuery.query.value.startsWith(`${state.params.query}:`);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private mapResults(\r\n    state: ActivatedRouterStateSnapshot,\r\n    page: ProductSearchPage\r\n  ): ProductSearchPage {\r\n    return {\r\n      ...page,\r\n      breadcrumbs: this.filterBreadcrumbs(page.breadcrumbs, state.params),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * filter breadcrumbs which are not actively selected\r\n   * but coming from the route navigation\r\n   */\r\n  private filterBreadcrumbs(\r\n    breadcrumbs: Breadcrumb[],\r\n    params: Params\r\n  ): Breadcrumb[] {\r\n    return breadcrumbs\r\n      ? breadcrumbs.filter(\r\n          (breadcrumb) => !this.hasBreadcrumb(breadcrumb, params)\r\n        )\r\n      : [];\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the breadcrumb is related to navigation parameters,\r\n   * since either the category or brand code should match those codes.\r\n   */\r\n  private hasBreadcrumb(breadcrumb: Breadcrumb, params: Params): boolean {\r\n    return (\r\n      breadcrumb.facetCode === 'allCategories' &&\r\n      breadcrumb.facetValueCode === params.categoryCode\r\n    );\r\n  }\r\n}\r\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Facet } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport {\r\n  FacetCollapseState,\r\n  FacetGroupCollapsedState,\r\n  FacetList,\r\n} from '../facet.model';\r\nimport { ProductFacetService } from './product-facet.service';\r\n\r\n/**\r\n * Provides access to the facets as well as their UI state. The UI state\r\n * represents user related changes on the facets, such as expanding or\r\n * collapsing a facet group or expanding the number of _visible_ facet values.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FacetService {\r\n  /**\r\n   * An internal map where we keep the UI state of the facets.\r\n   */\r\n  protected facetState = new Map<string, BehaviorSubject<FacetCollapseState>>();\r\n\r\n  constructor(protected productFacetService: ProductFacetService) {}\r\n\r\n  /**\r\n   * Observes the facets for the given page and configures the initial UI state.\r\n   *\r\n   * Facets are configured on each emission so that we keep the facet UI state.\r\n   * This is mainly done to keep the state during usage of the facet, but also\r\n   * benefitial when the facets are rebuild while using them.\r\n   */\r\n  facetList$: Observable<FacetList> = this.productFacetService.facetList$.pipe(\r\n    tap((facetList) => {\r\n      facetList.facets.forEach((facet) => this.initialize(facet));\r\n    })\r\n  );\r\n\r\n  /**\r\n   * Returns the observed UI state for the facet.\r\n   *\r\n   * The state is initialized using the `initialize` method.\r\n   */\r\n  getState(facet: Facet): Observable<FacetCollapseState> {\r\n    this.initialize(facet);\r\n    return this.facetState.get(facet.name);\r\n  }\r\n\r\n  /**\r\n   * Returns the UI state for the facet.\r\n   *\r\n   * The state is initialized using the `initialize` method.\r\n   */\r\n  protected getStateSnapshot(facet: Facet): FacetCollapseState {\r\n    return (this.getState(facet) as BehaviorSubject<FacetCollapseState>).value;\r\n  }\r\n\r\n  /**\r\n   * Toggles the facet expanded state. If the expanded state becomes false,\r\n   * the visible values will decrease to the top values only.\r\n   *\r\n   * If the optional value argument is provided the expanded state will be set\r\n   * to this value, regardless of the current `expanded` state.\r\n   */\r\n  toggle(facet: Facet, isExpanded: boolean): void {\r\n    const state = this.getStateSnapshot(facet);\r\n\r\n    const toggledState = {\r\n      toggled: isExpanded\r\n        ? FacetGroupCollapsedState.COLLAPSED\r\n        : FacetGroupCollapsedState.EXPANDED,\r\n    } as FacetCollapseState;\r\n\r\n    if (toggledState.toggled === FacetGroupCollapsedState.COLLAPSED) {\r\n      toggledState.maxVisible = state.topVisible;\r\n    }\r\n\r\n    this.updateState(facet, toggledState);\r\n  }\r\n\r\n  /**\r\n   * Increases the visible values to the maximum values of the facet.\r\n   */\r\n  increaseVisibleValues(facet: Facet): void {\r\n    this.updateState(facet, { maxVisible: facet.values.length });\r\n  }\r\n\r\n  /**\r\n   * Decreases the visible values to the topValueCount.\r\n   *\r\n   * The topValueCount defaults to 6, but can be controlled in\r\n   * the backend as well.\r\n   */\r\n  decreaseVisibleValues(facet: Facet): void {\r\n    this.updateState(facet, { maxVisible: facet.topValueCount });\r\n  }\r\n\r\n  /**\r\n   * Persists the facet state and initializes the default values for the top\r\n   * and max visible values.\r\n   */\r\n  protected initialize(facet: Facet): void {\r\n    if (!this.hasState(facet)) {\r\n      this.facetState.set(\r\n        facet.name,\r\n        new BehaviorSubject({\r\n          topVisible: facet.topValueCount || 0,\r\n          maxVisible: facet.topValueCount || 0,\r\n        } as FacetCollapseState)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the state of the facet in the local facet map.\r\n   */\r\n  protected updateState(facet: Facet, property: FacetCollapseState): void {\r\n    const state = { ...this.getStateSnapshot(facet), ...property };\r\n    this.facetState.get(facet.name).next(state);\r\n  }\r\n\r\n  protected hasState(facet: Facet): boolean {\r\n    return this.facetState.has(facet.name);\r\n  }\r\n\r\n  getLinkParams(query: string): { [key: string]: string } {\r\n    return {\r\n      // to avoid encoding issues with facets that have space (' ') in their name,\r\n      // we replace the decoded '+' back to empty space ' '.\r\n      // For more, see https://github.com/SAP/spartacus/issues/7348\r\n      query: new HttpUrlEncodingCodec().decodeValue(query).replace(/\\+/g, ' '),\r\n    };\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Breadcrumb } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\r\nimport { FacetList } from '../facet.model';\r\nimport { FacetService } from '../services/facet.service';\r\n\r\n/**\r\n * Active facets render the applied facet values as a list of focusable buttons\r\n * which can be used to remove the applied facet value.\r\n */\r\n@Component({\r\n  selector: 'cx-active-facets',\r\n  templateUrl: './active-facets.component.html',\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class ActiveFacetsComponent {\r\n  /** Active facets which are applied to the product results. */\r\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\r\n\r\n  /** Configurable icon which is used for the active facet close button */\r\n  @Input() closeIcon = ICON_TYPE.CLOSE;\r\n\r\n  constructor(protected facetService: FacetService) {}\r\n\r\n  getLinkParams(facet: Breadcrumb) {\r\n    return this.facetService.getLinkParams(facet.removeQuery?.query?.value);\r\n  }\r\n\r\n  /**\r\n   * The focus key is used to persist the focus on the facet when the DOM is being\r\n   * recreated. We only apply the focus key for the given _active_ facet when there\r\n   * the original facets is not available. This happens for non multi-valued facets.\r\n   *\r\n   * With this approach, the we keep the focus, either at the facet list or on the\r\n   * active facets.\r\n   */\r\n  getFocusKey(facetList: FacetList, facet: Breadcrumb) {\r\n    return facetList.facets?.find((f) =>\r\n      f.values?.find((val) => val.name === facet.facetValueName)\r\n    )\r\n      ? ''\r\n      : facet.facetValueName;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../../../cms-components/misc/icon/icon.module';\r\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { ActiveFacetsComponent } from './active-facets.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    I18nModule,\r\n    IconModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [ActiveFacetsComponent],\r\n  exports: [ActiveFacetsComponent],\r\n})\r\nexport class ActiveFacetsModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  Output,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { Facet } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FocusConfig } from '../../../../../layout/a11y/keyboard-focus/index';\r\nimport { ICON_TYPE } from '../../../../misc/icon/icon.model';\r\nimport { FacetGroupCollapsedState, FacetList } from '../facet.model';\r\nimport { FacetComponent } from '../facet/facet.component';\r\nimport { FacetService } from '../services/facet.service';\r\n\r\n@Component({\r\n  selector: 'cx-facet-list',\r\n  templateUrl: './facet-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetListComponent {\r\n  private _isDialog: boolean;\r\n  /**\r\n   * Indicates that the facet navigation is rendered in dialog.\r\n   */\r\n  @Input()\r\n  set isDialog(value: boolean) {\r\n    this._isDialog = value;\r\n    if (value) {\r\n      this.renderer.addClass(document.body, 'modal-open');\r\n    }\r\n  }\r\n\r\n  get isDialog(): boolean {\r\n    return this._isDialog;\r\n  }\r\n\r\n  /** Emits when the list must close */\r\n  @Output() closeList = new EventEmitter();\r\n\r\n  /** The list of all facet and values related to the products in the list */\r\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  dialogFocusConfig: FocusConfig = {\r\n    trap: true,\r\n    block: true,\r\n    focusOnEscape: true,\r\n    autofocus: 'cx-facet',\r\n  };\r\n\r\n  @HostListener('click') handleClick() {\r\n    this.close();\r\n  }\r\n\r\n  constructor(\r\n    protected facetService: FacetService,\r\n    protected elementRef: ElementRef,\r\n    protected renderer: Renderer2\r\n  ) {}\r\n\r\n  /**\r\n   * Toggles the facet group in case it is not expanded.\r\n   */\r\n  expandFacetGroup(facet: Facet, ref: FacetComponent) {\r\n    if (!ref.isExpanded) {\r\n      this.facetService.toggle(facet, ref.isExpanded);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates that the facet group has been expanded.\r\n   */\r\n  isExpanded(facet: Facet): Observable<boolean> {\r\n    return this.facetService\r\n      .getState(facet)\r\n      .pipe(\r\n        map((value) => value.toggled === FacetGroupCollapsedState.EXPANDED)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Indicates that the facet group has been collapsed.\r\n   */\r\n  isCollapsed(facet: Facet): Observable<boolean> {\r\n    return this.facetService\r\n      .getState(facet)\r\n      .pipe(\r\n        map((value) => value.toggled === FacetGroupCollapsedState.COLLAPSED)\r\n      );\r\n  }\r\n\r\n  close(event?: boolean): void {\r\n    this.renderer.removeClass(document.body, 'modal-open');\r\n    this.closeList.emit(event);\r\n  }\r\n\r\n  block(event?: MouseEvent) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren,\r\n} from '@angular/core';\r\nimport { Facet, FacetValue } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\r\nimport { FocusDirective } from '../../../../../layout/a11y/keyboard-focus/focus.directive';\r\nimport { FacetCollapseState } from '../facet.model';\r\nimport { FacetService } from '../services/facet.service';\r\n\r\n@Component({\r\n  selector: 'cx-facet',\r\n  templateUrl: './facet.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetComponent {\r\n  protected _facet: Facet;\r\n\r\n  state$: Observable<FacetCollapseState>;\r\n\r\n  /** configurable icon that is used to collapse the facet group  */\r\n  @Input() expandIcon: ICON_TYPE = ICON_TYPE.EXPAND;\r\n  @Input() collapseIcon: ICON_TYPE = ICON_TYPE.COLLAPSE;\r\n\r\n  @HostBinding('class.multi-select') isMultiSelect: boolean;\r\n\r\n  @ViewChildren('facetValue') values: QueryList<ElementRef<HTMLElement>>;\r\n\r\n  @ViewChild(FocusDirective) keyboardFocus: FocusDirective;\r\n\r\n  @Input()\r\n  set facet(value: Facet) {\r\n    this._facet = value;\r\n    this.isMultiSelect = !!value.multiSelect;\r\n    this.state$ = this.facetService.getState(value);\r\n  }\r\n\r\n  get facet(): Facet {\r\n    return this._facet;\r\n  }\r\n\r\n  constructor(\r\n    protected facetService: FacetService,\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /**\r\n   * Handles clicking the heading of the facet group, which means toggling\r\n   * the visibility of the group (collapse / expand) and optionally focusing\r\n   * the group.\r\n   */\r\n  toggleGroup(event: UIEvent) {\r\n    const host: HTMLElement = this.elementRef.nativeElement;\r\n    const isLocked = this.keyboardFocus?.isLocked;\r\n\r\n    this.facetService.toggle(this.facet, this.isExpanded);\r\n\r\n    if (!isLocked || this.isExpanded) {\r\n      host.focus();\r\n      // we stop propagating the event as otherwise the focus on the host will trigger\r\n      // an unlock event from the LockFocus directive.\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  get isExpanded(): boolean {\r\n    return this.values.first.nativeElement.offsetParent !== null;\r\n  }\r\n\r\n  openLink(event: KeyboardEvent) {\r\n    (event.target as HTMLElement).click();\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Increases the number of visible values for the facet. This is delegated\r\n   * to `facetService.increaseVisibleValues`.\r\n   */\r\n  increaseVisibleValues(): void {\r\n    this.facetService.increaseVisibleValues(this.facet);\r\n  }\r\n\r\n  /**\r\n   * Decreases the number of visible values for the facet. This is delegated\r\n   * to `facetService.decreaseVisibleValues`.\r\n   */\r\n  decreaseVisibleValues(): void {\r\n    this.facetService.decreaseVisibleValues(this.facet);\r\n  }\r\n\r\n  getLinkParams(value: FacetValue) {\r\n    return this.facetService.getLinkParams(value.query?.query.value);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { I18nModule, UrlModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../../../cms-components/misc/icon/index';\r\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { FacetComponent } from './facet.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    IconModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [FacetComponent],\r\n  exports: [FacetComponent],\r\n})\r\nexport class FacetModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { IconModule } from '../../../../misc/icon/icon.module';\r\nimport { FacetModule } from '../facet/facet.module';\r\nimport { FacetListComponent } from './facet-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    IconModule,\r\n    FacetModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [FacetListComponent],\r\n  exports: [FacetListComponent],\r\n})\r\nexport class FacetListModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { asapScheduler, BehaviorSubject, interval, Observable, of } from 'rxjs';\r\nimport { delayWhen, observeOn, switchMap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\r\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-facet-navigation',\r\n  templateUrl: './product-facet-navigation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductFacetNavigationComponent {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  /**\r\n   * We delay the removal of DOM so that animations can finish playing before the\r\n   * DOM is removed. Removing the DOM, as hidding is not enough to stop elements\r\n   * to be focused.\r\n   */\r\n  protected CLOSE_DELAY = 300;\r\n\r\n  /**\r\n   * Used to open the facet navigation in a dialog. The usage of the dialog depends\r\n   * on the availability of the trigger element, which is driven by CSS.\r\n   *\r\n   * The reference is also used to refocus the trigger after the dialog is closed.\r\n   */\r\n  @ViewChild('trigger') trigger: ElementRef<HTMLElement>;\r\n\r\n  protected open$ = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * Emits the open state that indicates whether the facet list should be rendered.\r\n   * This is either done instantly, or after the user triggers this by using the trigger\r\n   * button. This driven by the visiibility of the trigger, so that the CSS drives\r\n   * the behaviour. This can differ per breakpoint.\r\n   *\r\n   * There's a configurable delay for the closed state, so that the DOM is not removed\r\n   * before some CSS animations are done.\r\n   */\r\n  isOpen$: Observable<boolean> = this.breakpointService.breakpoint$.pipe(\r\n    // deffer emitting a new value to the next micro-task to ensure that the `hasTrigger`\r\n    // method represents the actual UI state.\r\n    observeOn(asapScheduler),\r\n    switchMap(() => (this.hasTrigger ? this.open$ : of(true))),\r\n    delayWhen((launched) => interval(launched ? 0 : this.CLOSE_DELAY))\r\n  );\r\n\r\n  /**\r\n   * Emits the active state that indicates whether the facet list is activated. Activation\r\n   * is related to the css, so that a animation or transition can visualize opening/closing\r\n   * the list (i.e. dialog).\r\n   */\r\n  isActive$ = this.open$.pipe(\r\n    // deffer emitting a new value to the next micro-task to ensure the active class is\r\n    //  applied after the DOM is created\r\n    observeOn(asapScheduler)\r\n  );\r\n\r\n  constructor(protected breakpointService: BreakpointService) {}\r\n\r\n  launch() {\r\n    this.open$.next(true);\r\n  }\r\n\r\n  close() {\r\n    this.open$.next(false);\r\n    this.trigger.nativeElement.focus();\r\n  }\r\n\r\n  /**\r\n   * Indicates that the facet navigation should be open explicitely by a trigger.\r\n   * This is fully controlled by CSS, where the trigger button can be hidden\r\n   * (display:none) for certain screen sizes.\r\n   */\r\n  get hasTrigger() {\r\n    return this.trigger.nativeElement.offsetParent !== null;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../misc/icon/icon.module';\r\nimport { ActiveFacetsModule } from './active-facets/active-facets.module';\r\nimport { FacetListModule } from './facet-list/facet-list.module';\r\nimport { ProductFacetNavigationComponent } from './product-facet-navigation.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FacetListModule,\r\n    ActiveFacetsModule,\r\n    IconModule,\r\n    I18nModule,\r\n    ConfigModule.withConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductRefinementComponent: {\r\n          component: ProductFacetNavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductFacetNavigationComponent],\r\n  exports: [ProductFacetNavigationComponent],\r\n})\r\nexport class ProductFacetNavigationModule {}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductGridItemComponent {\n  @Input() product: any;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductListItemComponent {\n  @Input() product: any;\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Product, BaseOption, VariantType } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CurrentProductService } from '../current-product.service';\r\nimport { tap, filter, distinctUntilChanged } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-product-variants',\r\n  templateUrl: './product-variants.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductVariantsComponent implements OnInit {\r\n  constructor(private currentProductService: CurrentProductService) {}\r\n\r\n  variants: BaseOption[] = [];\r\n  variantType = VariantType;\r\n  product$: Observable<Product>;\r\n\r\n  ngOnInit(): void {\r\n    this.product$ = this.currentProductService.getProduct().pipe(\r\n      filter((product) => !!(product && product.baseOptions)),\r\n      distinctUntilChanged(),\r\n      tap((product) => {\r\n        product.baseOptions.forEach((option) => {\r\n          if (option && option.variantType) {\r\n            this.variants[option.variantType] = option;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport {\r\n  OccConfig,\r\n  BaseOption,\r\n  VariantQualifier,\r\n  VariantOptionQualifier,\r\n  Product,\r\n  ProductService,\r\n  ProductScope,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-variant-style-selector',\r\n  templateUrl: './variant-style-selector.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantStyleSelectorComponent {\r\n  constructor(\r\n    private config: OccConfig,\r\n    private productService: ProductService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  variantQualifier = VariantQualifier;\r\n\r\n  @Input()\r\n  variants: BaseOption;\r\n\r\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\r\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.STYLE);\r\n    return obj ? obj.value : '';\r\n  }\r\n\r\n  getVariantThumbnailUrl(\r\n    variantOptionQualifiers: VariantOptionQualifier[]\r\n  ): string {\r\n    const qualifier = variantOptionQualifiers.find((item) => item.image);\r\n    return qualifier\r\n      ? `${this.config.backend.occ.baseUrl}${qualifier.image.url}`\r\n      : '';\r\n  }\r\n\r\n  changeStyle(code: string): void {\r\n    if (code) {\r\n      this.productService\r\n        .get(code, ProductScope.LIST)\r\n        .pipe(\r\n          // below call might looks redundant but in fact this data is going to be loaded anyways\r\n          // we're just calling it earlier and storing\r\n          filter(Boolean),\r\n          take(1)\r\n        )\r\n        .subscribe((product: Product) => {\r\n          this.routingService.go({\r\n            cxRoute: 'product',\r\n            params: product,\r\n          });\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleSelectorComponent } from './variant-style-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleSelectorComponent],\n  entryComponents: [VariantStyleSelectorComponent],\n  exports: [VariantStyleSelectorComponent],\n})\nexport class VariantStyleSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport {\r\n  Product,\r\n  RoutingService,\r\n  BaseOption,\r\n  VariantQualifier,\r\n  VariantOptionQualifier,\r\n  ProductService,\r\n  ProductScope,\r\n} from '@spartacus/core';\r\nimport { filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-variant-size-selector',\r\n  templateUrl: './variant-size-selector.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantSizeSelectorComponent {\r\n  constructor(\r\n    private productService: ProductService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  @Input()\r\n  product: Product;\r\n\r\n  @Input()\r\n  variants: BaseOption;\r\n\r\n  changeSize(code: string): void {\r\n    if (code) {\r\n      this.productService\r\n        .get(code, ProductScope.LIST)\r\n        .pipe(\r\n          // below call might looks redundant but in fact this data is going to be loaded anyways\r\n          // we're just calling it earlier and storing\r\n          filter(Boolean),\r\n          take(1)\r\n        )\r\n        .subscribe((product: Product) => {\r\n          this.routingService.go({\r\n            cxRoute: 'product',\r\n            params: product,\r\n          });\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\r\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.SIZE);\r\n    return obj ? obj.value : '';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantSizeSelectorComponent } from './variant-size-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantSizeSelectorComponent],\n  entryComponents: [VariantSizeSelectorComponent],\n  exports: [VariantSizeSelectorComponent],\n})\nexport class VariantSizeSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport {\r\n  BaseOption,\r\n  Product,\r\n  RoutingService,\r\n  VariantOptionQualifier,\r\n  VariantQualifier,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-variant-color-selector',\r\n  templateUrl: './variant-color-selector.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantColorSelectorComponent {\r\n  constructor(private routingService: RoutingService) {}\r\n\r\n  @Input()\r\n  product: Product;\r\n\r\n  @Input()\r\n  variants: BaseOption;\r\n\r\n  changeColor(code: string, name: string): void {\r\n    if (code) {\r\n      this.routingService.go({\r\n        cxRoute: 'product',\r\n        params: { code, name },\r\n      });\r\n    }\r\n    return null;\r\n  }\r\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\r\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.COLOR);\r\n    return obj ? obj.value : '';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantColorSelectorComponent } from './variant-color-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantColorSelectorComponent],\n  entryComponents: [VariantColorSelectorComponent],\n  exports: [VariantColorSelectorComponent],\n})\nexport class VariantColorSelectorModule {}\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\n\r\nimport {\r\n  OccConfig,\r\n  VariantOption,\r\n  VariantOptionQualifier,\r\n  VariantQualifier,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-variant-style-icons',\r\n  templateUrl: './variant-style-icons.component.html',\r\n  styleUrls: ['./variant-style-icons.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantStyleIconsComponent implements OnInit {\r\n  constructor(private config: OccConfig) {}\r\n\r\n  @Input()\r\n  variants: VariantOption[];\r\n\r\n  variantNames: { [key: string]: string } = {};\r\n\r\n  ngOnInit() {\r\n    this.variants.forEach((variant) => {\r\n      this.variantNames[variant.code] = this.getVariantName(\r\n        variant.variantOptionQualifiers\r\n      );\r\n    });\r\n  }\r\n\r\n  getVariantThumbnailUrl(\r\n    variantOptionQualifiers: VariantOptionQualifier[]\r\n  ): string {\r\n    const thumbnail = variantOptionQualifiers.find(\r\n      (item) => item.qualifier === VariantQualifier.THUMBNAIL\r\n    );\r\n    return thumbnail\r\n      ? `${this.config.backend.occ.baseUrl}${thumbnail.image.url}`\r\n      : '';\r\n  }\r\n\r\n  private getVariantName(\r\n    variantOptionQualifiers: VariantOptionQualifier[]\r\n  ): string {\r\n    const rollupProperty = variantOptionQualifiers.find(\r\n      (item) => item.qualifier === VariantQualifier.ROLLUP_PROPERTY\r\n    );\r\n    const property = rollupProperty\r\n      ? variantOptionQualifiers.find(\r\n          (item) => item.qualifier === rollupProperty.value\r\n        )\r\n      : null;\r\n    return property ? property.value : '';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleIconsComponent } from './variant-style-icons.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleIconsComponent],\n  entryComponents: [VariantStyleIconsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class VariantStyleIconsModule {}\n","import { CanActivate, UrlTree } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, filter, take } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  VariantOption,\r\n  ProductService,\r\n  Product,\r\n  RoutingService,\r\n  ProductScope,\r\n} from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductVariantGuard implements CanActivate {\r\n  constructor(\r\n    private productService: ProductService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.routingService.getRouterState().pipe(\r\n      map((state) => state.nextState.params.productCode),\r\n      switchMap((productCode: string) => {\r\n        // if open pdp from smartedit\r\n        if (!productCode) {\r\n          return of(true);\r\n        }\r\n\r\n        return this.productService.get(productCode, ProductScope.VARIANTS).pipe(\r\n          filter(Boolean),\r\n          map((product: Product) => {\r\n            if (!product.purchasable) {\r\n              const variant = this.findVariant(product.variantOptions);\r\n              // below call might looks redundant but in fact this data is going to be loaded anyways\r\n              // we're just calling it earlier and storing\r\n              this.productService\r\n                .get(variant.code, ProductScope.LIST)\r\n                .pipe(filter(Boolean), take(1))\r\n                .subscribe((_product: Product) => {\r\n                  this.routingService.go({\r\n                    cxRoute: 'product',\r\n                    params: _product,\r\n                  });\r\n                });\r\n              return false;\r\n            } else {\r\n              return true;\r\n            }\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  findVariant(variants: VariantOption[]): VariantOption {\r\n    const results: VariantOption[] = variants.filter((variant) => {\r\n      return variant.stock && variant.stock.stockLevel ? variant : false;\r\n    });\r\n    return !results.length && variants.length ? variants[0] : results[0];\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ProductVariantsComponent } from './product-variants.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VariantStyleSelectorModule } from './variant-style-selector/variant-style-selector.module';\r\nimport { VariantSizeSelectorModule } from './variant-size-selector/variant-size-selector.module';\r\nimport { VariantColorSelectorModule } from './variant-color-selector/variant-color-selector.module';\r\nimport { VariantStyleIconsModule } from './variant-style-icons/variant-style-icons.module';\r\nimport { ProductVariantGuard } from './guards/product-variant.guard';\r\nimport { VariantStyleIconsComponent } from './variant-style-icons/variant-style-icons.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    VariantStyleSelectorModule,\r\n    VariantSizeSelectorModule,\r\n    VariantColorSelectorModule,\r\n    VariantStyleIconsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductVariantSelectorComponent: {\r\n          component: ProductVariantsComponent,\r\n          guards: [ProductVariantGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductVariantsComponent],\r\n  entryComponents: [ProductVariantsComponent],\r\n  exports: [VariantStyleIconsComponent],\r\n})\r\nexport class ProductVariantsModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { ViewConfig } from '../../../shared/config/view-config';\r\nimport { ViewConfigModule } from '../../../shared/config/view-config.module';\r\nimport {\r\n  ItemCounterModule,\r\n  ListNavigationModule,\r\n  MediaModule,\r\n  SpinnerModule,\r\n  StarRatingModule,\r\n} from '../../../shared/index';\r\nimport { AddToCartModule } from '../../cart/index';\r\nimport { IconModule } from '../../misc/icon/index';\r\nimport { defaultScrollConfig } from '../config/default-scroll-config';\r\nimport { ProductVariantsModule } from '../product-variants/product-variants.module';\r\nimport { ProductListComponent } from './container/product-list.component';\r\nimport { ProductScrollComponent } from './container/product-scroll/product-scroll.component';\r\nimport { ProductFacetNavigationComponent } from './product-facet-navigation/product-facet-navigation.component';\r\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\r\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\r\nimport { ProductViewComponent } from './product-view/product-view.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MediaModule,\r\n    AddToCartModule,\r\n    ItemCounterModule,\r\n    ListNavigationModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    StarRatingModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n    InfiniteScrollModule,\r\n    ViewConfigModule,\r\n    ProductVariantsModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<ViewConfig>defaultScrollConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSProductListComponent: {\r\n          component: ProductListComponent,\r\n        },\r\n        ProductGridComponent: {\r\n          component: ProductListComponent,\r\n        },\r\n        SearchResultsListComponent: {\r\n          component: ProductListComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [\r\n    ProductListComponent,\r\n    ProductListItemComponent,\r\n    ProductGridItemComponent,\r\n    ProductViewComponent,\r\n    ProductScrollComponent,\r\n  ],\r\n  exports: [\r\n    ProductListComponent,\r\n    ProductListItemComponent,\r\n    ProductGridItemComponent,\r\n    ProductViewComponent,\r\n    ProductScrollComponent,\r\n  ],\r\n  entryComponents: [ProductListComponent, ProductFacetNavigationComponent],\r\n})\r\nexport class ProductListModule {}\r\n","export enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\r\nimport { ProductSummaryComponent } from './product-summary.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OutletModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductSummaryComponent: {\r\n          component: ProductSummaryComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductSummaryComponent],\r\n  entryComponents: [ProductSummaryComponent],\r\n  exports: [ProductSummaryComponent],\r\n})\r\nexport class ProductSummaryModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Product, ProductScope } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CurrentProductService } from '../../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-attributes',\r\n  templateUrl: './product-attributes.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductAttributesComponent {\r\n  product$: Observable<Product> = this.currentProductService.getProduct(\r\n    ProductScope.ATTRIBUTES\r\n  );\r\n\r\n  constructor(protected currentProductService: CurrentProductService) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { ProductAttributesComponent } from './product-attributes.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductSpecsTabComponent: {\r\n          component: ProductAttributesComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductAttributesComponent],\r\n  entryComponents: [ProductAttributesComponent],\r\n  exports: [ProductAttributesComponent],\r\n})\r\nexport class ProductAttributesModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductDetailsTabComponent: {\r\n          component: ProductDetailsTabComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductDetailsTabComponent],\r\n  entryComponents: [ProductDetailsTabComponent],\r\n  exports: [ProductDetailsTabComponent],\r\n})\r\nexport class ProductDetailsTabModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ViewChild,\r\n  ElementRef,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  switchMap,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { CurrentProductService } from '../../current-product.service';\r\nimport { CustomFormValidators } from '../../../../shared/index';\r\n\r\n@Component({\r\n  selector: 'cx-product-reviews',\r\n  templateUrl: './product-reviews.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductReviewsComponent {\r\n  @ViewChild('titleInput', { static: false }) titleInput: ElementRef;\r\n  @ViewChild('writeReviewButton', { static: false })\r\n  writeReviewButton: ElementRef;\r\n\r\n  isWritingReview = false;\r\n\r\n  // TODO: configurable\r\n  initialMaxListItems = 5;\r\n  maxListItems: number;\r\n  reviewForm: FormGroup;\r\n\r\n  product$: Observable<Product> = this.currentProductService.getProduct();\r\n\r\n  reviews$: Observable<Review[]> = this.product$.pipe(\r\n    filter((p) => !!p),\r\n    map((p) => p.code),\r\n    distinctUntilChanged(),\r\n    switchMap((productCode) =>\r\n      this.reviewService.getByProductCode(productCode)\r\n    ),\r\n    tap(() => {\r\n      this.resetReviewForm();\r\n      this.maxListItems = this.initialMaxListItems;\r\n    })\r\n  );\r\n\r\n  constructor(\r\n    protected reviewService: ProductReviewService,\r\n    protected currentProductService: CurrentProductService,\r\n    private fb: FormBuilder,\r\n    protected cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  initiateWriteReview(): void {\r\n    this.isWritingReview = true;\r\n\r\n    this.cd.detectChanges();\r\n\r\n    if (this.titleInput && this.titleInput.nativeElement) {\r\n      this.titleInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  cancelWriteReview(): void {\r\n    this.isWritingReview = false;\r\n    this.resetReviewForm();\r\n\r\n    this.cd.detectChanges();\r\n\r\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\r\n      this.writeReviewButton.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  setRating(rating: number): void {\r\n    this.reviewForm.controls.rating.setValue(rating);\r\n  }\r\n\r\n  submitReview(product: Product) {\r\n    if (this.reviewForm.valid) {\r\n      this.addReview(product);\r\n    } else {\r\n      this.reviewForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  addReview(product: Product): void {\r\n    const reviewFormControls = this.reviewForm.controls;\r\n    const review: Review = {\r\n      headline: reviewFormControls.title.value,\r\n      comment: reviewFormControls.comment.value,\r\n      rating: reviewFormControls.rating.value,\r\n      alias: reviewFormControls.reviewerName.value,\r\n    };\r\n\r\n    this.reviewService.add(product.code, review);\r\n\r\n    this.isWritingReview = false;\r\n    this.resetReviewForm();\r\n\r\n    this.cd.detectChanges();\r\n\r\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\r\n      this.writeReviewButton.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  private resetReviewForm(): void {\r\n    this.reviewForm = this.fb.group({\r\n      title: ['', Validators.required],\r\n      comment: ['', Validators.required],\r\n      rating: [null, CustomFormValidators.starRatingEmpty],\r\n      reviewerName: '',\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { ProductReviewsComponent } from './product-reviews.component';\r\nimport { StarRatingModule, FormErrorsModule } from '../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    I18nModule,\r\n    StarRatingModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductReviewsTabComponent: {\r\n          component: ProductReviewsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductReviewsComponent],\r\n  entryComponents: [ProductReviewsComponent],\r\n  exports: [ProductReviewsComponent],\r\n})\r\nexport class ProductReviewsModule {}\r\n","import { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { NotificationPreference, UserInterestsService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\r\n\r\n@Component({\r\n  selector: 'cx-stock-notification-dialog',\r\n  templateUrl: './stock-notification-dialog.component.html',\r\n})\r\nexport class StockNotificationDialogComponent implements OnDestroy {\r\n  subscribeSuccess$: Observable<boolean>;\r\n  enabledPrefs: NotificationPreference[] = [];\r\n\r\n  constructor(\r\n    private modalService: ModalService,\r\n    private interestsService: UserInterestsService\r\n  ) {}\r\n\r\n  close() {\r\n    this.modalService.dismissActiveModal();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscribeSuccess$) {\r\n      this.subscribeSuccess$\r\n        .subscribe((success) => {\r\n          if (success) {\r\n            this.interestsService.resetAddInterestState();\r\n          }\r\n        })\r\n        .unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport {\r\n  UserInterestsService,\r\n  UserNotificationPreferenceService,\r\n  AuthService,\r\n  OCC_USER_ID_ANONYMOUS,\r\n  NotificationPreference,\r\n  NotificationType,\r\n  Product,\r\n  GlobalMessageService,\r\n  TranslationService,\r\n  GlobalMessageType,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription, combineLatest } from 'rxjs';\r\nimport { map, filter, tap, first } from 'rxjs/operators';\r\nimport { CurrentProductService } from '../current-product.service';\r\nimport { ModalService } from '../../../shared/components/modal/modal.service';\r\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\r\n\r\n@Component({\r\n  selector: 'cx-stock-notification',\r\n  templateUrl: './stock-notification.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class StockNotificationComponent implements OnInit, OnDestroy {\r\n  hasProductInterests$: Observable<boolean>;\r\n  prefsEnabled$: Observable<boolean>;\r\n  outOfStock$: Observable<boolean>;\r\n  isRemoveInterestLoading$: Observable<boolean>;\r\n  anonymous = true;\r\n\r\n  private enabledPrefs: NotificationPreference[] = [];\r\n  private productCode: string;\r\n  private subscribeSuccess$: Observable<boolean>;\r\n  private subscriptions = new Subscription();\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private currentProductService: CurrentProductService,\r\n    private globalMessageService: GlobalMessageService,\r\n    private translationService: TranslationService,\r\n    private interestsService: UserInterestsService,\r\n    private modalService: ModalService,\r\n    private notificationPrefService: UserNotificationPreferenceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.outOfStock$ = combineLatest([\r\n      this.currentProductService.getProduct().pipe(filter(Boolean)),\r\n      this.authService.getOccUserId(),\r\n    ]).pipe(\r\n      tap(([product, userId]: [Product, String]) => {\r\n        this.productCode = product.code;\r\n        if (userId !== OCC_USER_ID_ANONYMOUS) {\r\n          this.anonymous = false;\r\n          this.notificationPrefService.loadPreferences();\r\n          this.interestsService.loadProductInterests(\r\n            null,\r\n            null,\r\n            null,\r\n            product.code,\r\n            NotificationType.BACK_IN_STOCK\r\n          );\r\n        }\r\n      }),\r\n      map(\r\n        ([product]: [Product, String]) =>\r\n          !!product.stock && product.stock.stockLevelStatus === 'outOfStock'\r\n      )\r\n    );\r\n\r\n    this.hasProductInterests$ = this.interestsService\r\n      .getProductInterests()\r\n      .pipe(\r\n        map(\r\n          (interests) => !!interests.results && interests.results.length === 1\r\n        )\r\n      );\r\n    this.subscribeSuccess$ = this.interestsService.getAddProductInterestSuccess();\r\n    this.isRemoveInterestLoading$ = this.interestsService.getRemoveProdutInterestLoading();\r\n    this.prefsEnabled$ = this.notificationPrefService\r\n      .getEnabledPreferences()\r\n      .pipe(\r\n        tap((prefs) => (this.enabledPrefs = prefs)),\r\n        map((prefs) => prefs.length > 0)\r\n      );\r\n\r\n    this.subscriptions.add(\r\n      this.interestsService.getAddProductInterestError().subscribe((error) => {\r\n        if (error) {\r\n          this.onInterestAddingError();\r\n        }\r\n      })\r\n    );\r\n    this.subscriptions.add(\r\n      this.interestsService\r\n        .getRemoveProdutInterestSuccess()\r\n        .subscribe((success) => {\r\n          if (success) {\r\n            this.onInterestRemovingSuccess();\r\n          }\r\n        })\r\n    );\r\n  }\r\n\r\n  subscribe() {\r\n    this.openDialog();\r\n    this.interestsService.addProductInterest(\r\n      this.productCode,\r\n      NotificationType.BACK_IN_STOCK\r\n    );\r\n  }\r\n\r\n  unsubscribe() {\r\n    this.interestsService.removeProdutInterest(\r\n      {\r\n        product: {\r\n          code: this.productCode,\r\n        },\r\n        productInterestEntry: [\r\n          {\r\n            interestType: NotificationType.BACK_IN_STOCK,\r\n          },\r\n        ],\r\n      },\r\n      true\r\n    );\r\n  }\r\n\r\n  private onInterestRemovingSuccess() {\r\n    this.subscriptions.add(\r\n      this.translationService\r\n        .translate('stockNotification.unsubscribeSuccess')\r\n        .pipe(first())\r\n        .subscribe((text) =>\r\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_INFO)\r\n        )\r\n    );\r\n    this.interestsService.resetRemoveInterestState();\r\n  }\r\n\r\n  private onInterestAddingError() {\r\n    this.modalService.dismissActiveModal();\r\n    this.interestsService.resetAddInterestState();\r\n  }\r\n\r\n  private openDialog() {\r\n    const modalInstance = this.modalService.open(\r\n      StockNotificationDialogComponent,\r\n      {\r\n        centered: true,\r\n        size: 'lg',\r\n      }\r\n    ).componentInstance;\r\n    modalInstance.subscribeSuccess$ = this.subscribeSuccess$;\r\n    modalInstance.enabledPrefs = this.enabledPrefs;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.interestsService.clearProductInterests();\r\n    this.notificationPrefService.clearPreferences();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StockNotificationComponent } from './stock-notification.component';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [StockNotificationComponent, StockNotificationDialogComponent],\r\n  imports: [CommonModule, RouterModule, I18nModule, SpinnerModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        StockNotificationComponent: {\r\n          component: StockNotificationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  entryComponents: [\r\n    StockNotificationComponent,\r\n    StockNotificationDialogComponent,\r\n  ],\r\n  exports: [StockNotificationComponent, StockNotificationDialogComponent],\r\n})\r\nexport class StockNotificationModule {}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\nconst WEEK_DAYS_NUMBER = 7;\n\n@Component({\n  selector: 'cx-schedule',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnChanges {\n  @Input()\n  location: any;\n  displayDays: Date[] = null;\n\n  constructor(private storeDataService: StoreDataService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.location && this.location) {\n      const initialDate = this.getInitialDate();\n      this.displayDays = [];\n\n      for (let i = 0; i < WEEK_DAYS_NUMBER; i++) {\n        const date = new Date(initialDate.valueOf());\n        date.setDate(date.getDate() + i);\n        this.displayDays.push(date);\n      }\n    }\n  }\n\n  /**\n   * Returns the store's opening time for the given date\n   * @param date date\n   */\n  getStoreOpeningTime(date: Date): string {\n    return this.storeDataService.getStoreOpeningTime(this.location, date);\n  }\n\n  /**\n   * Returns the store's closing time for the given date\n   * @param date date\n   */\n  getStoreClosingTime(date: Date): string {\n    return this.storeDataService.getStoreClosingTime(this.location, date);\n  }\n\n  /**\n   * return initial (first) date to be displayed in the schedule\n   */\n  private getInitialDate(): Date {\n    const currentDate = new Date();\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n\n    return currentDate;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StoreFinderService, GeoPoint } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-grid',\r\n  templateUrl: './store-finder-grid.component.html',\r\n})\r\nexport class StoreFinderGridComponent implements OnInit, OnDestroy {\r\n  locations$: any;\r\n  isLoading$: Observable<boolean>;\r\n  defaultLocation: GeoPoint;\r\n  country: string;\r\n  region: string;\r\n\r\n  constructor(\r\n    private storeFinderService: StoreFinderService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\r\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\r\n    this.defaultLocation = {};\r\n\r\n    if (this.route.snapshot.params.country) {\r\n      this.storeFinderService.findStoresAction(\r\n        '',\r\n        {\r\n          pageSize: -1,\r\n        },\r\n        undefined,\r\n        this.route.snapshot.params.country\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder-header',\n  templateUrl: './store-finder-header.component.html',\n})\nexport class StoreFinderHeaderComponent {}\n","import { Input, Directive } from '@angular/core';\r\nimport { StoreDataService } from '@spartacus/core';\r\n\r\n// tslint:disable:directive-class-suffix\r\n@Directive()\r\nexport class AbstractStoreItemComponent {\r\n  @Input()\r\n  location;\r\n\r\n  constructor(protected storeDataService: StoreDataService) {}\r\n\r\n  getDirections(location: any): string {\r\n    const google_map_url = 'https://www.google.com/maps/dir/Current+Location/';\r\n    const latitude = this.storeDataService.getStoreLatitude(location);\r\n    const longitude = this.storeDataService.getStoreLongitude(location);\r\n    return google_map_url + latitude + ',' + longitude;\r\n  }\r\n\r\n  getFormattedStoreAddress(addressParts: string[]): string {\r\n    return addressParts.filter(Boolean).join(', ');\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { StoreDataService } from '@spartacus/core';\r\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-list-item',\r\n  templateUrl: './store-finder-list-item.component.html',\r\n})\r\nexport class StoreFinderListItemComponent extends AbstractStoreItemComponent {\r\n  @Input()\r\n  locationIndex: number = null;\r\n  @Input()\r\n  listOrderLabel: any;\r\n  @Input()\r\n  displayDistance: boolean;\r\n  @Input()\r\n  useClickEvent: boolean;\r\n  @Output()\r\n  storeItemClick: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(protected storeDataService: StoreDataService) {\r\n    super(storeDataService);\r\n  }\r\n\r\n  handleStoreItemClick() {\r\n    if (this.locationIndex !== null) {\r\n      this.storeItemClick.emit(this.locationIndex);\r\n    }\r\n  }\r\n\r\n  onKey(event: KeyboardEvent) {\r\n    if (event.key === 'Enter') {\r\n      this.handleStoreItemClick();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { GoogleMapRendererService } from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-map',\r\n  templateUrl: './store-finder-map.component.html',\r\n})\r\nexport class StoreFinderMapComponent implements OnChanges {\r\n  @ViewChild('mapElement', { static: true })\r\n  mapElement: ElementRef;\r\n  @Input()\r\n  locations: any[];\r\n  @Output()\r\n  selectedStoreItem: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(private googleMapRendererService: GoogleMapRendererService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.locations && this.locations) {\r\n      this.renderMap();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the center of the map to the given location\r\n   * @param latitude latitude of the new center\r\n   * @param longitude longitude of the new center\r\n   */\r\n  centerMap(latitude: number, longitude: number): void {\r\n    this.googleMapRendererService.centerMap(latitude, longitude);\r\n  }\r\n\r\n  renderMap(): void {\r\n    this.googleMapRendererService.renderMap(\r\n      this.mapElement.nativeElement,\r\n      this.locations,\r\n      (markerIndex) => {\r\n        this.selectStoreItemClickHandle(markerIndex);\r\n      }\r\n    );\r\n  }\r\n\r\n  private selectStoreItemClickHandle(markerIndex: number) {\r\n    this.selectedStoreItem.emit(markerIndex);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-pagination-details',\n  templateUrl: './store-finder-pagination-details.component.html',\n})\nexport class StoreFinderPaginationDetailsComponent {\n  @Input()\n  pagination: PaginationModel;\n\n  constructor() {}\n\n  getResultsPerPage(): string {\n    if (this.pagination.totalResults > this.pagination.pageSize) {\n      const firstItem =\n        this.pagination.currentPage * this.pagination.pageSize + 1;\n\n      let resultsPerPage =\n        (this.pagination.currentPage + 1) * this.pagination.pageSize;\n\n      if (resultsPerPage > this.pagination.totalResults) {\n        resultsPerPage = this.pagination.totalResults;\n      }\n\n      return `${firstItem} - ${resultsPerPage}`;\n    } else {\n      return `1 - ${this.pagination.totalResults}`;\n    }\n  }\n}\n","import { DOCUMENT } from '@angular/common';\r\nimport { Component, Inject, Input, ViewChild } from '@angular/core';\r\nimport { StoreDataService, PointOfService } from '@spartacus/core';\r\nimport { StoreFinderMapComponent } from '../../store-finder-map/store-finder-map.component';\r\nimport { ICON_TYPE } from './../../../../misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-list',\r\n  templateUrl: './store-finder-list.component.html',\r\n})\r\nexport class StoreFinderListComponent {\r\n  @Input()\r\n  locations: any;\r\n  @Input()\r\n  useMylocation: boolean;\r\n  @ViewChild('storeMap')\r\n  storeMap: StoreFinderMapComponent;\r\n\r\n  selectedStore: PointOfService;\r\n  selectedStoreIndex: number;\r\n  isDetailsModeVisible: boolean;\r\n  storeDetails: PointOfService;\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(\r\n    private storeDataService: StoreDataService,\r\n    @Inject(DOCUMENT) private document: any\r\n  ) {\r\n    this.isDetailsModeVisible = false;\r\n  }\r\n\r\n  centerStoreOnMapByIndex(index: number, location: PointOfService): void {\r\n    this.showStoreDetails(location);\r\n    this.selectedStoreIndex = index;\r\n    this.selectedStore = location;\r\n    this.storeMap.centerMap(\r\n      this.storeDataService.getStoreLatitude(this.locations.stores[index]),\r\n      this.storeDataService.getStoreLongitude(this.locations.stores[index])\r\n    );\r\n  }\r\n\r\n  selectStoreItemList(index: number): void {\r\n    this.selectedStoreIndex = index;\r\n    const storeListItem = this.document.getElementById('item-' + index);\r\n    storeListItem.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'center',\r\n    });\r\n  }\r\n\r\n  showStoreDetails(location: PointOfService) {\r\n    this.isDetailsModeVisible = true;\r\n    this.storeDetails = location;\r\n  }\r\n\r\n  hideStoreDetails() {\r\n    this.isDetailsModeVisible = false;\r\n    this.selectedStoreIndex = undefined;\r\n    this.selectedStore = undefined;\r\n    this.storeMap.renderMap();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport {\r\n  GeoPoint,\r\n  SearchConfig,\r\n  StoreFinderSearchQuery,\r\n  StoreFinderService,\r\n  StoreFinderConfig,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-search-result',\r\n  templateUrl: './store-finder-search-result.component.html',\r\n})\r\nexport class StoreFinderSearchResultComponent implements OnInit, OnDestroy {\r\n  locations: any;\r\n  subscription: Subscription;\r\n  useMyLocation: boolean;\r\n  countryCode: string = null;\r\n  searchConfig: SearchConfig = {\r\n    currentPage: 0,\r\n  };\r\n  radius: number;\r\n  searchQuery: StoreFinderSearchQuery;\r\n  geolocation: GeoPoint;\r\n  locations$: Observable<any>;\r\n  isLoading$: Observable<any>;\r\n\r\n  constructor(\r\n    private storeFinderService: StoreFinderService,\r\n    private route: ActivatedRoute,\r\n    protected config: StoreFinderConfig\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.route.queryParams.subscribe((params) =>\r\n      this.initialize(params)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  viewPage(pageNumber: number) {\r\n    this.searchConfig = { ...this.searchConfig, currentPage: pageNumber };\r\n    this.storeFinderService.findStoresAction(\r\n      this.searchQuery.queryText,\r\n      this.searchConfig,\r\n      this.geolocation,\r\n      this.countryCode,\r\n      this.useMyLocation,\r\n      this.radius\r\n    );\r\n  }\r\n\r\n  private initialize(params: Params) {\r\n    this.searchQuery = this.parseParameters(params);\r\n    this.useMyLocation = params && params.useMyLocation ? true : false;\r\n    this.searchConfig = { ...this.searchConfig, currentPage: 0 };\r\n    this.radius = this.config.googleMaps.radius;\r\n    this.storeFinderService.findStoresAction(\r\n      this.searchQuery.queryText,\r\n      this.searchConfig,\r\n      this.geolocation,\r\n      this.countryCode,\r\n      this.useMyLocation,\r\n      this.radius\r\n    );\r\n\r\n    this.isLoading$ = this.storeFinderService.getStoresLoading();\r\n    this.locations$ = this.storeFinderService.getFindStoresEntities();\r\n  }\r\n\r\n  private parseParameters(queryParams: {\r\n    [key: string]: any;\r\n  }): StoreFinderSearchQuery {\r\n    let searchQuery: StoreFinderSearchQuery;\r\n\r\n    if (queryParams.query) {\r\n      searchQuery = { queryText: queryParams.query };\r\n    } else {\r\n      searchQuery = { queryText: '' };\r\n    }\r\n\r\n    searchQuery.useMyLocation =\r\n      queryParams.useMyLocation != null &&\r\n      queryParams.useMyLocation.toUpperCase() === 'TRUE';\r\n\r\n    return searchQuery;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-search',\n  templateUrl: './store-finder-search.component.html',\n})\nexport class StoreFinderSearchComponent {\n  searchBox: FormControl = new FormControl();\n  iconTypes = ICON_TYPE;\n\n  constructor(private routingService: RoutingService) {}\n\n  findStores(address: string) {\n    this.routingService.go(['store-finder/find'], { query: address });\n  }\n\n  viewStoresWithMyLoc() {\n    this.routingService.go(['store-finder/find'], { useMyLocation: true });\n  }\n\n  onKey(event: any) {\n    if (\n      this.searchBox.value &&\n      this.searchBox.value.length &&\n      event.key === 'Enter'\n    ) {\n      this.findStores(this.searchBox.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-store-description',\n  templateUrl: './store-finder-store-description.component.html',\n})\nexport class StoreFinderStoreDescriptionComponent extends AbstractStoreItemComponent {\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StoreFinderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-stores-count',\n  templateUrl: './store-finder-stores-count.component.html',\n})\nexport class StoreFinderStoresCountComponent implements OnInit {\n  locations$: Observable<any>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private storeFinderService: StoreFinderService) {}\n\n  ngOnInit() {\n    this.storeFinderService.viewAllStores();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder',\n  templateUrl: './store-finder.component.html',\n})\nexport class StoreFinderComponent {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  StoreFinderService,\n  PointOfService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-store',\n  templateUrl: './store-finder-store.component.html',\n})\nexport class StoreFinderStoreComponent implements OnInit {\n  location$: Observable<any>;\n  isLoading$: Observable<any>;\n  iconTypes = ICON_TYPE;\n\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    if (!this.location) {\n      this.requestStoresData();\n      this.location$ = this.storeFinderService.getFindStoresEntities();\n      this.isLoading$ = this.storeFinderService.getStoresLoading();\n    }\n  }\n\n  requestStoresData() {\n    this.storeFinderService.viewStoreById(this.route.snapshot.params.store);\n  }\n\n  goBack(): void {\n    this.routingService.go([\n      `store-finder/country/${this.route.snapshot.params.country}`,\n    ]);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  StoreFinderCoreModule,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { LayoutConfig } from '../../layout/config/layout-config';\r\nimport { ListNavigationModule } from '../../shared/components/list-navigation/list-navigation.module';\r\nimport { SpinnerModule } from '../../shared/components/spinner/spinner.module';\r\nimport { IconModule } from './../misc/icon/icon.module';\r\nimport { ScheduleComponent } from './components/schedule-component/schedule.component';\r\nimport { StoreFinderGridComponent } from './components/store-finder-grid/store-finder-grid.component';\r\nimport { StoreFinderHeaderComponent } from './components/store-finder-header/store-finder-header.component';\r\nimport { StoreFinderListItemComponent } from './components/store-finder-list-item/store-finder-list-item.component';\r\nimport { StoreFinderMapComponent } from './components/store-finder-map/store-finder-map.component';\r\nimport { StoreFinderPaginationDetailsComponent } from './components/store-finder-pagination-details/store-finder-pagination-details.component';\r\nimport { StoreFinderListComponent } from './components/store-finder-search-result/store-finder-list/store-finder-list.component';\r\nimport { StoreFinderSearchResultComponent } from './components/store-finder-search-result/store-finder-search-result.component';\r\nimport { StoreFinderSearchComponent } from './components/store-finder-search/store-finder-search.component';\r\nimport { StoreFinderStoreDescriptionComponent } from './components/store-finder-store-description/store-finder-store-description.component';\r\nimport { StoreFinderStoresCountComponent } from './components/store-finder-stores-count/store-finder-stores-count.component';\r\nimport { StoreFinderComponent } from './components/store-finder/store-finder.component';\r\nimport { StoreFinderStoreComponent } from './components/store-finder-store/store-finder-store.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    ListNavigationModule,\r\n    NgbTabsetModule,\r\n    SpinnerModule,\r\n    UrlModule,\r\n    StoreFinderCoreModule,\r\n    I18nModule,\r\n    IconModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig | LayoutConfig>{\r\n      cmsComponents: {\r\n        StoreFinderComponent: {\r\n          component: StoreFinderComponent,\r\n          childRoutes: [\r\n            {\r\n              path: 'find',\r\n              component: StoreFinderSearchResultComponent,\r\n            },\r\n            {\r\n              path: 'view-all',\r\n              component: StoreFinderStoresCountComponent,\r\n            },\r\n            {\r\n              path: 'country/:country',\r\n              component: StoreFinderGridComponent,\r\n            },\r\n            {\r\n              path: 'country/:country/region/:region',\r\n              component: StoreFinderGridComponent,\r\n            },\r\n            {\r\n              path: 'country/:country/region/:region/:store',\r\n              component: StoreFinderStoreComponent,\r\n            },\r\n            {\r\n              path: 'country/:country/:store',\r\n              component: StoreFinderStoreComponent,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      layoutSlots: {\r\n        StoreFinderPageTemplate: {\r\n          slots: ['MiddleContent', 'SideContent'],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [\r\n    StoreFinderSearchComponent,\r\n    StoreFinderListComponent,\r\n    StoreFinderMapComponent,\r\n    StoreFinderListItemComponent,\r\n    StoreFinderStoresCountComponent,\r\n    StoreFinderGridComponent,\r\n    StoreFinderStoreDescriptionComponent,\r\n    ScheduleComponent,\r\n    StoreFinderHeaderComponent,\r\n    StoreFinderSearchResultComponent,\r\n    StoreFinderComponent,\r\n    StoreFinderPaginationDetailsComponent,\r\n    StoreFinderStoreComponent,\r\n  ],\r\n  exports: [\r\n    ScheduleComponent,\r\n    StoreFinderComponent,\r\n    StoreFinderGridComponent,\r\n    StoreFinderHeaderComponent,\r\n    StoreFinderListItemComponent,\r\n    StoreFinderMapComponent,\r\n    StoreFinderPaginationDetailsComponent,\r\n    StoreFinderSearchComponent,\r\n    StoreFinderSearchResultComponent,\r\n    StoreFinderListComponent,\r\n    StoreFinderStoreDescriptionComponent,\r\n    StoreFinderStoresCountComponent,\r\n    StoreFinderStoreComponent,\r\n  ],\r\n  entryComponents: [\r\n    StoreFinderComponent,\r\n    StoreFinderSearchResultComponent,\r\n    StoreFinderStoresCountComponent,\r\n    StoreFinderGridComponent,\r\n    StoreFinderStoreComponent,\r\n  ],\r\n})\r\nexport class StoreFinderModule {}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActiveCartService, AuthRedirectService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-login',\r\n  templateUrl: './checkout-login.component.html',\r\n})\r\nexport class CheckoutLoginComponent implements OnDestroy {\r\n  checkoutLoginForm: FormGroup = this.formBuilder.group(\r\n    {\r\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\r\n      emailConfirmation: ['', [Validators.required]],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.emailsMustMatch(\r\n        'email',\r\n        'emailConfirmation'\r\n      ),\r\n    }\r\n  );\r\n  sub: Subscription;\r\n\r\n  constructor(\r\n    protected formBuilder: FormBuilder,\r\n    protected authRedirectService: AuthRedirectService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  onSubmit() {\r\n    if (this.checkoutLoginForm.valid) {\r\n      const email = this.checkoutLoginForm.get('email').value;\r\n      this.activeCartService.addEmail(email);\r\n\r\n      if (!this.sub) {\r\n        this.sub = this.activeCartService.getAssignedUser().subscribe(() => {\r\n          if (this.activeCartService.isGuestCart()) {\r\n            this.authRedirectService.redirect();\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.checkoutLoginForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { CheckoutLoginComponent } from './checkout-login.component';\r\nimport { NotCheckoutAuthGuard } from '../../checkout/guards/not-checkout-auth.guard';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        GuestCheckoutLoginComponent: {\r\n          component: CheckoutLoginComponent,\r\n          guards: [NotCheckoutAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutLoginComponent],\r\n  exports: [CheckoutLoginComponent],\r\n  entryComponents: [CheckoutLoginComponent],\r\n})\r\nexport class CheckoutLoginModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  AuthRedirectService,\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CheckoutConfigService } from '../../checkout/services/checkout-config.service';\r\nimport { CustomFormValidators } from '../../../shared/index';\r\n\r\n@Component({\r\n  selector: 'cx-login-form',\r\n  templateUrl: './login-form.component.html',\r\n})\r\nexport class LoginFormComponent implements OnInit, OnDestroy {\r\n  sub: Subscription;\r\n  loginForm: FormGroup;\r\n  loginAsGuest = false;\r\n\r\n  constructor(\r\n    protected auth: AuthService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected fb: FormBuilder,\r\n    protected authRedirectService: AuthRedirectService,\r\n    protected winRef: WindowRef,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected checkoutConfigService: CheckoutConfigService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const routeState = this.winRef.nativeWindow?.history?.state;\r\n    const prefilledEmail = routeState?.['newUid'];\r\n\r\n    this.loginForm = this.fb.group({\r\n      userId: [\r\n        prefilledEmail?.length ? prefilledEmail : '',\r\n        [Validators.required, CustomFormValidators.emailValidator],\r\n      ],\r\n      password: ['', Validators.required],\r\n    });\r\n\r\n    if (this.checkoutConfigService.isGuestCheckout()) {\r\n      this.loginAsGuest = this.activatedRoute?.snapshot?.queryParams?.[\r\n        'forced'\r\n      ];\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.loginForm.valid) {\r\n      this.loginUser();\r\n    } else {\r\n      this.loginForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  protected loginUser(): void {\r\n    const { userId, password } = this.loginForm.controls;\r\n    this.auth.authorize(\r\n      userId.value.toLowerCase(), // backend accepts lowercase emails only\r\n      password.value\r\n    );\r\n\r\n    if (!this.sub) {\r\n      this.sub = this.auth.getUserToken().subscribe((data) => {\r\n        if (data && data.access_token) {\r\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\r\n          this.authRedirectService.redirect();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { LoginFormComponent } from './login-form.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturningCustomerLoginComponent: {\r\n          component: LoginFormComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [LoginFormComponent],\r\n  exports: [LoginFormComponent],\r\n  entryComponents: [LoginFormComponent],\r\n})\r\nexport class LoginFormModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService, User, UserService } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user$: Observable<User>;\r\n\r\n  constructor(private auth: AuthService, private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user$ = this.auth.isUserLoggedIn().pipe(\r\n      switchMap((isUserLoggedIn) => {\r\n        if (isUserLoggedIn) {\r\n          return this.userService.get();\r\n        } else {\r\n          return of(undefined);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        LoginComponent: {\r\n          component: LoginComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [LoginComponent],\r\n  entryComponents: [LoginComponent],\r\n  exports: [LoginComponent],\r\n})\r\nexport class LoginModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport {\r\n  AuthService,\r\n  CmsService,\r\n  PageType,\r\n  ProtectedRoutesService,\r\n  RoutingService,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n/**\r\n * Guards the _logout_ route.\r\n *\r\n * Takes care of routing the user to a logout page (if available) or redirects to\r\n * the homepage. If the homepage is protected, the user is redirected\r\n * to the login route instead.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogoutGuard implements CanActivate {\r\n  constructor(\r\n    protected auth: AuthService,\r\n    protected cms: CmsService,\r\n    protected routing: RoutingService,\r\n    protected semanticPathService: SemanticPathService,\r\n    protected protectedRoutes: ProtectedRoutesService\r\n  ) {}\r\n\r\n  canActivate(): Observable<any> {\r\n    this.logout();\r\n\r\n    return this.cms\r\n      .hasPage({\r\n        id: this.semanticPathService.get('logout'),\r\n        type: PageType.CONTENT_PAGE,\r\n      })\r\n      .pipe(\r\n        tap((hasPage) => {\r\n          if (!hasPage) {\r\n            this.redirect();\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Whenever there is no specific \"logout\" page configured in the CMS,\r\n   * we redirect after the user is logged out.\r\n   *\r\n   * The user gets redirected to the homepage, unless the homepage is protected\r\n   * (in case of a closed shop). We'll redirect to the login page instead.\r\n   */\r\n  protected redirect(): void {\r\n    const cxRoute = this.protectedRoutes.shouldProtect ? 'login' : 'home';\r\n    this.routing.go({ cxRoute });\r\n  }\r\n\r\n  /**\r\n   * Log user out.\r\n   *\r\n   * This is delegated to the `AuthService`.\r\n   */\r\n  protected logout(): void {\r\n    this.auth.logout();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout-guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LogoutGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  AnonymousConsent,\r\n  AnonymousConsentsConfig,\r\n  AnonymousConsentsService,\r\n  ConsentTemplate,\r\n  GlobalMessageEntities,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  Title,\r\n  UserService,\r\n  UserSignUp,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { sortTitles, CustomFormValidators } from '../../../shared/index';\r\n\r\n@Component({\r\n  selector: 'cx-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n  titles$: Observable<Title[]>;\r\n  loading$: Observable<boolean>;\r\n  private subscription = new Subscription();\r\n\r\n  anonymousConsent$: Observable<{\r\n    consent: AnonymousConsent;\r\n    template: string;\r\n  }>;\r\n\r\n  registerForm: FormGroup = this.fb.group(\r\n    {\r\n      titleCode: [''],\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\r\n      password: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.passwordValidator],\r\n      ],\r\n      passwordconf: ['', Validators.required],\r\n      newsletter: new FormControl({\r\n        value: false,\r\n        disabled: this.isConsentRequired(),\r\n      }),\r\n      termsandconditions: [false, Validators.requiredTrue],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.passwordsMustMatch(\r\n        'password',\r\n        'passwordconf'\r\n      ),\r\n    }\r\n  );\r\n\r\n  constructor(\r\n    protected userService: UserService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected fb: FormBuilder,\r\n    protected router: RoutingService,\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected anonymousConsentsConfig: AnonymousConsentsConfig\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.titles$ = this.userService.getTitles().pipe(\r\n      tap((titles) => {\r\n        if (Object.keys(titles).length === 0) {\r\n          this.userService.loadTitles();\r\n        }\r\n      }),\r\n      map((titles) => {\r\n        return titles.sort(sortTitles);\r\n      })\r\n    );\r\n\r\n    this.loading$ = this.userService.getRegisterUserResultLoading();\r\n    this.registerUserProcessInit();\r\n\r\n    // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\r\n    this.subscription.add(\r\n      this.globalMessageService\r\n        .get()\r\n        .pipe(filter((messages) => !!Object.keys(messages).length))\r\n        .subscribe((globalMessageEntities: GlobalMessageEntities) => {\r\n          const messages =\r\n            globalMessageEntities &&\r\n            globalMessageEntities[GlobalMessageType.MSG_TYPE_ERROR];\r\n\r\n          if (\r\n            messages &&\r\n            messages.some((message) => message === 'This field is required.')\r\n          ) {\r\n            this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\r\n            this.globalMessageService.add(\r\n              { key: 'register.titleRequired' },\r\n              GlobalMessageType.MSG_TYPE_ERROR\r\n            );\r\n          }\r\n        })\r\n    );\r\n\r\n    const { registerConsent } = this.anonymousConsentsConfig?.anonymousConsents;\r\n\r\n    this.anonymousConsent$ = combineLatest([\r\n      this.anonymousConsentsService.getConsent(registerConsent),\r\n      this.anonymousConsentsService.getTemplate(registerConsent),\r\n    ]).pipe(\r\n      map(([consent, template]: [AnonymousConsent, ConsentTemplate]) => {\r\n        return {\r\n          consent,\r\n          template: template ? template.description : '',\r\n        };\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.registerForm.get('newsletter').valueChanges.subscribe(() => {\r\n        this.toggleAnonymousConsent();\r\n      })\r\n    );\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.registerForm.valid) {\r\n      this.registerUser();\r\n    } else {\r\n      this.registerForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  registerUser(): void {\r\n    this.userService.register(\r\n      this.collectDataFromRegisterForm(this.registerForm.value)\r\n    );\r\n  }\r\n\r\n  titleSelected(title: Title): void {\r\n    this.registerForm['controls'].titleCode.setValue(title.code);\r\n  }\r\n\r\n  collectDataFromRegisterForm(formData: any): UserSignUp {\r\n    const { firstName, lastName, email, password, titleCode } = formData;\r\n\r\n    return {\r\n      firstName,\r\n      lastName,\r\n      uid: email.toLowerCase(),\r\n      password,\r\n      titleCode,\r\n    };\r\n  }\r\n\r\n  isConsentGiven(consent: AnonymousConsent): boolean {\r\n    return this.anonymousConsentsService.isConsentGiven(consent);\r\n  }\r\n\r\n  private isConsentRequired(): boolean {\r\n    const {\r\n      requiredConsents,\r\n      registerConsent,\r\n    } = this.anonymousConsentsConfig?.anonymousConsents;\r\n\r\n    if (requiredConsents && registerConsent) {\r\n      return requiredConsents.includes(registerConsent);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private onRegisterUserSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.router.go('login');\r\n      this.globalMessageService.add(\r\n        { key: 'register.postRegisterMessage' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n    }\r\n  }\r\n\r\n  toggleAnonymousConsent(): void {\r\n    const { registerConsent } = this.anonymousConsentsConfig.anonymousConsents;\r\n\r\n    if (Boolean(this.registerForm.get('newsletter').value)) {\r\n      this.anonymousConsentsService.giveConsent(registerConsent);\r\n    } else {\r\n      this.anonymousConsentsService.withdrawConsent(registerConsent);\r\n    }\r\n  }\r\n\r\n  private registerUserProcessInit(): void {\r\n    this.userService.resetRegisterUserProcessState();\r\n    this.subscription.add(\r\n      this.userService.getRegisterUserResultSuccess().subscribe((success) => {\r\n        this.onRegisterUserSuccess(success);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.userService.resetRegisterUserProcessState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule, FormErrorsModule } from '../../../shared/index';\r\nimport { LoginModule } from '../login/login.module';\r\nimport { RegisterComponent } from './register.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LoginModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    SpinnerModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        RegisterCustomerComponent: {\r\n          component: RegisterComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [RegisterComponent],\r\n  exports: [RegisterComponent],\r\n  entryComponents: [RegisterComponent],\r\n})\r\nexport class RegisterComponentModule {}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { CheckoutLoginModule } from './checkout-login/checkout-login.module';\nimport { LoginFormModule } from './login-form/login-form.module';\nimport { LoginModule } from './login/login.module';\nimport { LogoutModule } from './logout/logout.module';\nimport { RegisterComponentModule } from './register/register.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    LoginFormModule,\n    LogoutModule,\n    CheckoutLoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    RegisterComponentModule,\n  ],\n})\nexport class UserComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-wish-list-item',\n  templateUrl: './wish-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WishListItemComponent {\n  @Input()\n  isLoading = false;\n  @Input() cartEntry: OrderEntry;\n\n  @Output()\n  remove = new EventEmitter<OrderEntry>();\n\n  removeEntry(item: OrderEntry) {\n    this.remove.emit(item);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Cart, OrderEntry, WishListService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-wish-list',\n  templateUrl: './wish-list.component.html',\n})\nexport class WishListComponent {\n  wishList$: Observable<Cart> = this.wishListService.getWishList();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  constructor(protected wishListService: WishListService) {}\n\n  removeEntry(item: OrderEntry) {\n    this.wishListService.removeEntry(item);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport {\r\n  ItemCounterModule,\r\n  MediaModule,\r\n  StarRatingModule,\r\n} from '../../shared/index';\r\nimport { AddToCartModule } from '../cart/index';\r\nimport { WishListItemComponent } from './components/wish-list-item/wish-list-item.component';\r\nimport { WishListComponent } from './components/wish-list/wish-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AddToCartModule,\r\n    CommonModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    RouterModule,\r\n    StarRatingModule,\r\n    UrlModule,\r\n    ItemCounterModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        WishListComponent: {\r\n          component: WishListComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [WishListComponent, WishListItemComponent],\r\n  entryComponents: [WishListComponent],\r\n  exports: [WishListComponent, WishListItemComponent],\r\n})\r\nexport class WishListModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { HamburgerMenuModule } from '../layout/index';\r\nimport { AnonymousConsentManagementBannerModule } from './anonymous-consent-management/anonymous-consent-management.module';\r\nimport { AsmModule } from './asm/asm.module';\r\nimport { CartComponentModule } from './cart/cart.module';\r\nimport { CheckoutComponentModule } from './checkout/checkout.module';\r\nimport { BannerCarouselModule } from './content/banner-carousel/banner-carousel.module';\r\nimport {\r\n  BannerModule,\r\n  CmsParagraphModule,\r\n  LinkModule,\r\n  TabParagraphContainerModule,\r\n} from './content/index';\r\nimport { QualtricsModule, SiteContextSelectorModule } from './misc/index';\r\nimport {\r\n  AddressBookModule,\r\n  CloseAccountModule,\r\n  ConsentManagementModule,\r\n  ForgotPasswordModule,\r\n  MyCouponsModule,\r\n  MyInterestsModule,\r\n  NotificationPreferenceModule,\r\n  OrderCancellationModule,\r\n  OrderDetailsModule,\r\n  OrderHistoryModule,\r\n  OrderReturnModule,\r\n  PaymentMethodsModule,\r\n  ResetPasswordModule,\r\n  ReturnRequestDetailModule,\r\n  ReturnRequestListModule,\r\n  UpdateEmailModule,\r\n  UpdatePasswordModule,\r\n  UpdateProfileModule,\r\n} from './myaccount/index';\r\nimport {\r\n  BreadcrumbModule,\r\n  CategoryNavigationModule,\r\n  FooterNavigationModule,\r\n  NavigationModule,\r\n  SearchBoxModule,\r\n} from './navigation/index';\r\nimport { OrderConfirmationModule } from './order-confirmation/index';\r\nimport {\r\n  ProductCarouselModule,\r\n  ProductFacetNavigationModule,\r\n  ProductIntroModule,\r\n  ProductListModule,\r\n  ProductReferencesModule,\r\n  ProductTabsModule,\r\n  StockNotificationModule,\r\n} from './product/index';\r\nimport { ProductImagesModule } from './product/product-images/product-images.module';\r\nimport { ProductSummaryModule } from './product/product-summary/product-summary.module';\r\nimport { ProductVariantsModule } from './product/product-variants/product-variants.module';\r\nimport { StoreFinderModule } from './storefinder/store-finder.module';\r\nimport { UserComponentModule } from './user/user.module';\r\nimport { WishListModule } from './wish-list/wish-list.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AnonymousConsentManagementBannerModule,\r\n    AsmModule,\r\n    HamburgerMenuModule,\r\n    CmsParagraphModule,\r\n    LinkModule,\r\n    BannerModule,\r\n    CategoryNavigationModule,\r\n    NavigationModule,\r\n    FooterNavigationModule,\r\n    BreadcrumbModule,\r\n    SearchBoxModule,\r\n    SiteContextSelectorModule,\r\n    QualtricsModule,\r\n    AddressBookModule,\r\n    OrderHistoryModule,\r\n    OrderCancellationModule,\r\n    OrderReturnModule,\r\n    ReturnRequestListModule,\r\n    ReturnRequestDetailModule,\r\n    ProductListModule,\r\n    ProductFacetNavigationModule,\r\n    ProductTabsModule,\r\n    ProductCarouselModule,\r\n    ProductReferencesModule,\r\n    OrderDetailsModule,\r\n    PaymentMethodsModule,\r\n    UpdateEmailModule,\r\n    UpdatePasswordModule,\r\n    UpdateProfileModule,\r\n    ConsentManagementModule,\r\n    CloseAccountModule,\r\n    CartComponentModule,\r\n    TabParagraphContainerModule,\r\n    OrderConfirmationModule,\r\n    StoreFinderModule,\r\n    ProductImagesModule,\r\n    ProductSummaryModule,\r\n    ProductVariantsModule,\r\n    ProductIntroModule,\r\n    CheckoutComponentModule,\r\n    ForgotPasswordModule,\r\n    ResetPasswordModule,\r\n    BannerCarouselModule,\r\n    UserComponentModule,\r\n    MyCouponsModule,\r\n    WishListModule,\r\n    NotificationPreferenceModule,\r\n    MyInterestsModule,\r\n    StockNotificationModule,\r\n  ],\r\n})\r\nexport class CmsLibModule {}\r\n","import { inject, InjectionToken } from '@angular/core';\r\nimport { Route } from '@angular/router';\r\nimport {\r\n  DEFAULT_URL_MATCHER,\r\n  UrlMatcherFactory,\r\n  UrlMatcherService,\r\n} from '@spartacus/core';\r\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\r\n\r\nexport function getProductDetailsUrlMatcherFactory(\r\n  service: UrlMatcherService,\r\n  defaultMatcherFactory: UrlMatcherFactory\r\n): UrlMatcherFactory {\r\n  const factory = (route: Route) => {\r\n    const defaultMatcher = defaultMatcherFactory(route);\r\n    const suffixPDPMatcher = getSuffixUrlMatcher({\r\n      marker: 'p',\r\n      paramName: 'productCode',\r\n    });\r\n    return service.getCombined([defaultMatcher, suffixPDPMatcher]);\r\n  };\r\n  return factory;\r\n}\r\n\r\n/**\r\n * Injection token with url matcher factory for PDP.\r\n * The provided url matcher matches both:\r\n * - the configured `paths` from routing config and\r\n * - custom pattern  `** / p / :productCode`\r\n *\r\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\r\n * or additional matchers can be added for a specific route.\r\n *\r\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\r\n */\r\nexport const PRODUCT_DETAILS_URL_MATCHER = new InjectionToken<\r\n  UrlMatcherFactory\r\n>('PRODUCT_DETAILS_URL_MATCHER', {\r\n  providedIn: 'root',\r\n  factory: () =>\r\n    getProductDetailsUrlMatcherFactory(\r\n      inject(UrlMatcherService),\r\n      inject(DEFAULT_URL_MATCHER)\r\n    ),\r\n});\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\r\nimport { PRODUCT_DETAILS_URL_MATCHER } from './product-details-url-matcher';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'product' },\r\n      },\r\n    ]),\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<RoutingConfig>{\r\n      routing: {\r\n        routes: {\r\n          product: {\r\n            matchers: [PRODUCT_DETAILS_URL_MATCHER],\r\n          },\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n})\r\nexport class ProductDetailsPageModule {}\r\n","import { inject, InjectionToken } from '@angular/core';\r\nimport { Route } from '@angular/router';\r\nimport {\r\n  DEFAULT_URL_MATCHER,\r\n  UrlMatcherFactory,\r\n  UrlMatcherService,\r\n} from '@spartacus/core';\r\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\r\n\r\nexport function getProductListingUrlMatcherFactory(\r\n  service: UrlMatcherService,\r\n  defaultMatcherFactory: UrlMatcherFactory\r\n): UrlMatcherFactory {\r\n  const factory = (route: Route) => {\r\n    const defaultMatcher = defaultMatcherFactory(route);\r\n    const suffixPLPMatcher = getSuffixUrlMatcher({\r\n      marker: 'c',\r\n      paramName: 'categoryCode',\r\n    });\r\n    return service.getCombined([defaultMatcher, suffixPLPMatcher]);\r\n  };\r\n  return factory;\r\n}\r\n\r\n/**\r\n * Injection token with url matcher factory for PLP.\r\n * The provided url matcher matches both:\r\n * - the configured `paths` from routing config and\r\n * - custom pattern  `** / c / :categoryCode`\r\n *\r\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\r\n * or additional matchers can be added for a specific route.\r\n *\r\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\r\n */\r\nexport const PRODUCT_LISTING_URL_MATCHER = new InjectionToken<\r\n  UrlMatcherFactory\r\n>('PRODUCT_LISTING_URL_MATCHER', {\r\n  providedIn: 'root',\r\n  factory: () =>\r\n    getProductListingUrlMatcherFactory(\r\n      inject(UrlMatcherService),\r\n      inject(DEFAULT_URL_MATCHER)\r\n    ),\r\n});\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\r\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\r\nimport { PRODUCT_LISTING_URL_MATCHER } from './product-listing-url-matcher';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { pageLabel: 'search', cxRoute: 'search' },\r\n      },\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'brand' },\r\n      },\r\n      {\r\n        // The 'category' route  may include a greedy suffix url matcher '**/c/:categoryCode'\r\n        // So not to shadow the specific 'brand' route, the 'category' is the last route in the sequence.\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'category' },\r\n      },\r\n    ]),\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<RoutingConfig>{\r\n      routing: {\r\n        routes: {\r\n          category: {\r\n            matchers: [PRODUCT_LISTING_URL_MATCHER],\r\n          },\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n})\r\nexport class ProductListingPageModule {}\r\n","import { LayoutConfig } from '../../layout/config/layout-config';\r\n\r\nexport const b2cLayoutConfig: LayoutConfig = {\r\n  // deferredLoading: {\r\n  //   strategy: DeferLoadingStrategy.DEFER,\r\n  //   intersectionMargin: '50px',\r\n  // },\r\n  layoutSlots: {\r\n    header: {\r\n      lg: {\r\n        slots: [\r\n          'SiteContext',\r\n          'SiteLinks',\r\n          'SiteLogo',\r\n          'SearchBox',\r\n          'SiteLogin',\r\n          'MiniCart',\r\n          'NavigationBar',\r\n        ],\r\n      },\r\n      slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\r\n    },\r\n    navigation: {\r\n      lg: { slots: [] },\r\n      slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\r\n    },\r\n    footer: {\r\n      slots: ['Footer'],\r\n    },\r\n    LandingPage2Template: {\r\n      pageFold: 'Section2B',\r\n      slots: [\r\n        'Section1',\r\n        'Section2A',\r\n        'Section2B',\r\n        'Section2C',\r\n        'Section3',\r\n        'Section4',\r\n        'Section5',\r\n      ],\r\n    },\r\n\r\n    ContentPage1Template: {\r\n      slots: ['Section2A', 'Section2B'],\r\n    },\r\n    CategoryPageTemplate: {\r\n      pageFold: 'Section2',\r\n      slots: ['Section1', 'Section2', 'Section3'],\r\n    },\r\n    ProductListPageTemplate: {\r\n      slots: ['ProductLeftRefinements', 'ProductListSlot'],\r\n    },\r\n    ProductGridPageTemplate: {\r\n      slots: ['ProductLeftRefinements', 'ProductGridSlot'],\r\n    },\r\n    SearchResultsListPageTemplate: {\r\n      slots: [\r\n        'Section2',\r\n        'ProductLeftRefinements',\r\n        'SearchResultsListSlot',\r\n        'Section4',\r\n      ],\r\n    },\r\n    SearchResultsGridPageTemplate: {\r\n      slots: [\r\n        'Section2',\r\n        'ProductLeftRefinements',\r\n        'SearchResultsGridSlot',\r\n        'Section4',\r\n      ],\r\n    },\r\n    ProductDetailsPageTemplate: {\r\n      lg: {\r\n        pageFold: 'UpSelling',\r\n      },\r\n\r\n      pageFold: 'Summary',\r\n\r\n      slots: [\r\n        'Summary',\r\n        'UpSelling',\r\n        'CrossSelling',\r\n        'Tabs',\r\n        'PlaceholderContentSlot',\r\n      ],\r\n    },\r\n    CartPageTemplate: {\r\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\r\n    },\r\n    AccountPageTemplate: {\r\n      slots: ['BodyContent', 'SideContent'],\r\n    },\r\n    LoginPageTemplate: {\r\n      slots: ['LeftContentSlot', 'RightContentSlot'],\r\n    },\r\n    ErrorPageTemplate: {\r\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\r\n    },\r\n    OrderConfirmationPageTemplate: {\r\n      slots: ['BodyContent', 'SideContent'],\r\n    },\r\n    MultiStepCheckoutSummaryPageTemplate: {\r\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\r\n    },\r\n    CheckoutLoginPageTemplate: {\r\n      slots: ['RightContentSlot'],\r\n    },\r\n  },\r\n};\r\n","import { MediaConfig } from '../../shared/components/media/media.config';\r\n\r\nexport const mediaConfig: MediaConfig = {\r\n  mediaFormats: {\r\n    mobile: {\r\n      width: 400,\r\n    },\r\n    tablet: {\r\n      width: 770,\r\n    },\r\n    desktop: {\r\n      width: 1140,\r\n    },\r\n    widescreen: {\r\n      width: 1400,\r\n    },\r\n    // product media\r\n    cartIcon: {\r\n      width: 65,\r\n    },\r\n    thumbnail: {\r\n      width: 96,\r\n    },\r\n    product: {\r\n      width: 284,\r\n    },\r\n    zoom: {\r\n      width: 515,\r\n    },\r\n  },\r\n};\r\n","import { CmsPageSlotsConfig, ContentSlotComponentData } from '@spartacus/core';\n\nexport const headerComponents: {\n  [key: string]: ContentSlotComponentData | any;\n} = {\n  HamburgerMenuComponent: {\n    typeCode: 'HamburgerMenuComponent',\n    flexType: 'HamburgerMenuComponent',\n  },\n  LoginComponent: {\n    typeCode: 'LoginComponent',\n    flexType: 'LoginComponent',\n    uid: 'LoginComponent',\n  },\n};\n\nexport const defaultPageHeaderConfig: CmsPageSlotsConfig = {\n  PreHeader: {\n    componentIds: ['HamburgerMenuComponent'],\n  },\n  SiteLogin: {\n    componentIds: ['LoginComponent'],\n  },\n};\n","import { CmsStructureConfig } from '@spartacus/core';\nimport {\n  defaultPageHeaderConfig,\n  headerComponents,\n} from './default-header.config';\n\nexport function defaultCmsContentConfig(): CmsStructureConfig {\n  return {\n    cmsStructure: {\n      components: {\n        ...headerComponents,\n      },\n      slots: {\n        ...defaultPageHeaderConfig,\n      },\n      pages: [],\n    },\n  };\n}\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  AnonymousConsentsModule,\r\n  AuthModule,\r\n  CartModule,\r\n  CheckoutModule,\r\n  CmsModule,\r\n  ConfigInitializerModule,\r\n  ConfigModule,\r\n  ConfigValidatorModule,\r\n  FeaturesConfigModule,\r\n  GlobalMessageModule,\r\n  I18nModule,\r\n  ProcessModule,\r\n  ProductModule,\r\n  provideConfigFromMetaTags,\r\n  StateModule,\r\n  UserModule,\r\n} from '@spartacus/core';\r\nimport { RoutingModule } from '../cms-structure/routing/routing.module';\r\nimport { LayoutModule } from '../layout/layout.module';\r\nimport { MediaModule } from '../shared/components/media/media.module';\r\nimport { ViewConfigModule } from '../shared/config/view-config.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    StateModule.forRoot(),\r\n    AuthModule.forRoot(),\r\n    AnonymousConsentsModule.forRoot(),\r\n    ConfigModule.forRoot(),\r\n    ConfigInitializerModule.forRoot(),\r\n    ConfigValidatorModule.forRoot(),\r\n    RoutingModule.forRoot(),\r\n    I18nModule.forRoot(),\r\n    CmsModule.forRoot(),\r\n    GlobalMessageModule.forRoot(),\r\n    ProcessModule.forRoot(),\r\n    CartModule.forRoot(),\r\n    CheckoutModule.forRoot(),\r\n    UserModule.forRoot(),\r\n    ProductModule.forRoot(),\r\n    ViewConfigModule.forRoot(),\r\n    FeaturesConfigModule.forRoot('2.0'),\r\n    LayoutModule,\r\n    MediaModule.forRoot(),\r\n  ],\r\n  exports: [LayoutModule],\r\n  providers: [...provideConfigFromMetaTags()],\r\n})\r\nexport class StorefrontFoundationModule {}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport {\r\n  ExternalRoutesModule,\r\n  OccModule,\r\n  PersonalizationModule,\r\n  provideConfig,\r\n  SiteContextModule,\r\n  SmartEditModule,\r\n} from '@spartacus/core';\r\nimport { AsmModule } from '../cms-components/asm/asm.module';\r\nimport { ProductDetailsPageModule } from '../cms-pages/product-details-page/product-details-page.module';\r\nimport { ProductListingPageModule } from '../cms-pages/product-listing-page/product-listing-page.module';\r\nimport { MainModule } from '../layout/main/main.module';\r\nimport { StorefrontConfig } from '../storefront-config';\r\nimport { StorefrontFoundationModule } from './storefront-foundation.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot([], {\r\n      scrollPositionRestoration: 'enabled',\r\n      anchorScrolling: 'enabled',\r\n    }),\r\n\r\n    StoreModule.forRoot({}),\r\n    EffectsModule.forRoot([]),\r\n\r\n    // ASM module must be imported before the `AuthModule (which is imported in `StorefrontFoundationModule`)\r\n    // since we might have conflicting interceptor logic. See #5461.\r\n    AsmModule,\r\n\r\n    StorefrontFoundationModule,\r\n    MainModule,\r\n    SiteContextModule.forRoot(), // should be imported after RouterModule.forRoot, because it overwrites UrlSerializer\r\n\r\n    SmartEditModule.forRoot(), // should be custom\r\n    PersonalizationModule.forRoot(), // should be custom\r\n\r\n    // opt-in explicitly\r\n    OccModule.forRoot(),\r\n    ProductDetailsPageModule,\r\n    ProductListingPageModule,\r\n    ExternalRoutesModule.forRoot(),\r\n  ],\r\n  exports: [MainModule, StorefrontFoundationModule],\r\n})\r\nexport class StorefrontModule {\r\n  static withConfig(\r\n    config?: StorefrontConfig\r\n  ): ModuleWithProviders<StorefrontModule> {\r\n    return {\r\n      ngModule: StorefrontModule,\r\n      providers: [provideConfig(config)],\r\n    };\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport {\r\n  provideConfig,\r\n  provideDefaultConfig,\r\n  provideDefaultConfigFactory,\r\n} from '@spartacus/core';\r\nimport { CmsLibModule } from '../cms-components/cms-lib.module';\r\nimport { StorefrontConfig } from '../storefront-config';\r\nimport { b2cLayoutConfig, mediaConfig } from './config/index';\r\nimport { defaultCmsContentConfig } from './config/static-cms-structure/default-cms-content.config';\r\nimport { StorefrontModule } from './storefront.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    StorefrontModule,\r\n\r\n    // the cms lib module contains all components that added in the bundle\r\n    CmsLibModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig({\r\n      pwa: {\r\n        enabled: true,\r\n        addToHomeScreen: true,\r\n      },\r\n    }),\r\n    provideDefaultConfig(b2cLayoutConfig),\r\n    provideDefaultConfig(mediaConfig),\r\n    provideDefaultConfigFactory(defaultCmsContentConfig),\r\n  ],\r\n  exports: [StorefrontModule],\r\n})\r\nexport class B2cStorefrontModule {\r\n  static withConfig(\r\n    config?: StorefrontConfig\r\n  ): ModuleWithProviders<B2cStorefrontModule> {\r\n    return {\r\n      ngModule: B2cStorefrontModule,\r\n      providers: [provideConfig(config)],\r\n    };\r\n  }\r\n}\r\n","/*\n * Public API Surface of storefrontlib\n */\n\nexport * from './cms-components/index';\nexport * from './cms-pages/index';\nexport * from './cms-structure/index';\nexport * from './layout/index';\nexport * from './recipes/index';\nexport * from './recipes/storefront.module';\nexport * from './shared/index';\nexport * from './storefront-config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {defaultAnonymousConsentLayoutConfig as ɵv} from './cms-components/anonymous-consent-management/default-anonymous-consent-layout.config';\nexport {AsmLoaderModule as ɵw,asmFactory as ɵx} from './cms-components/asm/asm-loader.module';\nexport {AsmMainUiComponent as ɵz} from './cms-components/asm/asm-main-ui/asm-main-ui.component';\nexport {AsmSessionTimerComponent as ɵbd} from './cms-components/asm/asm-session-timer/asm-session-timer.component';\nexport {FormatTimerPipe as ɵbe} from './cms-components/asm/asm-session-timer/format-timer.pipe';\nexport {AsmToggleUiComponent as ɵbg} from './cms-components/asm/asm-toggle-ui/asm-toggle-ui.component';\nexport {CSAgentLoginFormComponent as ɵbb} from './cms-components/asm/csagent-login-form/csagent-login-form.component';\nexport {CustomerEmulationComponent as ɵbf} from './cms-components/asm/customer-emulation/customer-emulation.component';\nexport {CustomerSelectionComponent as ɵbc} from './cms-components/asm/customer-selection/customer-selection.component';\nexport {defaultAsmLayoutConfig as ɵbh} from './cms-components/asm/default-asm-layout.config';\nexport {AsmComponentService as ɵba} from './cms-components/asm/services/asm-component.service';\nexport {AsmEnablerService as ɵy} from './cms-components/asm/services/asm-enabler.service';\nexport {defaultCheckoutConfig as ɵbi} from './cms-components/checkout/config/default-checkout-config';\nexport {defaultQualtricsConfig as ɵbj} from './cms-components/misc/qualtrics/config/default-qualtrics-config';\nexport {MyCouponsComponentService as ɵbp} from './cms-components/myaccount/my-coupons/my-coupons.component.service';\nexport {ReturnRequestService as ɵbn} from './cms-components/myaccount/order/return-request-detail/return-request.service';\nexport {CmsPageGuardService as ɵbk} from './cms-structure/guards/cms-page-guard.service';\nexport {pwaConfigurationFactory as ɵa,pwaFactory as ɵb} from './cms-structure/pwa/pwa.module';\nexport {AddToHomeScreenService as ɵbo} from './cms-structure/pwa/services/add-to-home-screen.service';\nexport {addCmsRoute as ɵbq} from './cms-structure/routing/cms-route/add-cms-route';\nexport {defaultRoutingConfig as ɵbs,defaultStorefrontRoutesConfig as ɵbr} from './cms-structure/routing/default-routing-config';\nexport {htmlLangProvider as ɵbt,setHtmlLangAttribute as ɵbu} from './cms-structure/seo/html-lang-provider';\nexport {getStructuredDataFactory as ɵc} from './cms-structure/seo/structured-data/structured-data.module';\nexport {CmsComponentsService as ɵbm} from './cms-structure/services';\nexport {CmsRoutesImplService as ɵbl} from './cms-structure/services/cms-routes-impl.service';\nexport {AutoFocusDirective as ɵi} from './layout/a11y/keyboard-focus/autofocus/auto-focus.directive';\nexport {AutoFocusService as ɵr} from './layout/a11y/keyboard-focus/autofocus/auto-focus.service';\nexport {BaseFocusDirective as ɵn} from './layout/a11y/keyboard-focus/base/base-focus.directive';\nexport {BaseFocusService as ɵo} from './layout/a11y/keyboard-focus/base/base-focus.service';\nexport {BlockFocusDirective as ɵl} from './layout/a11y/keyboard-focus/block/block-focus.directive';\nexport {EscapeFocusDirective as ɵj} from './layout/a11y/keyboard-focus/escape/escape-focus.directive';\nexport {EscapeFocusService as ɵq} from './layout/a11y/keyboard-focus/escape/escape-focus.service';\nexport {FOCUS_ATTR as ɵd} from './layout/a11y/keyboard-focus/keyboard-focus.model';\nexport {LockFocusDirective as ɵf} from './layout/a11y/keyboard-focus/lock/lock-focus.directive';\nexport {LockFocusService as ɵu} from './layout/a11y/keyboard-focus/lock/lock-focus.service';\nexport {PersistFocusDirective as ɵk} from './layout/a11y/keyboard-focus/persist/persist-focus.directive';\nexport {PersistFocusService as ɵp} from './layout/a11y/keyboard-focus/persist/persist-focus.service';\nexport {TabFocusDirective as ɵh} from './layout/a11y/keyboard-focus/tab/tab-focus.directive';\nexport {TabFocusService as ɵs} from './layout/a11y/keyboard-focus/tab/tab-focus.service';\nexport {TrapFocusDirective as ɵg} from './layout/a11y/keyboard-focus/trap/trap-focus.directive';\nexport {TrapFocusService as ɵt} from './layout/a11y/keyboard-focus/trap/trap-focus.service';\nexport {VisibleFocusDirective as ɵm} from './layout/a11y/keyboard-focus/visible/visible-focus.directive';\nexport {skipLinkFactory as ɵe} from './layout/a11y/skip-link/skip-link.module';"],"names":["_a","AsmCoreModule","CoreRoutingModule"],"mappings":"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"}