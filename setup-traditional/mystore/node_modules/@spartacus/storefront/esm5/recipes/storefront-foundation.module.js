import { __decorate, __read, __spread } from "tslib";
import { NgModule } from '@angular/core';
import { AnonymousConsentsModule, AuthModule, CartModule, CheckoutModule, CmsModule, ConfigInitializerModule, ConfigModule, ConfigValidatorModule, FeaturesConfigModule, GlobalMessageModule, I18nModule, ProcessModule, ProductModule, provideConfigFromMetaTags, StateModule, UserModule, } from '@spartacus/core';
import { RoutingModule } from '../cms-structure/routing/routing.module';
import { LayoutModule } from '../layout/layout.module';
import { MediaModule } from '../shared/components/media/media.module';
import { ViewConfigModule } from '../shared/config/view-config.module';
var StorefrontFoundationModule = /** @class */ (function () {
    function StorefrontFoundationModule() {
    }
    StorefrontFoundationModule = __decorate([
        NgModule({
            imports: [
                StateModule.forRoot(),
                AuthModule.forRoot(),
                AnonymousConsentsModule.forRoot(),
                ConfigModule.forRoot(),
                ConfigInitializerModule.forRoot(),
                ConfigValidatorModule.forRoot(),
                RoutingModule.forRoot(),
                I18nModule.forRoot(),
                CmsModule.forRoot(),
                GlobalMessageModule.forRoot(),
                ProcessModule.forRoot(),
                CartModule.forRoot(),
                CheckoutModule.forRoot(),
                UserModule.forRoot(),
                ProductModule.forRoot(),
                ViewConfigModule.forRoot(),
                FeaturesConfigModule.forRoot('2.0'),
                LayoutModule,
                MediaModule.forRoot(),
            ],
            exports: [LayoutModule],
            providers: __spread(provideConfigFromMetaTags()),
        })
    ], StorefrontFoundationModule);
    return StorefrontFoundationModule;
}());
export { StorefrontFoundationModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmVmcm9udC1mb3VuZGF0aW9uLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbInJlY2lwZXMvc3RvcmVmcm9udC1mb3VuZGF0aW9uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFVBQVUsRUFDVixVQUFVLEVBQ1YsY0FBYyxFQUNkLFNBQVMsRUFDVCx1QkFBdUIsRUFDdkIsWUFBWSxFQUNaLHFCQUFxQixFQUNyQixvQkFBb0IsRUFDcEIsbUJBQW1CLEVBQ25CLFVBQVUsRUFDVixhQUFhLEVBQ2IsYUFBYSxFQUNiLHlCQUF5QixFQUN6QixXQUFXLEVBQ1gsVUFBVSxHQUNYLE1BQU0saUJBQWlCLENBQUM7QUFDekIsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDdEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUEyQnZFO0lBQUE7SUFBeUMsQ0FBQztJQUE3QiwwQkFBMEI7UUF6QnRDLFFBQVEsQ0FBQztZQUNSLE9BQU8sRUFBRTtnQkFDUCxXQUFXLENBQUMsT0FBTyxFQUFFO2dCQUNyQixVQUFVLENBQUMsT0FBTyxFQUFFO2dCQUNwQix1QkFBdUIsQ0FBQyxPQUFPLEVBQUU7Z0JBQ2pDLFlBQVksQ0FBQyxPQUFPLEVBQUU7Z0JBQ3RCLHVCQUF1QixDQUFDLE9BQU8sRUFBRTtnQkFDakMscUJBQXFCLENBQUMsT0FBTyxFQUFFO2dCQUMvQixhQUFhLENBQUMsT0FBTyxFQUFFO2dCQUN2QixVQUFVLENBQUMsT0FBTyxFQUFFO2dCQUNwQixTQUFTLENBQUMsT0FBTyxFQUFFO2dCQUNuQixtQkFBbUIsQ0FBQyxPQUFPLEVBQUU7Z0JBQzdCLGFBQWEsQ0FBQyxPQUFPLEVBQUU7Z0JBQ3ZCLFVBQVUsQ0FBQyxPQUFPLEVBQUU7Z0JBQ3BCLGNBQWMsQ0FBQyxPQUFPLEVBQUU7Z0JBQ3hCLFVBQVUsQ0FBQyxPQUFPLEVBQUU7Z0JBQ3BCLGFBQWEsQ0FBQyxPQUFPLEVBQUU7Z0JBQ3ZCLGdCQUFnQixDQUFDLE9BQU8sRUFBRTtnQkFDMUIsb0JBQW9CLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztnQkFDbkMsWUFBWTtnQkFDWixXQUFXLENBQUMsT0FBTyxFQUFFO2FBQ3RCO1lBQ0QsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDO1lBQ3ZCLFNBQVMsV0FBTSx5QkFBeUIsRUFBRSxDQUFDO1NBQzVDLENBQUM7T0FDVywwQkFBMEIsQ0FBRztJQUFELGlDQUFDO0NBQUEsQUFBMUMsSUFBMEM7U0FBN0IsMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICBBbm9ueW1vdXNDb25zZW50c01vZHVsZSxcclxuICBBdXRoTW9kdWxlLFxyXG4gIENhcnRNb2R1bGUsXHJcbiAgQ2hlY2tvdXRNb2R1bGUsXHJcbiAgQ21zTW9kdWxlLFxyXG4gIENvbmZpZ0luaXRpYWxpemVyTW9kdWxlLFxyXG4gIENvbmZpZ01vZHVsZSxcclxuICBDb25maWdWYWxpZGF0b3JNb2R1bGUsXHJcbiAgRmVhdHVyZXNDb25maWdNb2R1bGUsXHJcbiAgR2xvYmFsTWVzc2FnZU1vZHVsZSxcclxuICBJMThuTW9kdWxlLFxyXG4gIFByb2Nlc3NNb2R1bGUsXHJcbiAgUHJvZHVjdE1vZHVsZSxcclxuICBwcm92aWRlQ29uZmlnRnJvbU1ldGFUYWdzLFxyXG4gIFN0YXRlTW9kdWxlLFxyXG4gIFVzZXJNb2R1bGUsXHJcbn0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcclxuaW1wb3J0IHsgUm91dGluZ01vZHVsZSB9IGZyb20gJy4uL2Ntcy1zdHJ1Y3R1cmUvcm91dGluZy9yb3V0aW5nLm1vZHVsZSc7XHJcbmltcG9ydCB7IExheW91dE1vZHVsZSB9IGZyb20gJy4uL2xheW91dC9sYXlvdXQubW9kdWxlJztcclxuaW1wb3J0IHsgTWVkaWFNb2R1bGUgfSBmcm9tICcuLi9zaGFyZWQvY29tcG9uZW50cy9tZWRpYS9tZWRpYS5tb2R1bGUnO1xyXG5pbXBvcnQgeyBWaWV3Q29uZmlnTW9kdWxlIH0gZnJvbSAnLi4vc2hhcmVkL2NvbmZpZy92aWV3LWNvbmZpZy5tb2R1bGUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBTdGF0ZU1vZHVsZS5mb3JSb290KCksXHJcbiAgICBBdXRoTW9kdWxlLmZvclJvb3QoKSxcclxuICAgIEFub255bW91c0NvbnNlbnRzTW9kdWxlLmZvclJvb3QoKSxcclxuICAgIENvbmZpZ01vZHVsZS5mb3JSb290KCksXHJcbiAgICBDb25maWdJbml0aWFsaXplck1vZHVsZS5mb3JSb290KCksXHJcbiAgICBDb25maWdWYWxpZGF0b3JNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgUm91dGluZ01vZHVsZS5mb3JSb290KCksXHJcbiAgICBJMThuTW9kdWxlLmZvclJvb3QoKSxcclxuICAgIENtc01vZHVsZS5mb3JSb290KCksXHJcbiAgICBHbG9iYWxNZXNzYWdlTW9kdWxlLmZvclJvb3QoKSxcclxuICAgIFByb2Nlc3NNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgQ2FydE1vZHVsZS5mb3JSb290KCksXHJcbiAgICBDaGVja291dE1vZHVsZS5mb3JSb290KCksXHJcbiAgICBVc2VyTW9kdWxlLmZvclJvb3QoKSxcclxuICAgIFByb2R1Y3RNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgVmlld0NvbmZpZ01vZHVsZS5mb3JSb290KCksXHJcbiAgICBGZWF0dXJlc0NvbmZpZ01vZHVsZS5mb3JSb290KCcyLjAnKSxcclxuICAgIExheW91dE1vZHVsZSxcclxuICAgIE1lZGlhTW9kdWxlLmZvclJvb3QoKSxcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtMYXlvdXRNb2R1bGVdLFxyXG4gIHByb3ZpZGVyczogWy4uLnByb3ZpZGVDb25maWdGcm9tTWV0YVRhZ3MoKV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTdG9yZWZyb250Rm91bmRhdGlvbk1vZHVsZSB7fVxyXG4iXX0=