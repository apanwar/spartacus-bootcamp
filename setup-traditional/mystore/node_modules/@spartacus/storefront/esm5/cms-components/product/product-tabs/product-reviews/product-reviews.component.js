import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ViewChild, ElementRef, ChangeDetectorRef, } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { Product, ProductReviewService, Review } from '@spartacus/core';
import { distinctUntilChanged, filter, map, switchMap, tap, } from 'rxjs/operators';
import { CurrentProductService } from '../../current-product.service';
import { CustomFormValidators } from '../../../../shared/index';
var ProductReviewsComponent = /** @class */ (function () {
    function ProductReviewsComponent(reviewService, currentProductService, fb, cd) {
        var _this = this;
        this.reviewService = reviewService;
        this.currentProductService = currentProductService;
        this.fb = fb;
        this.cd = cd;
        this.isWritingReview = false;
        // TODO: configurable
        this.initialMaxListItems = 5;
        this.product$ = this.currentProductService.getProduct();
        this.reviews$ = this.product$.pipe(filter(function (p) { return !!p; }), map(function (p) { return p.code; }), distinctUntilChanged(), switchMap(function (productCode) {
            return _this.reviewService.getByProductCode(productCode);
        }), tap(function () {
            _this.resetReviewForm();
            _this.maxListItems = _this.initialMaxListItems;
        }));
    }
    ProductReviewsComponent.prototype.initiateWriteReview = function () {
        this.isWritingReview = true;
        this.cd.detectChanges();
        if (this.titleInput && this.titleInput.nativeElement) {
            this.titleInput.nativeElement.focus();
        }
    };
    ProductReviewsComponent.prototype.cancelWriteReview = function () {
        this.isWritingReview = false;
        this.resetReviewForm();
        this.cd.detectChanges();
        if (this.writeReviewButton && this.writeReviewButton.nativeElement) {
            this.writeReviewButton.nativeElement.focus();
        }
    };
    ProductReviewsComponent.prototype.setRating = function (rating) {
        this.reviewForm.controls.rating.setValue(rating);
    };
    ProductReviewsComponent.prototype.submitReview = function (product) {
        if (this.reviewForm.valid) {
            this.addReview(product);
        }
        else {
            this.reviewForm.markAllAsTouched();
        }
    };
    ProductReviewsComponent.prototype.addReview = function (product) {
        var reviewFormControls = this.reviewForm.controls;
        var review = {
            headline: reviewFormControls.title.value,
            comment: reviewFormControls.comment.value,
            rating: reviewFormControls.rating.value,
            alias: reviewFormControls.reviewerName.value,
        };
        this.reviewService.add(product.code, review);
        this.isWritingReview = false;
        this.resetReviewForm();
        this.cd.detectChanges();
        if (this.writeReviewButton && this.writeReviewButton.nativeElement) {
            this.writeReviewButton.nativeElement.focus();
        }
    };
    ProductReviewsComponent.prototype.resetReviewForm = function () {
        this.reviewForm = this.fb.group({
            title: ['', Validators.required],
            comment: ['', Validators.required],
            rating: [null, CustomFormValidators.starRatingEmpty],
            reviewerName: '',
        });
    };
    ProductReviewsComponent.ctorParameters = function () { return [
        { type: ProductReviewService },
        { type: CurrentProductService },
        { type: FormBuilder },
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        ViewChild('titleInput', { static: false })
    ], ProductReviewsComponent.prototype, "titleInput", void 0);
    __decorate([
        ViewChild('writeReviewButton', { static: false })
    ], ProductReviewsComponent.prototype, "writeReviewButton", void 0);
    ProductReviewsComponent = __decorate([
        Component({
            selector: 'cx-product-reviews',
            template: "<div class=\"container\" *ngIf=\"product$ | async as product\">\r\n  <h2>\r\n    {{ 'productDetails.reviews' | cxTranslate }} ({{ product.numberOfReviews }})\r\n  </h2>\r\n  <ng-container *ngIf=\"!isWritingReview; else writeReview\">\r\n    <div class=\"header\">\r\n      <h3>{{ 'productReview.overallRating' | cxTranslate }}</h3>\r\n      <button\r\n        #writeReviewButton\r\n        class=\"btn btn-primary\"\r\n        (click)=\"initiateWriteReview()\"\r\n      >\r\n        {{ 'productReview.writeReview' | cxTranslate }}\r\n      </button>\r\n      <cx-star-rating\r\n        *ngIf=\"product.averageRating\"\r\n        class=\"rating\"\r\n        [rating]=\"product.averageRating\"\r\n        [disabled]=\"true\"\r\n      ></cx-star-rating>\r\n      <div class=\"rating\" *ngIf=\"!product.averageRating\">\r\n        {{ 'productDetails.noReviews' | cxTranslate }}\r\n      </div>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"!isWritingReview; else writeReview\">\r\n      <ng-container *ngIf=\"reviews$ | async as reviews\">\r\n        <div\r\n          class=\"review\"\r\n          tabindex=\"0\"\r\n          *ngFor=\"let review of reviews | slice: 0:maxListItems\"\r\n        >\r\n          <div class=\"title\">{{ review.headline }}</div>\r\n          <cx-star-rating\r\n            [rating]=\"review.rating\"\r\n            [disabled]=\"true\"\r\n          ></cx-star-rating>\r\n          <div class=\"name\">\r\n            {{ review.alias ? review.alias : review.principal?.name }}\r\n          </div>\r\n          <div class=\"date\">{{ review.date | cxDate }}</div>\r\n          <div class=\"text\">{{ review.comment }}</div>\r\n        </div>\r\n        <div *ngIf=\"reviews.length > initialMaxListItems\">\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            (click)=\"maxListItems = reviews.length\"\r\n            *ngIf=\"maxListItems === initialMaxListItems\"\r\n          >\r\n            {{ 'productReview.more' | cxTranslate }}\r\n          </button>\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            (click)=\"maxListItems = initialMaxListItems\"\r\n            *ngIf=\"maxListItems !== initialMaxListItems\"\r\n          >\r\n            {{ 'productReview.less' | cxTranslate }}\r\n          </button>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-template #writeReview>\r\n    <form (ngSubmit)=\"submitReview(product)\" [formGroup]=\"reviewForm\">\r\n      <div class=\"form-group\">\r\n        <label>\r\n          <span class=\"label-content\">{{\r\n            'productReview.reviewTitle' | cxTranslate\r\n          }}</span>\r\n          <input\r\n            #titleInput\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"title\"\r\n          />\r\n          <cx-form-errors [control]=\"reviewForm.get('title')\"></cx-form-errors>\r\n        </label>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>\r\n          <span class=\"label-content\">{{\r\n            'productReview.writeYourComments' | cxTranslate\r\n          }}</span>\r\n          <textarea\r\n            class=\"form-control\"\r\n            rows=\"3\"\r\n            formControlName=\"comment\"\r\n          ></textarea>\r\n          <cx-form-errors\r\n            [control]=\"reviewForm.get('comment')\"\r\n          ></cx-form-errors>\r\n        </label>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>\r\n          <span class=\"label-content\">{{\r\n            'productReview.rating' | cxTranslate\r\n          }}</span>\r\n          <input type=\"number\" formControlName=\"rating\" class=\"rating-input\" />\r\n          <cx-star-rating (change)=\"setRating($event)\"></cx-star-rating>\r\n          <cx-form-errors [control]=\"reviewForm.get('rating')\"></cx-form-errors>\r\n        </label>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>\r\n          <span class=\"label-content\">{{\r\n            'productReview.reviewerName' | cxTranslate\r\n          }}</span>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"reviewerName\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-12 col-md-4\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-block btn-secondary\"\r\n            (click)=\"cancelWriteReview()\"\r\n          >\r\n            {{ 'common.cancel' | cxTranslate }}\r\n          </button>\r\n        </div>\r\n        <div class=\"col-12 col-md-4\">\r\n          <button type=\"submit\" class=\"btn btn-block btn-primary\">\r\n            {{ 'common.submit' | cxTranslate }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </ng-template>\r\n</div>\r\n",
            changeDetection: ChangeDetectionStrategy.OnPush
        })
    ], ProductReviewsComponent);
    return ProductReviewsComponent;
}());
export { ProductReviewsComponent };
//# sourceMappingURL=data:application/json;base64,