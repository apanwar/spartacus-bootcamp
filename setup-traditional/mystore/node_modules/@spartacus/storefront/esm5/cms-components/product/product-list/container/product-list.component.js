import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BehaviorSubject, Subscription } from 'rxjs';
import { take } from 'rxjs/operators';
import { PageLayoutService } from '../../../../cms-structure/page/index';
import { ViewConfig } from '../../../../shared/config/view-config';
import { ViewModes } from '../product-view/product-view.component';
import { ProductListComponentService } from './product-list-component.service';
var ProductListComponent = /** @class */ (function () {
    function ProductListComponent(pageLayoutService, productListComponentService, scrollConfig) {
        this.pageLayoutService = pageLayoutService;
        this.productListComponentService = productListComponentService;
        this.scrollConfig = scrollConfig;
        this.subscription = new Subscription();
        this.model$ = this.productListComponentService
            .model$;
        this.viewMode$ = new BehaviorSubject(ViewModes.Grid);
        this.ViewModes = ViewModes;
    }
    ProductListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isInfiniteScroll = this.scrollConfig.view.infiniteScroll.active;
        this.subscription.add(this.pageLayoutService.templateName$
            .pipe(take(1))
            .subscribe(function (template) {
            _this.viewMode$.next(template === 'ProductGridPageTemplate'
                ? ViewModes.Grid
                : ViewModes.List);
        }));
    };
    ProductListComponent.prototype.sortList = function (sortCode) {
        this.productListComponentService.sort(sortCode);
    };
    ProductListComponent.prototype.setViewMode = function (mode) {
        this.viewMode$.next(mode);
    };
    ProductListComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    ProductListComponent.ctorParameters = function () { return [
        { type: PageLayoutService },
        { type: ProductListComponentService },
        { type: ViewConfig }
    ]; };
    ProductListComponent = __decorate([
        Component({
            selector: 'cx-product-list',
            template: "<div class=\"cx-page\" *ngIf=\"model$ | async as model\">\r\n  <section class=\"cx-page-section\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 col-lg-12\" *ngIf=\"viewMode$ | async as viewMode\">\r\n          <div class=\"cx-sorting top\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-lg-4 mr-auto\">\r\n                <div class=\"form-group cx-sort-dropdown\">\r\n                  <cx-sorting\r\n                    [sortOptions]=\"model.sorts\"\r\n                    (sortListEvent)=\"sortList($event)\"\r\n                    [selectedOption]=\"model.pagination.sort\"\r\n                    placeholder=\"{{\r\n                      'productList.sortByRelevance' | cxTranslate\r\n                    }}\"\r\n                  ></cx-sorting>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"!isInfiniteScroll\" class=\"col-auto\">\r\n                <div\r\n                  class=\"cx-pagination\"\r\n                  aria-label=\"product search pagination\"\r\n                >\r\n                  <cx-pagination\r\n                    [pagination]=\"model.pagination\"\r\n                    queryParam=\"currentPage\"\r\n                    [defaultPage]=\"0\"\r\n                  ></cx-pagination>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-auto ml-auto ml-lg-0\">\r\n                <cx-product-view\r\n                  (modeChange)=\"setViewMode($event)\"\r\n                  [mode]=\"viewMode\"\r\n                ></cx-product-view>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"cx-product-container\">\r\n            <!-- Product list when using pagination -->\r\n            <ng-container *ngIf=\"!isInfiniteScroll; else infiniteScroll\">\r\n              <ng-container *ngIf=\"viewMode === ViewModes.Grid\">\r\n                <div class=\"row\">\r\n                  <cx-product-grid-item\r\n                    *ngFor=\"let product of model?.products\"\r\n                    [product]=\"product\"\r\n                    class=\"col-12 col-sm-6 col-md-4\"\r\n                  ></cx-product-grid-item>\r\n                </div>\r\n              </ng-container>\r\n\r\n              <ng-container *ngIf=\"viewMode === ViewModes.List\">\r\n                <cx-product-list-item\r\n                  *ngFor=\"let product of model?.products\"\r\n                  [product]=\"product\"\r\n                  class=\"cx-product-search-list\"\r\n                ></cx-product-list-item>\r\n              </ng-container>\r\n            </ng-container>\r\n\r\n            <!-- Product list when using infinite scroll -->\r\n            <ng-template #infiniteScroll>\r\n              <cx-product-scroll\r\n                [scrollConfig]=\"scrollConfig\"\r\n                [model]=\"model\"\r\n                [inputViewMode]=\"viewMode\"\r\n              ></cx-product-scroll>\r\n            </ng-template>\r\n          </div>\r\n          <div class=\"cx-sorting bottom\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-lg-4 mr-auto\">\r\n                <div class=\"form-group cx-sort-dropdown\">\r\n                  <cx-sorting\r\n                    [sortOptions]=\"model.sorts\"\r\n                    (sortListEvent)=\"sortList($event)\"\r\n                    [selectedOption]=\"model.pagination.sort\"\r\n                    placeholder=\"{{\r\n                      'productList.sortByRelevance' | cxTranslate\r\n                    }}\"\r\n                  ></cx-sorting>\r\n                </div>\r\n              </div>\r\n              <div\r\n                *ngIf=\"!isInfiniteScroll\"\r\n                class=\"col-auto\"\r\n                aria-label=\"product search pagination\"\r\n              >\r\n                <div class=\"cx-pagination\">\r\n                  <cx-pagination\r\n                    [pagination]=\"model.pagination\"\r\n                    queryParam=\"currentPage\"\r\n                    [defaultPage]=\"0\"\r\n                  ></cx-pagination>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-auto ml-auto ml-lg-0\">\r\n                <cx-product-view\r\n                  (modeChange)=\"setViewMode($event)\"\r\n                  [mode]=\"viewMode\"\r\n                ></cx-product-view>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n"
        })
    ], ProductListComponent);
    return ProductListComponent;
}());
export { ProductListComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImNtcy1jb21wb25lbnRzL3Byb2R1Y3QvcHJvZHVjdC1saXN0L2NvbnRhaW5lci9wcm9kdWN0LWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUU3RCxPQUFPLEVBQUUsZUFBZSxFQUFjLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNqRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDdEMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDekUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNuRSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQU0vRTtJQVdFLDhCQUNVLGlCQUFvQyxFQUNwQywyQkFBd0QsRUFDekQsWUFBd0I7UUFGdkIsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQUNwQyxnQ0FBMkIsR0FBM0IsMkJBQTJCLENBQTZCO1FBQ3pELGlCQUFZLEdBQVosWUFBWSxDQUFZO1FBYnpCLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUkxQyxXQUFNLEdBQWtDLElBQUksQ0FBQywyQkFBMkI7YUFDckUsTUFBTSxDQUFDO1FBRVYsY0FBUyxHQUFHLElBQUksZUFBZSxDQUFZLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzRCxjQUFTLEdBQUcsU0FBUyxDQUFDO0lBTW5CLENBQUM7SUFFSix1Q0FBUSxHQUFSO1FBQUEsaUJBY0M7UUFiQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQztRQUVyRSxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FDbkIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWE7YUFDakMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNiLFNBQVMsQ0FBQyxVQUFDLFFBQVE7WUFDbEIsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQ2pCLFFBQVEsS0FBSyx5QkFBeUI7Z0JBQ3BDLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSTtnQkFDaEIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQ25CLENBQUM7UUFDSixDQUFDLENBQUMsQ0FDTCxDQUFDO0lBQ0osQ0FBQztJQUVELHVDQUFRLEdBQVIsVUFBUyxRQUFnQjtRQUN2QixJQUFJLENBQUMsMkJBQTJCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFRCwwQ0FBVyxHQUFYLFVBQVksSUFBZTtRQUN6QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsMENBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbEMsQ0FBQzs7Z0JBL0I0QixpQkFBaUI7Z0JBQ1AsMkJBQTJCO2dCQUMzQyxVQUFVOztJQWR0QixvQkFBb0I7UUFKaEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGlCQUFpQjtZQUMzQixrK0lBQTRDO1NBQzdDLENBQUM7T0FDVyxvQkFBb0IsQ0E0Q2hDO0lBQUQsMkJBQUM7Q0FBQSxBQTVDRCxJQTRDQztTQTVDWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFByb2R1Y3RTZWFyY2hQYWdlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0LCBPYnNlcnZhYmxlLCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgdGFrZSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuaW1wb3J0IHsgUGFnZUxheW91dFNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi9jbXMtc3RydWN0dXJlL3BhZ2UvaW5kZXgnO1xyXG5pbXBvcnQgeyBWaWV3Q29uZmlnIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2hhcmVkL2NvbmZpZy92aWV3LWNvbmZpZyc7XHJcbmltcG9ydCB7IFZpZXdNb2RlcyB9IGZyb20gJy4uL3Byb2R1Y3Qtdmlldy9wcm9kdWN0LXZpZXcuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUHJvZHVjdExpc3RDb21wb25lbnRTZXJ2aWNlIH0gZnJvbSAnLi9wcm9kdWN0LWxpc3QtY29tcG9uZW50LnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdjeC1wcm9kdWN0LWxpc3QnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wcm9kdWN0LWxpc3QuY29tcG9uZW50Lmh0bWwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUHJvZHVjdExpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgcHJpdmF0ZSBzdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKCk7XHJcblxyXG4gIGlzSW5maW5pdGVTY3JvbGw6IGJvb2xlYW47XHJcblxyXG4gIG1vZGVsJDogT2JzZXJ2YWJsZTxQcm9kdWN0U2VhcmNoUGFnZT4gPSB0aGlzLnByb2R1Y3RMaXN0Q29tcG9uZW50U2VydmljZVxyXG4gICAgLm1vZGVsJDtcclxuXHJcbiAgdmlld01vZGUkID0gbmV3IEJlaGF2aW9yU3ViamVjdDxWaWV3TW9kZXM+KFZpZXdNb2Rlcy5HcmlkKTtcclxuICBWaWV3TW9kZXMgPSBWaWV3TW9kZXM7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBwYWdlTGF5b3V0U2VydmljZTogUGFnZUxheW91dFNlcnZpY2UsXHJcbiAgICBwcml2YXRlIHByb2R1Y3RMaXN0Q29tcG9uZW50U2VydmljZTogUHJvZHVjdExpc3RDb21wb25lbnRTZXJ2aWNlLFxyXG4gICAgcHVibGljIHNjcm9sbENvbmZpZzogVmlld0NvbmZpZ1xyXG4gICkge31cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmlzSW5maW5pdGVTY3JvbGwgPSB0aGlzLnNjcm9sbENvbmZpZy52aWV3LmluZmluaXRlU2Nyb2xsLmFjdGl2ZTtcclxuXHJcbiAgICB0aGlzLnN1YnNjcmlwdGlvbi5hZGQoXHJcbiAgICAgIHRoaXMucGFnZUxheW91dFNlcnZpY2UudGVtcGxhdGVOYW1lJFxyXG4gICAgICAgIC5waXBlKHRha2UoMSkpXHJcbiAgICAgICAgLnN1YnNjcmliZSgodGVtcGxhdGUpID0+IHtcclxuICAgICAgICAgIHRoaXMudmlld01vZGUkLm5leHQoXHJcbiAgICAgICAgICAgIHRlbXBsYXRlID09PSAnUHJvZHVjdEdyaWRQYWdlVGVtcGxhdGUnXHJcbiAgICAgICAgICAgICAgPyBWaWV3TW9kZXMuR3JpZFxyXG4gICAgICAgICAgICAgIDogVmlld01vZGVzLkxpc3RcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgfSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBzb3J0TGlzdChzb3J0Q29kZTogc3RyaW5nKTogdm9pZCB7XHJcbiAgICB0aGlzLnByb2R1Y3RMaXN0Q29tcG9uZW50U2VydmljZS5zb3J0KHNvcnRDb2RlKTtcclxuICB9XHJcblxyXG4gIHNldFZpZXdNb2RlKG1vZGU6IFZpZXdNb2Rlcyk6IHZvaWQge1xyXG4gICAgdGhpcy52aWV3TW9kZSQubmV4dChtb2RlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xyXG4gICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcclxuICB9XHJcbn1cclxuIl19