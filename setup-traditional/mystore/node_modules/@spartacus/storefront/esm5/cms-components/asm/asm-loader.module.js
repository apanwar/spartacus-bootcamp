import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { APP_INITIALIZER, NgModule } from '@angular/core';
import { PageComponentModule } from '../../cms-structure/page/component/page-component.module';
import { AsmEnablerService } from './services/asm-enabler.service';
/**
 * The ASM loader module takes care of loading the ASM UI
 * only in case there's a reason to do so.
 */
var AsmLoaderModule = /** @class */ (function () {
    function AsmLoaderModule() {
    }
    AsmLoaderModule = __decorate([
        NgModule({
            imports: [CommonModule, PageComponentModule],
            providers: [
                {
                    provide: APP_INITIALIZER,
                    useFactory: asmFactory,
                    deps: [AsmEnablerService],
                    multi: true,
                },
            ],
        })
    ], AsmLoaderModule);
    return AsmLoaderModule;
}());
export { AsmLoaderModule };
/**
 *
 * We do not like to block the UI, which is why we delgate loading of ASM
 * to a real component; the router and state aren't available in an optimized
 * way during the APP_INITIALIZER.
 */
export function asmFactory(asmEnablerService) {
    var isReady = function () {
        asmEnablerService.load();
    };
    return isReady;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNtLWxvYWRlci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL3N0b3JlZnJvbnQvIiwic291cmNlcyI6WyJjbXMtY29tcG9uZW50cy9hc20vYXNtLWxvYWRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUMvRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUVuRTs7O0dBR0c7QUFZSDtJQUFBO0lBQThCLENBQUM7SUFBbEIsZUFBZTtRQVgzQixRQUFRLENBQUM7WUFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsbUJBQW1CLENBQUM7WUFDNUMsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxlQUFlO29CQUN4QixVQUFVLEVBQUUsVUFBVTtvQkFDdEIsSUFBSSxFQUFFLENBQUMsaUJBQWlCLENBQUM7b0JBQ3pCLEtBQUssRUFBRSxJQUFJO2lCQUNaO2FBQ0Y7U0FDRixDQUFDO09BQ1csZUFBZSxDQUFHO0lBQUQsc0JBQUM7Q0FBQSxBQUEvQixJQUErQjtTQUFsQixlQUFlO0FBRTVCOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLFVBQVUsQ0FBQyxpQkFBb0M7SUFDN0QsSUFBTSxPQUFPLEdBQUc7UUFDZCxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMzQixDQUFDLENBQUM7SUFDRixPQUFPLE9BQU8sQ0FBQztBQUNqQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgQVBQX0lOSVRJQUxJWkVSLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQYWdlQ29tcG9uZW50TW9kdWxlIH0gZnJvbSAnLi4vLi4vY21zLXN0cnVjdHVyZS9wYWdlL2NvbXBvbmVudC9wYWdlLWNvbXBvbmVudC5tb2R1bGUnO1xyXG5pbXBvcnQgeyBBc21FbmFibGVyU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvYXNtLWVuYWJsZXIuc2VydmljZSc7XHJcblxyXG4vKipcclxuICogVGhlIEFTTSBsb2FkZXIgbW9kdWxlIHRha2VzIGNhcmUgb2YgbG9hZGluZyB0aGUgQVNNIFVJXHJcbiAqIG9ubHkgaW4gY2FzZSB0aGVyZSdzIGEgcmVhc29uIHRvIGRvIHNvLlxyXG4gKi9cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBQYWdlQ29tcG9uZW50TW9kdWxlXSxcclxuICBwcm92aWRlcnM6IFtcclxuICAgIHtcclxuICAgICAgcHJvdmlkZTogQVBQX0lOSVRJQUxJWkVSLFxyXG4gICAgICB1c2VGYWN0b3J5OiBhc21GYWN0b3J5LFxyXG4gICAgICBkZXBzOiBbQXNtRW5hYmxlclNlcnZpY2VdLFxyXG4gICAgICBtdWx0aTogdHJ1ZSxcclxuICAgIH0sXHJcbiAgXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIEFzbUxvYWRlck1vZHVsZSB7fVxyXG5cclxuLyoqXHJcbiAqXHJcbiAqIFdlIGRvIG5vdCBsaWtlIHRvIGJsb2NrIHRoZSBVSSwgd2hpY2ggaXMgd2h5IHdlIGRlbGdhdGUgbG9hZGluZyBvZiBBU01cclxuICogdG8gYSByZWFsIGNvbXBvbmVudDsgdGhlIHJvdXRlciBhbmQgc3RhdGUgYXJlbid0IGF2YWlsYWJsZSBpbiBhbiBvcHRpbWl6ZWRcclxuICogd2F5IGR1cmluZyB0aGUgQVBQX0lOSVRJQUxJWkVSLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGFzbUZhY3RvcnkoYXNtRW5hYmxlclNlcnZpY2U6IEFzbUVuYWJsZXJTZXJ2aWNlKSB7XHJcbiAgY29uc3QgaXNSZWFkeSA9ICgpID0+IHtcclxuICAgIGFzbUVuYWJsZXJTZXJ2aWNlLmxvYWQoKTtcclxuICB9O1xyXG4gIHJldHVybiBpc1JlYWR5O1xyXG59XHJcbiJdfQ==