import { __decorate } from "tslib";
import { Component, isDevMode } from '@angular/core';
import { QualtricsConfig } from './config/qualtrics-config';
import { QualtricsLoaderService } from './qualtrics-loader.service';
/**
 * Adds the Qualtrics deployment script whenever the component is loaded. The
 * deployment script is loaded from the global configuration (`qualtrics.scriptSource`).
 */
var QualtricsComponent = /** @class */ (function () {
    function QualtricsComponent(qualtricsLoader, config) {
        var _a;
        this.qualtricsLoader = qualtricsLoader;
        this.config = config;
        if ((_a = this.config.qualtrics) === null || _a === void 0 ? void 0 : _a.scriptSource) {
            this.qualtricsLoader.addScript(this.config.qualtrics.scriptSource);
        }
        else if (isDevMode()) {
            console.warn("We're unable to add the Qualtrics deployment code as there is no script source defined in config.qualtrics.scriptSource.");
        }
    }
    QualtricsComponent.ctorParameters = function () { return [
        { type: QualtricsLoaderService },
        { type: QualtricsConfig }
    ]; };
    QualtricsComponent = __decorate([
        Component({
            selector: 'cx-qualtrics',
            template: ""
        })
    ], QualtricsComponent);
    return QualtricsComponent;
}());
export { QualtricsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVhbHRyaWNzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImNtcy1jb21wb25lbnRzL21pc2MvcXVhbHRyaWNzL3F1YWx0cmljcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRTs7O0dBR0c7QUFLSDtJQUNFLDRCQUNZLGVBQXVDLEVBQ3ZDLE1BQXVCOztRQUR2QixvQkFBZSxHQUFmLGVBQWUsQ0FBd0I7UUFDdkMsV0FBTSxHQUFOLE1BQU0sQ0FBaUI7UUFFakMsVUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsMENBQUUsWUFBWSxFQUFFO1lBQ3ZDLElBQUksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ3BFO2FBQU0sSUFBSSxTQUFTLEVBQUUsRUFBRTtZQUN0QixPQUFPLENBQUMsSUFBSSxDQUNWLDBIQUEwSCxDQUMzSCxDQUFDO1NBQ0g7SUFDSCxDQUFDOztnQkFWNEIsc0JBQXNCO2dCQUMvQixlQUFlOztJQUh4QixrQkFBa0I7UUFKOUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGNBQWM7WUFDeEIsUUFBUSxFQUFFLEVBQUU7U0FDYixDQUFDO09BQ1csa0JBQWtCLENBYTlCO0lBQUQseUJBQUM7Q0FBQSxBQWJELElBYUM7U0FiWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIGlzRGV2TW9kZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBRdWFsdHJpY3NDb25maWcgfSBmcm9tICcuL2NvbmZpZy9xdWFsdHJpY3MtY29uZmlnJztcclxuaW1wb3J0IHsgUXVhbHRyaWNzTG9hZGVyU2VydmljZSB9IGZyb20gJy4vcXVhbHRyaWNzLWxvYWRlci5zZXJ2aWNlJztcclxuLyoqXHJcbiAqIEFkZHMgdGhlIFF1YWx0cmljcyBkZXBsb3ltZW50IHNjcmlwdCB3aGVuZXZlciB0aGUgY29tcG9uZW50IGlzIGxvYWRlZC4gVGhlXHJcbiAqIGRlcGxveW1lbnQgc2NyaXB0IGlzIGxvYWRlZCBmcm9tIHRoZSBnbG9iYWwgY29uZmlndXJhdGlvbiAoYHF1YWx0cmljcy5zY3JpcHRTb3VyY2VgKS5cclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnY3gtcXVhbHRyaWNzJyxcclxuICB0ZW1wbGF0ZTogYGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBRdWFsdHJpY3NDb21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJvdGVjdGVkIHF1YWx0cmljc0xvYWRlcjogUXVhbHRyaWNzTG9hZGVyU2VydmljZSxcclxuICAgIHByb3RlY3RlZCBjb25maWc6IFF1YWx0cmljc0NvbmZpZ1xyXG4gICkge1xyXG4gICAgaWYgKHRoaXMuY29uZmlnLnF1YWx0cmljcz8uc2NyaXB0U291cmNlKSB7XHJcbiAgICAgIHRoaXMucXVhbHRyaWNzTG9hZGVyLmFkZFNjcmlwdCh0aGlzLmNvbmZpZy5xdWFsdHJpY3Muc2NyaXB0U291cmNlKTtcclxuICAgIH0gZWxzZSBpZiAoaXNEZXZNb2RlKCkpIHtcclxuICAgICAgY29uc29sZS53YXJuKFxyXG4gICAgICAgIGBXZSdyZSB1bmFibGUgdG8gYWRkIHRoZSBRdWFsdHJpY3MgZGVwbG95bWVudCBjb2RlIGFzIHRoZXJlIGlzIG5vIHNjcmlwdCBzb3VyY2UgZGVmaW5lZCBpbiBjb25maWcucXVhbHRyaWNzLnNjcmlwdFNvdXJjZS5gXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==