import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { GlobalMessageEntities, GlobalMessageService, GlobalMessageType, } from '@spartacus/core';
import { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';
var GlobalMessageComponent = /** @class */ (function () {
    function GlobalMessageComponent(globalMessageService) {
        this.globalMessageService = globalMessageService;
        this.iconTypes = ICON_TYPE;
        this.messageType = GlobalMessageType;
    }
    GlobalMessageComponent.prototype.ngOnInit = function () {
        this.messages$ = this.globalMessageService.get();
    };
    GlobalMessageComponent.prototype.clear = function (type, index) {
        this.globalMessageService.remove(type, index);
    };
    GlobalMessageComponent.ctorParameters = function () { return [
        { type: GlobalMessageService }
    ]; };
    GlobalMessageComponent = __decorate([
        Component({
            selector: 'cx-global-message',
            template: "<div *ngIf=\"messages$ | async as messages\">\r\n  <div\r\n    class=\"alert alert-success\"\r\n    *ngFor=\"\r\n      let confMsg of messages[messageType.MSG_TYPE_CONFIRMATION];\r\n      let i = index\r\n    \"\r\n  >\r\n    <span class=\"alert-icon\">\r\n      <cx-icon [type]=\"iconTypes.SUCCESS\"></cx-icon>\r\n    </span>\r\n    <span>{{ confMsg | cxTranslate }}</span>\r\n    <button\r\n      class=\"close\"\r\n      type=\"button\"\r\n      (click)=\"clear(messageType.MSG_TYPE_CONFIRMATION, i)\"\r\n    >\r\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\r\n    </button>\r\n  </div>\r\n  <div\r\n    class=\"alert alert-info\"\r\n    *ngFor=\"let infoMsg of messages[messageType.MSG_TYPE_INFO]; let i = index\"\r\n  >\r\n    <span class=\"alert-icon\">\r\n      <cx-icon [type]=\"iconTypes.INFO\"></cx-icon>\r\n    </span>\r\n    <span>{{ infoMsg | cxTranslate }}</span>\r\n    <button\r\n      class=\"close\"\r\n      type=\"button\"\r\n      (click)=\"clear(messageType.MSG_TYPE_INFO, i)\"\r\n    >\r\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\r\n    </button>\r\n  </div>\r\n  <div\r\n    class=\"alert alert-warning\"\r\n    *ngFor=\"\r\n      let infoMsg of messages[messageType.MSG_TYPE_WARNING];\r\n      let i = index\r\n    \"\r\n  >\r\n    <span class=\"alert-icon\">\r\n      <cx-icon [type]=\"iconTypes.WARNING\"></cx-icon>\r\n    </span>\r\n    <span>{{ infoMsg | cxTranslate }}</span>\r\n    <button\r\n      class=\"close\"\r\n      type=\"button\"\r\n      (click)=\"clear(messageType.MSG_TYPE_INFO, i)\"\r\n    >\r\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\r\n    </button>\r\n  </div>\r\n  <div\r\n    class=\"alert alert-danger\"\r\n    *ngFor=\"let errorMsg of messages[messageType.MSG_TYPE_ERROR]; let i = index\"\r\n  >\r\n    <span class=\"alert-icon\">\r\n      <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\r\n    </span>\r\n    <span>{{ errorMsg | cxTranslate }}</span>\r\n    <button\r\n      class=\"close\"\r\n      type=\"button\"\r\n      (click)=\"clear(messageType.MSG_TYPE_ERROR, i)\"\r\n    >\r\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n"
        })
    ], GlobalMessageComponent);
    return GlobalMessageComponent;
}());
export { GlobalMessageComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLW1lc3NhZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9zdG9yZWZyb250LyIsInNvdXJjZXMiOlsiY21zLWNvbXBvbmVudHMvbWlzYy9nbG9iYWwtbWVzc2FnZS9nbG9iYWwtbWVzc2FnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUNMLHFCQUFxQixFQUNyQixvQkFBb0IsRUFDcEIsaUJBQWlCLEdBQ2xCLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBTXpFO0lBTUUsZ0NBQXNCLG9CQUEwQztRQUExQyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXNCO1FBTGhFLGNBQVMsR0FBRyxTQUFTLENBQUM7UUFHdEIsZ0JBQVcsR0FBNkIsaUJBQWlCLENBQUM7SUFFUyxDQUFDO0lBRXBFLHlDQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNuRCxDQUFDO0lBRUQsc0NBQUssR0FBTCxVQUFNLElBQXVCLEVBQUUsS0FBYTtRQUMxQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNoRCxDQUFDOztnQkFSMkMsb0JBQW9COztJQU5yRCxzQkFBc0I7UUFKbEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLG1CQUFtQjtZQUM3Qixtb0VBQThDO1NBQy9DLENBQUM7T0FDVyxzQkFBc0IsQ0FlbEM7SUFBRCw2QkFBQztDQUFBLEFBZkQsSUFlQztTQWZZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7XHJcbiAgR2xvYmFsTWVzc2FnZUVudGl0aWVzLFxyXG4gIEdsb2JhbE1lc3NhZ2VTZXJ2aWNlLFxyXG4gIEdsb2JhbE1lc3NhZ2VUeXBlLFxyXG59IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgSUNPTl9UWVBFIH0gZnJvbSAnLi4vLi4vLi4vY21zLWNvbXBvbmVudHMvbWlzYy9pY29uL2ljb24ubW9kZWwnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdjeC1nbG9iYWwtbWVzc2FnZScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2dsb2JhbC1tZXNzYWdlLmNvbXBvbmVudC5odG1sJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIEdsb2JhbE1lc3NhZ2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIGljb25UeXBlcyA9IElDT05fVFlQRTtcclxuXHJcbiAgbWVzc2FnZXMkOiBPYnNlcnZhYmxlPEdsb2JhbE1lc3NhZ2VFbnRpdGllcz47XHJcbiAgbWVzc2FnZVR5cGU6IHR5cGVvZiBHbG9iYWxNZXNzYWdlVHlwZSA9IEdsb2JhbE1lc3NhZ2VUeXBlO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgZ2xvYmFsTWVzc2FnZVNlcnZpY2U6IEdsb2JhbE1lc3NhZ2VTZXJ2aWNlKSB7fVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMubWVzc2FnZXMkID0gdGhpcy5nbG9iYWxNZXNzYWdlU2VydmljZS5nZXQoKTtcclxuICB9XHJcblxyXG4gIGNsZWFyKHR5cGU6IEdsb2JhbE1lc3NhZ2VUeXBlLCBpbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICB0aGlzLmdsb2JhbE1lc3NhZ2VTZXJ2aWNlLnJlbW92ZSh0eXBlLCBpbmRleCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==