import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { AuthService, OrderEntry, Product, WishListService, } from '@spartacus/core';
import { filter, map, tap } from 'rxjs/operators';
import { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';
import { CurrentProductService } from '../../product/current-product.service';
var AddToWishListComponent = /** @class */ (function () {
    function AddToWishListComponent(wishListService, currentProductService, authService) {
        var _this = this;
        this.wishListService = wishListService;
        this.currentProductService = currentProductService;
        this.authService = authService;
        this.product$ = this.currentProductService.getProduct().pipe(filter(function (product) { return Boolean(product); }), tap(function (product) { return _this.setStockInfo(product); }));
        this.wishListEntries$ = this.wishListService.getWishList().pipe(filter(function (wishlist) { return Boolean(wishlist); }), map(function (wishList) { return wishList.entries; }));
        this.userLoggedIn$ = this.authService.isUserLoggedIn();
        this.loading$ = this.wishListService.getWishListLoading();
        this.hasStock = false;
        this.iconTypes = ICON_TYPE;
    }
    AddToWishListComponent.prototype.add = function (product) {
        this.wishListService.addEntry(product.code);
    };
    AddToWishListComponent.prototype.remove = function (entry) {
        this.wishListService.removeEntry(entry);
    };
    AddToWishListComponent.prototype.getProductInWishList = function (product, entries) {
        var item = entries.find(function (entry) { return entry.product.code === product.code; });
        return item;
    };
    AddToWishListComponent.prototype.setStockInfo = function (product) {
        this.hasStock =
            product.stock && product.stock.stockLevelStatus !== 'outOfStock';
    };
    AddToWishListComponent.ctorParameters = function () { return [
        { type: WishListService },
        { type: CurrentProductService },
        { type: AuthService }
    ]; };
    AddToWishListComponent = __decorate([
        Component({
            selector: 'cx-add-to-wishlist',
            template: "<ng-container *ngIf=\"product$ | async as product\">\r\n  <ng-container *ngIf=\"userLoggedIn$ | async; else loginPrompt\">\r\n    <ng-container *ngIf=\"wishListEntries$ | async as entries\">\r\n      <ng-container *ngIf=\"hasStock\">\r\n        <div\r\n          *ngIf=\"getProductInWishList(product, entries) as entry; else addItem\"\r\n        >\r\n          <button\r\n            class=\"btn btn-link button-remove cx-action-link\"\r\n            (click)=\"remove(entry)\"\r\n            [disabled]=\"loading$ | async\"\r\n          >\r\n            <cx-icon [type]=\"iconTypes.HEART\"></cx-icon>\r\n            <span class=\"button-text\">{{\r\n              'addToWishList.remove' | cxTranslate\r\n            }}</span>\r\n          </button>\r\n        </div>\r\n        <ng-template #addItem>\r\n          <button\r\n            class=\"btn btn-link button-add cx-action-link\"\r\n            (click)=\"add(product)\"\r\n            [disabled]=\"loading$ | async\"\r\n          >\r\n            <cx-icon [type]=\"iconTypes.EMPTY_HEART\"></cx-icon>\r\n            <span class=\"button-text\">{{\r\n              'addToWishList.add' | cxTranslate\r\n            }}</span>\r\n          </button>\r\n        </ng-template>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n</ng-container>\r\n\r\n<ng-template #loginPrompt>\r\n  <ng-container *ngIf=\"hasStock\">\r\n    <a\r\n      class=\"btn btn-link button-add-link cx-action-link\"\r\n      [routerLink]=\"{ cxRoute: 'login' } | cxUrl\"\r\n    >\r\n      <cx-icon [type]=\"iconTypes.EMPTY_HEART\"></cx-icon>\r\n      <span class=\"button-text\">{{\r\n        'addToWishList.anonymous' | cxTranslate\r\n      }}</span>\r\n    </a>\r\n  </ng-container>\r\n</ng-template>\r\n",
            changeDetection: ChangeDetectionStrategy.OnPush
        })
    ], AddToWishListComponent);
    return AddToWishListComponent;
}());
export { AddToWishListComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXRvLXdpc2gtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL3N0b3JlZnJvbnQvIiwic291cmNlcyI6WyJjbXMtY29tcG9uZW50cy9jYXJ0L2FkZC10by13aXNobGlzdC9hZGQtdG8td2lzaC1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRSxPQUFPLEVBQ0wsV0FBVyxFQUNYLFVBQVUsRUFDVixPQUFPLEVBQ1AsZUFBZSxHQUNoQixNQUFNLGlCQUFpQixDQUFDO0FBRXpCLE9BQU8sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUN6RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQU85RTtJQW1CRSxnQ0FDWSxlQUFnQyxFQUNoQyxxQkFBNEMsRUFDNUMsV0FBd0I7UUFIcEMsaUJBSUk7UUFIUSxvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7UUFDaEMsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUF1QjtRQUM1QyxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQXJCcEMsYUFBUSxHQUF3QixJQUFJLENBQUMscUJBQXFCLENBQUMsVUFBVSxFQUFFLENBQUMsSUFBSSxDQUMxRSxNQUFNLENBQUMsVUFBQyxPQUFPLElBQUssT0FBQSxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQWhCLENBQWdCLENBQUMsRUFDckMsR0FBRyxDQUFDLFVBQUMsT0FBTyxJQUFLLE9BQUEsS0FBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsRUFBMUIsQ0FBMEIsQ0FBQyxDQUM3QyxDQUFDO1FBRUYscUJBQWdCLEdBRVosSUFBSSxDQUFDLGVBQWUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxJQUFJLENBQ3pDLE1BQU0sQ0FBQyxVQUFDLFFBQVEsSUFBSyxPQUFBLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBakIsQ0FBaUIsQ0FBQyxFQUN2QyxHQUFHLENBQUMsVUFBQyxRQUFRLElBQUssT0FBQSxRQUFRLENBQUMsT0FBTyxFQUFoQixDQUFnQixDQUFDLENBQ3BDLENBQUM7UUFFRixrQkFBYSxHQUF3QixJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3ZFLGFBQVEsR0FBd0IsSUFBSSxDQUFDLGVBQWUsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO1FBRTFFLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsY0FBUyxHQUFHLFNBQVMsQ0FBQztJQU1uQixDQUFDO0lBRUosb0NBQUcsR0FBSCxVQUFJLE9BQWdCO1FBQ2xCLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBRUQsdUNBQU0sR0FBTixVQUFPLEtBQWlCO1FBQ3RCLElBQUksQ0FBQyxlQUFlLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxxREFBb0IsR0FBcEIsVUFBcUIsT0FBZ0IsRUFBRSxPQUFxQjtRQUMxRCxJQUFNLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEtBQUssT0FBTyxDQUFDLElBQUksRUFBbkMsQ0FBbUMsQ0FBQyxDQUFDO1FBQzFFLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVPLDZDQUFZLEdBQXBCLFVBQXFCLE9BQWdCO1FBQ25DLElBQUksQ0FBQyxRQUFRO1lBQ1gsT0FBTyxDQUFDLEtBQUssSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLGdCQUFnQixLQUFLLFlBQVksQ0FBQztJQUNyRSxDQUFDOztnQkFyQjRCLGVBQWU7Z0JBQ1QscUJBQXFCO2dCQUMvQixXQUFXOztJQXRCekIsc0JBQXNCO1FBTGxDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxvQkFBb0I7WUFDOUIsbXVEQUFnRDtZQUNoRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtTQUNoRCxDQUFDO09BQ1csc0JBQXNCLENBMENsQztJQUFELDZCQUFDO0NBQUEsQUExQ0QsSUEwQ0M7U0ExQ1ksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1xyXG4gIEF1dGhTZXJ2aWNlLFxyXG4gIE9yZGVyRW50cnksXHJcbiAgUHJvZHVjdCxcclxuICBXaXNoTGlzdFNlcnZpY2UsXHJcbn0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBmaWx0ZXIsIG1hcCwgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBJQ09OX1RZUEUgfSBmcm9tICcuLi8uLi8uLi9jbXMtY29tcG9uZW50cy9taXNjL2ljb24vaWNvbi5tb2RlbCc7XHJcbmltcG9ydCB7IEN1cnJlbnRQcm9kdWN0U2VydmljZSB9IGZyb20gJy4uLy4uL3Byb2R1Y3QvY3VycmVudC1wcm9kdWN0LnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdjeC1hZGQtdG8td2lzaGxpc3QnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9hZGQtdG8td2lzaC1saXN0LmNvbXBvbmVudC5odG1sJyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxufSlcclxuZXhwb3J0IGNsYXNzIEFkZFRvV2lzaExpc3RDb21wb25lbnQge1xyXG4gIHByb2R1Y3QkOiBPYnNlcnZhYmxlPFByb2R1Y3Q+ID0gdGhpcy5jdXJyZW50UHJvZHVjdFNlcnZpY2UuZ2V0UHJvZHVjdCgpLnBpcGUoXHJcbiAgICBmaWx0ZXIoKHByb2R1Y3QpID0+IEJvb2xlYW4ocHJvZHVjdCkpLFxyXG4gICAgdGFwKChwcm9kdWN0KSA9PiB0aGlzLnNldFN0b2NrSW5mbyhwcm9kdWN0KSlcclxuICApO1xyXG5cclxuICB3aXNoTGlzdEVudHJpZXMkOiBPYnNlcnZhYmxlPFxyXG4gICAgT3JkZXJFbnRyeVtdXHJcbiAgPiA9IHRoaXMud2lzaExpc3RTZXJ2aWNlLmdldFdpc2hMaXN0KCkucGlwZShcclxuICAgIGZpbHRlcigod2lzaGxpc3QpID0+IEJvb2xlYW4od2lzaGxpc3QpKSxcclxuICAgIG1hcCgod2lzaExpc3QpID0+IHdpc2hMaXN0LmVudHJpZXMpXHJcbiAgKTtcclxuXHJcbiAgdXNlckxvZ2dlZEluJDogT2JzZXJ2YWJsZTxib29sZWFuPiA9IHRoaXMuYXV0aFNlcnZpY2UuaXNVc2VyTG9nZ2VkSW4oKTtcclxuICBsb2FkaW5nJDogT2JzZXJ2YWJsZTxib29sZWFuPiA9IHRoaXMud2lzaExpc3RTZXJ2aWNlLmdldFdpc2hMaXN0TG9hZGluZygpO1xyXG5cclxuICBoYXNTdG9jayA9IGZhbHNlO1xyXG4gIGljb25UeXBlcyA9IElDT05fVFlQRTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcm90ZWN0ZWQgd2lzaExpc3RTZXJ2aWNlOiBXaXNoTGlzdFNlcnZpY2UsXHJcbiAgICBwcm90ZWN0ZWQgY3VycmVudFByb2R1Y3RTZXJ2aWNlOiBDdXJyZW50UHJvZHVjdFNlcnZpY2UsXHJcbiAgICBwcm90ZWN0ZWQgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlXHJcbiAgKSB7fVxyXG5cclxuICBhZGQocHJvZHVjdDogUHJvZHVjdCk6IHZvaWQge1xyXG4gICAgdGhpcy53aXNoTGlzdFNlcnZpY2UuYWRkRW50cnkocHJvZHVjdC5jb2RlKTtcclxuICB9XHJcblxyXG4gIHJlbW92ZShlbnRyeTogT3JkZXJFbnRyeSk6IHZvaWQge1xyXG4gICAgdGhpcy53aXNoTGlzdFNlcnZpY2UucmVtb3ZlRW50cnkoZW50cnkpO1xyXG4gIH1cclxuXHJcbiAgZ2V0UHJvZHVjdEluV2lzaExpc3QocHJvZHVjdDogUHJvZHVjdCwgZW50cmllczogT3JkZXJFbnRyeVtdKTogT3JkZXJFbnRyeSB7XHJcbiAgICBjb25zdCBpdGVtID0gZW50cmllcy5maW5kKChlbnRyeSkgPT4gZW50cnkucHJvZHVjdC5jb2RlID09PSBwcm9kdWN0LmNvZGUpO1xyXG4gICAgcmV0dXJuIGl0ZW07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHNldFN0b2NrSW5mbyhwcm9kdWN0OiBQcm9kdWN0KTogdm9pZCB7XHJcbiAgICB0aGlzLmhhc1N0b2NrID1cclxuICAgICAgcHJvZHVjdC5zdG9jayAmJiBwcm9kdWN0LnN0b2NrLnN0b2NrTGV2ZWxTdGF0dXMgIT09ICdvdXRPZlN0b2NrJztcclxuICB9XHJcbn1cclxuIl19