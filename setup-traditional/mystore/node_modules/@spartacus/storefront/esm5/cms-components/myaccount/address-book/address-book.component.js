import { __decorate, __read } from "tslib";
import { Component } from '@angular/core';
import { Address, TranslationService, UserAddressService, CheckoutDeliveryService, } from '@spartacus/core';
import { combineLatest } from 'rxjs';
import { AddressBookComponentService } from './address-book.component.service';
import { map } from 'rxjs/operators';
var AddressBookComponent = /** @class */ (function () {
    function AddressBookComponent(service, translation, userAddressService, checkoutDeliveryService) {
        this.service = service;
        this.translation = translation;
        this.userAddressService = userAddressService;
        this.checkoutDeliveryService = checkoutDeliveryService;
        this.showAddAddressForm = false;
        this.showEditAddressForm = false;
    }
    AddressBookComponent.prototype.ngOnInit = function () {
        this.addresses$ = this.service.getAddresses();
        this.addressesStateLoading$ = this.service.getAddressesStateLoading();
        this.service.loadAddresses();
    };
    AddressBookComponent.prototype.addAddressButtonHandle = function () {
        this.showEditAddressForm = false;
        this.showAddAddressForm = true;
    };
    AddressBookComponent.prototype.editAddressButtonHandle = function (address) {
        this.showAddAddressForm = false;
        this.showEditAddressForm = true;
        this.currentAddress = address;
    };
    AddressBookComponent.prototype.addAddressSubmit = function (address) {
        this.showAddAddressForm = false;
        this.service.addUserAddress(address);
    };
    AddressBookComponent.prototype.addAddressCancel = function () {
        this.showAddAddressForm = false;
    };
    AddressBookComponent.prototype.editAddressSubmit = function (address) {
        this.showEditAddressForm = false;
        this.service.updateUserAddress(this.currentAddress['id'], address);
    };
    AddressBookComponent.prototype.editAddressCancel = function () {
        this.showEditAddressForm = false;
    };
    AddressBookComponent.prototype.getCardContent = function (address) {
        return combineLatest([
            this.translation.translate('addressCard.default'),
            this.translation.translate('addressCard.setAsDefault'),
            this.translation.translate('common.delete'),
            this.translation.translate('common.edit'),
            this.translation.translate('addressBook.areYouSureToDeleteAddress'),
        ]).pipe(map(function (_a) {
            var _b = __read(_a, 5), defaultText = _b[0], setAsDefaultText = _b[1], textDelete = _b[2], textEdit = _b[3], textVerifyDeleteMsg = _b[4];
            var region = '';
            if (address.region && address.region.isocode) {
                region = address.region.isocode + ', ';
            }
            var actions = [];
            if (!address.defaultAddress) {
                actions.push({ name: setAsDefaultText, event: 'default' });
            }
            actions.push({ name: textEdit, event: 'edit' });
            actions.push({ name: textDelete, event: 'delete' });
            return {
                textBold: address.firstName + ' ' + address.lastName,
                text: [
                    address.line1,
                    address.line2,
                    address.town + ', ' + region + address.country.isocode,
                    address.postalCode,
                    address.phone,
                ],
                actions: actions,
                header: address.defaultAddress ? "\u2713 " + defaultText : '',
                deleteMsg: textVerifyDeleteMsg,
            };
        }));
    };
    AddressBookComponent.prototype.setAddressAsDefault = function (addressId) {
        this.userAddressService.setAddressAsDefault(addressId);
        this.checkoutDeliveryService.clearCheckoutDeliveryDetails();
    };
    AddressBookComponent.prototype.deleteAddress = function (addressId) {
        this.userAddressService.deleteUserAddress(addressId);
        this.checkoutDeliveryService.clearCheckoutDeliveryDetails();
    };
    AddressBookComponent.prototype.setEdit = function (addressId) {
        if (this.editCard !== addressId) {
            this.editCard = addressId;
        }
        else {
            this.deleteAddress(addressId);
        }
    };
    AddressBookComponent.prototype.cancelCard = function () {
        this.editCard = null;
    };
    AddressBookComponent.ctorParameters = function () { return [
        { type: AddressBookComponentService },
        { type: TranslationService },
        { type: UserAddressService },
        { type: CheckoutDeliveryService }
    ]; };
    AddressBookComponent = __decorate([
        Component({
            selector: 'cx-address-book',
            template: "<div class=\"cx-section\">\r\n  <ng-container\r\n    *ngIf=\"\r\n      (addresses$ | async).length &&\r\n      !(showAddAddressForm || showEditAddressForm)\r\n    \"\r\n  >\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <button\r\n          class=\"btn btn-block btn-action\"\r\n          (click)=\"addAddressButtonHandle()\"\r\n        >\r\n          {{ 'addressBook.addNewAddress' | cxTranslate }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"row cx-address-deck\"\r\n      *ngIf=\"!(addressesStateLoading$ | async); else loading\"\r\n    >\r\n      <div\r\n        *ngFor=\"let address of addresses$ | async\"\r\n        class=\"col-md-6 cx-address-card\"\r\n      >\r\n        <cx-card\r\n          [border]=\"true\"\r\n          [fitToContainer]=\"true\"\r\n          [content]=\"getCardContent(address) | async\"\r\n          (editCard)=\"editAddressButtonHandle(address)\"\r\n          (setDefaultCard)=\"setAddressAsDefault(address.id)\"\r\n          (deleteCard)=\"setEdit(address.id)\"\r\n          [editMode]=\"address.id === editCard\"\r\n          (cancelCard)=\"cancelCard()\"\r\n        ></cx-card>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"!(addresses$ | async).length || showAddAddressForm\">\r\n    <section>\r\n      <p class=\"cx-section-msg\">\r\n        {{ 'addressBook.addNewShippingAddress' | cxTranslate }}\r\n      </p>\r\n      <cx-address-form\r\n        class=\"cx-form\"\r\n        showTitleCode=\"true\"\r\n        [showCancelBtn]=\"!((addresses$ | async).length === 0)\"\r\n        actionBtnLabel=\"{{ 'addressBook.addAddress' | cxTranslate }}\"\r\n        cancelBtnLabel=\"{{ 'addressBook.backToAddressList' | cxTranslate }}\"\r\n        [setAsDefaultField]=\"!((addresses$ | async).length === 0)\"\r\n        (submitAddress)=\"addAddressSubmit($event)\"\r\n        (backToAddress)=\"addAddressCancel()\"\r\n        (cancelCard)=\"cancelCard()\"\r\n      ></cx-address-form>\r\n    </section>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"showEditAddressForm\">\r\n    <section>\r\n      <p class=\"cx-section-msg\">\r\n        {{ 'addressBook.editShippingAddress' | cxTranslate }}\r\n      </p>\r\n      <cx-address-form\r\n        showTitleCode=\"true\"\r\n        actionBtnLabel=\"{{ 'addressBook.updateAddress' | cxTranslate }}\"\r\n        cancelBtnLabel=\"{{ 'addressBook.backToAddressList' | cxTranslate }}\"\r\n        [addressData]=\"currentAddress\"\r\n        (submitAddress)=\"editAddressSubmit($event)\"\r\n        (backToAddress)=\"editAddressCancel()\"\r\n      ></cx-address-form>\r\n    </section>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <div class=\"col-md-12 cx-address-spinner\">\r\n    <cx-spinner></cx-spinner>\r\n  </div>\r\n</ng-template>\r\n"
        })
    ], AddressBookComponent);
    return AddressBookComponent;
}());
export { AddressBookComponent };
//# sourceMappingURL=data:application/json;base64,