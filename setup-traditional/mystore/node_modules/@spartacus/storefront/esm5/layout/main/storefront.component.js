import { __decorate } from "tslib";
import { Component, ElementRef, HostBinding, HostListener, OnDestroy, OnInit, ViewChild, } from '@angular/core';
import { RoutingService } from '@spartacus/core';
import { FocusConfig, KeyboardFocusService, } from '../a11y/keyboard-focus/index';
import { SkipLinkComponent } from '../a11y/skip-link/index';
import { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';
var StorefrontComponent = /** @class */ (function () {
    function StorefrontComponent(hamburgerMenuService, routingService, elementRef, keyboardFocusService) {
        this.hamburgerMenuService = hamburgerMenuService;
        this.routingService = routingService;
        this.elementRef = elementRef;
        this.keyboardFocusService = keyboardFocusService;
        this.isExpanded$ = this.hamburgerMenuService.isExpanded;
        // required by esc focus
        this.tabindex = '0';
        this.keyboardFocusConfig = {
            focusOnEscape: true,
            focusOnDoubleEscape: true,
        };
    }
    StorefrontComponent.prototype.handleEscape = function (event) {
        this.keyboardFocusService.handleEscape(this.elementRef.nativeElement, this.keyboardFocusConfig, event);
    };
    StorefrontComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.navigateSubscription = this.routingService
            .isNavigating()
            .subscribe(function (val) {
            _this.startNavigating = val === true;
            _this.stopNavigating = val === false;
        });
    };
    StorefrontComponent.prototype.collapseMenuIfClickOutside = function (event) {
        if (event.target.className.includes('is-expanded')) {
            this.collapseMenu();
        }
    };
    StorefrontComponent.prototype.collapseMenu = function () {
        this.hamburgerMenuService.toggle(true);
    };
    StorefrontComponent.prototype.ngOnDestroy = function () {
        if (this.navigateSubscription) {
            this.navigateSubscription.unsubscribe();
        }
    };
    StorefrontComponent.ctorParameters = function () { return [
        { type: HamburgerMenuService },
        { type: RoutingService },
        { type: ElementRef },
        { type: KeyboardFocusService }
    ]; };
    __decorate([
        HostBinding('class.start-navigating')
    ], StorefrontComponent.prototype, "startNavigating", void 0);
    __decorate([
        HostBinding('class.stop-navigating')
    ], StorefrontComponent.prototype, "stopNavigating", void 0);
    __decorate([
        HostBinding('tabindex')
    ], StorefrontComponent.prototype, "tabindex", void 0);
    __decorate([
        ViewChild(SkipLinkComponent)
    ], StorefrontComponent.prototype, "child", void 0);
    __decorate([
        HostListener('keydown.escape', ['$event'])
    ], StorefrontComponent.prototype, "handleEscape", null);
    StorefrontComponent = __decorate([
        Component({
            selector: 'cx-storefront',
            template: "<ng-template cxOutlet=\"cx-storefront\">\r\n  <ng-template cxOutlet=\"cx-header\">\r\n    <header\r\n      cxSkipLink=\"cx-header\"\r\n      [cxFocus]=\"{ disableMouseFocus: true }\"\r\n      [class.is-expanded]=\"isExpanded$ | async\"\r\n      (keydown.escape)=\"collapseMenu()\"\r\n      (click)=\"collapseMenuIfClickOutside($event)\"\r\n    >\r\n      <cx-page-layout section=\"header\"></cx-page-layout>\r\n      <cx-page-layout section=\"navigation\"></cx-page-layout>\r\n    </header>\r\n    <cx-page-slot position=\"BottomHeaderSlot\"></cx-page-slot>\r\n    <cx-global-message></cx-global-message>\r\n  </ng-template>\r\n\r\n  <main cxSkipLink=\"cx-main\" [cxFocus]=\"{ disableMouseFocus: true }\">\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n\r\n  <ng-template cxOutlet=\"cx-footer\">\r\n    <footer cxSkipLink=\"cx-footer\" [cxFocus]=\"{ disableMouseFocus: true }\">\r\n      <cx-page-layout section=\"footer\"></cx-page-layout>\r\n    </footer>\r\n  </ng-template>\r\n</ng-template>\r\n"
        })
    ], StorefrontComponent);
    return StorefrontComponent;
}());
export { StorefrontComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmVmcm9udC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL3N0b3JlZnJvbnQvIiwic291cmNlcyI6WyJsYXlvdXQvbWFpbi9zdG9yZWZyb250LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxVQUFVLEVBQ1YsV0FBVyxFQUNYLFlBQVksRUFDWixTQUFTLEVBQ1QsTUFBTSxFQUNOLFNBQVMsR0FDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFakQsT0FBTyxFQUNMLFdBQVcsRUFDWCxvQkFBb0IsR0FDckIsTUFBTSw4QkFBOEIsQ0FBQztBQUN0QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQU12RjtJQTBCRSw2QkFDVSxvQkFBMEMsRUFDMUMsY0FBOEIsRUFDNUIsVUFBbUMsRUFDbkMsb0JBQTBDO1FBSDVDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBc0I7UUFDMUMsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQzVCLGVBQVUsR0FBVixVQUFVLENBQXlCO1FBQ25DLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBc0I7UUE1QnRELGdCQUFXLEdBQXdCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxVQUFVLENBQUM7UUFLeEUsd0JBQXdCO1FBQ0MsYUFBUSxHQUFHLEdBQUcsQ0FBQztRQUloQyx3QkFBbUIsR0FBZ0I7WUFDekMsYUFBYSxFQUFFLElBQUk7WUFDbkIsbUJBQW1CLEVBQUUsSUFBSTtTQUMxQixDQUFDO0lBZ0JDLENBQUM7SUFiSiwwQ0FBWSxHQUFaLFVBQWEsS0FBb0I7UUFDL0IsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFlBQVksQ0FDcEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQzdCLElBQUksQ0FBQyxtQkFBbUIsRUFDeEIsS0FBSyxDQUNOLENBQUM7SUFDSixDQUFDO0lBU0Qsc0NBQVEsR0FBUjtRQUFBLGlCQU9DO1FBTkMsSUFBSSxDQUFDLG9CQUFvQixHQUFHLElBQUksQ0FBQyxjQUFjO2FBQzVDLFlBQVksRUFBRTthQUNkLFNBQVMsQ0FBQyxVQUFDLEdBQUc7WUFDYixLQUFJLENBQUMsZUFBZSxHQUFHLEdBQUcsS0FBSyxJQUFJLENBQUM7WUFDcEMsS0FBSSxDQUFDLGNBQWMsR0FBRyxHQUFHLEtBQUssS0FBSyxDQUFDO1FBQ3RDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELHdEQUEwQixHQUExQixVQUEyQixLQUFpQjtRQUMxQyxJQUFrQixLQUFLLENBQUMsTUFBTyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLEVBQUU7WUFDakUsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQztJQUVELDBDQUFZLEdBQVo7UUFDRSxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFRCx5Q0FBVyxHQUFYO1FBQ0UsSUFBSSxJQUFJLENBQUMsb0JBQW9CLEVBQUU7WUFDN0IsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQ3pDO0lBQ0gsQ0FBQzs7Z0JBN0IrQixvQkFBb0I7Z0JBQzFCLGNBQWM7Z0JBQ2hCLFVBQVU7Z0JBQ0Esb0JBQW9COztJQTFCZjtRQUF0QyxXQUFXLENBQUMsd0JBQXdCLENBQUM7Z0VBQWlCO0lBQ2pCO1FBQXJDLFdBQVcsQ0FBQyx1QkFBdUIsQ0FBQzsrREFBZ0I7SUFHNUI7UUFBeEIsV0FBVyxDQUFDLFVBQVUsQ0FBQzt5REFBZ0I7SUFFVjtRQUE3QixTQUFTLENBQUMsaUJBQWlCLENBQUM7c0RBQTBCO0lBUXZEO1FBREMsWUFBWSxDQUFDLGdCQUFnQixFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7MkRBTzFDO0lBeEJVLG1CQUFtQjtRQUovQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsZUFBZTtZQUN6QiwyL0JBQTBDO1NBQzNDLENBQUM7T0FDVyxtQkFBbUIsQ0F5RC9CO0lBQUQsMEJBQUM7Q0FBQSxBQXpERCxJQXlEQztTQXpEWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENvbXBvbmVudCxcclxuICBFbGVtZW50UmVmLFxyXG4gIEhvc3RCaW5kaW5nLFxyXG4gIEhvc3RMaXN0ZW5lcixcclxuICBPbkRlc3Ryb3ksXHJcbiAgT25Jbml0LFxyXG4gIFZpZXdDaGlsZCxcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUm91dGluZ1NlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHtcclxuICBGb2N1c0NvbmZpZyxcclxuICBLZXlib2FyZEZvY3VzU2VydmljZSxcclxufSBmcm9tICcuLi9hMTF5L2tleWJvYXJkLWZvY3VzL2luZGV4JztcclxuaW1wb3J0IHsgU2tpcExpbmtDb21wb25lbnQgfSBmcm9tICcuLi9hMTF5L3NraXAtbGluay9pbmRleCc7XHJcbmltcG9ydCB7IEhhbWJ1cmdlck1lbnVTZXJ2aWNlIH0gZnJvbSAnLi4vaGVhZGVyL2hhbWJ1cmdlci1tZW51L2hhbWJ1cmdlci1tZW51LnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdjeC1zdG9yZWZyb250JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vc3RvcmVmcm9udC5jb21wb25lbnQuaHRtbCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTdG9yZWZyb250Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIG5hdmlnYXRlU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XHJcbiAgaXNFeHBhbmRlZCQ6IE9ic2VydmFibGU8Ym9vbGVhbj4gPSB0aGlzLmhhbWJ1cmdlck1lbnVTZXJ2aWNlLmlzRXhwYW5kZWQ7XHJcblxyXG4gIEBIb3N0QmluZGluZygnY2xhc3Muc3RhcnQtbmF2aWdhdGluZycpIHN0YXJ0TmF2aWdhdGluZztcclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnN0b3AtbmF2aWdhdGluZycpIHN0b3BOYXZpZ2F0aW5nO1xyXG5cclxuICAvLyByZXF1aXJlZCBieSBlc2MgZm9jdXNcclxuICBASG9zdEJpbmRpbmcoJ3RhYmluZGV4JykgdGFiaW5kZXggPSAnMCc7XHJcblxyXG4gIEBWaWV3Q2hpbGQoU2tpcExpbmtDb21wb25lbnQpIGNoaWxkOiBTa2lwTGlua0NvbXBvbmVudDtcclxuXHJcbiAgcHJpdmF0ZSBrZXlib2FyZEZvY3VzQ29uZmlnOiBGb2N1c0NvbmZpZyA9IHtcclxuICAgIGZvY3VzT25Fc2NhcGU6IHRydWUsXHJcbiAgICBmb2N1c09uRG91YmxlRXNjYXBlOiB0cnVlLFxyXG4gIH07XHJcblxyXG4gIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24uZXNjYXBlJywgWyckZXZlbnQnXSlcclxuICBoYW5kbGVFc2NhcGUoZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkIHtcclxuICAgIHRoaXMua2V5Ym9hcmRGb2N1c1NlcnZpY2UuaGFuZGxlRXNjYXBlKFxyXG4gICAgICB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCxcclxuICAgICAgdGhpcy5rZXlib2FyZEZvY3VzQ29uZmlnLFxyXG4gICAgICBldmVudFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBoYW1idXJnZXJNZW51U2VydmljZTogSGFtYnVyZ2VyTWVudVNlcnZpY2UsXHJcbiAgICBwcml2YXRlIHJvdXRpbmdTZXJ2aWNlOiBSb3V0aW5nU2VydmljZSxcclxuICAgIHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcclxuICAgIHByb3RlY3RlZCBrZXlib2FyZEZvY3VzU2VydmljZTogS2V5Ym9hcmRGb2N1c1NlcnZpY2VcclxuICApIHt9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5uYXZpZ2F0ZVN1YnNjcmlwdGlvbiA9IHRoaXMucm91dGluZ1NlcnZpY2VcclxuICAgICAgLmlzTmF2aWdhdGluZygpXHJcbiAgICAgIC5zdWJzY3JpYmUoKHZhbCkgPT4ge1xyXG4gICAgICAgIHRoaXMuc3RhcnROYXZpZ2F0aW5nID0gdmFsID09PSB0cnVlO1xyXG4gICAgICAgIHRoaXMuc3RvcE5hdmlnYXRpbmcgPSB2YWwgPT09IGZhbHNlO1xyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIGNvbGxhcHNlTWVudUlmQ2xpY2tPdXRzaWRlKGV2ZW50OiBNb3VzZUV2ZW50KSB7XHJcbiAgICBpZiAoKDxIVE1MRWxlbWVudD5ldmVudC50YXJnZXQpLmNsYXNzTmFtZS5pbmNsdWRlcygnaXMtZXhwYW5kZWQnKSkge1xyXG4gICAgICB0aGlzLmNvbGxhcHNlTWVudSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY29sbGFwc2VNZW51KCk6IHZvaWQge1xyXG4gICAgdGhpcy5oYW1idXJnZXJNZW51U2VydmljZS50b2dnbGUodHJ1ZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLm5hdmlnYXRlU3Vic2NyaXB0aW9uKSB7XHJcbiAgICAgIHRoaXMubmF2aWdhdGVTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19