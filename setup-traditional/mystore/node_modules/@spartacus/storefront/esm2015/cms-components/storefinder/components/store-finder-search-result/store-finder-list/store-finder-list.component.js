import { __decorate, __param } from "tslib";
import { DOCUMENT } from '@angular/common';
import { Component, Inject, Input, ViewChild } from '@angular/core';
import { StoreDataService, PointOfService } from '@spartacus/core';
import { ICON_TYPE } from './../../../../misc/icon/icon.model';
let StoreFinderListComponent = class StoreFinderListComponent {
    constructor(storeDataService, document) {
        this.storeDataService = storeDataService;
        this.document = document;
        this.iconTypes = ICON_TYPE;
        this.isDetailsModeVisible = false;
    }
    centerStoreOnMapByIndex(index, location) {
        this.showStoreDetails(location);
        this.selectedStoreIndex = index;
        this.selectedStore = location;
        this.storeMap.centerMap(this.storeDataService.getStoreLatitude(this.locations.stores[index]), this.storeDataService.getStoreLongitude(this.locations.stores[index]));
    }
    selectStoreItemList(index) {
        this.selectedStoreIndex = index;
        const storeListItem = this.document.getElementById('item-' + index);
        storeListItem.scrollIntoView({
            behavior: 'smooth',
            block: 'center',
        });
    }
    showStoreDetails(location) {
        this.isDetailsModeVisible = true;
        this.storeDetails = location;
    }
    hideStoreDetails() {
        this.isDetailsModeVisible = false;
        this.selectedStoreIndex = undefined;
        this.selectedStore = undefined;
        this.storeMap.renderMap();
    }
};
StoreFinderListComponent.ctorParameters = () => [
    { type: StoreDataService },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
__decorate([
    Input()
], StoreFinderListComponent.prototype, "locations", void 0);
__decorate([
    Input()
], StoreFinderListComponent.prototype, "useMylocation", void 0);
__decorate([
    ViewChild('storeMap')
], StoreFinderListComponent.prototype, "storeMap", void 0);
StoreFinderListComponent = __decorate([
    Component({
        selector: 'cx-store-finder-list',
        template: "<ng-container *ngIf=\"locations\">\r\n  <div class=\"container mb-2\">\r\n    <div class=\"row\" *ngIf=\"locations?.pagination\">\r\n      <div class=\"col-md-12\">\r\n        <cx-store-finder-pagination-details\r\n          [pagination]=\"locations.pagination\"\r\n        ></cx-store-finder-pagination-details>\r\n      </div>\r\n      <div class=\"col-md-2 text-left cx-back-wrapper\">\r\n        <button\r\n          class=\"btn btn-block btn-action\"\r\n          *ngIf=\"isDetailsModeVisible\"\r\n          (click)=\"hideStoreDetails()\"\r\n        >\r\n          <cx-icon [type]=\"iconTypes.CARET_LEFT\"></cx-icon>\r\n          {{ 'storeFinder.backToList' | cxTranslate }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"locations?.stores\" class=\"row cx-columns\">\r\n      <div class=\"col-md-4 cx-address-col\">\r\n        <div class=\"cx-store-details\" *ngIf=\"isDetailsModeVisible\">\r\n          <cx-store-finder-store-description\r\n            [location]=\"storeDetails\"\r\n            [disableMap]=\"true\"\r\n          ></cx-store-finder-store-description>\r\n        </div>\r\n        <ol class=\"cx-list\" *ngIf=\"!isDetailsModeVisible\">\r\n          <li\r\n            *ngFor=\"let location of locations?.stores; let i = index\"\r\n            id=\"{{ 'item-' + i }}\"\r\n            [ngClass]=\"{\r\n              'cx-selected-item': selectedStoreIndex === i\r\n            }\"\r\n            class=\"cx-list-items\"\r\n          >\r\n            <cx-store-finder-list-item\r\n              [location]=\"location\"\r\n              [locationIndex]=\"i\"\r\n              [displayDistance]=\"useMylocation\"\r\n              [useClickEvent]=\"true\"\r\n              (storeItemClick)=\"centerStoreOnMapByIndex($event, location)\"\r\n              [listOrderLabel]=\"\r\n                i +\r\n                locations.pagination.currentPage *\r\n                  locations.pagination.pageSize +\r\n                1\r\n              \"\r\n            ></cx-store-finder-list-item>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <div class=\"col-md-8 cx-map-col\">\r\n        <cx-store-finder-map\r\n          #storeMap\r\n          [locations]=\"locations.stores\"\r\n          (selectedStoreItem)=\"selectStoreItemList($event)\"\r\n        ></cx-store-finder-map>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- mobile tabs for column set only -->\r\n\r\n    <div *ngIf=\"locations?.stores\" class=\"cx-columns-mobile\">\r\n      <ngb-tabset justify=\"center\">\r\n        <ngb-tab>\r\n          <ng-template ngbTabTitle>\r\n            {{ 'storeFinder.listView' | cxTranslate }}\r\n          </ng-template>\r\n          <ng-template ngbTabContent>\r\n            <div class=\"cx-address-col\">\r\n              <div class=\"cx-store-details\" *ngIf=\"isDetailsModeVisible\">\r\n                <cx-store-finder-store-description\r\n                  [location]=\"storeDetails\"\r\n                  [disableMap]=\"true\"\r\n                ></cx-store-finder-store-description>\r\n              </div>\r\n              <ol class=\"cx-list\" *ngIf=\"!isDetailsModeVisible\">\r\n                <li\r\n                  *ngFor=\"let location of locations?.stores; let i = index\"\r\n                  id=\"{{ 'item-' + i }}\"\r\n                  [ngClass]=\"{\r\n                    'cx-selected-item': selectedStoreIndex === i\r\n                  }\"\r\n                  class=\"cx-list-items\"\r\n                >\r\n                  <cx-store-finder-list-item\r\n                    [location]=\"location\"\r\n                    [locationIndex]=\"i\"\r\n                    [displayDistance]=\"useMylocation\"\r\n                    [useClickEvent]=\"true\"\r\n                    (storeItemClick)=\"centerStoreOnMapByIndex($event, location)\"\r\n                    [listOrderLabel]=\"\r\n                      i +\r\n                      locations.pagination.currentPage *\r\n                        locations.pagination.pageSize +\r\n                      1\r\n                    \"\r\n                  ></cx-store-finder-list-item>\r\n                </li>\r\n              </ol>\r\n            </div>\r\n          </ng-template>\r\n        </ngb-tab>\r\n        <ngb-tab>\r\n          <ng-template ngbTabTitle>\r\n            {{ 'storeFinder.mapView' | cxTranslate }}\r\n          </ng-template>\r\n          <ng-template ngbTabContent>\r\n            <div class=\"cx-map-col\">\r\n              <cx-store-finder-map\r\n                #storeMap\r\n                [locations]=\"selectedStore ? [selectedStore] : locations.stores\"\r\n                (selectedStoreItem)=\"selectStoreItemList($event)\"\r\n              ></cx-store-finder-map>\r\n            </div>\r\n          </ng-template>\r\n        </ngb-tab>\r\n      </ngb-tabset>\r\n    </div>\r\n\r\n    <!-- mobile tabs end -->\r\n\r\n    <div *ngIf=\"!locations?.stores\" class=\"row\">\r\n      <div class=\"col-md-12 cx-not-found\">\r\n        {{ 'storeFinder.noStoreFound' | cxTranslate }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n"
    }),
    __param(1, Inject(DOCUMENT))
], StoreFinderListComponent);
export { StoreFinderListComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUtZmluZGVyLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9zdG9yZWZyb250LyIsInNvdXJjZXMiOlsiY21zLWNvbXBvbmVudHMvc3RvcmVmaW5kZXIvY29tcG9uZW50cy9zdG9yZS1maW5kZXItc2VhcmNoLXJlc3VsdC9zdG9yZS1maW5kZXItbGlzdC9zdG9yZS1maW5kZXItbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVuRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFNL0QsSUFBYSx3QkFBd0IsR0FBckMsTUFBYSx3QkFBd0I7SUFjbkMsWUFDVSxnQkFBa0MsRUFDaEIsUUFBYTtRQUQvQixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ2hCLGFBQVEsR0FBUixRQUFRLENBQUs7UUFKekMsY0FBUyxHQUFHLFNBQVMsQ0FBQztRQU1wQixJQUFJLENBQUMsb0JBQW9CLEdBQUcsS0FBSyxDQUFDO0lBQ3BDLENBQUM7SUFFRCx1QkFBdUIsQ0FBQyxLQUFhLEVBQUUsUUFBd0I7UUFDN0QsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxLQUFLLENBQUM7UUFDaEMsSUFBSSxDQUFDLGFBQWEsR0FBRyxRQUFRLENBQUM7UUFDOUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQ3JCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUNwRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FDdEUsQ0FBQztJQUNKLENBQUM7SUFFRCxtQkFBbUIsQ0FBQyxLQUFhO1FBQy9CLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxLQUFLLENBQUM7UUFDaEMsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDO1FBQ3BFLGFBQWEsQ0FBQyxjQUFjLENBQUM7WUFDM0IsUUFBUSxFQUFFLFFBQVE7WUFDbEIsS0FBSyxFQUFFLFFBQVE7U0FDaEIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELGdCQUFnQixDQUFDLFFBQXdCO1FBQ3ZDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLENBQUM7UUFDakMsSUFBSSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUM7SUFDL0IsQ0FBQztJQUVELGdCQUFnQjtRQUNkLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxLQUFLLENBQUM7UUFDbEMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLFNBQVMsQ0FBQztRQUNwQyxJQUFJLENBQUMsYUFBYSxHQUFHLFNBQVMsQ0FBQztRQUMvQixJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQzVCLENBQUM7Q0FDRixDQUFBOztZQXBDNkIsZ0JBQWdCOzRDQUN6QyxNQUFNLFNBQUMsUUFBUTs7QUFkbEI7SUFEQyxLQUFLLEVBQUU7MkRBQ087QUFFZjtJQURDLEtBQUssRUFBRTsrREFDZTtBQUV2QjtJQURDLFNBQVMsQ0FBQyxVQUFVLENBQUM7MERBQ1k7QUFOdkIsd0JBQXdCO0lBSnBDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxzQkFBc0I7UUFDaEMscS9KQUFpRDtLQUNsRCxDQUFDO0lBaUJHLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0dBaEJSLHdCQUF3QixDQW1EcEM7U0FuRFksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRE9DVU1FTlQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdG9yZURhdGFTZXJ2aWNlLCBQb2ludE9mU2VydmljZSB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XHJcbmltcG9ydCB7IFN0b3JlRmluZGVyTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vc3RvcmUtZmluZGVyLW1hcC9zdG9yZS1maW5kZXItbWFwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IElDT05fVFlQRSB9IGZyb20gJy4vLi4vLi4vLi4vLi4vbWlzYy9pY29uL2ljb24ubW9kZWwnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdjeC1zdG9yZS1maW5kZXItbGlzdCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3N0b3JlLWZpbmRlci1saXN0LmNvbXBvbmVudC5odG1sJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIFN0b3JlRmluZGVyTGlzdENvbXBvbmVudCB7XHJcbiAgQElucHV0KClcclxuICBsb2NhdGlvbnM6IGFueTtcclxuICBASW5wdXQoKVxyXG4gIHVzZU15bG9jYXRpb246IGJvb2xlYW47XHJcbiAgQFZpZXdDaGlsZCgnc3RvcmVNYXAnKVxyXG4gIHN0b3JlTWFwOiBTdG9yZUZpbmRlck1hcENvbXBvbmVudDtcclxuXHJcbiAgc2VsZWN0ZWRTdG9yZTogUG9pbnRPZlNlcnZpY2U7XHJcbiAgc2VsZWN0ZWRTdG9yZUluZGV4OiBudW1iZXI7XHJcbiAgaXNEZXRhaWxzTW9kZVZpc2libGU6IGJvb2xlYW47XHJcbiAgc3RvcmVEZXRhaWxzOiBQb2ludE9mU2VydmljZTtcclxuICBpY29uVHlwZXMgPSBJQ09OX1RZUEU7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBzdG9yZURhdGFTZXJ2aWNlOiBTdG9yZURhdGFTZXJ2aWNlLFxyXG4gICAgQEluamVjdChET0NVTUVOVCkgcHJpdmF0ZSBkb2N1bWVudDogYW55XHJcbiAgKSB7XHJcbiAgICB0aGlzLmlzRGV0YWlsc01vZGVWaXNpYmxlID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBjZW50ZXJTdG9yZU9uTWFwQnlJbmRleChpbmRleDogbnVtYmVyLCBsb2NhdGlvbjogUG9pbnRPZlNlcnZpY2UpOiB2b2lkIHtcclxuICAgIHRoaXMuc2hvd1N0b3JlRGV0YWlscyhsb2NhdGlvbik7XHJcbiAgICB0aGlzLnNlbGVjdGVkU3RvcmVJbmRleCA9IGluZGV4O1xyXG4gICAgdGhpcy5zZWxlY3RlZFN0b3JlID0gbG9jYXRpb247XHJcbiAgICB0aGlzLnN0b3JlTWFwLmNlbnRlck1hcChcclxuICAgICAgdGhpcy5zdG9yZURhdGFTZXJ2aWNlLmdldFN0b3JlTGF0aXR1ZGUodGhpcy5sb2NhdGlvbnMuc3RvcmVzW2luZGV4XSksXHJcbiAgICAgIHRoaXMuc3RvcmVEYXRhU2VydmljZS5nZXRTdG9yZUxvbmdpdHVkZSh0aGlzLmxvY2F0aW9ucy5zdG9yZXNbaW5kZXhdKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHNlbGVjdFN0b3JlSXRlbUxpc3QoaW5kZXg6IG51bWJlcik6IHZvaWQge1xyXG4gICAgdGhpcy5zZWxlY3RlZFN0b3JlSW5kZXggPSBpbmRleDtcclxuICAgIGNvbnN0IHN0b3JlTGlzdEl0ZW0gPSB0aGlzLmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpdGVtLScgKyBpbmRleCk7XHJcbiAgICBzdG9yZUxpc3RJdGVtLnNjcm9sbEludG9WaWV3KHtcclxuICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnLFxyXG4gICAgICBibG9jazogJ2NlbnRlcicsXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHNob3dTdG9yZURldGFpbHMobG9jYXRpb246IFBvaW50T2ZTZXJ2aWNlKSB7XHJcbiAgICB0aGlzLmlzRGV0YWlsc01vZGVWaXNpYmxlID0gdHJ1ZTtcclxuICAgIHRoaXMuc3RvcmVEZXRhaWxzID0gbG9jYXRpb247XHJcbiAgfVxyXG5cclxuICBoaWRlU3RvcmVEZXRhaWxzKCkge1xyXG4gICAgdGhpcy5pc0RldGFpbHNNb2RlVmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgdGhpcy5zZWxlY3RlZFN0b3JlSW5kZXggPSB1bmRlZmluZWQ7XHJcbiAgICB0aGlzLnNlbGVjdGVkU3RvcmUgPSB1bmRlZmluZWQ7XHJcbiAgICB0aGlzLnN0b3JlTWFwLnJlbmRlck1hcCgpO1xyXG4gIH1cclxufVxyXG4iXX0=