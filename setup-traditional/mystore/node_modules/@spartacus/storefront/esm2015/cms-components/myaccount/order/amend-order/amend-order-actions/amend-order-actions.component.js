import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Input, } from '@angular/core';
import { RoutingService } from '@spartacus/core';
let AmendOrderActionsComponent = class AmendOrderActionsComponent {
    constructor(routingService) {
        this.routingService = routingService;
        this.styles = 'row';
    }
    continue(event) {
        if (this.amendOrderForm.valid) {
            this.routingService.go({
                cxRoute: this.forwardRoute,
                params: { code: this.orderCode },
            });
        }
        else {
            this.amendOrderForm.markAllAsTouched();
            event.stopPropagation();
        }
    }
};
AmendOrderActionsComponent.ctorParameters = () => [
    { type: RoutingService }
];
__decorate([
    Input()
], AmendOrderActionsComponent.prototype, "orderCode", void 0);
__decorate([
    Input()
], AmendOrderActionsComponent.prototype, "amendOrderForm", void 0);
__decorate([
    Input()
], AmendOrderActionsComponent.prototype, "backRoute", void 0);
__decorate([
    Input()
], AmendOrderActionsComponent.prototype, "forwardRoute", void 0);
__decorate([
    HostBinding('class')
], AmendOrderActionsComponent.prototype, "styles", void 0);
AmendOrderActionsComponent = __decorate([
    Component({
        selector: 'cx-amend-order-actions',
        template: "<div class=\"col-xs-12 col-md-4 col-lg-3\">\r\n  <a\r\n    [routerLink]=\"\r\n      {\r\n        cxRoute: backRoute,\r\n        params: { code: orderCode }\r\n      } | cxUrl\r\n    \"\r\n    class=\"btn btn-block btn-action\"\r\n  >\r\n    {{ 'common.back' | cxTranslate }}\r\n  </a>\r\n</div>\r\n<div class=\"col-xs-12 col-md-4 col-lg-3\">\r\n  <button\r\n    *ngIf=\"forwardRoute\"\r\n    class=\"btn btn-block btn-primary\"\r\n    (click)=\"continue($event)\"\r\n  >\r\n    {{ 'common.continue' | cxTranslate }}\r\n  </button>\r\n\r\n  <button *ngIf=\"!forwardRoute\" class=\"btn btn-block btn-primary\" type=\"submit\">\r\n    {{ 'orderDetails.cancellationAndReturn.submit' | cxTranslate }}\r\n  </button>\r\n</div>\r\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], AmendOrderActionsComponent);
export { AmendOrderActionsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1lbmQtb3JkZXItYWN0aW9ucy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL3N0b3JlZnJvbnQvIiwic291cmNlcyI6WyJjbXMtY29tcG9uZW50cy9teWFjY291bnQvb3JkZXIvYW1lbmQtb3JkZXIvYW1lbmQtb3JkZXItYWN0aW9ucy9hbWVuZC1vcmRlci1hY3Rpb25zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsV0FBVyxFQUNYLEtBQUssR0FDTixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFRakQsSUFBYSwwQkFBMEIsR0FBdkMsTUFBYSwwQkFBMEI7SUFRckMsWUFBc0IsY0FBOEI7UUFBOUIsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBRjlCLFdBQU0sR0FBRyxLQUFLLENBQUM7SUFFa0IsQ0FBQztJQUV4RCxRQUFRLENBQUMsS0FBWTtRQUNuQixJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFO1lBQzdCLElBQUksQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDO2dCQUNyQixPQUFPLEVBQUUsSUFBSSxDQUFDLFlBQVk7Z0JBQzFCLE1BQU0sRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFO2FBQ2pDLENBQUMsQ0FBQztTQUNKO2FBQU07WUFDTCxJQUFJLENBQUMsY0FBYyxDQUFDLGdCQUFnQixFQUFFLENBQUM7WUFDdkMsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQztDQUNGLENBQUE7O1lBYnVDLGNBQWM7O0FBUDNDO0lBQVIsS0FBSyxFQUFFOzZEQUFtQjtBQUNsQjtJQUFSLEtBQUssRUFBRTtrRUFBMkI7QUFDMUI7SUFBUixLQUFLLEVBQUU7NkRBQW1CO0FBQ2xCO0lBQVIsS0FBSyxFQUFFO2dFQUFzQjtBQUVSO0lBQXJCLFdBQVcsQ0FBQyxPQUFPLENBQUM7MERBQWdCO0FBTjFCLDBCQUEwQjtJQUx0QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsd0JBQXdCO1FBQ2xDLGd1QkFBbUQ7UUFDbkQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07S0FDaEQsQ0FBQztHQUNXLDBCQUEwQixDQXFCdEM7U0FyQlksMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcclxuICBDb21wb25lbnQsXHJcbiAgSG9zdEJpbmRpbmcsXHJcbiAgSW5wdXQsXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFJvdXRpbmdTZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcclxuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdjeC1hbWVuZC1vcmRlci1hY3Rpb25zJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYW1lbmQtb3JkZXItYWN0aW9ucy5jb21wb25lbnQuaHRtbCcsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBbWVuZE9yZGVyQWN0aW9uc0NvbXBvbmVudCB7XHJcbiAgQElucHV0KCkgb3JkZXJDb2RlOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgYW1lbmRPcmRlckZvcm06IEZvcm1Hcm91cDtcclxuICBASW5wdXQoKSBiYWNrUm91dGU6IHN0cmluZztcclxuICBASW5wdXQoKSBmb3J3YXJkUm91dGU6IHN0cmluZztcclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpIHN0eWxlcyA9ICdyb3cnO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgcm91dGluZ1NlcnZpY2U6IFJvdXRpbmdTZXJ2aWNlKSB7fVxyXG5cclxuICBjb250aW51ZShldmVudDogRXZlbnQpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLmFtZW5kT3JkZXJGb3JtLnZhbGlkKSB7XHJcbiAgICAgIHRoaXMucm91dGluZ1NlcnZpY2UuZ28oe1xyXG4gICAgICAgIGN4Um91dGU6IHRoaXMuZm9yd2FyZFJvdXRlLFxyXG4gICAgICAgIHBhcmFtczogeyBjb2RlOiB0aGlzLm9yZGVyQ29kZSB9LFxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuYW1lbmRPcmRlckZvcm0ubWFya0FsbEFzVG91Y2hlZCgpO1xyXG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19