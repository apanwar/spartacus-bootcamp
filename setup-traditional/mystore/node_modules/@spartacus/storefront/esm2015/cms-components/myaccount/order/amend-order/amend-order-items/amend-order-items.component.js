import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { OrderAmendService } from '../amend-order.service';
let CancelOrReturnItemsComponent = class CancelOrReturnItemsComponent {
    constructor(orderAmendService) {
        this.orderAmendService = orderAmendService;
        this.isConfirmation = false;
        this.form$ = this.orderAmendService.getForm();
    }
    getControl(form, entry) {
        const control = (form.get('entries').get(entry.entryNumber.toString()));
        return control;
    }
    setAll(form) {
        this.entries.forEach((entry) => this.getControl(form, entry).setValue(this.getMaxAmendQuantity(entry)));
    }
    getItemPrice(entry) {
        return this.orderAmendService.getAmendedPrice(entry);
    }
    getMaxAmendQuantity(entry) {
        return this.orderAmendService.getMaxAmendQuantity(entry);
    }
    isCancellation() {
        return this.orderAmendService.isCancellation();
    }
};
CancelOrReturnItemsComponent.ctorParameters = () => [
    { type: OrderAmendService }
];
__decorate([
    Input()
], CancelOrReturnItemsComponent.prototype, "entries", void 0);
__decorate([
    Input()
], CancelOrReturnItemsComponent.prototype, "isConfirmation", void 0);
CancelOrReturnItemsComponent = __decorate([
    Component({
        selector: 'cx-amend-order-items',
        template: "<div *ngIf=\"form$ | async as form\">\r\n  <button\r\n    *ngIf=\"!isConfirmation\"\r\n    class=\"btn btn-link cx-action-link\"\r\n    (click)=\"setAll(form)\"\r\n  >\r\n    {{ 'orderDetails.cancellationAndReturn.setAll' | cxTranslate }}\r\n  </button>\r\n\r\n  <div class=\"d-none d-md-block cx-item-list-header\">\r\n    <div class=\"row\">\r\n      <div class=\"text-left col-6\">\r\n        {{ 'orderDetails.cancellationAndReturn.item' | cxTranslate }}\r\n      </div>\r\n      <div class=\"text-center col-2\">\r\n        {{ 'orderDetails.cancellationAndReturn.itemPrice' | cxTranslate }}\r\n      </div>\r\n      <div *ngIf=\"!isConfirmation\" class=\"text-center col-2\">\r\n        {{ 'orderDetails.cancellationAndReturn.quantity' | cxTranslate }}\r\n      </div>\r\n      <div class=\"cx-item-list-qty col-2 text-right\">\r\n        {{\r\n          (isCancellation()\r\n            ? 'orderDetails.cancellationAndReturn.cancelQty'\r\n            : 'orderDetails.cancellationAndReturn.returnQty'\r\n          ) | cxTranslate\r\n        }}\r\n      </div>\r\n      <div *ngIf=\"isConfirmation\" class=\"cx-item-list-total col-2\">\r\n        {{ 'orderDetails.cancellationAndReturn.totalPrice' | cxTranslate }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"cx-item-list-row\" *ngFor=\"let item of entries; let i = index\">\r\n    <div class=\"row cx-item-list-items\">\r\n      <!-- Item Image -->\r\n      <cx-media\r\n        class=\"col-2\"\r\n        [container]=\"item.product.images?.PRIMARY\"\r\n      ></cx-media>\r\n\r\n      <!-- Item Information -->\r\n      <div class=\"cx-info col-10\">\r\n        <div class=\"cx-info-container row\">\r\n          <!-- Item Description -->\r\n          <div class=\"col-md-4 col-xl-5 cx-list-item-desc\">\r\n            <div *ngIf=\"item.product.name\" class=\"cx-name\">\r\n              {{ item.product.name }}\r\n            </div>\r\n            <div *ngIf=\"item.product.code\" class=\"cx-code\">\r\n              {{ 'cartItems.id' | cxTranslate }} {{ item.product.code }}\r\n            </div>\r\n            <!-- Variants -->\r\n            <ng-container *ngIf=\"item.product.baseOptions?.length\">\r\n              <div\r\n                *ngFor=\"\r\n                  let variant of item.product.baseOptions[0]?.selected\r\n                    ?.variantOptionQualifiers\r\n                \"\r\n                class=\"cx-property\"\r\n              >\r\n                <div class=\"cx-label\" *ngIf=\"variant.name\">\r\n                  {{ variant.name }}:\r\n                </div>\r\n                <div class=\"cx-value\" *ngIf=\"variant.value\">\r\n                  {{ variant.value }}\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n          <!-- Price -->\r\n          <div\r\n            *ngIf=\"item.basePrice\"\r\n            class=\"cx-price col-md-3 col-lg-3 col-xl-2\"\r\n          >\r\n            <div class=\"cx-label d-block d-md-none d-lg-none d-xl-none\">\r\n              {{ 'orderDetails.cancellationAndReturn.itemPrice' | cxTranslate }}\r\n            </div>\r\n            <div *ngIf=\"item.basePrice\" class=\"cx-value\">\r\n              {{ item.basePrice?.formattedValue }}\r\n            </div>\r\n          </div>\r\n          <!-- item Quantity -->\r\n          <div *ngIf=\"!isConfirmation\" class=\"cx-request-qty col-md-3\">\r\n            <div\r\n              class=\"cx-label d-block d-md-none d-lg-none d-xl-none\"\r\n              placement=\"left\"\r\n              title=\"{{ 'cartItems.quantityTitle' | cxTranslate }}\"\r\n            >\r\n              {{ 'orderDetails.cancellationAndReturn.quantity' | cxTranslate }}\r\n            </div>\r\n            <div class=\"cx-value\">\r\n              {{ getMaxAmendQuantity(item) }}\r\n            </div>\r\n          </div>\r\n          <!-- Amended Quantity -->\r\n          <div class=\"cx-quantity col-xs-12 col-md-2 col-sm-12\">\r\n            <div class=\"cx-label d-block d-md-none d-lg-none d-xl-none\">\r\n              {{\r\n                (isCancellation()\r\n                  ? 'orderDetails.cancellationAndReturn.cancelQty'\r\n                  : 'orderDetails.cancellationAndReturn.returnQty'\r\n                ) | cxTranslate\r\n              }}\r\n            </div>\r\n\r\n            <div\r\n              *ngIf=\"isConfirmation\"\r\n              class=\"w-100 text-center cx-order-quantity-value\"\r\n            >\r\n              {{ getControl(form, item).value }}\r\n            </div>\r\n            <cx-item-counter\r\n              *ngIf=\"!isConfirmation\"\r\n              [min]=\"0\"\r\n              [max]=\"getMaxAmendQuantity(item)\"\r\n              [control]=\"getControl(form, item)\"\r\n            >\r\n            </cx-item-counter>\r\n          </div>\r\n          <!-- Total Price -->\r\n          <div *ngIf=\"isConfirmation\" class=\"cx-total col-3\">\r\n            <div class=\"cx-label d-block d-md-none\">\r\n              {{\r\n                'orderDetails.cancellationAndReturn.totalPrice' | cxTranslate\r\n              }}\r\n            </div>\r\n            <div class=\"cx-value\">\r\n              {{ getItemPrice(item)?.formattedValue }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], CancelOrReturnItemsComponent);
export { CancelOrReturnItemsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1lbmQtb3JkZXItaXRlbXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9zdG9yZWZyb250LyIsInNvdXJjZXMiOlsiY21zLWNvbXBvbmVudHMvbXlhY2NvdW50L29yZGVyL2FtZW5kLW9yZGVyL2FtZW5kLW9yZGVyLWl0ZW1zL2FtZW5kLW9yZGVyLWl0ZW1zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJMUUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFPM0QsSUFBYSw0QkFBNEIsR0FBekMsTUFBYSw0QkFBNEI7SUFNdkMsWUFBc0IsaUJBQW9DO1FBQXBDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFKakQsbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFFaEMsVUFBSyxHQUEwQixJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxFQUFFLENBQUM7SUFFSCxDQUFDO0lBRTlELFVBQVUsQ0FBQyxJQUFlLEVBQUUsS0FBaUI7UUFDM0MsTUFBTSxPQUFPLEdBQWdCLENBQzNCLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FDdEQsQ0FBQztRQUNGLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBZTtRQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQzdCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FDdkUsQ0FBQztJQUNKLENBQUM7SUFFRCxZQUFZLENBQUMsS0FBaUI7UUFDNUIsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRCxtQkFBbUIsQ0FBQyxLQUFpQjtRQUNuQyxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRUQsY0FBYztRQUNaLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ2pELENBQUM7Q0FDRixDQUFBOztZQTFCMEMsaUJBQWlCOztBQUxqRDtJQUFSLEtBQUssRUFBRTs2REFBdUI7QUFDdEI7SUFBUixLQUFLLEVBQUU7b0VBQXdCO0FBRnJCLDRCQUE0QjtJQUx4QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsc0JBQXNCO1FBQ2hDLDR1S0FBaUQ7UUFDakQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07S0FDaEQsQ0FBQztHQUNXLDRCQUE0QixDQWdDeEM7U0FoQ1ksNEJBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybUNvbnRyb2wsIEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgT3JkZXJFbnRyeSwgUHJpY2UgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IE9yZGVyQW1lbmRTZXJ2aWNlIH0gZnJvbSAnLi4vYW1lbmQtb3JkZXIuc2VydmljZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2N4LWFtZW5kLW9yZGVyLWl0ZW1zJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYW1lbmQtb3JkZXItaXRlbXMuY29tcG9uZW50Lmh0bWwnLFxyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ2FuY2VsT3JSZXR1cm5JdGVtc0NvbXBvbmVudCB7XHJcbiAgQElucHV0KCkgZW50cmllczogT3JkZXJFbnRyeVtdO1xyXG4gIEBJbnB1dCgpIGlzQ29uZmlybWF0aW9uID0gZmFsc2U7XHJcblxyXG4gIGZvcm0kOiBPYnNlcnZhYmxlPEZvcm1Hcm91cD4gPSB0aGlzLm9yZGVyQW1lbmRTZXJ2aWNlLmdldEZvcm0oKTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIG9yZGVyQW1lbmRTZXJ2aWNlOiBPcmRlckFtZW5kU2VydmljZSkge31cclxuXHJcbiAgZ2V0Q29udHJvbChmb3JtOiBGb3JtR3JvdXAsIGVudHJ5OiBPcmRlckVudHJ5KTogRm9ybUNvbnRyb2wge1xyXG4gICAgY29uc3QgY29udHJvbCA9IDxGb3JtQ29udHJvbD4oXHJcbiAgICAgIGZvcm0uZ2V0KCdlbnRyaWVzJykuZ2V0KGVudHJ5LmVudHJ5TnVtYmVyLnRvU3RyaW5nKCkpXHJcbiAgICApO1xyXG4gICAgcmV0dXJuIGNvbnRyb2w7XHJcbiAgfVxyXG5cclxuICBzZXRBbGwoZm9ybTogRm9ybUdyb3VwKTogdm9pZCB7XHJcbiAgICB0aGlzLmVudHJpZXMuZm9yRWFjaCgoZW50cnkpID0+XHJcbiAgICAgIHRoaXMuZ2V0Q29udHJvbChmb3JtLCBlbnRyeSkuc2V0VmFsdWUodGhpcy5nZXRNYXhBbWVuZFF1YW50aXR5KGVudHJ5KSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBnZXRJdGVtUHJpY2UoZW50cnk6IE9yZGVyRW50cnkpOiBQcmljZSB7XHJcbiAgICByZXR1cm4gdGhpcy5vcmRlckFtZW5kU2VydmljZS5nZXRBbWVuZGVkUHJpY2UoZW50cnkpO1xyXG4gIH1cclxuXHJcbiAgZ2V0TWF4QW1lbmRRdWFudGl0eShlbnRyeTogT3JkZXJFbnRyeSkge1xyXG4gICAgcmV0dXJuIHRoaXMub3JkZXJBbWVuZFNlcnZpY2UuZ2V0TWF4QW1lbmRRdWFudGl0eShlbnRyeSk7XHJcbiAgfVxyXG5cclxuICBpc0NhbmNlbGxhdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLm9yZGVyQW1lbmRTZXJ2aWNlLmlzQ2FuY2VsbGF0aW9uKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==