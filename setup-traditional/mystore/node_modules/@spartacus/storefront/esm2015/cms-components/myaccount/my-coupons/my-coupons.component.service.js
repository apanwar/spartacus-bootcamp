import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { CustomerCoupon, RoutingService, TranslationService, } from '@spartacus/core';
import { map } from 'rxjs/operators';
import { combineLatest } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
let MyCouponsComponentService = class MyCouponsComponentService {
    constructor(routingService, translation) {
        this.routingService = routingService;
        this.translation = translation;
        this.RELEVANCE = ':relevance';
        this.CUSTOMER_COUPON_CODE = ':customerCouponCode:';
    }
    launchSearchPage(coupon) {
        this.routingService.go({
            cxRoute: 'search',
            params: { query: this.buildSearchParam(coupon) },
        }, { couponcode: coupon.couponId });
    }
    buildSearchParam(coupon) {
        return coupon.allProductsApplicable
            ? this.RELEVANCE
            : this.RELEVANCE + this.CUSTOMER_COUPON_CODE + coupon.couponId;
    }
    getSortLabels() {
        return combineLatest([
            this.translation.translate('myCoupons.startDateAsc'),
            this.translation.translate('myCoupons.startDateDesc'),
            this.translation.translate('myCoupons.endDateAsc'),
            this.translation.translate('myCoupons.endDateDesc'),
        ]).pipe(map(([textByStartDateAsc, textByStartDateDesc, textByEndDateAsc, textByEndDateDesc,]) => {
            return {
                byStartDateAsc: textByStartDateAsc,
                byStartDateDesc: textByStartDateDesc,
                byEndDateAsc: textByEndDateAsc,
                byEndDateDesc: textByEndDateDesc,
            };
        }));
    }
};
MyCouponsComponentService.ctorParameters = () => [
    { type: RoutingService },
    { type: TranslationService }
];
MyCouponsComponentService.ɵprov = i0.ɵɵdefineInjectable({ factory: function MyCouponsComponentService_Factory() { return new MyCouponsComponentService(i0.ɵɵinject(i1.RoutingService), i0.ɵɵinject(i1.TranslationService)); }, token: MyCouponsComponentService, providedIn: "root" });
MyCouponsComponentService = __decorate([
    Injectable({
        providedIn: 'root',
    })
], MyCouponsComponentService);
export { MyCouponsComponentService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXktY291cG9ucy5jb21wb25lbnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImNtcy1jb21wb25lbnRzL215YWNjb3VudC9teS1jb3Vwb25zL215LWNvdXBvbnMuY29tcG9uZW50LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUNMLGNBQWMsRUFDZCxjQUFjLEVBQ2Qsa0JBQWtCLEdBQ25CLE1BQU0saUJBQWlCLENBQUM7QUFDekIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxhQUFhLEVBQWMsTUFBTSxNQUFNLENBQUM7OztBQUtqRCxJQUFhLHlCQUF5QixHQUF0QyxNQUFhLHlCQUF5QjtJQVdwQyxZQUNZLGNBQThCLEVBQzlCLFdBQStCO1FBRC9CLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUM5QixnQkFBVyxHQUFYLFdBQVcsQ0FBb0I7UUFMeEIsY0FBUyxHQUFHLFlBQVksQ0FBQztRQUN6Qix5QkFBb0IsR0FBRyxzQkFBc0IsQ0FBQztJQUs5RCxDQUFDO0lBRUosZ0JBQWdCLENBQUMsTUFBc0I7UUFDckMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQ3BCO1lBQ0UsT0FBTyxFQUFFLFFBQVE7WUFDakIsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsRUFBRTtTQUNqRCxFQUNELEVBQUUsVUFBVSxFQUFFLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FDaEMsQ0FBQztJQUNKLENBQUM7SUFFTyxnQkFBZ0IsQ0FBQyxNQUFzQjtRQUM3QyxPQUFPLE1BQU0sQ0FBQyxxQkFBcUI7WUFDakMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTO1lBQ2hCLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO0lBQ25FLENBQUM7SUFFRCxhQUFhO1FBTVgsT0FBTyxhQUFhLENBQUM7WUFDbkIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsd0JBQXdCLENBQUM7WUFDcEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMseUJBQXlCLENBQUM7WUFDckQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsc0JBQXNCLENBQUM7WUFDbEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsdUJBQXVCLENBQUM7U0FDcEQsQ0FBQyxDQUFDLElBQUksQ0FDTCxHQUFHLENBQ0QsQ0FBQyxDQUNDLGtCQUFrQixFQUNsQixtQkFBbUIsRUFDbkIsZ0JBQWdCLEVBQ2hCLGlCQUFpQixFQUNsQixFQUFFLEVBQUU7WUFDSCxPQUFPO2dCQUNMLGNBQWMsRUFBRSxrQkFBa0I7Z0JBQ2xDLGVBQWUsRUFBRSxtQkFBbUI7Z0JBQ3BDLFlBQVksRUFBRSxnQkFBZ0I7Z0JBQzlCLGFBQWEsRUFBRSxpQkFBaUI7YUFDakMsQ0FBQztRQUNKLENBQUMsQ0FDRixDQUNGLENBQUM7SUFDSixDQUFDO0NBQ0YsQ0FBQTs7WUFqRDZCLGNBQWM7WUFDakIsa0JBQWtCOzs7QUFiaEMseUJBQXlCO0lBSHJDLFVBQVUsQ0FBQztRQUNWLFVBQVUsRUFBRSxNQUFNO0tBQ25CLENBQUM7R0FDVyx5QkFBeUIsQ0E2RHJDO1NBN0RZLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICBDdXN0b21lckNvdXBvbixcclxuICBSb3V0aW5nU2VydmljZSxcclxuICBUcmFuc2xhdGlvblNlcnZpY2UsXHJcbn0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcclxuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBjb21iaW5lTGF0ZXN0LCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTXlDb3Vwb25zQ29tcG9uZW50U2VydmljZSB7XHJcbiAgc29ydExhYmVsczogT2JzZXJ2YWJsZTx7XHJcbiAgICBieVN0YXJ0RGF0ZUFzYzogc3RyaW5nO1xyXG4gICAgYnlTdGFydERhdGVEZXNjOiBzdHJpbmc7XHJcbiAgICBieUVuZERhdGVBc2M6IHN0cmluZztcclxuICAgIGJ5RW5kRGF0ZURlc2M6IHN0cmluZztcclxuICB9PjtcclxuXHJcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IFJFTEVWQU5DRSA9ICc6cmVsZXZhbmNlJztcclxuICBwcm90ZWN0ZWQgcmVhZG9ubHkgQ1VTVE9NRVJfQ09VUE9OX0NPREUgPSAnOmN1c3RvbWVyQ291cG9uQ29kZTonO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByb3RlY3RlZCByb3V0aW5nU2VydmljZTogUm91dGluZ1NlcnZpY2UsXHJcbiAgICBwcm90ZWN0ZWQgdHJhbnNsYXRpb246IFRyYW5zbGF0aW9uU2VydmljZVxyXG4gICkge31cclxuXHJcbiAgbGF1bmNoU2VhcmNoUGFnZShjb3Vwb246IEN1c3RvbWVyQ291cG9uKTogdm9pZCB7XHJcbiAgICB0aGlzLnJvdXRpbmdTZXJ2aWNlLmdvKFxyXG4gICAgICB7XHJcbiAgICAgICAgY3hSb3V0ZTogJ3NlYXJjaCcsXHJcbiAgICAgICAgcGFyYW1zOiB7IHF1ZXJ5OiB0aGlzLmJ1aWxkU2VhcmNoUGFyYW0oY291cG9uKSB9LFxyXG4gICAgICB9LFxyXG4gICAgICB7IGNvdXBvbmNvZGU6IGNvdXBvbi5jb3Vwb25JZCB9XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBidWlsZFNlYXJjaFBhcmFtKGNvdXBvbjogQ3VzdG9tZXJDb3Vwb24pOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIGNvdXBvbi5hbGxQcm9kdWN0c0FwcGxpY2FibGVcclxuICAgICAgPyB0aGlzLlJFTEVWQU5DRVxyXG4gICAgICA6IHRoaXMuUkVMRVZBTkNFICsgdGhpcy5DVVNUT01FUl9DT1VQT05fQ09ERSArIGNvdXBvbi5jb3Vwb25JZDtcclxuICB9XHJcblxyXG4gIGdldFNvcnRMYWJlbHMoKTogT2JzZXJ2YWJsZTx7XHJcbiAgICBieVN0YXJ0RGF0ZUFzYzogc3RyaW5nO1xyXG4gICAgYnlTdGFydERhdGVEZXNjOiBzdHJpbmc7XHJcbiAgICBieUVuZERhdGVBc2M6IHN0cmluZztcclxuICAgIGJ5RW5kRGF0ZURlc2M6IHN0cmluZztcclxuICB9PiB7XHJcbiAgICByZXR1cm4gY29tYmluZUxhdGVzdChbXHJcbiAgICAgIHRoaXMudHJhbnNsYXRpb24udHJhbnNsYXRlKCdteUNvdXBvbnMuc3RhcnREYXRlQXNjJyksXHJcbiAgICAgIHRoaXMudHJhbnNsYXRpb24udHJhbnNsYXRlKCdteUNvdXBvbnMuc3RhcnREYXRlRGVzYycpLFxyXG4gICAgICB0aGlzLnRyYW5zbGF0aW9uLnRyYW5zbGF0ZSgnbXlDb3Vwb25zLmVuZERhdGVBc2MnKSxcclxuICAgICAgdGhpcy50cmFuc2xhdGlvbi50cmFuc2xhdGUoJ215Q291cG9ucy5lbmREYXRlRGVzYycpLFxyXG4gICAgXSkucGlwZShcclxuICAgICAgbWFwKFxyXG4gICAgICAgIChbXHJcbiAgICAgICAgICB0ZXh0QnlTdGFydERhdGVBc2MsXHJcbiAgICAgICAgICB0ZXh0QnlTdGFydERhdGVEZXNjLFxyXG4gICAgICAgICAgdGV4dEJ5RW5kRGF0ZUFzYyxcclxuICAgICAgICAgIHRleHRCeUVuZERhdGVEZXNjLFxyXG4gICAgICAgIF0pID0+IHtcclxuICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGJ5U3RhcnREYXRlQXNjOiB0ZXh0QnlTdGFydERhdGVBc2MsXHJcbiAgICAgICAgICAgIGJ5U3RhcnREYXRlRGVzYzogdGV4dEJ5U3RhcnREYXRlRGVzYyxcclxuICAgICAgICAgICAgYnlFbmREYXRlQXNjOiB0ZXh0QnlFbmREYXRlQXNjLFxyXG4gICAgICAgICAgICBieUVuZERhdGVEZXNjOiB0ZXh0QnlFbmREYXRlRGVzYyxcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICApXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG4iXX0=