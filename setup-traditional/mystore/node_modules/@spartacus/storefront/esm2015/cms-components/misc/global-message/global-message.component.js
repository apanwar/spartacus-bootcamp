import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { GlobalMessageEntities, GlobalMessageService, GlobalMessageType, } from '@spartacus/core';
import { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';
let GlobalMessageComponent = class GlobalMessageComponent {
    constructor(globalMessageService) {
        this.globalMessageService = globalMessageService;
        this.iconTypes = ICON_TYPE;
        this.messageType = GlobalMessageType;
    }
    ngOnInit() {
        this.messages$ = this.globalMessageService.get();
    }
    clear(type, index) {
        this.globalMessageService.remove(type, index);
    }
};
GlobalMessageComponent.ctorParameters = () => [
    { type: GlobalMessageService }
];
GlobalMessageComponent = __decorate([
    Component({
        selector: 'cx-global-message',
        template: "<div *ngIf=\"messages$ | async as messages\">\r\n  <div\r\n    class=\"alert alert-success\"\r\n    *ngFor=\"\r\n      let confMsg of messages[messageType.MSG_TYPE_CONFIRMATION];\r\n      let i = index\r\n    \"\r\n  >\r\n    <span class=\"alert-icon\">\r\n      <cx-icon [type]=\"iconTypes.SUCCESS\"></cx-icon>\r\n    </span>\r\n    <span>{{ confMsg | cxTranslate }}</span>\r\n    <button\r\n      class=\"close\"\r\n      type=\"button\"\r\n      (click)=\"clear(messageType.MSG_TYPE_CONFIRMATION, i)\"\r\n    >\r\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\r\n    </button>\r\n  </div>\r\n  <div\r\n    class=\"alert alert-info\"\r\n    *ngFor=\"let infoMsg of messages[messageType.MSG_TYPE_INFO]; let i = index\"\r\n  >\r\n    <span class=\"alert-icon\">\r\n      <cx-icon [type]=\"iconTypes.INFO\"></cx-icon>\r\n    </span>\r\n    <span>{{ infoMsg | cxTranslate }}</span>\r\n    <button\r\n      class=\"close\"\r\n      type=\"button\"\r\n      (click)=\"clear(messageType.MSG_TYPE_INFO, i)\"\r\n    >\r\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\r\n    </button>\r\n  </div>\r\n  <div\r\n    class=\"alert alert-warning\"\r\n    *ngFor=\"\r\n      let infoMsg of messages[messageType.MSG_TYPE_WARNING];\r\n      let i = index\r\n    \"\r\n  >\r\n    <span class=\"alert-icon\">\r\n      <cx-icon [type]=\"iconTypes.WARNING\"></cx-icon>\r\n    </span>\r\n    <span>{{ infoMsg | cxTranslate }}</span>\r\n    <button\r\n      class=\"close\"\r\n      type=\"button\"\r\n      (click)=\"clear(messageType.MSG_TYPE_INFO, i)\"\r\n    >\r\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\r\n    </button>\r\n  </div>\r\n  <div\r\n    class=\"alert alert-danger\"\r\n    *ngFor=\"let errorMsg of messages[messageType.MSG_TYPE_ERROR]; let i = index\"\r\n  >\r\n    <span class=\"alert-icon\">\r\n      <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\r\n    </span>\r\n    <span>{{ errorMsg | cxTranslate }}</span>\r\n    <button\r\n      class=\"close\"\r\n      type=\"button\"\r\n      (click)=\"clear(messageType.MSG_TYPE_ERROR, i)\"\r\n    >\r\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n"
    })
], GlobalMessageComponent);
export { GlobalMessageComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLW1lc3NhZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9zdG9yZWZyb250LyIsInNvdXJjZXMiOlsiY21zLWNvbXBvbmVudHMvbWlzYy9nbG9iYWwtbWVzc2FnZS9nbG9iYWwtbWVzc2FnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUNMLHFCQUFxQixFQUNyQixvQkFBb0IsRUFDcEIsaUJBQWlCLEdBQ2xCLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBTXpFLElBQWEsc0JBQXNCLEdBQW5DLE1BQWEsc0JBQXNCO0lBTWpDLFlBQXNCLG9CQUEwQztRQUExQyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXNCO1FBTGhFLGNBQVMsR0FBRyxTQUFTLENBQUM7UUFHdEIsZ0JBQVcsR0FBNkIsaUJBQWlCLENBQUM7SUFFUyxDQUFDO0lBRXBFLFFBQVE7UUFDTixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNuRCxDQUFDO0lBRUQsS0FBSyxDQUFDLElBQXVCLEVBQUUsS0FBYTtRQUMxQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNoRCxDQUFDO0NBQ0YsQ0FBQTs7WUFUNkMsb0JBQW9COztBQU5yRCxzQkFBc0I7SUFKbEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLG1CQUFtQjtRQUM3Qixtb0VBQThDO0tBQy9DLENBQUM7R0FDVyxzQkFBc0IsQ0FlbEM7U0FmWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1xyXG4gIEdsb2JhbE1lc3NhZ2VFbnRpdGllcyxcclxuICBHbG9iYWxNZXNzYWdlU2VydmljZSxcclxuICBHbG9iYWxNZXNzYWdlVHlwZSxcclxufSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IElDT05fVFlQRSB9IGZyb20gJy4uLy4uLy4uL2Ntcy1jb21wb25lbnRzL21pc2MvaWNvbi9pY29uLm1vZGVsJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnY3gtZ2xvYmFsLW1lc3NhZ2UnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9nbG9iYWwtbWVzc2FnZS5jb21wb25lbnQuaHRtbCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBHbG9iYWxNZXNzYWdlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBpY29uVHlwZXMgPSBJQ09OX1RZUEU7XHJcblxyXG4gIG1lc3NhZ2VzJDogT2JzZXJ2YWJsZTxHbG9iYWxNZXNzYWdlRW50aXRpZXM+O1xyXG4gIG1lc3NhZ2VUeXBlOiB0eXBlb2YgR2xvYmFsTWVzc2FnZVR5cGUgPSBHbG9iYWxNZXNzYWdlVHlwZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGdsb2JhbE1lc3NhZ2VTZXJ2aWNlOiBHbG9iYWxNZXNzYWdlU2VydmljZSkge31cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLm1lc3NhZ2VzJCA9IHRoaXMuZ2xvYmFsTWVzc2FnZVNlcnZpY2UuZ2V0KCk7XHJcbiAgfVxyXG5cclxuICBjbGVhcih0eXBlOiBHbG9iYWxNZXNzYWdlVHlwZSwgaW5kZXg6IG51bWJlcik6IHZvaWQge1xyXG4gICAgdGhpcy5nbG9iYWxNZXNzYWdlU2VydmljZS5yZW1vdmUodHlwZSwgaW5kZXgpO1xyXG4gIH1cclxufVxyXG4iXX0=