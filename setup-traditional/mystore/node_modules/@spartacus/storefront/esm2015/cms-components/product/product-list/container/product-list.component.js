import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BehaviorSubject, Subscription } from 'rxjs';
import { take } from 'rxjs/operators';
import { PageLayoutService } from '../../../../cms-structure/page/index';
import { ViewConfig } from '../../../../shared/config/view-config';
import { ViewModes } from '../product-view/product-view.component';
import { ProductListComponentService } from './product-list-component.service';
let ProductListComponent = class ProductListComponent {
    constructor(pageLayoutService, productListComponentService, scrollConfig) {
        this.pageLayoutService = pageLayoutService;
        this.productListComponentService = productListComponentService;
        this.scrollConfig = scrollConfig;
        this.subscription = new Subscription();
        this.model$ = this.productListComponentService
            .model$;
        this.viewMode$ = new BehaviorSubject(ViewModes.Grid);
        this.ViewModes = ViewModes;
    }
    ngOnInit() {
        this.isInfiniteScroll = this.scrollConfig.view.infiniteScroll.active;
        this.subscription.add(this.pageLayoutService.templateName$
            .pipe(take(1))
            .subscribe((template) => {
            this.viewMode$.next(template === 'ProductGridPageTemplate'
                ? ViewModes.Grid
                : ViewModes.List);
        }));
    }
    sortList(sortCode) {
        this.productListComponentService.sort(sortCode);
    }
    setViewMode(mode) {
        this.viewMode$.next(mode);
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
};
ProductListComponent.ctorParameters = () => [
    { type: PageLayoutService },
    { type: ProductListComponentService },
    { type: ViewConfig }
];
ProductListComponent = __decorate([
    Component({
        selector: 'cx-product-list',
        template: "<div class=\"cx-page\" *ngIf=\"model$ | async as model\">\r\n  <section class=\"cx-page-section\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 col-lg-12\" *ngIf=\"viewMode$ | async as viewMode\">\r\n          <div class=\"cx-sorting top\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-lg-4 mr-auto\">\r\n                <div class=\"form-group cx-sort-dropdown\">\r\n                  <cx-sorting\r\n                    [sortOptions]=\"model.sorts\"\r\n                    (sortListEvent)=\"sortList($event)\"\r\n                    [selectedOption]=\"model.pagination.sort\"\r\n                    placeholder=\"{{\r\n                      'productList.sortByRelevance' | cxTranslate\r\n                    }}\"\r\n                  ></cx-sorting>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"!isInfiniteScroll\" class=\"col-auto\">\r\n                <div\r\n                  class=\"cx-pagination\"\r\n                  aria-label=\"product search pagination\"\r\n                >\r\n                  <cx-pagination\r\n                    [pagination]=\"model.pagination\"\r\n                    queryParam=\"currentPage\"\r\n                    [defaultPage]=\"0\"\r\n                  ></cx-pagination>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-auto ml-auto ml-lg-0\">\r\n                <cx-product-view\r\n                  (modeChange)=\"setViewMode($event)\"\r\n                  [mode]=\"viewMode\"\r\n                ></cx-product-view>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"cx-product-container\">\r\n            <!-- Product list when using pagination -->\r\n            <ng-container *ngIf=\"!isInfiniteScroll; else infiniteScroll\">\r\n              <ng-container *ngIf=\"viewMode === ViewModes.Grid\">\r\n                <div class=\"row\">\r\n                  <cx-product-grid-item\r\n                    *ngFor=\"let product of model?.products\"\r\n                    [product]=\"product\"\r\n                    class=\"col-12 col-sm-6 col-md-4\"\r\n                  ></cx-product-grid-item>\r\n                </div>\r\n              </ng-container>\r\n\r\n              <ng-container *ngIf=\"viewMode === ViewModes.List\">\r\n                <cx-product-list-item\r\n                  *ngFor=\"let product of model?.products\"\r\n                  [product]=\"product\"\r\n                  class=\"cx-product-search-list\"\r\n                ></cx-product-list-item>\r\n              </ng-container>\r\n            </ng-container>\r\n\r\n            <!-- Product list when using infinite scroll -->\r\n            <ng-template #infiniteScroll>\r\n              <cx-product-scroll\r\n                [scrollConfig]=\"scrollConfig\"\r\n                [model]=\"model\"\r\n                [inputViewMode]=\"viewMode\"\r\n              ></cx-product-scroll>\r\n            </ng-template>\r\n          </div>\r\n          <div class=\"cx-sorting bottom\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-lg-4 mr-auto\">\r\n                <div class=\"form-group cx-sort-dropdown\">\r\n                  <cx-sorting\r\n                    [sortOptions]=\"model.sorts\"\r\n                    (sortListEvent)=\"sortList($event)\"\r\n                    [selectedOption]=\"model.pagination.sort\"\r\n                    placeholder=\"{{\r\n                      'productList.sortByRelevance' | cxTranslate\r\n                    }}\"\r\n                  ></cx-sorting>\r\n                </div>\r\n              </div>\r\n              <div\r\n                *ngIf=\"!isInfiniteScroll\"\r\n                class=\"col-auto\"\r\n                aria-label=\"product search pagination\"\r\n              >\r\n                <div class=\"cx-pagination\">\r\n                  <cx-pagination\r\n                    [pagination]=\"model.pagination\"\r\n                    queryParam=\"currentPage\"\r\n                    [defaultPage]=\"0\"\r\n                  ></cx-pagination>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-auto ml-auto ml-lg-0\">\r\n                <cx-product-view\r\n                  (modeChange)=\"setViewMode($event)\"\r\n                  [mode]=\"viewMode\"\r\n                ></cx-product-view>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n"
    })
], ProductListComponent);
export { ProductListComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImNtcy1jb21wb25lbnRzL3Byb2R1Y3QvcHJvZHVjdC1saXN0L2NvbnRhaW5lci9wcm9kdWN0LWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUU3RCxPQUFPLEVBQUUsZUFBZSxFQUFjLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNqRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDdEMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDekUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNuRSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQU0vRSxJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFvQjtJQVcvQixZQUNVLGlCQUFvQyxFQUNwQywyQkFBd0QsRUFDekQsWUFBd0I7UUFGdkIsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQUNwQyxnQ0FBMkIsR0FBM0IsMkJBQTJCLENBQTZCO1FBQ3pELGlCQUFZLEdBQVosWUFBWSxDQUFZO1FBYnpCLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUkxQyxXQUFNLEdBQWtDLElBQUksQ0FBQywyQkFBMkI7YUFDckUsTUFBTSxDQUFDO1FBRVYsY0FBUyxHQUFHLElBQUksZUFBZSxDQUFZLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzRCxjQUFTLEdBQUcsU0FBUyxDQUFDO0lBTW5CLENBQUM7SUFFSixRQUFRO1FBQ04sSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUM7UUFFckUsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQ25CLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhO2FBQ2pDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDYixTQUFTLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUN0QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FDakIsUUFBUSxLQUFLLHlCQUF5QjtnQkFDcEMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJO2dCQUNoQixDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FDbkIsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUNMLENBQUM7SUFDSixDQUFDO0lBRUQsUUFBUSxDQUFDLFFBQWdCO1FBQ3ZCLElBQUksQ0FBQywyQkFBMkIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUVELFdBQVcsQ0FBQyxJQUFlO1FBQ3pCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0NBQ0YsQ0FBQTs7WUFoQzhCLGlCQUFpQjtZQUNQLDJCQUEyQjtZQUMzQyxVQUFVOztBQWR0QixvQkFBb0I7SUFKaEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGlCQUFpQjtRQUMzQixrK0lBQTRDO0tBQzdDLENBQUM7R0FDVyxvQkFBb0IsQ0E0Q2hDO1NBNUNZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUHJvZHVjdFNlYXJjaFBhZ2UgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xyXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QsIE9ic2VydmFibGUsIFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyB0YWtlIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBQYWdlTGF5b3V0U2VydmljZSB9IGZyb20gJy4uLy4uLy4uLy4uL2Ntcy1zdHJ1Y3R1cmUvcGFnZS9pbmRleCc7XHJcbmltcG9ydCB7IFZpZXdDb25maWcgfSBmcm9tICcuLi8uLi8uLi8uLi9zaGFyZWQvY29uZmlnL3ZpZXctY29uZmlnJztcclxuaW1wb3J0IHsgVmlld01vZGVzIH0gZnJvbSAnLi4vcHJvZHVjdC12aWV3L3Byb2R1Y3Qtdmlldy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQcm9kdWN0TGlzdENvbXBvbmVudFNlcnZpY2UgfSBmcm9tICcuL3Byb2R1Y3QtbGlzdC1jb21wb25lbnQuc2VydmljZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2N4LXByb2R1Y3QtbGlzdCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb2R1Y3QtbGlzdC5jb21wb25lbnQuaHRtbCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQcm9kdWN0TGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBwcml2YXRlIHN1YnNjcmlwdGlvbiA9IG5ldyBTdWJzY3JpcHRpb24oKTtcclxuXHJcbiAgaXNJbmZpbml0ZVNjcm9sbDogYm9vbGVhbjtcclxuXHJcbiAgbW9kZWwkOiBPYnNlcnZhYmxlPFByb2R1Y3RTZWFyY2hQYWdlPiA9IHRoaXMucHJvZHVjdExpc3RDb21wb25lbnRTZXJ2aWNlXHJcbiAgICAubW9kZWwkO1xyXG5cclxuICB2aWV3TW9kZSQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PFZpZXdNb2Rlcz4oVmlld01vZGVzLkdyaWQpO1xyXG4gIFZpZXdNb2RlcyA9IFZpZXdNb2RlcztcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIHBhZ2VMYXlvdXRTZXJ2aWNlOiBQYWdlTGF5b3V0U2VydmljZSxcclxuICAgIHByaXZhdGUgcHJvZHVjdExpc3RDb21wb25lbnRTZXJ2aWNlOiBQcm9kdWN0TGlzdENvbXBvbmVudFNlcnZpY2UsXHJcbiAgICBwdWJsaWMgc2Nyb2xsQ29uZmlnOiBWaWV3Q29uZmlnXHJcbiAgKSB7fVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMuaXNJbmZpbml0ZVNjcm9sbCA9IHRoaXMuc2Nyb2xsQ29uZmlnLnZpZXcuaW5maW5pdGVTY3JvbGwuYWN0aXZlO1xyXG5cclxuICAgIHRoaXMuc3Vic2NyaXB0aW9uLmFkZChcclxuICAgICAgdGhpcy5wYWdlTGF5b3V0U2VydmljZS50ZW1wbGF0ZU5hbWUkXHJcbiAgICAgICAgLnBpcGUodGFrZSgxKSlcclxuICAgICAgICAuc3Vic2NyaWJlKCh0ZW1wbGF0ZSkgPT4ge1xyXG4gICAgICAgICAgdGhpcy52aWV3TW9kZSQubmV4dChcclxuICAgICAgICAgICAgdGVtcGxhdGUgPT09ICdQcm9kdWN0R3JpZFBhZ2VUZW1wbGF0ZSdcclxuICAgICAgICAgICAgICA/IFZpZXdNb2Rlcy5HcmlkXHJcbiAgICAgICAgICAgICAgOiBWaWV3TW9kZXMuTGlzdFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHNvcnRMaXN0KHNvcnRDb2RlOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIHRoaXMucHJvZHVjdExpc3RDb21wb25lbnRTZXJ2aWNlLnNvcnQoc29ydENvZGUpO1xyXG4gIH1cclxuXHJcbiAgc2V0Vmlld01vZGUobW9kZTogVmlld01vZGVzKTogdm9pZCB7XHJcbiAgICB0aGlzLnZpZXdNb2RlJC5uZXh0KG1vZGUpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICB0aGlzLnN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gIH1cclxufVxyXG4iXX0=