import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { APP_INITIALIZER, NgModule } from '@angular/core';
import { PageComponentModule } from '../../cms-structure/page/component/page-component.module';
import { AsmEnablerService } from './services/asm-enabler.service';
/**
 * The ASM loader module takes care of loading the ASM UI
 * only in case there's a reason to do so.
 */
let AsmLoaderModule = class AsmLoaderModule {
};
AsmLoaderModule = __decorate([
    NgModule({
        imports: [CommonModule, PageComponentModule],
        providers: [
            {
                provide: APP_INITIALIZER,
                useFactory: asmFactory,
                deps: [AsmEnablerService],
                multi: true,
            },
        ],
    })
], AsmLoaderModule);
export { AsmLoaderModule };
/**
 *
 * We do not like to block the UI, which is why we delgate loading of ASM
 * to a real component; the router and state aren't available in an optimized
 * way during the APP_INITIALIZER.
 */
export function asmFactory(asmEnablerService) {
    const isReady = () => {
        asmEnablerService.load();
    };
    return isReady;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNtLWxvYWRlci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL3N0b3JlZnJvbnQvIiwic291cmNlcyI6WyJjbXMtY29tcG9uZW50cy9hc20vYXNtLWxvYWRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUMvRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUVuRTs7O0dBR0c7QUFZSCxJQUFhLGVBQWUsR0FBNUIsTUFBYSxlQUFlO0NBQUcsQ0FBQTtBQUFsQixlQUFlO0lBWDNCLFFBQVEsQ0FBQztRQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxtQkFBbUIsQ0FBQztRQUM1QyxTQUFTLEVBQUU7WUFDVDtnQkFDRSxPQUFPLEVBQUUsZUFBZTtnQkFDeEIsVUFBVSxFQUFFLFVBQVU7Z0JBQ3RCLElBQUksRUFBRSxDQUFDLGlCQUFpQixDQUFDO2dCQUN6QixLQUFLLEVBQUUsSUFBSTthQUNaO1NBQ0Y7S0FDRixDQUFDO0dBQ1csZUFBZSxDQUFHO1NBQWxCLGVBQWU7QUFFNUI7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsVUFBVSxDQUFDLGlCQUFvQztJQUM3RCxNQUFNLE9BQU8sR0FBRyxHQUFHLEVBQUU7UUFDbkIsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDM0IsQ0FBQyxDQUFDO0lBQ0YsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEFQUF9JTklUSUFMSVpFUiwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUGFnZUNvbXBvbmVudE1vZHVsZSB9IGZyb20gJy4uLy4uL2Ntcy1zdHJ1Y3R1cmUvcGFnZS9jb21wb25lbnQvcGFnZS1jb21wb25lbnQubW9kdWxlJztcclxuaW1wb3J0IHsgQXNtRW5hYmxlclNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2FzbS1lbmFibGVyLnNlcnZpY2UnO1xyXG5cclxuLyoqXHJcbiAqIFRoZSBBU00gbG9hZGVyIG1vZHVsZSB0YWtlcyBjYXJlIG9mIGxvYWRpbmcgdGhlIEFTTSBVSVxyXG4gKiBvbmx5IGluIGNhc2UgdGhlcmUncyBhIHJlYXNvbiB0byBkbyBzby5cclxuICovXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgUGFnZUNvbXBvbmVudE1vZHVsZV0sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIHByb3ZpZGU6IEFQUF9JTklUSUFMSVpFUixcclxuICAgICAgdXNlRmFjdG9yeTogYXNtRmFjdG9yeSxcclxuICAgICAgZGVwczogW0FzbUVuYWJsZXJTZXJ2aWNlXSxcclxuICAgICAgbXVsdGk6IHRydWUsXHJcbiAgICB9LFxyXG4gIF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBc21Mb2FkZXJNb2R1bGUge31cclxuXHJcbi8qKlxyXG4gKlxyXG4gKiBXZSBkbyBub3QgbGlrZSB0byBibG9jayB0aGUgVUksIHdoaWNoIGlzIHdoeSB3ZSBkZWxnYXRlIGxvYWRpbmcgb2YgQVNNXHJcbiAqIHRvIGEgcmVhbCBjb21wb25lbnQ7IHRoZSByb3V0ZXIgYW5kIHN0YXRlIGFyZW4ndCBhdmFpbGFibGUgaW4gYW4gb3B0aW1pemVkXHJcbiAqIHdheSBkdXJpbmcgdGhlIEFQUF9JTklUSUFMSVpFUi5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBhc21GYWN0b3J5KGFzbUVuYWJsZXJTZXJ2aWNlOiBBc21FbmFibGVyU2VydmljZSkge1xyXG4gIGNvbnN0IGlzUmVhZHkgPSAoKSA9PiB7XHJcbiAgICBhc21FbmFibGVyU2VydmljZS5sb2FkKCk7XHJcbiAgfTtcclxuICByZXR1cm4gaXNSZWFkeTtcclxufVxyXG4iXX0=