import { __decorate } from "tslib";
import { Component, EventEmitter, Input, Output, ViewEncapsulation, } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
let CSAgentLoginFormComponent = class CSAgentLoginFormComponent {
    constructor(fb) {
        this.fb = fb;
        this.csAgentTokenLoading = false;
        this.submitEvent = new EventEmitter();
    }
    ngOnInit() {
        this.csAgentLoginForm = this.fb.group({
            userId: ['', [Validators.required]],
            password: ['', [Validators.required]],
        });
    }
    onSubmit() {
        if (this.csAgentLoginForm.valid) {
            this.submitEvent.emit({
                userId: this.csAgentLoginForm.get('userId').value,
                password: this.csAgentLoginForm.get('password').value,
            });
        }
        else {
            this.csAgentLoginForm.markAllAsTouched();
        }
    }
};
CSAgentLoginFormComponent.ctorParameters = () => [
    { type: FormBuilder }
];
__decorate([
    Input()
], CSAgentLoginFormComponent.prototype, "csAgentTokenLoading", void 0);
__decorate([
    Output()
], CSAgentLoginFormComponent.prototype, "submitEvent", void 0);
CSAgentLoginFormComponent = __decorate([
    Component({
        selector: 'cx-csagent-login-form',
        template: "<form\r\n  (ngSubmit)=\"onSubmit()\"\r\n  [formGroup]=\"csAgentLoginForm\"\r\n  *ngIf=\"!csAgentTokenLoading\"\r\n>\r\n  <label>\r\n    <input\r\n      type=\"text\"\r\n      formControlName=\"userId\"\r\n      placeholder=\"{{ 'asm.loginForm.userId.label' | cxTranslate }}\"\r\n    />\r\n    <cx-form-errors [control]=\"csAgentLoginForm.get('userId')\"></cx-form-errors>\r\n  </label>\r\n\r\n  <label>\r\n    <input\r\n      type=\"password\"\r\n      placeholder=\"{{ 'asm.loginForm.password.label' | cxTranslate }}\"\r\n      formControlName=\"password\"\r\n    />\r\n    <cx-form-errors\r\n      [control]=\"csAgentLoginForm.get('password')\"\r\n    ></cx-form-errors>\r\n  </label>\r\n  <button type=\"submit\">\r\n    {{ 'asm.loginForm.submit' | cxTranslate }}\r\n  </button>\r\n</form>\r\n\r\n<div\r\n  *ngIf=\"csAgentTokenLoading\"\r\n  class=\"spinner\"\r\n  aria-hidden=\"false\"\r\n  aria-label=\"Loading\"\r\n>\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n</div>\r\n",
        encapsulation: ViewEncapsulation.None,
        styles: ["cx-csagent-login-form form{display:flex;width:100%}@media (max-width:575px){cx-csagent-login-form form{flex-direction:column}}cx-csagent-login-form form label{margin:0 0 15px;min-width:auto}@media (min-width:575px){cx-csagent-login-form form label{margin:0 15px 0 0;min-width:15rem}}cx-csagent-login-form form label input{width:100%}cx-csagent-login-form button[type=submit]{color:#fff;border-color:#0a6ed1;background-color:#0a6ed1}cx-csagent-login-form button[type=submit]:hover{background-color:#085caf}"]
    })
], CSAgentLoginFormComponent);
export { CSAgentLoginFormComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NhZ2VudC1sb2dpbi1mb3JtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImNtcy1jb21wb25lbnRzL2FzbS9jc2FnZW50LWxvZ2luLWZvcm0vY3NhZ2VudC1sb2dpbi1mb3JtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxZQUFZLEVBQ1osS0FBSyxFQUVMLE1BQU0sRUFDTixpQkFBaUIsR0FDbEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFRcEUsSUFBYSx5QkFBeUIsR0FBdEMsTUFBYSx5QkFBeUI7SUFTcEMsWUFBb0IsRUFBZTtRQUFmLE9BQUUsR0FBRixFQUFFLENBQWE7UUFMbkMsd0JBQW1CLEdBQUcsS0FBSyxDQUFDO1FBRzVCLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQXdDLENBQUM7SUFFakMsQ0FBQztJQUV2QyxRQUFRO1FBQ04sSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO1lBQ3BDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNuQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDdEMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUU7WUFDL0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUM7Z0JBQ3BCLE1BQU0sRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEtBQUs7Z0JBQ2pELFFBQVEsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUs7YUFDdEQsQ0FBQyxDQUFDO1NBQ0o7YUFBTTtZQUNMLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1NBQzFDO0lBQ0gsQ0FBQztDQUNGLENBQUE7O1lBbkJ5QixXQUFXOztBQUxuQztJQURDLEtBQUssRUFBRTtzRUFDb0I7QUFHNUI7SUFEQyxNQUFNLEVBQUU7OERBQzhEO0FBUDVELHlCQUF5QjtJQU5yQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsdUJBQXVCO1FBQ2pDLHUrQkFBa0Q7UUFFbEQsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7O0tBQ3RDLENBQUM7R0FDVyx5QkFBeUIsQ0E0QnJDO1NBNUJZLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgQ29tcG9uZW50LFxyXG4gIEV2ZW50RW1pdHRlcixcclxuICBJbnB1dCxcclxuICBPbkluaXQsXHJcbiAgT3V0cHV0LFxyXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGb3JtQnVpbGRlciwgRm9ybUdyb3VwLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdjeC1jc2FnZW50LWxvZ2luLWZvcm0nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jc2FnZW50LWxvZ2luLWZvcm0uY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2NzYWdlbnQtbG9naW4tZm9ybS5jb21wb25lbnQuc2NzcyddLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDU0FnZW50TG9naW5Gb3JtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBjc0FnZW50TG9naW5Gb3JtOiBGb3JtR3JvdXA7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY3NBZ2VudFRva2VuTG9hZGluZyA9IGZhbHNlO1xyXG5cclxuICBAT3V0cHV0KClcclxuICBzdWJtaXRFdmVudCA9IG5ldyBFdmVudEVtaXR0ZXI8eyB1c2VySWQ6IHN0cmluZzsgcGFzc3dvcmQ6IHN0cmluZyB9PigpO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGZiOiBGb3JtQnVpbGRlcikge31cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmNzQWdlbnRMb2dpbkZvcm0gPSB0aGlzLmZiLmdyb3VwKHtcclxuICAgICAgdXNlcklkOiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkXV0sXHJcbiAgICAgIHBhc3N3b3JkOiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkXV0sXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIG9uU3VibWl0KCk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuY3NBZ2VudExvZ2luRm9ybS52YWxpZCkge1xyXG4gICAgICB0aGlzLnN1Ym1pdEV2ZW50LmVtaXQoe1xyXG4gICAgICAgIHVzZXJJZDogdGhpcy5jc0FnZW50TG9naW5Gb3JtLmdldCgndXNlcklkJykudmFsdWUsXHJcbiAgICAgICAgcGFzc3dvcmQ6IHRoaXMuY3NBZ2VudExvZ2luRm9ybS5nZXQoJ3Bhc3N3b3JkJykudmFsdWUsXHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5jc0FnZW50TG9naW5Gb3JtLm1hcmtBbGxBc1RvdWNoZWQoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19