import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, } from '@angular/core';
import { CheckoutService, Order } from '@spartacus/core';
import { tap } from 'rxjs/operators';
let OrderConfirmationThankYouMessageComponent = class OrderConfirmationThankYouMessageComponent {
    constructor(checkoutService) {
        this.checkoutService = checkoutService;
        this.isGuestCustomer = false;
    }
    ngOnInit() {
        this.order$ = this.checkoutService.getOrderDetails().pipe(tap((order) => {
            this.isGuestCustomer = order.guestCustomer;
            this.orderGuid = order.guid;
        }));
    }
    ngOnDestroy() {
        this.checkoutService.clearCheckoutData();
    }
};
OrderConfirmationThankYouMessageComponent.ctorParameters = () => [
    { type: CheckoutService }
];
OrderConfirmationThankYouMessageComponent = __decorate([
    Component({
        selector: 'cx-order-confirmation-thank-you-message',
        template: "<ng-container *ngIf=\"order$ | async as order\">\r\n  <div class=\"cx-page-header\">\r\n    <h1 class=\"cx-page-title\">\r\n      {{ 'checkoutOrderConfirmation.confirmationOfOrder' | cxTranslate }}\r\n      {{ order.code }}\r\n    </h1>\r\n  </div>\r\n\r\n  <div class=\"cx-order-confirmation-message\">\r\n    <h2>{{ 'checkoutOrderConfirmation.thankYou' | cxTranslate }}</h2>\r\n    <p>\r\n      {{ 'checkoutOrderConfirmation.invoiceHasBeenSentByEmail' | cxTranslate }}\r\n    </p>\r\n    <!-- <a href=\"#\" class=\"btn-link\">Print Page</a> -->\r\n  </div>\r\n\r\n  <div *ngIf=\"isGuestCustomer\">\r\n    <cx-guest-register-form\r\n      [guid]=\"orderGuid\"\r\n      [email]=\"order.paymentInfo.billingAddress.email\"\r\n    ></cx-guest-register-form>\r\n  </div>\r\n\r\n  <cx-add-to-home-screen-banner></cx-add-to-home-screen-banner>\r\n</ng-container>\r\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], OrderConfirmationThankYouMessageComponent);
export { OrderConfirmationThankYouMessageComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItY29uZmlybWF0aW9uLXRoYW5rLXlvdS1tZXNzYWdlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImNtcy1jb21wb25lbnRzL29yZGVyLWNvbmZpcm1hdGlvbi9jb21wb25lbnRzL29yZGVyLWNvbmZpcm1hdGlvbi10aGFuay15b3UtbWVzc2FnZS9vcmRlci1jb25maXJtYXRpb24tdGhhbmsteW91LW1lc3NhZ2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsR0FHVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRXpELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU9yQyxJQUFhLHlDQUF5QyxHQUF0RCxNQUFhLHlDQUF5QztJQU1wRCxZQUFzQixlQUFnQztRQUFoQyxvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7UUFIdEQsb0JBQWUsR0FBRyxLQUFLLENBQUM7SUFHaUMsQ0FBQztJQUUxRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLGVBQWUsRUFBRSxDQUFDLElBQUksQ0FDdkQsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDWixJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQyxhQUFhLENBQUM7WUFDM0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1FBQzlCLENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxlQUFlLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztJQUMzQyxDQUFDO0NBQ0YsQ0FBQTs7WUFkd0MsZUFBZTs7QUFOM0MseUNBQXlDO0lBTHJELFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSx5Q0FBeUM7UUFDbkQsdzJCQUFvRTtRQUNwRSxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtLQUNoRCxDQUFDO0dBQ1cseUNBQXlDLENBb0JyRDtTQXBCWSx5Q0FBeUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxyXG4gIENvbXBvbmVudCxcclxuICBPbkRlc3Ryb3ksXHJcbiAgT25Jbml0LFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDaGVja291dFNlcnZpY2UsIE9yZGVyIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2N4LW9yZGVyLWNvbmZpcm1hdGlvbi10aGFuay15b3UtbWVzc2FnZScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL29yZGVyLWNvbmZpcm1hdGlvbi10aGFuay15b3UtbWVzc2FnZS5jb21wb25lbnQuaHRtbCcsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBPcmRlckNvbmZpcm1hdGlvblRoYW5rWW91TWVzc2FnZUNvbXBvbmVudFxyXG4gIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIG9yZGVyJDogT2JzZXJ2YWJsZTxPcmRlcj47XHJcbiAgaXNHdWVzdEN1c3RvbWVyID0gZmFsc2U7XHJcbiAgb3JkZXJHdWlkOiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjaGVja291dFNlcnZpY2U6IENoZWNrb3V0U2VydmljZSkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLm9yZGVyJCA9IHRoaXMuY2hlY2tvdXRTZXJ2aWNlLmdldE9yZGVyRGV0YWlscygpLnBpcGUoXHJcbiAgICAgIHRhcCgob3JkZXIpID0+IHtcclxuICAgICAgICB0aGlzLmlzR3Vlc3RDdXN0b21lciA9IG9yZGVyLmd1ZXN0Q3VzdG9tZXI7XHJcbiAgICAgICAgdGhpcy5vcmRlckd1aWQgPSBvcmRlci5ndWlkO1xyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5jaGVja291dFNlcnZpY2UuY2xlYXJDaGVja291dERhdGEoKTtcclxuICB9XHJcbn1cclxuIl19