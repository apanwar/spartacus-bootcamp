import { __decorate } from "tslib";
import { Component, ElementRef, ViewChild } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';
import { Cart, ActiveCartService, OrderEntry, PromotionLocation, PromotionResult, } from '@spartacus/core';
import { filter, map, startWith, switchMap, tap } from 'rxjs/operators';
import { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';
import { ModalService } from '../../../../shared/components/modal/modal.service';
import { PromotionService } from '../../../../shared/services/promotion/promotion.service';
let AddedToCartDialogComponent = class AddedToCartDialogComponent {
    constructor(modalService, cartService, promotionService) {
        this.modalService = modalService;
        this.cartService = cartService;
        this.promotionService = promotionService;
        this.iconTypes = ICON_TYPE;
        this.promotionLocation = PromotionLocation.ActiveCart;
        this.quantity = 0;
        this.modalIsOpen = false;
        this.form = new FormGroup({});
    }
    /**
     * Returns an observable formControl with the quantity of the cartEntry,
     * but also updates the entry in case of a changed value.
     * The quantity can be set to zero in order to remove the entry.
     */
    getQuantityControl() {
        if (!this.quantityControl$) {
            this.quantityControl$ = this.entry$.pipe(filter((e) => !!e), map((entry) => this.getFormControl(entry)), switchMap(() => this.form.valueChanges.pipe(
            // tslint:disable-next-line:deprecation
            startWith(null), tap((valueChange) => {
                if (valueChange) {
                    this.cartService.updateEntry(valueChange.entryNumber, valueChange.quantity);
                    if (valueChange.quantity === 0) {
                        this.dismissModal('Removed');
                    }
                }
                else {
                    this.form.markAsPristine();
                }
            }))), map(() => this.form.get('quantity')));
        }
        return this.quantityControl$;
    }
    ngOnInit() {
        this.orderPromotions$ = this.promotionService.getOrderPromotions(this.promotionLocation);
    }
    getFormControl(entry) {
        if (!this.form.get('quantity')) {
            const quantity = new FormControl(entry.quantity, { updateOn: 'blur' });
            this.form.addControl('quantity', quantity);
            const entryNumber = new FormControl(entry.entryNumber);
            this.form.addControl('entryNumber', entryNumber);
        }
        return this.form.get('quantity');
    }
    dismissModal(reason) {
        this.modalService.dismissActiveModal(reason);
    }
};
AddedToCartDialogComponent.ctorParameters = () => [
    { type: ModalService },
    { type: ActiveCartService },
    { type: PromotionService }
];
__decorate([
    ViewChild('dialog', { read: ElementRef })
], AddedToCartDialogComponent.prototype, "dialog", void 0);
AddedToCartDialogComponent = __decorate([
    Component({
        selector: 'cx-added-to-cart-dialog',
        template: "<div #dialog>\r\n  <!-- Modal Header -->\r\n  <ng-container *ngIf=\"(loaded$ | async) || modalIsOpen; else loading\">\r\n    <div class=\"cx-dialog-header modal-header\">\r\n      <div class=\"cx-dialog-title modal-title\">\r\n        {{\r\n          (increment\r\n            ? 'addToCart.itemsIncrementedInYourCart'\r\n            : 'addToCart.itemsAddedToYourCart'\r\n          ) | cxTranslate\r\n        }}\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"close\"\r\n        aria-label=\"Close\"\r\n        (click)=\"dismissModal('Cross click')\"\r\n      >\r\n        <span aria-hidden=\"true\">\r\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\r\n        </span>\r\n      </button>\r\n    </div>\r\n    <!-- Modal Body -->\r\n    <div class=\"cx-dialog-body modal-body\" *ngIf=\"entry$ | async as entry\">\r\n      <div class=\"cx-dialog-row\">\r\n        <div class=\"cx-dialog-item col-sm-12 col-md-6\">\r\n          <cx-cart-item\r\n            [item]=\"entry\"\r\n            [compact]=\"true\"\r\n            [quantityControl]=\"getQuantityControl() | async\"\r\n            [promotionLocation]=\"promotionLocation\"\r\n            (view)=\"dismissModal('Product selected')\"\r\n          ></cx-cart-item>\r\n        </div>\r\n        <!-- Separator -->\r\n        <div\r\n          class=\"cx-dialog-separator col-sm-12 d-xs-block d-sm-block d-md-none\"\r\n        ></div>\r\n        <!-- Total container -->\r\n        <div class=\"cx-dialog-actions col-sm-12 col-md-6\">\r\n          <div class=\"cx-dialog-total\" *ngIf=\"cart$ | async as cart\">\r\n            <div>\r\n              {{\r\n                'cartItems.cartTotal'\r\n                  | cxTranslate: { count: cart.deliveryItemsQuantity }\r\n              }}\r\n            </div>\r\n\r\n            <div>{{ cart.subTotal?.formattedValue }}</div>\r\n          </div>\r\n\r\n          <!-- Promotions -->\r\n          <div\r\n            class=\"cx-dialog-promotions\"\r\n            *ngIf=\"orderPromotions$ | async as orderPromotions\"\r\n          >\r\n            <cx-promotions [promotions]=\"orderPromotions\"></cx-promotions>\r\n          </div>\r\n\r\n          <!-- Actions -->\r\n          <div class=\"cx-dialog-buttons\">\r\n            <a\r\n              [class.disabled]=\"form.dirty\"\r\n              [routerLink]=\"{ cxRoute: 'cart' } | cxUrl\"\r\n              class=\"btn btn-primary\"\r\n              autofocus\r\n              (click)=\"!form.dirty && dismissModal('View Cart click')\"\r\n              >{{ 'addToCart.viewCart' | cxTranslate }}</a\r\n            >\r\n            <a\r\n              [class.disabled]=\"form.dirty\"\r\n              [routerLink]=\"{ cxRoute: 'checkout' } | cxUrl\"\r\n              class=\"btn btn-secondary\"\r\n              (click)=\"!form.dirty && dismissModal('Proceed To Checkout click')\"\r\n              >{{ 'addToCart.proceedToCheckout' | cxTranslate }}</a\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-template #loading>\r\n    <div class=\"cx-dialog-header modal-header\">\r\n      <div class=\"cx-dialog-title modal-title\">\r\n        {{ 'addToCart.updatingCart' | cxTranslate }}\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"close\"\r\n        aria-label=\"Close\"\r\n        (click)=\"dismissModal('Cross click')\"\r\n      >\r\n        <span aria-hidden=\"true\">\r\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\r\n        </span>\r\n      </button>\r\n    </div>\r\n    <!-- Modal Body -->\r\n    <div class=\"cx-dialog-body modal-body\">\r\n      <div class=\"cx-dialog-row\">\r\n        <div class=\"col-sm-12\"><cx-spinner></cx-spinner></div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n"
    })
], AddedToCartDialogComponent);
export { AddedToCartDialogComponent };
//# sourceMappingURL=data:application/json;base64,