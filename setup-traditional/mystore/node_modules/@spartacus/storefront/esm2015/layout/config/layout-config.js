import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { Config } from '@spartacus/core';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
export var BREAKPOINT;
(function (BREAKPOINT) {
    BREAKPOINT["xs"] = "xs";
    BREAKPOINT["sm"] = "sm";
    BREAKPOINT["md"] = "md";
    BREAKPOINT["lg"] = "lg";
    BREAKPOINT["xl"] = "xl";
})(BREAKPOINT || (BREAKPOINT = {}));
/**
 * The LayoutConfig supports the configuration of page slots by page templates
 * or page sections, such as headers and footers. The configuration also supports
 * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered
 * por a given breakpoint.
 */
let LayoutConfig = class LayoutConfig {
};
LayoutConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function LayoutConfig_Factory() { return i0.ɵɵinject(i1.Config); }, token: LayoutConfig, providedIn: "root" });
LayoutConfig = __decorate([
    Injectable({
        providedIn: 'root',
        useExisting: Config,
    })
], LayoutConfig);
export { LayoutConfig };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LWNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImxheW91dC9jb25maWcvbGF5b3V0LWNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUF3QixNQUFNLGlCQUFpQixDQUFDOzs7QUFHL0QsTUFBTSxDQUFOLElBQVksVUFNWDtBQU5ELFdBQVksVUFBVTtJQUNwQix1QkFBUyxDQUFBO0lBQ1QsdUJBQVMsQ0FBQTtJQUNULHVCQUFTLENBQUE7SUFDVCx1QkFBUyxDQUFBO0lBQ1QsdUJBQVMsQ0FBQTtBQUNYLENBQUMsRUFOVyxVQUFVLEtBQVYsVUFBVSxRQU1yQjtBQW1DRDs7Ozs7R0FLRztBQUtILElBQXNCLFlBQVksR0FBbEMsTUFBc0IsWUFBWTtDQWdDakMsQ0FBQTs7QUFoQ3FCLFlBQVk7SUFKakMsVUFBVSxDQUFDO1FBQ1YsVUFBVSxFQUFFLE1BQU07UUFDbEIsV0FBVyxFQUFFLE1BQU07S0FDcEIsQ0FBQztHQUNvQixZQUFZLENBZ0NqQztTQWhDcUIsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29uZmlnLCBEZWZlckxvYWRpbmdTdHJhdGVneSB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XHJcbmltcG9ydCB7IExhdW5jaENvbmZpZyB9IGZyb20gJy4uL2xhdW5jaC1kaWFsb2cvaW5kZXgnO1xyXG5cclxuZXhwb3J0IGVudW0gQlJFQUtQT0lOVCB7XHJcbiAgeHMgPSAneHMnLFxyXG4gIHNtID0gJ3NtJyxcclxuICBtZCA9ICdtZCcsXHJcbiAgbGcgPSAnbGcnLFxyXG4gIHhsID0gJ3hsJyxcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgTGF5b3V0U2VjdGlvbnMgPVxyXG4gIHwgJ2hlYWRlcidcclxuICB8ICdmb290ZXInXHJcbiAgfCAnTGFuZGluZ1BhZ2UyVGVtcGxhdGUnXHJcbiAgfCBzdHJpbmc7XHJcblxyXG5leHBvcnQgdHlwZSBTbG90Q29uZmlnID0ge1xyXG4gIC8qKiBUaGUgY21zIHBhZ2Ugc2xvdHMgYXJlIG1hcHBlZCBieSB0aGUgYHNsb3QucG9zaXRpb25gLiAqL1xyXG4gIHNsb3RzPzogc3RyaW5nW107XHJcblxyXG4gIC8qKlxyXG4gICAqIFRoZSBwYWdlIGZvbGQgaWRlbnRpZmllcyB0aGUgbGFzdCBleHBlY3RlZCBwYWdlIHNsb3QgYWJvdmUtdGhlLWZvbGQuXHJcbiAgICogSXQncyBwZXJmZWN0bHkgZmluZSB0byBzcGVjaWZ5IHRoaXMgYnkgaWRpY2F0aW9uLCBob3dldmVyIGEgbW9yZVxyXG4gICAqIHByZWNpc2UgaW5kaWNhdGlvbiB3aWxsIGhhdmUgYW4gcG9zaXRpdmUgaW1wYWN0IG9uIHBlcmZvcm1hbmNlLlxyXG4gICAqL1xyXG4gIHBhZ2VGb2xkPzogc3RyaW5nO1xyXG59O1xyXG5cclxuZXhwb3J0IHR5cGUgU2xvdEdyb3VwID0ge1xyXG4gIC8qKiBUaGUgcGFnZSBzbG90IGNvbmZpZ3VyYXRpb24gZm9yIGxhcmdlIHNjcmVlbnMgKi9cclxuICBbQlJFQUtQT0lOVC5sZ10/OiBTbG90Q29uZmlnO1xyXG4gIC8qKiBUaGUgcGFnZSBzbG90IGNvbmZpZ3VyYXRpb24gZm9yIG1lZGl1bSBzY3JlZW5zICovXHJcbiAgW0JSRUFLUE9JTlQubWRdPzogU2xvdENvbmZpZztcclxuICAvKiogVGhlIHBhZ2Ugc2xvdCBjb25maWd1cmF0aW9uIGZvciBzbWFsbCBzY3JlZW5zICovXHJcbiAgW0JSRUFLUE9JTlQuc21dPzogU2xvdENvbmZpZztcclxuICAvKiogVGhlIHBhZ2Ugc2xvdCBjb25maWd1cmF0aW9uIGZvciBleHRyYSBzbWFsbCBzY3JlZW5zICovXHJcbiAgW0JSRUFLUE9JTlQueHNdPzogU2xvdENvbmZpZztcclxufTtcclxuXHJcbmV4cG9ydCB0eXBlIExheW91dFNsb3RDb25maWcgPSB7XHJcbiAgW3NlY3Rpb24gaW4gTGF5b3V0U2VjdGlvbnNdOiBTbG90Q29uZmlnIHwgU2xvdEdyb3VwIHwgTGF5b3V0U2xvdENvbmZpZztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBUaGUgTGF5b3V0Q29uZmlnIHN1cHBvcnRzIHRoZSBjb25maWd1cmF0aW9uIG9mIHBhZ2Ugc2xvdHMgYnkgcGFnZSB0ZW1wbGF0ZXNcclxuICogb3IgcGFnZSBzZWN0aW9ucywgc3VjaCBhcyBoZWFkZXJzIGFuZCBmb290ZXJzLiBUaGUgY29uZmlndXJhdGlvbiBhbHNvIHN1cHBvcnRzXHJcbiAqIGFkYXB0aXZlIGRlc2lnbiBwZXIgYnJlYWRwb2ludCAobm90IHBlciBkZXZpY2UgdHlwZSksIHNvIHRoYXQgdGhlIERPTSBpcyAocmUpcmVuZGVyZWRcclxuICogcG9yIGEgZ2l2ZW4gYnJlYWtwb2ludC5cclxuICovXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCcsXHJcbiAgdXNlRXhpc3Rpbmc6IENvbmZpZyxcclxufSlcclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIExheW91dENvbmZpZyB7XHJcbiAgLyoqIFRoZSBicmVha3BvaW50IGNvbmZpZ3VyYXRpb24gaXMgdXNlZCB3aGVuIHRoZSBET00gaXMgKHJlKXJlbmRlcmVkIGluIHNwZWNpZmljIHZpZXcuXHJcbiAgICogVGhpcyBhbGxvd3MgZm9yIGFkYXB0aXZlIHJlbmRlcmluZywgc28gdGhhdCB0aGUgRE9NIGlzIHJlbmRlcmVkIGZvciBzcGVjaWZpYyBicmVha3BvaW50cy4gKi9cclxuICBicmVha3BvaW50cz86IHtcclxuICAgIFtCUkVBS1BPSU5ULnhzXT86IG51bWJlcjtcclxuICAgIFtCUkVBS1BPSU5ULnNtXT86IG51bWJlcjtcclxuICAgIFtCUkVBS1BPSU5ULm1kXT86IG51bWJlcjtcclxuICAgIFtCUkVBS1BPSU5ULmxnXT86IG51bWJlcjtcclxuICB9O1xyXG4gIGxheW91dFNsb3RzPzogTGF5b3V0U2xvdENvbmZpZztcclxuXHJcbiAgLyoqXHJcbiAgICogRGVmZXJycmVkIGxvYWRpbmcgaXMgYSB0ZWNobmlxdWUgdG8gaG9sZCBvZiB3aXRoIHRoZSBsb2FkaW5nIC8gY3JlYXRpb25cclxuICAgKiBvZiBET00gZWxlbWVudHMgd2hpY2ggYXJlIG5vdCBub3QgaW4gdGhlIGluaXRpYWwgdmlldyBwb3J0LlxyXG4gICAqIFRoaXMgdGVjaG5pcXVlIHdpbCBpbmNyZWFzZSBwZXJmb3JtYW5jZS5cclxuICAgKi9cclxuICBkZWZlcnJlZExvYWRpbmc/OiB7XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBnbG9iYWwgc3RyYXRlZ3kgd2lsbCBiZSB1c2VkIGFzIGEgZmFsbGJhY2sgc3RyYXRlZ3kgZm9yIGFsbCBET00gY3JlYXRpb24sXHJcbiAgICAgKiBidXQgY2FuIGJlIG92ZXJyaWRlbiBieSBsb2NhbCBjb25maWd1cmF0aW9uLCBpLmUuIGZvciBjbXMgY29tcG9uZW50cy5cclxuICAgICAqL1xyXG4gICAgc3RyYXRlZ3k/OiBEZWZlckxvYWRpbmdTdHJhdGVneTtcclxuICAgIC8qKlxyXG4gICAgICogVGhlIGludGVyc2VjdGlvbiBtYXJnaW4gY29udGFpbnMgdGhlIG9mZnNldCB1c2VkIGJ5IHRoZSBJbnRlcnNlY3Rpb24gT2JzZXJ2ZXJcclxuICAgICAqIHRvIG9ic2VydmUgZWxlbWVudHMgb3V0c2lkZSB0aGUgdmlldyBwb3J0LlxyXG4gICAgICpcclxuICAgICAqIFNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvSW50ZXJzZWN0aW9uT2JzZXJ2ZXIvcm9vdE1hcmdpblxyXG4gICAgICovXHJcbiAgICBpbnRlcnNlY3Rpb25NYXJnaW4/OiBzdHJpbmc7XHJcbiAgfTtcclxuXHJcbiAgbGF1bmNoPzogTGF1bmNoQ29uZmlnO1xyXG59XHJcbiJdfQ==