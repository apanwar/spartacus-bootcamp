/** The element attribute used to store the focus state */
export const FOCUS_ATTR = 'data-cx-focus';
/** The element attribute used to store the focus group state */
export const FOCUS_GROUP_ATTR = 'data-cx-focus-group';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5Ym9hcmQtZm9jdXMubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL3N0b3JlZnJvbnQvIiwic291cmNlcyI6WyJsYXlvdXQvYTExeS9rZXlib2FyZC1mb2N1cy9rZXlib2FyZC1mb2N1cy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwREFBMEQ7QUFDMUQsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLGVBQWUsQ0FBQztBQUMxQyxnRUFBZ0U7QUFDaEUsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcscUJBQXFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogVGhlIGVsZW1lbnQgYXR0cmlidXRlIHVzZWQgdG8gc3RvcmUgdGhlIGZvY3VzIHN0YXRlICovXHJcbmV4cG9ydCBjb25zdCBGT0NVU19BVFRSID0gJ2RhdGEtY3gtZm9jdXMnO1xyXG4vKiogVGhlIGVsZW1lbnQgYXR0cmlidXRlIHVzZWQgdG8gc3RvcmUgdGhlIGZvY3VzIGdyb3VwIHN0YXRlICovXHJcbmV4cG9ydCBjb25zdCBGT0NVU19HUk9VUF9BVFRSID0gJ2RhdGEtY3gtZm9jdXMtZ3JvdXAnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGVudW0gTU9WRV9GT0NVUyB7XHJcbiAgTkVYVCA9IDEsXHJcbiAgUFJFViA9IC0xLFxyXG59XHJcblxyXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWVtcHR5LWludGVyZmFjZVxyXG5leHBvcnQgaW50ZXJmYWNlIEJhc2VGb2N1c0NvbmZpZyB7fVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBWaXNpYmxlRm9jdXNDb25maWcge1xyXG4gIC8qKlxyXG4gICAqIFdoZW4gc2V0IHRvIHRydWUsIHRoZSBtb3VzZS1mb2N1cyBjbGFzcyBpcyBhZGRlZCB0byB0aGUgaG9zdCBlbGVtZW50LFxyXG4gICAqIGluZGljYXRpbmcgdGhhdCB0aGUgZWxlbWVudCBmb2N1cyB3YXMgbm90IGNhdXNlZCBieSB0aGUga2V5Ym9hcmQuXHJcbiAgICovXHJcbiAgZGlzYWJsZU1vdXNlRm9jdXM/OiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEJsb2NrRm9jdXNDb25maWcgZXh0ZW5kcyBWaXNpYmxlRm9jdXNDb25maWcge1xyXG4gIGJsb2NrPzogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQZXJzaXN0Rm9jdXNDb25maWcgZXh0ZW5kcyBCbG9ja0ZvY3VzQ29uZmlnIHtcclxuICAvKipcclxuICAgKiBBIGtleSB0byBtYWludGFpbiB0aGUgZm9jdXMgb2YgYW4gZWxlbWVudCBpbiBjYXNlIHRoZSBjb21wb25lbnQgaXNcclxuICAgKiByZWNyZWF0ZWQgKHdoaWNoIG9mdGVuIGlzIHRoZSBjYXNlIHdoZW4gYW4gYCpuZ0lmYCBvciBgKm5nRm9yYCBpcyB1c2VkKS5cclxuICAgKi9cclxuICBrZXk/OiBzdHJpbmc7XHJcblxyXG4gIC8qKlxyXG4gICAqIE9wdGlvbmFsIGdyb3VwIGlkZW50aWZpZXIgdGhhdCBjYW4gYmUgdXNlZCB0byBwZXJzaXN0IHRoZSBmb2N1cy4gVGhpcyBhbGxvd3NcclxuICAgKiB0byBoYXZlIHNlcGFyYXRlIHBlcnNpc3RlZCBmb2N1cyBhdmFpbGFibGUgd2hlbiB0aGUgRE9NIGlzIHBhcnRpYWxseSByZWJ1aWxkLlxyXG4gICAqL1xyXG4gIGdyb3VwPzogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEVzY2FwZUZvY3VzQ29uZmlnIGV4dGVuZHMgUGVyc2lzdEZvY3VzQ29uZmlnIHtcclxuICBmb2N1c09uRXNjYXBlPzogYm9vbGVhbjtcclxuICAvKipcclxuICAgKiBGb3JjZSBhbiBhdXRvZm9jdXMgaW4gY2FzZSBvZiBkb3VibGUtZXNjYXBlXHJcbiAgICovXHJcbiAgZm9jdXNPbkRvdWJsZUVzY2FwZT86IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXV0b0ZvY3VzQ29uZmlnIGV4dGVuZHMgRXNjYXBlRm9jdXNDb25maWcge1xyXG4gIC8qKlxyXG4gICAqIEF1dG9mb2N1cyBpcyBlbmFibGVkIGJ5IGRlZmF1bHQsIGFuZCB3aWxsIHRyeSB0byBmb2N1cyBhbiBfYXV0b2ZvY3VzXyBlbGVtZW50LlxyXG4gICAqIEluIGNhc2UgdGhlIGZvY3VzIGlzIGV4cGxpY2l0bHkgc2V0IHRvIGB0cnVlYCwgdGhlIGZpcnN0IGFjY2Vzc2libGUgZWxlbWVudFxyXG4gICAqIGlzIGZvY3Vzc2VkIGluIGNhc2UgdGhlcmUgaXMgbm8gX2F1dG9mb2N1c18gZWxlbWVudCBmb3VuZC5cclxuICAgKiBJZiB0aGUgZm9jdXMgaXMgc2V0IHRvIGZhbHNlLCBhdXRvZm9jdXMgd2lsbCBiZSBkaXNhYmxlZCBjb21wbGV0ZWx5LlxyXG4gICAqXHJcbiAgICogSWYgYSBzdHJpbmcgdmFsdWUgaXMgZ2l2ZW4sIHRoZSBhdXRvZm9jdXMgd2lsbCBiZSByZXN0b3JlZCBiYXNlZCBvbiB0aGUgcGVyc2lzdGVkXHJcbiAgICogZm9jdXMgZ3JvdXAsIHdoaWNoIGlzIGRyaXZlbiBieSBgUGVyc2lzdEZvY3VzQ29uZmlnLmtleWAgYW5kIGBQZXJzaXN0Rm9jdXNDb25maWcuZ3JvdXBgLlxyXG4gICAqXHJcbiAgICogRGVmYXVsdHMgdG8gYHRydWVgLlxyXG4gICAqL1xyXG4gIGF1dG9mb2N1cz86IGJvb2xlYW4gfCBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVGFiRm9jdXNDb25maWcgZXh0ZW5kcyBBdXRvRm9jdXNDb25maWcge1xyXG4gIHRhYj86IGJvb2xlYW4gfCAnc2Nyb2xsJyB8IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBrZXlib2FyZCBuYXZpZ2F0aW9uICh0YWIsIHNoaWZ0LXRhYiBhbmQgdXAgZG93biBrZXlzKSBpcyBfdHJhcHBlZF9cclxuICogZm9yIHRoZSBuZXN0ZWQgZm9jdXNhYmxlIGVsZW1lbnRzLiBUaGlzIG1lYW5zIHRoYXQgdGhlIGZvY3VzIGNhbiBub3RcclxuICogXCJsZWF2ZVwiIHRoZSBlbGVtZW50cy4gSWYgdGhlIGxhc3QgZWxlbWVudCBpcyBmb2N1c2VkLCB0aGUga2V5Ym9hcmQgd2lsbFxyXG4gKiBuYXZpZ2F0ZSB0byB0aGUgZmlyc3QgZWxlbWVudCBhbmQgdmlzYSB2ZXJzYS5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgVHJhcEZvY3VzQ29uZmlnIGV4dGVuZHMgVGFiRm9jdXNDb25maWcge1xyXG4gIC8qKiB0cmFwcyB0aGUgZm9jdXMgKi9cclxuICB0cmFwPzogYm9vbGVhbiB8ICdzdGFydCcgfCAnZW5kJztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBMb2NrRm9jdXNDb25maWcgZXh0ZW5kcyBUcmFwRm9jdXNDb25maWcge1xyXG4gIC8qKlxyXG4gICAqIEluZGljYXRlcyB0aGF0IHRoZSBuZXN0ZWQgRE9NIGlzIGxvY2tlZCBmb3Iga2V5Ym9hcmRpbmcgKGBUQUJgKS5cclxuICAgKi9cclxuICBsb2NrPzogYm9vbGVhbjtcclxufVxyXG5cclxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1lbXB0eS1pbnRlcmZhY2VcclxuZXhwb3J0IGludGVyZmFjZSBGb2N1c0NvbmZpZyBleHRlbmRzIExvY2tGb2N1c0NvbmZpZyB7fVxyXG4iXX0=