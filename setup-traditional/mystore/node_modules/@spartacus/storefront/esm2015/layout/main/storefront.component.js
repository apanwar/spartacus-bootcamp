import { __decorate } from "tslib";
import { Component, ElementRef, HostBinding, HostListener, OnDestroy, OnInit, ViewChild, } from '@angular/core';
import { RoutingService } from '@spartacus/core';
import { FocusConfig, KeyboardFocusService, } from '../a11y/keyboard-focus/index';
import { SkipLinkComponent } from '../a11y/skip-link/index';
import { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';
let StorefrontComponent = class StorefrontComponent {
    constructor(hamburgerMenuService, routingService, elementRef, keyboardFocusService) {
        this.hamburgerMenuService = hamburgerMenuService;
        this.routingService = routingService;
        this.elementRef = elementRef;
        this.keyboardFocusService = keyboardFocusService;
        this.isExpanded$ = this.hamburgerMenuService.isExpanded;
        // required by esc focus
        this.tabindex = '0';
        this.keyboardFocusConfig = {
            focusOnEscape: true,
            focusOnDoubleEscape: true,
        };
    }
    handleEscape(event) {
        this.keyboardFocusService.handleEscape(this.elementRef.nativeElement, this.keyboardFocusConfig, event);
    }
    ngOnInit() {
        this.navigateSubscription = this.routingService
            .isNavigating()
            .subscribe((val) => {
            this.startNavigating = val === true;
            this.stopNavigating = val === false;
        });
    }
    collapseMenuIfClickOutside(event) {
        if (event.target.className.includes('is-expanded')) {
            this.collapseMenu();
        }
    }
    collapseMenu() {
        this.hamburgerMenuService.toggle(true);
    }
    ngOnDestroy() {
        if (this.navigateSubscription) {
            this.navigateSubscription.unsubscribe();
        }
    }
};
StorefrontComponent.ctorParameters = () => [
    { type: HamburgerMenuService },
    { type: RoutingService },
    { type: ElementRef },
    { type: KeyboardFocusService }
];
__decorate([
    HostBinding('class.start-navigating')
], StorefrontComponent.prototype, "startNavigating", void 0);
__decorate([
    HostBinding('class.stop-navigating')
], StorefrontComponent.prototype, "stopNavigating", void 0);
__decorate([
    HostBinding('tabindex')
], StorefrontComponent.prototype, "tabindex", void 0);
__decorate([
    ViewChild(SkipLinkComponent)
], StorefrontComponent.prototype, "child", void 0);
__decorate([
    HostListener('keydown.escape', ['$event'])
], StorefrontComponent.prototype, "handleEscape", null);
StorefrontComponent = __decorate([
    Component({
        selector: 'cx-storefront',
        template: "<ng-template cxOutlet=\"cx-storefront\">\r\n  <ng-template cxOutlet=\"cx-header\">\r\n    <header\r\n      cxSkipLink=\"cx-header\"\r\n      [cxFocus]=\"{ disableMouseFocus: true }\"\r\n      [class.is-expanded]=\"isExpanded$ | async\"\r\n      (keydown.escape)=\"collapseMenu()\"\r\n      (click)=\"collapseMenuIfClickOutside($event)\"\r\n    >\r\n      <cx-page-layout section=\"header\"></cx-page-layout>\r\n      <cx-page-layout section=\"navigation\"></cx-page-layout>\r\n    </header>\r\n    <cx-page-slot position=\"BottomHeaderSlot\"></cx-page-slot>\r\n    <cx-global-message></cx-global-message>\r\n  </ng-template>\r\n\r\n  <main cxSkipLink=\"cx-main\" [cxFocus]=\"{ disableMouseFocus: true }\">\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n\r\n  <ng-template cxOutlet=\"cx-footer\">\r\n    <footer cxSkipLink=\"cx-footer\" [cxFocus]=\"{ disableMouseFocus: true }\">\r\n      <cx-page-layout section=\"footer\"></cx-page-layout>\r\n    </footer>\r\n  </ng-template>\r\n</ng-template>\r\n"
    })
], StorefrontComponent);
export { StorefrontComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmVmcm9udC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL3N0b3JlZnJvbnQvIiwic291cmNlcyI6WyJsYXlvdXQvbWFpbi9zdG9yZWZyb250LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxVQUFVLEVBQ1YsV0FBVyxFQUNYLFlBQVksRUFDWixTQUFTLEVBQ1QsTUFBTSxFQUNOLFNBQVMsR0FDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFakQsT0FBTyxFQUNMLFdBQVcsRUFDWCxvQkFBb0IsR0FDckIsTUFBTSw4QkFBOEIsQ0FBQztBQUN0QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQU12RixJQUFhLG1CQUFtQixHQUFoQyxNQUFhLG1CQUFtQjtJQTBCOUIsWUFDVSxvQkFBMEMsRUFDMUMsY0FBOEIsRUFDNUIsVUFBbUMsRUFDbkMsb0JBQTBDO1FBSDVDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBc0I7UUFDMUMsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQzVCLGVBQVUsR0FBVixVQUFVLENBQXlCO1FBQ25DLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBc0I7UUE1QnRELGdCQUFXLEdBQXdCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxVQUFVLENBQUM7UUFLeEUsd0JBQXdCO1FBQ0MsYUFBUSxHQUFHLEdBQUcsQ0FBQztRQUloQyx3QkFBbUIsR0FBZ0I7WUFDekMsYUFBYSxFQUFFLElBQUk7WUFDbkIsbUJBQW1CLEVBQUUsSUFBSTtTQUMxQixDQUFDO0lBZ0JDLENBQUM7SUFiSixZQUFZLENBQUMsS0FBb0I7UUFDL0IsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFlBQVksQ0FDcEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQzdCLElBQUksQ0FBQyxtQkFBbUIsRUFDeEIsS0FBSyxDQUNOLENBQUM7SUFDSixDQUFDO0lBU0QsUUFBUTtRQUNOLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLENBQUMsY0FBYzthQUM1QyxZQUFZLEVBQUU7YUFDZCxTQUFTLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUNqQixJQUFJLENBQUMsZUFBZSxHQUFHLEdBQUcsS0FBSyxJQUFJLENBQUM7WUFDcEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxHQUFHLEtBQUssS0FBSyxDQUFDO1FBQ3RDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELDBCQUEwQixDQUFDLEtBQWlCO1FBQzFDLElBQWtCLEtBQUssQ0FBQyxNQUFPLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsRUFBRTtZQUNqRSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7U0FDckI7SUFDSCxDQUFDO0lBRUQsWUFBWTtRQUNWLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtZQUM3QixJQUFJLENBQUMsb0JBQW9CLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDekM7SUFDSCxDQUFDO0NBQ0YsQ0FBQTs7WUE5QmlDLG9CQUFvQjtZQUMxQixjQUFjO1lBQ2hCLFVBQVU7WUFDQSxvQkFBb0I7O0FBMUJmO0lBQXRDLFdBQVcsQ0FBQyx3QkFBd0IsQ0FBQzs0REFBaUI7QUFDakI7SUFBckMsV0FBVyxDQUFDLHVCQUF1QixDQUFDOzJEQUFnQjtBQUc1QjtJQUF4QixXQUFXLENBQUMsVUFBVSxDQUFDO3FEQUFnQjtBQUVWO0lBQTdCLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQztrREFBMEI7QUFRdkQ7SUFEQyxZQUFZLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQzt1REFPMUM7QUF4QlUsbUJBQW1CO0lBSi9CLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxlQUFlO1FBQ3pCLDIvQkFBMEM7S0FDM0MsQ0FBQztHQUNXLG1CQUFtQixDQXlEL0I7U0F6RFksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBDb21wb25lbnQsXHJcbiAgRWxlbWVudFJlZixcclxuICBIb3N0QmluZGluZyxcclxuICBIb3N0TGlzdGVuZXIsXHJcbiAgT25EZXN0cm95LFxyXG4gIE9uSW5pdCxcclxuICBWaWV3Q2hpbGQsXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFJvdXRpbmdTZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7XHJcbiAgRm9jdXNDb25maWcsXHJcbiAgS2V5Ym9hcmRGb2N1c1NlcnZpY2UsXHJcbn0gZnJvbSAnLi4vYTExeS9rZXlib2FyZC1mb2N1cy9pbmRleCc7XHJcbmltcG9ydCB7IFNraXBMaW5rQ29tcG9uZW50IH0gZnJvbSAnLi4vYTExeS9za2lwLWxpbmsvaW5kZXgnO1xyXG5pbXBvcnQgeyBIYW1idXJnZXJNZW51U2VydmljZSB9IGZyb20gJy4uL2hlYWRlci9oYW1idXJnZXItbWVudS9oYW1idXJnZXItbWVudS5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnY3gtc3RvcmVmcm9udCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3N0b3JlZnJvbnQuY29tcG9uZW50Lmh0bWwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU3RvcmVmcm9udENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBuYXZpZ2F0ZVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xyXG4gIGlzRXhwYW5kZWQkOiBPYnNlcnZhYmxlPGJvb2xlYW4+ID0gdGhpcy5oYW1idXJnZXJNZW51U2VydmljZS5pc0V4cGFuZGVkO1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnN0YXJ0LW5hdmlnYXRpbmcnKSBzdGFydE5hdmlnYXRpbmc7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zdG9wLW5hdmlnYXRpbmcnKSBzdG9wTmF2aWdhdGluZztcclxuXHJcbiAgLy8gcmVxdWlyZWQgYnkgZXNjIGZvY3VzXHJcbiAgQEhvc3RCaW5kaW5nKCd0YWJpbmRleCcpIHRhYmluZGV4ID0gJzAnO1xyXG5cclxuICBAVmlld0NoaWxkKFNraXBMaW5rQ29tcG9uZW50KSBjaGlsZDogU2tpcExpbmtDb21wb25lbnQ7XHJcblxyXG4gIHByaXZhdGUga2V5Ym9hcmRGb2N1c0NvbmZpZzogRm9jdXNDb25maWcgPSB7XHJcbiAgICBmb2N1c09uRXNjYXBlOiB0cnVlLFxyXG4gICAgZm9jdXNPbkRvdWJsZUVzY2FwZTogdHJ1ZSxcclxuICB9O1xyXG5cclxuICBASG9zdExpc3RlbmVyKCdrZXlkb3duLmVzY2FwZScsIFsnJGV2ZW50J10pXHJcbiAgaGFuZGxlRXNjYXBlKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZCB7XHJcbiAgICB0aGlzLmtleWJvYXJkRm9jdXNTZXJ2aWNlLmhhbmRsZUVzY2FwZShcclxuICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsXHJcbiAgICAgIHRoaXMua2V5Ym9hcmRGb2N1c0NvbmZpZyxcclxuICAgICAgZXZlbnRcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgaGFtYnVyZ2VyTWVudVNlcnZpY2U6IEhhbWJ1cmdlck1lbnVTZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSByb3V0aW5nU2VydmljZTogUm91dGluZ1NlcnZpY2UsXHJcbiAgICBwcm90ZWN0ZWQgZWxlbWVudFJlZjogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4sXHJcbiAgICBwcm90ZWN0ZWQga2V5Ym9hcmRGb2N1c1NlcnZpY2U6IEtleWJvYXJkRm9jdXNTZXJ2aWNlXHJcbiAgKSB7fVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMubmF2aWdhdGVTdWJzY3JpcHRpb24gPSB0aGlzLnJvdXRpbmdTZXJ2aWNlXHJcbiAgICAgIC5pc05hdmlnYXRpbmcoKVxyXG4gICAgICAuc3Vic2NyaWJlKCh2YWwpID0+IHtcclxuICAgICAgICB0aGlzLnN0YXJ0TmF2aWdhdGluZyA9IHZhbCA9PT0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnN0b3BOYXZpZ2F0aW5nID0gdmFsID09PSBmYWxzZTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG5cclxuICBjb2xsYXBzZU1lbnVJZkNsaWNrT3V0c2lkZShldmVudDogTW91c2VFdmVudCkge1xyXG4gICAgaWYgKCg8SFRNTEVsZW1lbnQ+ZXZlbnQudGFyZ2V0KS5jbGFzc05hbWUuaW5jbHVkZXMoJ2lzLWV4cGFuZGVkJykpIHtcclxuICAgICAgdGhpcy5jb2xsYXBzZU1lbnUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbGxhcHNlTWVudSgpOiB2b2lkIHtcclxuICAgIHRoaXMuaGFtYnVyZ2VyTWVudVNlcnZpY2UudG9nZ2xlKHRydWUpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5uYXZpZ2F0ZVN1YnNjcmlwdGlvbikge1xyXG4gICAgICB0aGlzLm5hdmlnYXRlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==