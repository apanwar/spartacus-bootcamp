{"version":3,"file":"spartacus-storefront.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@spartacus/storefront/layout/launch-dialog/config/launch-config.ts","ng://@spartacus/storefront/layout/config/layout-config.ts","ng://@spartacus/storefront/layout/launch-dialog/services/launch-render.strategy.ts","ng://@spartacus/storefront/layout/launch-dialog/services/inline-render.strategy.ts","ng://@spartacus/storefront/layout/launch-dialog/services/launch-dialog.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.model.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-renderer.service.ts","ng://@spartacus/storefront/layout/loading/intersection.service.ts","ng://@spartacus/storefront/layout/loading/defer-loader.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.module.ts","ng://@spartacus/storefront/layout/launch-dialog/services/outlet-render.strategy.ts","ng://@spartacus/storefront/layout/launch-dialog/services/routing-render.strategy.ts","ng://@spartacus/storefront/layout/launch-dialog/launch-dialog.module.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/anonymous-consent-launch-dialog.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/keyboard-focus.model.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/base/base-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/base/base-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/visible/visible-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/block/block-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/persist/persist-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/persist/persist-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/services/select-focus.util.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/escape/escape-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/escape/escape-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/autofocus/auto-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/autofocus/auto-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/tab/tab-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/tab/tab-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/trap/trap-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/trap/trap-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/lock/lock-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/lock/lock-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/services/keyboard-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/keyboard-focus.module.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/index.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.model.ts","ng://@spartacus/storefront/cms-components/misc/icon/fontawesome-icon.config.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon-loader.service.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.component.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.module.ts","ng://@spartacus/storefront/shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/default-anonymous-consent-layout.config.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/anonymous-consent-management.module.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.component.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.module.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-management.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/consent-management.module.ts","ng://@spartacus/storefront/shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module.ts","ng://@spartacus/storefront/shared/components/card/card.component.ts","ng://@spartacus/storefront/shared/components/card/card.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.service.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.component.ts","ng://@spartacus/storefront/layout/breakpoint/breakpoint.service.ts","ng://@spartacus/storefront/shared/components/media/media.service.ts","ng://@spartacus/storefront/shared/components/media/media.component.ts","ng://@spartacus/storefront/shared/components/media/media.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.module.ts","ng://@spartacus/storefront/shared/components/form/form-errors/form-errors.component.ts","ng://@spartacus/storefront/shared/components/form/form-errors/form-errors.module.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.component.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.module.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.component.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.module.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/config/default-pagination.config.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/config/pagination.config.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.model.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.builder.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.module.ts","ng://@spartacus/storefront/shared/components/list-navigation/sorting/sorting.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/list-navigation.module.ts","ng://@spartacus/storefront/shared/components/media/media.config.ts","ng://@spartacus/storefront/shared/components/modal/modal-ref.ts","ng://@spartacus/storefront/shared/components/modal/modal.service.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.component.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.module.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/config/qualtrics-config.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics-loader.service.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.component.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/config/default-qualtrics-config.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.module.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/language-currency.component.ts","ng://@spartacus/storefront/cms-structure/page/model/cms-component-data.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-component.service.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.component.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.module.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context.model.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.component.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.module.ts","ng://@spartacus/storefront/shared/config/view-config.ts","ng://@spartacus/storefront/shared/config/view-config.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.service.ts","ng://@spartacus/storefront/shared/services/promotion/promotion.service.ts","ng://@spartacus/storefront/shared/utils/validators/custom-form-validators.ts","ng://@spartacus/storefront/shared/utils/forms/title-utils.ts","ng://@spartacus/storefront/cms-structure/services/cms-components.service.ts","ng://@spartacus/storefront/cms-structure/page/component/services/cms-injector.service.ts","ng://@spartacus/storefront/cms-structure/page/component/handlers/component-handler.ts","ng://@spartacus/storefront/cms-structure/page/component/services/component-handler.service.ts","ng://@spartacus/storefront/cms-structure/page/component/component-wrapper.directive.ts","ng://@spartacus/storefront/cms-structure/page/component/handlers/default-component.handler.ts","ng://@spartacus/storefront/cms-structure/page/component/handlers/lazy-component.handler.ts","ng://@spartacus/storefront/cms-structure/page/component/page-component.module.ts","ng://@spartacus/storefront/cms-components/asm/asm-constants.ts","ng://@spartacus/storefront/cms-components/asm/services/asm-enabler.service.ts","ng://@spartacus/storefront/cms-components/asm/asm-loader.module.ts","ng://@spartacus/storefront/cms-components/asm/services/asm-component.service.ts","ng://@spartacus/storefront/cms-components/asm/asm-main-ui/asm-main-ui.component.ts","ng://@spartacus/storefront/cms-components/asm/asm-session-timer/asm-session-timer.component.ts","ng://@spartacus/storefront/cms-components/asm/asm-session-timer/format-timer.pipe.ts","ng://@spartacus/storefront/cms-components/asm/asm-toggle-ui/asm-toggle-ui.component.ts","ng://@spartacus/storefront/cms-components/asm/csagent-login-form/csagent-login-form.component.ts","ng://@spartacus/storefront/cms-components/asm/customer-emulation/customer-emulation.component.ts","ng://@spartacus/storefront/cms-components/asm/customer-selection/customer-selection.component.ts","ng://@spartacus/storefront/cms-components/asm/default-asm-layout.config.ts","ng://@spartacus/storefront/cms-components/asm/asm.module.ts","ng://@spartacus/storefront/cms-components/product/current-product.service.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/applied-coupons/applied-coupons.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item/cart-item.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/order-summary/order-summary.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-shared.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-not-empty.guard.ts","ng://@spartacus/storefront/cms-components/cart/cart-page-layout-handler.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.module.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout-handler.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.component.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.component.ts","ng://@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.module.ts","ng://@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.component.ts","ng://@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.module.ts","ng://@spartacus/storefront/cms-components/cart/cart.module.ts","ng://@spartacus/storefront/cms-components/checkout/model/checkout-step.model.ts","ng://@spartacus/storefront/cms-components/checkout/config/checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/config/default-checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/services/checkout-config.service.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout-auth.guard.ts","ng://@spartacus/storefront/cms-components/checkout/services/checkout-details.service.ts","ng://@spartacus/storefront/cms-components/checkout/services/express-checkout.service.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/shipping-address-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/delivery-mode-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/payment-details-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout-details-loaded.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.module.ts","ng://@spartacus/storefront/cms-components/checkout/checkout.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/not-checkout-auth.guard.ts","ng://@spartacus/storefront/layout/a11y/skip-link/config/skip-link.config.ts","ng://@spartacus/storefront/layout/a11y/skip-link/service/skip-link.service.ts","ng://@spartacus/storefront/layout/a11y/skip-link/component/skip-link.component.ts","ng://@spartacus/storefront/layout/a11y/skip-link/config/default-skip-link.config.ts","ng://@spartacus/storefront/layout/a11y/skip-link/directive/skip-link.directive.ts","ng://@spartacus/storefront/layout/a11y/skip-link/skip-link.module.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.service.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.component.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.module.ts","ng://@spartacus/storefront/layout/layout.module.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.component.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.module.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.service.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.component.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.module.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module-config.ts","ng://@spartacus/storefront/cms-structure/pwa/services/add-to-home-screen.service.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module.ts","ng://@spartacus/storefront/cms-structure/seo/html-lang-provider.ts","ng://@spartacus/storefront/cms-structure/seo/seo-meta.service.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/json-ld-script.factory.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/json-ld.directive.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/tokens.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/structured-data.factory.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/structured-data.module.ts","ng://@spartacus/storefront/cms-structure/seo/seo.module.ts","ng://@spartacus/storefront/layout/main/storefront.component.ts","ng://@spartacus/storefront/layout/main/main.module.ts","ng://@spartacus/storefront/cms-structure/services/cms-guards.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-i18n.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-routes-impl.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-routes.service.ts","ng://@spartacus/storefront/cms-structure/guards/cms-page-guard.service.ts","ng://@spartacus/storefront/cms-structure/guards/cms-page.guard.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/add-cms-route.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/cms-route.module.ts","ng://@spartacus/storefront/cms-structure/routing/default-routing-config.ts","ng://@spartacus/storefront/cms-structure/routing/routing.module.ts","ng://@spartacus/storefront/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/breadcrumb/breadcrumb-schema.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-base-product.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-offer.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-review.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/product-schema.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/json-ld-builder.module.ts","ng://@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.component.ts","ng://@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.module.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.component.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.module.ts","ng://@spartacus/storefront/cms-components/content/link/link.component.ts","ng://@spartacus/storefront/cms-components/content/link/link.module.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.component.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.module.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.service.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.module.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account-modal/close-account-modal.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account/close-account.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/close-account.module.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.model.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.guard.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.guard.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-headline/order-detail-headline.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.model.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/tracking-events/tracking-events.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-actions/order-detail-actions.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-overview/return-request-overview.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-items/return-request-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-totals/return-request-totals.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-detail.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.component.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.module.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email-form/update-email-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password-form/update-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password/update-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/update-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/components/update-profile-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.module.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.service.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-claim/coupon-claim.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.module.ts","ng://@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.component.ts","ng://@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.module.ts","ng://@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.module.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.component.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.module.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.service.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation-ui.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box-component.service.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.component.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/highlight.pipe.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.module.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/guest-register-form/guest-register-form.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/guards/order-confirmation.guard.ts","ng://@spartacus/storefront/cms-components/order-confirmation/order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel.service.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.module.ts","ng://@spartacus/storefront/cms-components/product/config/default-scroll-config.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.component.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.module.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.component.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list-component.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-view/product-view.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-scroll/product-scroll.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet.model.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/services/product-facet.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/services/facet.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet/facet.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet/facet.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list-item/product-list-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/product-variants.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/guards/product-variant.guard.ts","ng://@spartacus/storefront/cms-components/product/product-variants/product-variants.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list.module.ts","ng://@spartacus/storefront/cms-components/product/product-outlets.model.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.component.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-tabs.module.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification.component.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification.module.ts","ng://@spartacus/storefront/cms-components/storefinder/components/schedule-component/schedule.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-grid/store-finder-grid.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-header/store-finder-header.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/abstract-store-item/abstract-store-item.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-list-item/store-finder-list-item.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-map/store-finder-map.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-pagination-details/store-finder-pagination-details.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-list/store-finder-list.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-search-result.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search/store-finder-search.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-store-description/store-finder-store-description.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-stores-count/store-finder-stores-count.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder/store-finder.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-store/store-finder-store.component.ts","ng://@spartacus/storefront/cms-components/storefinder/store-finder.module.ts","ng://@spartacus/storefront/cms-components/user/checkout-login/checkout-login.component.ts","ng://@spartacus/storefront/cms-components/user/checkout-login/checkout-login.module.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.component.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.module.ts","ng://@spartacus/storefront/cms-components/user/login/login.component.ts","ng://@spartacus/storefront/cms-components/user/login/login.module.ts","ng://@spartacus/storefront/cms-components/user/logout/logout-guard.ts","ng://@spartacus/storefront/cms-components/user/logout/logout.module.ts","ng://@spartacus/storefront/cms-components/user/register/register.component.ts","ng://@spartacus/storefront/cms-components/user/register/register.module.ts","ng://@spartacus/storefront/cms-components/user/user.module.ts","ng://@spartacus/storefront/cms-components/wish-list/components/wish-list-item/wish-list-item.component.ts","ng://@spartacus/storefront/cms-components/wish-list/components/wish-list/wish-list.component.ts","ng://@spartacus/storefront/cms-components/wish-list/wish-list.module.ts","ng://@spartacus/storefront/cms-components/cms-lib.module.ts","ng://@spartacus/storefront/cms-pages/product-details-page/product-details-url-matcher.ts","ng://@spartacus/storefront/cms-pages/product-details-page/product-details-page.module.ts","ng://@spartacus/storefront/cms-pages/product-listing-page/product-listing-url-matcher.ts","ng://@spartacus/storefront/cms-pages/product-listing-page/product-listing-page.module.ts","ng://@spartacus/storefront/recipes/config/b2c-layout-config.ts","ng://@spartacus/storefront/recipes/config/default-media.config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-header.config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-cms-content.config.ts","ng://@spartacus/storefront/recipes/storefront-foundation.module.ts","ng://@spartacus/storefront/recipes/storefront.module.ts","ng://@spartacus/storefront/recipes/b2c-storefront.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\r\n\r\nexport interface LaunchConfig {\r\n  [key: string]: LaunchOptions;\r\n}\r\n\r\nexport type LaunchOptions =\r\n  | LaunchOutletDialog\r\n  | LaunchInlineDialog\r\n  | LaunchRoute;\r\n\r\n/**\r\n * Parent type for configurations that render components\r\n */\r\nexport interface LaunchDialog {\r\n  component: any;\r\n  /**\r\n   * Can the element be rendered multiple times\r\n   */\r\n  multi?: boolean;\r\n  /**\r\n   * Dialog type is used to apply CSS classes\r\n   */\r\n  dialogType?: DIALOG_TYPE;\r\n}\r\n\r\n/**\r\n * Configuration type to render a component in an outlet\r\n */\r\nexport interface LaunchOutletDialog extends LaunchDialog {\r\n  /**\r\n   * The outlet to render the element in\r\n   */\r\n  outlet: string;\r\n  /**\r\n   * Default: OutletPosition.BEFORE\r\n   */\r\n  position?: OutletPosition;\r\n}\r\n\r\n/**\r\n * Configuration type to render a component inline (next to the trigger)\r\n */\r\nexport interface LaunchInlineDialog extends LaunchDialog {\r\n  inline: boolean;\r\n}\r\n\r\n/**\r\n * Configuration type to render as link\r\n */\r\nexport interface LaunchRoute {\r\n  /**\r\n   * The route for the url\r\n   */\r\n  cxRoute: string;\r\n  /**\r\n   * The parameters for the route\r\n   */\r\n  params?: { [param: string]: any };\r\n}\r\n\r\n/**\r\n * Types of dialog openings supported\r\n */\r\nexport enum DIALOG_TYPE {\r\n  POPOVER = 'POPOVER',\r\n  DIALOG = 'DIALOG',\r\n  SIDEBAR_START = 'SIDEBAR_START',\r\n  SIDEBAR_END = 'SIDEBAR_END',\r\n}\r\n\r\n/**\r\n * List of available callers\r\n */\r\nexport enum LAUNCH_CALLER {\r\n  ASM = 'ASM',\r\n  SKIP_LINKS = 'SKIP_LINKS',\r\n  ANONYMOUS_CONSENT = 'ANONYMOUS_CONSENT',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config, DeferLoadingStrategy } from '@spartacus/core';\r\nimport { LaunchConfig } from '../launch-dialog/index';\r\n\r\nexport enum BREAKPOINT {\r\n  xs = 'xs',\r\n  sm = 'sm',\r\n  md = 'md',\r\n  lg = 'lg',\r\n  xl = 'xl',\r\n}\r\n\r\nexport type LayoutSections =\r\n  | 'header'\r\n  | 'footer'\r\n  | 'LandingPage2Template'\r\n  | string;\r\n\r\nexport type SlotConfig = {\r\n  /** The cms page slots are mapped by the `slot.position`. */\r\n  slots?: string[];\r\n\r\n  /**\r\n   * The page fold identifies the last expected page slot above-the-fold.\r\n   * It's perfectly fine to specify this by idication, however a more\r\n   * precise indication will have an positive impact on performance.\r\n   */\r\n  pageFold?: string;\r\n};\r\n\r\nexport type SlotGroup = {\r\n  /** The page slot configuration for large screens */\r\n  [BREAKPOINT.lg]?: SlotConfig;\r\n  /** The page slot configuration for medium screens */\r\n  [BREAKPOINT.md]?: SlotConfig;\r\n  /** The page slot configuration for small screens */\r\n  [BREAKPOINT.sm]?: SlotConfig;\r\n  /** The page slot configuration for extra small screens */\r\n  [BREAKPOINT.xs]?: SlotConfig;\r\n};\r\n\r\nexport type LayoutSlotConfig = {\r\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;\r\n};\r\n\r\n/**\r\n * The LayoutConfig supports the configuration of page slots by page templates\r\n * or page sections, such as headers and footers. The configuration also supports\r\n * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered\r\n * por a given breakpoint.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class LayoutConfig {\r\n  /** The breakpoint configuration is used when the DOM is (re)rendered in specific view.\r\n   * This allows for adaptive rendering, so that the DOM is rendered for specific breakpoints. */\r\n  breakpoints?: {\r\n    [BREAKPOINT.xs]?: number;\r\n    [BREAKPOINT.sm]?: number;\r\n    [BREAKPOINT.md]?: number;\r\n    [BREAKPOINT.lg]?: number;\r\n  };\r\n  layoutSlots?: LayoutSlotConfig;\r\n\r\n  /**\r\n   * Deferrred loading is a technique to hold of with the loading / creation\r\n   * of DOM elements which are not not in the initial view port.\r\n   * This technique wil increase performance.\r\n   */\r\n  deferredLoading?: {\r\n    /**\r\n     * The global strategy will be used as a fallback strategy for all DOM creation,\r\n     * but can be overriden by local configuration, i.e. for cms components.\r\n     */\r\n    strategy?: DeferLoadingStrategy;\r\n    /**\r\n     * The intersection margin contains the offset used by the Intersection Observer\r\n     * to observe elements outside the view port.\r\n     *\r\n     * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\r\n     */\r\n    intersectionMargin?: string;\r\n  };\r\n\r\n  launch?: LaunchConfig;\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ComponentRef,\r\n  Inject,\r\n  Renderer2,\r\n  RendererFactory2,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Applicable, Priority } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  DIALOG_TYPE,\r\n  LaunchDialog,\r\n  LaunchOptions,\r\n  LAUNCH_CALLER,\r\n} from '../config';\r\n\r\nexport abstract class LaunchRenderStrategy implements Applicable {\r\n  // List of called references; only used for rendered elements\r\n  protected renderedCallers: Array<{\r\n    caller: LAUNCH_CALLER | string;\r\n    element?: any;\r\n    component?: ComponentRef<any>;\r\n  }> = [];\r\n\r\n  /**\r\n   * Classes to apply to the component when the dialog is a DIALOG\r\n   */\r\n  protected dialogClasses = ['d-block', 'fade', 'modal', 'show'];\r\n  /**\r\n   * Classes to apply to the component when the dialog is a POPOVER\r\n   */\r\n  protected popoverClasses = ['cx-dialog-popover'];\r\n  /**\r\n   * Classes to apply to the component when the dialog is a SIDEBAR_END\r\n   */\r\n  protected sidebarEndClasses = ['cx-sidebar-end'];\r\n  /**\r\n   * Classes to apply to the component when the dialog is a SIDEBAR_START\r\n   */\r\n  protected sidebarStartClasses = ['cx-sidebar-start'];\r\n\r\n  protected renderer: Renderer2;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2\r\n  ) {\r\n    this.renderer = rendererFactory.createRenderer(null, null);\r\n  }\r\n\r\n  /**\r\n   * Render method to implement based on the strategy\r\n   *\r\n   * @param config Launch configuration\r\n   */\r\n  abstract render(\r\n    config: LaunchOptions,\r\n    caller: LAUNCH_CALLER | string,\r\n    vcr?: ViewContainerRef\r\n  ): void | Observable<ComponentRef<any>>;\r\n\r\n  /**\r\n   * Determines if the strategy is the right one for the provided configuration\r\n   *\r\n   * @param config\r\n   */\r\n  abstract hasMatch(config: LaunchOptions): boolean;\r\n\r\n  /**\r\n   * Determines if element should render\r\n   *\r\n   * @param caller\r\n   * @param config\r\n   */\r\n  protected shouldRender(\r\n    caller: LAUNCH_CALLER | string,\r\n    config: LaunchDialog\r\n  ): boolean {\r\n    return (\r\n      Boolean(config.component) &&\r\n      (this.renderedCallers.some((el) => el.caller === caller)\r\n        ? !!config.multi\r\n        : true)\r\n    );\r\n  }\r\n\r\n  protected applyClasses(\r\n    component: ComponentRef<any>,\r\n    dialogType: DIALOG_TYPE\r\n  ): void {\r\n    let classes = [];\r\n\r\n    // TODO: make classes configurable\r\n    switch (dialogType) {\r\n      case DIALOG_TYPE.DIALOG:\r\n        classes = this.dialogClasses;\r\n        this.renderer.addClass(this.document.body, 'modal-open');\r\n        break;\r\n      case DIALOG_TYPE.POPOVER:\r\n        classes = this.popoverClasses;\r\n        break;\r\n      case DIALOG_TYPE.SIDEBAR_END:\r\n        classes = this.sidebarEndClasses;\r\n        break;\r\n      case DIALOG_TYPE.SIDEBAR_START:\r\n        classes = this.sidebarStartClasses;\r\n        break;\r\n    }\r\n\r\n    for (const newClass of classes) {\r\n      this.renderer.addClass(component.location.nativeElement, newClass);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to call when rendered element is destroyed\r\n   * The element will be removed from the list of rendered elements\r\n   *\r\n   * @param caller\r\n   * @param _config optional parameters used in children strategies\r\n   */\r\n  public remove(caller: LAUNCH_CALLER | string, config: LaunchOptions): void {\r\n    this.renderedCallers = this.renderedCallers.filter(\r\n      (el) => el.caller !== caller\r\n    );\r\n\r\n    if ((config as LaunchDialog)?.dialogType === DIALOG_TYPE.DIALOG) {\r\n      this.renderer.removeClass(this.document.body, 'modal-open');\r\n    }\r\n  }\r\n\r\n  getPriority(): Priority {\r\n    return Priority.LOW; // low, as it's a default matcher\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  isDevMode,\r\n  RendererFactory2,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { LaunchInlineDialog, LAUNCH_CALLER } from '../config/index';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InlineRenderStrategy extends LaunchRenderStrategy {\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2,\r\n    protected componentFactoryResolver: ComponentFactoryResolver\r\n  ) {\r\n    super(document, rendererFactory);\r\n  }\r\n\r\n  /**\r\n   * Renders the component from the configuration in the view container ref\r\n   *\r\n   * @param config\r\n   * @param caller\r\n   * @param vcr\r\n   */\r\n  render(\r\n    config: LaunchInlineDialog,\r\n    caller: LAUNCH_CALLER | string,\r\n    vcr: ViewContainerRef\r\n  ): Observable<ComponentRef<any>> {\r\n    // Only render if a ViewContainerRef is provided\r\n    if (vcr && this.shouldRender(caller, config)) {\r\n      const template = this.componentFactoryResolver.resolveComponentFactory(\r\n        config.component\r\n      );\r\n\r\n      const component = vcr.createComponent(template);\r\n\r\n      if (config?.dialogType) {\r\n        this.applyClasses(component, config?.dialogType);\r\n      }\r\n\r\n      this.renderedCallers.push({ caller, element: vcr.element, component });\r\n\r\n      return of(component);\r\n    } else if (isDevMode()) {\r\n      if (!vcr) {\r\n        console.warn(`No view container ref provided for ${caller}`);\r\n      } else {\r\n        console.warn(\r\n          `Element for ${caller} already rendered. To allow multi rendering add property multi: true.`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  hasMatch(config: LaunchInlineDialog) {\r\n    return Boolean(config.inline);\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  isDevMode,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { resolveApplicable } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { LayoutConfig } from '../../config/layout-config';\r\nimport { LaunchOptions, LAUNCH_CALLER } from '../config/launch-config';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LaunchDialogService {\r\n  private _dialogClose = new BehaviorSubject<string>(undefined);\r\n\r\n  constructor(\r\n    @Inject(LaunchRenderStrategy)\r\n    protected renderStrategies: LaunchRenderStrategy[],\r\n    protected layoutConfig: LayoutConfig\r\n  ) {\r\n    this.renderStrategies = this.renderStrategies || [];\r\n  }\r\n\r\n  /**\r\n   * Render the element based on the strategy from the launch configuration\r\n   *\r\n   * @param caller LAUNCH_CALLER\r\n   * @param vcr View Container Ref of the container for inline rendering\r\n   */\r\n  launch(\r\n    caller: LAUNCH_CALLER | string,\r\n    vcr?: ViewContainerRef\r\n  ): void | Observable<ComponentRef<any>> {\r\n    const config = this.findConfiguration(caller);\r\n    if (config) {\r\n      const renderer = this.getStrategy(config);\r\n\r\n      // Render if the strategy exists\r\n      if (renderer) {\r\n        this._dialogClose.next(undefined);\r\n        return renderer.render(config, caller, vcr);\r\n      }\r\n    } else if (isDevMode()) {\r\n      console.warn('No configuration provided for caller ' + caller);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Util method to remove element from rendered elements list\r\n   *\r\n   * @param caller LAUNCH_CALLER\r\n   */\r\n  clear(caller: LAUNCH_CALLER | string): void {\r\n    const config = this.findConfiguration(caller);\r\n    const renderer = this.getStrategy(config);\r\n\r\n    // Render if the strategy exists\r\n    if (renderer) {\r\n      renderer.remove(caller, config);\r\n    }\r\n  }\r\n\r\n  get dialogClose(): Observable<string> {\r\n    return this._dialogClose.asObservable();\r\n  }\r\n\r\n  closeDialog(reason: string) {\r\n    this._dialogClose.next(reason);\r\n  }\r\n\r\n  /**\r\n   * Returns the configuration for the caller\r\n   *\r\n   * @param caller LAUNCH_CALLER\r\n   */\r\n  protected findConfiguration(caller: LAUNCH_CALLER | string): LaunchOptions {\r\n    if (this.layoutConfig?.launch) {\r\n      return this.layoutConfig.launch[caller];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Returns the render strategy based on the configuration\r\n   *\r\n   * @param config Configuration for launch\r\n   */\r\n  protected getStrategy(config: LaunchOptions): LaunchRenderStrategy {\r\n    return resolveApplicable(this.renderStrategies, [config]);\r\n  }\r\n}\r\n","export enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport const AVOID_STACKED_OUTLETS = false;\nexport const USE_STACKED_OUTLETS = true;\n","import { Injectable, TemplateRef } from '@angular/core';\r\nimport { AVOID_STACKED_OUTLETS, OutletPosition } from './outlet.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OutletService<T = TemplateRef<any>> {\r\n  private templatesRefs = new Map<string, T[]>();\r\n  private templatesRefsBefore = new Map<string, T[]>();\r\n  private templatesRefsAfter = new Map<string, T[]>();\r\n\r\n  /**\r\n   * Adds a template or ComponentFactory, so that UI outlets can be replaced dynamically.\r\n   * The UI position where this template or ComponentFactory is inserted is given by a\r\n   * string reference (called `outlet`) and optional `OutletPosition`. The `OutletPosition`\r\n   * is either before or after, or replaces the entire UI.\r\n   *\r\n   * @param outlet the UI location represented by a string\r\n   * @param template the `TemplateRef` that will be used to insert UI\r\n   * @param position the `OutletPosition` in the UI\r\n   */\r\n  add(outlet: string, template: T, position?: OutletPosition): void;\r\n  /**\r\n   * @param factory The `ComponentFactory` that will be dynamically added to the outlet UI\r\n   */\r\n  add(\r\n    outlet: string,\r\n    // tslint:disable-next-line: unified-signatures\r\n    factory: T,\r\n    position?: OutletPosition\r\n  ): void;\r\n  /**\r\n   * @param templateOrFactory A `ComponentFactory` that inserts a component dynamically.\r\n   */\r\n  add(\r\n    outlet: string,\r\n    templateOrFactory: T,\r\n    position: OutletPosition = OutletPosition.REPLACE\r\n  ): void {\r\n    if (position === OutletPosition.BEFORE) {\r\n      this.store(this.templatesRefsBefore, outlet, templateOrFactory);\r\n    }\r\n    if (position === OutletPosition.REPLACE) {\r\n      this.store(this.templatesRefs, outlet, templateOrFactory);\r\n    }\r\n    if (position === OutletPosition.AFTER) {\r\n      this.store(this.templatesRefsAfter, outlet, templateOrFactory);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Returns a single object or multiple objects for the given outlet reference,\r\n   * depending on the `stacked` argument.\r\n   *\r\n   * @param outlet The outlet reference\r\n   * @param position the outlet position, `OutletPosition.before`, `OutletPosition.AFTER` or `OutletPosition.REPLACE`\r\n   * @param stacked Indicates whether an array of outlet components is returned\r\n   */\r\n  get(\r\n    outlet: string,\r\n    position: OutletPosition = OutletPosition.REPLACE,\r\n    stacked = AVOID_STACKED_OUTLETS\r\n  ): T[] | T {\r\n    let templateRef: T[];\r\n    switch (position) {\r\n      case OutletPosition.BEFORE:\r\n        templateRef = this.templatesRefsBefore.get(outlet);\r\n        break;\r\n      case OutletPosition.AFTER:\r\n        templateRef = this.templatesRefsAfter.get(outlet);\r\n        break;\r\n      default:\r\n        templateRef = this.templatesRefs.get(outlet);\r\n    }\r\n    if (templateRef && !stacked) {\r\n      return templateRef[0];\r\n    }\r\n    return templateRef;\r\n  }\r\n\r\n  remove(\r\n    outlet: string,\r\n    position: OutletPosition = OutletPosition.REPLACE,\r\n    value?: T\r\n  ): void {\r\n    switch (position) {\r\n      case OutletPosition.BEFORE:\r\n        this.removeValueOrAll(this.templatesRefsBefore, outlet, value);\r\n        break;\r\n      case OutletPosition.AFTER:\r\n        this.removeValueOrAll(this.templatesRefsAfter, outlet, value);\r\n        break;\r\n      default:\r\n        this.removeValueOrAll(this.templatesRefs, outlet, value);\r\n    }\r\n  }\r\n\r\n  private store(store: Map<string, T[]>, outlet: string, value: T) {\r\n    const existing = store.get(outlet) || [];\r\n    const newValue: T[] = existing.concat([value]);\r\n    store.set(outlet, newValue);\r\n  }\r\n\r\n  protected removeValueOrAll(\r\n    store: Map<string, T[]>,\r\n    outlet: string,\r\n    value?: T\r\n  ): void {\r\n    if (!value && store.has(outlet)) {\r\n      store.delete(outlet);\r\n    } else if (value && store.has(outlet)) {\r\n      let existing = store.get(outlet);\r\n      existing = existing.filter((val) => val === value);\r\n      store.set(outlet, existing);\r\n    }\r\n  }\r\n}\r\n","import { Directive, TemplateRef, Input, OnInit } from '@angular/core';\n\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { OutletDirective } from './outlet.directive';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OutletRendererService {\r\n  private outletRefs = new BehaviorSubject(new Map<string, OutletDirective>());\r\n\r\n  /**\r\n   * Dynamically render the templates in the specified array\r\n   *\r\n   * @param outlet\r\n   */\r\n  render(outlet: string): void {\r\n    if (this.outletRefs.value.size !== 0) {\r\n      this.outletRefs.value.get(outlet).render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register outlet to be available to render dynamically\r\n   *\r\n   * @param cxOutlet\r\n   * @param context\r\n   */\r\n  register(cxOutlet: string, context: OutletDirective): void {\r\n    this.outletRefs.next(this.outletRefs.value.set(cxOutlet, context));\r\n  }\r\n  /**\r\n   * Returns map of outlets\r\n   *\r\n   */\r\n  getOutletRef(outlet: string): Observable<OutletDirective> {\r\n    return this.outletRefs.asObservable().pipe(\r\n      map((val) => val.get(outlet)),\r\n      filter((val) => Boolean(val))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, first, flatMap, map } from 'rxjs/operators';\r\nimport { LayoutConfig } from '../config/layout-config';\r\nimport { IntersectionOptions } from './intersection.model';\r\n\r\n/**\r\n * The IntersectionService uses the native IntersectionObserver (v2), which\r\n * can be used to implement pre-loading and deferred loading of DOM content.\r\n *\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IntersectionService {\r\n  constructor(protected config: LayoutConfig) {}\r\n\r\n  /**\r\n   * Returns an Observable that emits only once a boolean value whenever\r\n   * the given element has shown in the view port.\r\n   *\r\n   * The returned observable will only emit the first value. The\r\n   * observable must be cleaned up either way, since the value might never emit; it\r\n   *  depends on whether the element appears in the view port.\r\n   */\r\n  isIntersected(\r\n    element: HTMLElement,\r\n    options?: IntersectionOptions\r\n  ): Observable<boolean> {\r\n    return this.intersects(element, options).pipe(first((v) => v === true));\r\n  }\r\n\r\n  /**\r\n   * Indicates whenever the element intersects the view port. An optional margin\r\n   * is used to intersects before the element shows up in the viewport.\r\n   * A value is emitted each time the element intersects.\r\n   *\r\n   * This is private for now, but could be exposed as a public API\r\n   * to introduce additional (css) render effects to the UI.\r\n   */\r\n  private intersects(\r\n    element: HTMLElement,\r\n    options: IntersectionOptions = {}\r\n  ): Observable<boolean> {\r\n    const elementVisible$ = new Observable((observer) => {\r\n      const rootMargin = this.getRootMargin(options);\r\n      const intersectOptions = { rootMargin, threshold: options.threshold };\r\n      const intersectionObserver = new IntersectionObserver((entries) => {\r\n        observer.next(entries);\r\n      }, intersectOptions);\r\n      intersectionObserver.observe(element);\r\n      return () => {\r\n        intersectionObserver.disconnect();\r\n      };\r\n    }).pipe(\r\n      flatMap((entries: IntersectionObserverEntry[]) => entries),\r\n      map((entry: IntersectionObserverEntry) => entry.isIntersecting),\r\n      distinctUntilChanged()\r\n    );\r\n\r\n    return elementVisible$;\r\n  }\r\n\r\n  private getRootMargin(options: IntersectionOptions = {}): string {\r\n    if (options.rootMargin) {\r\n      return options.rootMargin;\r\n    }\r\n    const layoutConfig = this.config as LayoutConfig;\r\n    if (\r\n      layoutConfig.deferredLoading &&\r\n      layoutConfig.deferredLoading.intersectionMargin\r\n    ) {\r\n      return layoutConfig.deferredLoading.intersectionMargin;\r\n    }\r\n  }\r\n}\r\n","import { isPlatformServer } from '@angular/common';\r\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { DeferLoadingStrategy } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { LayoutConfig } from '../config/layout-config';\r\nimport { IntersectionOptions } from './intersection.model';\r\nimport { IntersectionService } from './intersection.service';\r\n\r\n/**\r\n * The defer loading serivce is used to defer loading of DOM elements\r\n * until the elements are required for the user experience.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeferLoaderService {\r\n  globalLoadStrategy: DeferLoadingStrategy;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    protected config: LayoutConfig,\r\n    protected intersectionService: IntersectionService\r\n  ) {\r\n    this.globalLoadStrategy = config.deferredLoading\r\n      ? config.deferredLoading.strategy\r\n      : DeferLoadingStrategy.INSTANT;\r\n  }\r\n\r\n  /**\r\n   * Defer loading till the element intersects the viewport.\r\n   *\r\n   * We evaluate whether we instantly load the element for different reasons:\r\n   * - we run in SSR mode\r\n   * - there's no global strategy given\r\n   * - the global loading strategy is set to INSTANT loading,\r\n   *   and the loading strategy in the given is not set to DEFER\r\n   * - the loading strategy in the given options is set to INSTANT\r\n   */\r\n  load(\r\n    element: HTMLElement,\r\n    options?: IntersectionOptions\r\n  ): Observable<boolean> {\r\n    if (this.shouldLoadInstantly((options || {}).deferLoading)) {\r\n      return of(true);\r\n    } else {\r\n      return this.intersectionService.isIntersected(element, options);\r\n    }\r\n  }\r\n\r\n  private shouldLoadInstantly(\r\n    elementLoadingStrategy: DeferLoadingStrategy\r\n  ): boolean {\r\n    return (\r\n      isPlatformServer(this.platformId) ||\r\n      elementLoadingStrategy === DeferLoadingStrategy.INSTANT ||\r\n      (elementLoadingStrategy !== DeferLoadingStrategy.DEFER &&\r\n        this.globalLoadStrategy === DeferLoadingStrategy.INSTANT)\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ComponentFactory,\r\n  ComponentRef,\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { DeferLoaderService } from '../../layout/loading/defer-loader.service';\r\nimport { IntersectionOptions } from '../../layout/loading/intersection.model';\r\nimport { OutletRendererService } from './outlet-renderer.service';\r\nimport { OutletPosition, USE_STACKED_OUTLETS } from './outlet.model';\r\nimport { OutletService } from './outlet.service';\r\n\r\n@Directive({\r\n  selector: '[cxOutlet]',\r\n})\r\nexport class OutletDirective implements OnDestroy, OnChanges {\r\n  private renderedTemplate = [];\r\n  public renderedComponents = new Map<\r\n    OutletPosition,\r\n    Array<ComponentRef<any> | EmbeddedViewRef<any>>\r\n  >();\r\n\r\n  @Input() cxOutlet: string;\r\n\r\n  @Input() cxOutletContext: any;\r\n\r\n  /**\r\n   * Defers loading options for the the templates of this outlet.\r\n   */\r\n  @Input() cxOutletDefer: IntersectionOptions;\r\n\r\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>(true);\r\n\r\n  subscription = new Subscription();\r\n\r\n  constructor(\r\n    private vcr: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private outletService: OutletService<\r\n      TemplateRef<any> | ComponentFactory<any>\r\n    >,\r\n    private deferLoaderService: DeferLoaderService,\r\n    private outletRendererService: OutletRendererService\r\n  ) {}\r\n\r\n  public render(): void {\r\n    this.vcr.clear();\r\n    this.renderedTemplate = [];\r\n    this.renderedComponents.clear();\r\n    this.subscription.unsubscribe();\r\n    this.subscription = new Subscription();\r\n\r\n    if (this.cxOutletDefer) {\r\n      this.deferLoading();\r\n    } else {\r\n      this.build();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.cxOutlet) {\r\n      this.render();\r\n      this.outletRendererService.register(this.cxOutlet, this);\r\n    }\r\n  }\r\n\r\n  private deferLoading(): void {\r\n    this.loaded.emit(false);\r\n    const hostElement = this.getHostElement(this.vcr.element.nativeElement);\r\n    // Although the deferLoaderService might emit only once, as long as the hostElement\r\n    // isn't being loaded, there's no value being emitted. Therefor we need to clean up\r\n    // the subscription on destroy.\r\n    this.subscription.add(\r\n      this.deferLoaderService\r\n        .load(hostElement, this.cxOutletDefer)\r\n        .subscribe(() => {\r\n          this.build();\r\n          this.loaded.emit(true);\r\n        })\r\n    );\r\n  }\r\n\r\n  private build() {\r\n    this.buildOutlet(OutletPosition.BEFORE);\r\n    this.buildOutlet(OutletPosition.REPLACE);\r\n    this.buildOutlet(OutletPosition.AFTER);\r\n  }\r\n\r\n  private buildOutlet(position: OutletPosition): void {\r\n    let templates: any[] = <any[]>(\r\n      this.outletService.get(this.cxOutlet, position, USE_STACKED_OUTLETS)\r\n    );\r\n\r\n    templates = templates?.filter((el) => !this.renderedTemplate.includes(el));\r\n\r\n    if (!templates && position === OutletPosition.REPLACE) {\r\n      templates = [this.templateRef];\r\n    }\r\n\r\n    // Just in case someone extended the `OutletService` and\r\n    // returns a singular object.\r\n    if (!Array.isArray(templates)) {\r\n      templates = [templates];\r\n    }\r\n\r\n    const components = [];\r\n    templates.forEach((obj) => {\r\n      const component = this.create(obj);\r\n      components.push(component);\r\n    });\r\n\r\n    this.renderedComponents.set(position, components);\r\n  }\r\n\r\n  private create(tmplOrFactory: any): ComponentRef<any> | EmbeddedViewRef<any> {\r\n    this.renderedTemplate.push(tmplOrFactory);\r\n\r\n    if (tmplOrFactory instanceof ComponentFactory) {\r\n      const component = this.vcr.createComponent(tmplOrFactory);\r\n      return component;\r\n    } else if (tmplOrFactory instanceof TemplateRef) {\r\n      const view = this.vcr.createEmbeddedView(\r\n        <TemplateRef<any>>tmplOrFactory,\r\n        {\r\n          $implicit: this.cxOutletContext,\r\n        }\r\n      );\r\n\r\n      // we do not know if content is created dynamically or not\r\n      // so we apply change detection anyway\r\n      view.markForCheck();\r\n      return view;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the closest `HtmlElement`, by iterating over the\r\n   * parent nodes of the given element.\r\n   *\r\n   * We avoid traversing the parent _elements_, as this is blocking\r\n   * ie11 implementations. One of the spare exclusions we make to not\r\n   * supporting ie11.\r\n   *\r\n   * @param element\r\n   */\r\n  private getHostElement(element: Node): HTMLElement {\r\n    if (element instanceof HTMLElement) {\r\n      return element;\r\n    }\r\n    return this.getHostElement(element.parentNode);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletService } from './outlet.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  providers: [OutletService],\n  exports: [OutletDirective],\n})\nexport class OutletModule {}\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  RendererFactory2,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport {\r\n  OutletPosition,\r\n  OutletService,\r\n} from '../../../cms-structure/outlet/index';\r\nimport { OutletRendererService } from '../../../cms-structure/outlet/outlet-renderer.service';\r\nimport { LaunchOutletDialog, LAUNCH_CALLER } from '../config/index';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OutletRenderStrategy extends LaunchRenderStrategy {\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2,\r\n    protected outletService: OutletService<ComponentFactory<any>>,\r\n    protected componentFactoryResolver: ComponentFactoryResolver,\r\n    protected outletRendererService: OutletRendererService\r\n  ) {\r\n    super(document, rendererFactory);\r\n  }\r\n\r\n  /**\r\n   * Renders the element in the configured outlet\r\n   *\r\n   * @param config\r\n   * @param caller\r\n   * @param vcr\r\n   */\r\n  render(\r\n    config: LaunchOutletDialog,\r\n    caller: LAUNCH_CALLER | string\r\n  ): Observable<ComponentRef<any>> {\r\n    if (this.shouldRender(caller, config)) {\r\n      const template = this.componentFactoryResolver.resolveComponentFactory(\r\n        config.component\r\n      );\r\n      this.outletService.add(\r\n        config.outlet,\r\n        template,\r\n        config.position ? config.position : OutletPosition.BEFORE\r\n      );\r\n      this.outletRendererService.render(config.outlet);\r\n      this.renderedCallers.push({ caller });\r\n\r\n      return this.outletRendererService.getOutletRef(config.outlet).pipe(\r\n        map((outletDirective) => {\r\n          const components = outletDirective.renderedComponents.get(\r\n            config.position ? config.position : OutletPosition.BEFORE\r\n          ) as ComponentRef<any>[];\r\n\r\n          return components\r\n            .reverse()\r\n            .find(\r\n              (component) => component.componentType === template.componentType\r\n            );\r\n        }),\r\n        tap((component) => {\r\n          if (config?.dialogType) {\r\n            this.applyClasses(component, config?.dialogType);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  hasMatch(config: LaunchOutletDialog) {\r\n    return Boolean(config.outlet);\r\n  }\r\n\r\n  remove(caller: LAUNCH_CALLER | string, config: LaunchOutletDialog): void {\r\n    const template = this.componentFactoryResolver.resolveComponentFactory(\r\n      config.component\r\n    );\r\n\r\n    this.outletService.remove(\r\n      config.outlet,\r\n      config.position ? config.position : OutletPosition.BEFORE,\r\n      template\r\n    );\r\n\r\n    super.remove(caller, config);\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable, RendererFactory2 } from '@angular/core';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { LaunchRoute, LAUNCH_CALLER } from '../config/index';\r\nimport { LaunchRenderStrategy } from './launch-render.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoutingRenderStrategy extends LaunchRenderStrategy {\r\n  constructor(\r\n    @Inject(DOCUMENT) protected document: any,\r\n    protected rendererFactory: RendererFactory2,\r\n    protected routingService: RoutingService\r\n  ) {\r\n    super(document, rendererFactory);\r\n  }\r\n  /**\r\n   * Navigates to the route configured for the caller\r\n   */\r\n  render(config: LaunchRoute, _caller: LAUNCH_CALLER | string) {\r\n    this.routingService.go(config);\r\n  }\r\n\r\n  hasMatch(config: LaunchRoute) {\r\n    return Boolean(config.cxRoute);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\nimport { LayoutConfig } from '../config/layout-config';\r\nimport {\r\n  InlineRenderStrategy,\r\n  LaunchRenderStrategy,\r\n  OutletRenderStrategy,\r\n  RoutingRenderStrategy,\r\n} from './services/index';\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: LaunchRenderStrategy,\r\n      useExisting: OutletRenderStrategy,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: LaunchRenderStrategy,\r\n      useExisting: InlineRenderStrategy,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: LaunchRenderStrategy,\r\n      useExisting: RoutingRenderStrategy,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class LaunchDialogModule {\r\n  static forRoot(): ModuleWithProviders<LaunchDialogModule> {\r\n    return {\r\n      ngModule: LaunchDialogModule,\r\n      providers: [{ provide: LayoutConfig, useExisting: Config }],\r\n    };\r\n  }\r\n}\r\n","import { ElementRef, Injectable, ViewContainerRef } from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport {\r\n  LaunchDialogService,\r\n  LAUNCH_CALLER,\r\n} from '../../layout/launch-dialog/index';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AnonymousConsentLaunchDialogService {\r\n  constructor(protected launchDialogService: LaunchDialogService) {}\r\n\r\n  openDialog(\r\n    openElement?: ElementRef,\r\n    vcr?: ViewContainerRef\r\n  ): Observable<any> | undefined {\r\n    const component = this.launchDialogService.launch(\r\n      LAUNCH_CALLER.ANONYMOUS_CONSENT,\r\n      vcr\r\n    );\r\n\r\n    if (component) {\r\n      return combineLatest([\r\n        component,\r\n        this.launchDialogService.dialogClose,\r\n      ]).pipe(\r\n        filter(([, close]) => close && close !== undefined),\r\n        tap(([comp]) => {\r\n          openElement?.nativeElement.focus();\r\n          this.launchDialogService.clear(LAUNCH_CALLER.ANONYMOUS_CONSENT);\r\n          comp.destroy();\r\n        }),\r\n        map(([comp]) => comp)\r\n      );\r\n    }\r\n  }\r\n}\r\n","/** The element attribute used to store the focus state */\r\nexport const FOCUS_ATTR = 'data-cx-focus';\r\n/** The element attribute used to store the focus group state */\r\nexport const FOCUS_GROUP_ATTR = 'data-cx-focus-group';\r\n\r\nexport const enum MOVE_FOCUS {\r\n  NEXT = 1,\r\n  PREV = -1,\r\n}\r\n\r\n// tslint:disable-next-line: no-empty-interface\r\nexport interface BaseFocusConfig {}\r\n\r\nexport interface VisibleFocusConfig {\r\n  /**\r\n   * When set to true, the mouse-focus class is added to the host element,\r\n   * indicating that the element focus was not caused by the keyboard.\r\n   */\r\n  disableMouseFocus?: boolean;\r\n}\r\n\r\nexport interface BlockFocusConfig extends VisibleFocusConfig {\r\n  block?: boolean;\r\n}\r\n\r\nexport interface PersistFocusConfig extends BlockFocusConfig {\r\n  /**\r\n   * A key to maintain the focus of an element in case the component is\r\n   * recreated (which often is the case when an `*ngIf` or `*ngFor` is used).\r\n   */\r\n  key?: string;\r\n\r\n  /**\r\n   * Optional group identifier that can be used to persist the focus. This allows\r\n   * to have separate persisted focus available when the DOM is partially rebuild.\r\n   */\r\n  group?: string;\r\n}\r\n\r\nexport interface EscapeFocusConfig extends PersistFocusConfig {\r\n  focusOnEscape?: boolean;\r\n  /**\r\n   * Force an autofocus in case of double-escape\r\n   */\r\n  focusOnDoubleEscape?: boolean;\r\n}\r\n\r\nexport interface AutoFocusConfig extends EscapeFocusConfig {\r\n  /**\r\n   * Autofocus is enabled by default, and will try to focus an _autofocus_ element.\r\n   * In case the focus is explicitly set to `true`, the first accessible element\r\n   * is focussed in case there is no _autofocus_ element found.\r\n   * If the focus is set to false, autofocus will be disabled completely.\r\n   *\r\n   * If a string value is given, the autofocus will be restored based on the persisted\r\n   * focus group, which is driven by `PersistFocusConfig.key` and `PersistFocusConfig.group`.\r\n   *\r\n   * Defaults to `true`.\r\n   */\r\n  autofocus?: boolean | string;\r\n}\r\n\r\nexport interface TabFocusConfig extends AutoFocusConfig {\r\n  tab?: boolean | 'scroll' | string;\r\n}\r\n\r\n/**\r\n * The keyboard navigation (tab, shift-tab and up down keys) is _trapped_\r\n * for the nested focusable elements. This means that the focus can not\r\n * \"leave\" the elements. If the last element is focused, the keyboard will\r\n * navigate to the first element and visa versa.\r\n */\r\nexport interface TrapFocusConfig extends TabFocusConfig {\r\n  /** traps the focus */\r\n  trap?: boolean | 'start' | 'end';\r\n}\r\n\r\nexport interface LockFocusConfig extends TrapFocusConfig {\r\n  /**\r\n   * Indicates that the nested DOM is locked for keyboarding (`TAB`).\r\n   */\r\n  lock?: boolean;\r\n}\r\n\r\n// tslint:disable-next-line: no-empty-interface\r\nexport interface FocusConfig extends LockFocusConfig {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport abstract class BaseFocusService {}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { BaseFocusConfig } from '../keyboard-focus.model';\r\nimport { BaseFocusService } from './base-focus.service';\r\n\r\n/**\r\n * Abstract directive that provides a common interface for all focus directives:\r\n * - Block Focus\r\n * - Persist Focus\r\n * - Escape Focus\r\n * - Auto Focus\r\n * - Tab Focus\r\n * - Trap Focus\r\n * - Lock Focus\r\n */\r\n@Directive()\r\nexport abstract class BaseFocusDirective implements OnInit {\r\n  /**\r\n   * Optional configuration for the focus directive drives the behaviour of the keyboard\r\n   * focus directive.\r\n   */\r\n  protected config: BaseFocusConfig;\r\n\r\n  /**\r\n   * A default config can be provided for each directive if a specific focus directive\r\n   * is used directly. i.e. `<div cxAutoFocus></div>`\r\n   */\r\n  protected defaultConfig: BaseFocusConfig = {};\r\n\r\n  @Input() @HostBinding('attr.tabindex') tabindex: number;\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected service: BaseFocusService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.setDefaultConfiguration();\r\n    this.requiredTabindex = -1;\r\n  }\r\n\r\n  /**\r\n   * Override the (input) config if it undefined or an empty string, with the\r\n   * `defaultConfig`. The `defaultConfig` might be specified for each directive\r\n   * differently. If a specific directive is used (i.e. `cxAutoFocus`), the\r\n   * specific (inherited) defaultConfig will be used.\r\n   */\r\n  protected setDefaultConfiguration(): void {\r\n    if ((!this.config || this.config === '') && this.defaultConfig) {\r\n      this.config = this.defaultConfig;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Helper method to return the host element for the directive\r\n   * given by the `elementRef`.\r\n   */\r\n  protected get host(): HTMLElement {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Force a tabindex on the host element if it is _requried_ to make the element\r\n   * focusable. If the element is focusable by nature or by a given tabindex, the\r\n   * `tabindex` is not applied.\r\n   *\r\n   * Buttons, active links, etc. do no need an explicit tabindex to receive focus.\r\n   */\r\n  protected set requiredTabindex(tabindex: number) {\r\n    if (this.requiresExplicitTabIndex) {\r\n      this.tabindex = tabindex;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if the host element does not have a tabindex defined\r\n   * and it also doesn't get focus by browsers nature (i.e. button or\r\n   * active link).\r\n   */\r\n  protected get requiresExplicitTabIndex(): boolean {\r\n    return (\r\n      this.tabindex === undefined &&\r\n      ['button', 'input', 'select', 'textarea'].indexOf(\r\n        this.host.tagName.toLowerCase()\r\n      ) === -1 &&\r\n      !(\r\n        this.host.tagName === 'A' &&\r\n        (this.host.hasAttribute('href') || this.host.hasAttribute('routerlink'))\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Directive, HostBinding, HostListener } from '@angular/core';\r\nimport { BaseFocusDirective } from '../base/base-focus.directive';\r\nimport { VisibleFocusConfig } from '../keyboard-focus.model';\r\n\r\n/**\r\n * Directive implementation that adds a CSS class to the host element\r\n * when the moused is used to focus an element. As soon as the keyboard\r\n * is used, the class is removed.\r\n */\r\n@Directive() // selector: '[cxVisibleFocus]'\r\nexport class VisibleFocusDirective extends BaseFocusDirective {\r\n  protected defaultConfig: VisibleFocusConfig = { disableMouseFocus: true };\r\n\r\n  // @Input('cxVisibleFocus')\r\n  protected config: VisibleFocusConfig;\r\n\r\n  /** controls a polyfill class for the lacking focus-visible feature */\r\n  @HostBinding('class.mouse-focus') mouseFocus = false;\r\n\r\n  @HostListener('mousedown') handleMousedown() {\r\n    if (this.shouldFocusVisible) {\r\n      this.mouseFocus = true;\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown') handleKeydown() {\r\n    if (this.shouldFocusVisible) {\r\n      this.mouseFocus = false;\r\n    }\r\n  }\r\n\r\n  protected get shouldFocusVisible(): boolean {\r\n    return this.config?.disableMouseFocus;\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit } from '@angular/core';\r\nimport { BaseFocusService } from '../base/base-focus.service';\r\nimport { BlockFocusConfig } from '../keyboard-focus.model';\r\nimport { VisibleFocusDirective } from '../visible/visible-focus.directive';\r\n\r\n@Directive()\r\n// { selector: '[cxBlockFocus]' }\r\nexport class BlockFocusDirective extends VisibleFocusDirective\r\n  implements OnInit {\r\n  protected defaultConfig: BlockFocusConfig = { block: true };\r\n\r\n  // @Input('cxBlockFocus')\r\n  protected config: BlockFocusConfig = {};\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: BaseFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    if (this.config.block) {\r\n      this.tabindex = -1;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseFocusService } from '../base/base-focus.service';\r\nimport { FOCUS_GROUP_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\r\n\r\nconst GLOBAL_GROUP = '_g_';\r\n\r\n/**\r\n * Shared service to persist the focus for an element or a group\r\n * of elements. The persisted element focus can be used to persist\r\n * the focus for a DOM tree, so that the focus remains after a repaint\r\n * or reoccurs when a DOM tree is \"unlocked\".\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PersistFocusService extends BaseFocusService {\r\n  // this is going to fail as we have sub services. They will al have their own map.\r\n  // We must bring this to a singleton map.\r\n  protected focus = new Map<string, string>();\r\n\r\n  get(group?: string): string {\r\n    return this.focus.get(group || GLOBAL_GROUP);\r\n  }\r\n\r\n  /**\r\n   * Persist the keyboard focus state for the given key. The focus is stored globally\r\n   * or for the given group.\r\n   */\r\n  set(key: string, group?: string) {\r\n    if (key) {\r\n      this.focus.set(group || GLOBAL_GROUP, key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears the persisted keyboard focus state globally or for the given group.\r\n   */\r\n  clear(group?: string) {\r\n    this.focus.delete(group || GLOBAL_GROUP);\r\n  }\r\n\r\n  /**\r\n   * Returns the group for the host element based on the configured group or\r\n   * by the `data-cx-focus-group` attribute stored on the host.\r\n   */\r\n  getPersistenceGroup(host: HTMLElement, config?: PersistFocusConfig): string {\r\n    return config?.group ? config.group : host.getAttribute(FOCUS_GROUP_ATTR);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { BlockFocusDirective } from '../block/block-focus.directive';\r\nimport { FOCUS_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\r\nimport { PersistFocusService } from './persist-focus.service';\r\n\r\n/**\r\n * Directive that provides persistence of the focused state. This is useful\r\n * when a group of focusable elements got refocused or even recreated. That\r\n * happens often when the DOM is constructed with an `*ngIf` or `*ngFor`.\r\n *\r\n * The focus state is based on a configured _key_, which can be passed in the\r\n * config input, either by using a string primitive or `PersistFocusConfig.key`:\r\n *\r\n * ```html\r\n * <button cxPersistFocus=\"myKey\"></button>\r\n * <button cxFocus=\"myKey\"></button>\r\n * <button [cxFocus]=\"{{key:'myKey'}\"></button>\r\n * ```\r\n *\r\n * The focus state can be part of a focus _group_, so that the state is shared\r\n * and remember for the given group. In order to detect the persistence for a\r\n * given element, we store the persistence key as a data attribute (`data-cx-focus`):\r\n *\r\n * ```html\r\n * <button data-cx-focus=\"myKey\"></button>\r\n * ```\r\n *\r\n * Other keyboard focus directives can read the key to understand whether the element\r\n * should retrieve focus.\r\n *\r\n */\r\n@Directive() // selector: '[cxPersistFocus]',\r\nexport class PersistFocusDirective extends BlockFocusDirective\r\n  implements OnInit, AfterViewInit {\r\n  protected defaultConfig: PersistFocusConfig = {};\r\n\r\n  /**\r\n   * The persistence key can be passed directly or through the `FocusConfig.key`.\r\n   * While this could be considered a global key, the likeliness of conflicts\r\n   * is very small since the key is cleared when the focus is changed.\r\n   */\r\n  // @Input('cxPersistFocus')\r\n  protected config: PersistFocusConfig = {};\r\n\r\n  /**\r\n   * The persistence key is maintained in an element attribute for other\r\n   * implementations. This is needed to ensure that we can resolve the focus\r\n   * state in case of a repaint.\r\n   */\r\n  @HostBinding(`attr.${FOCUS_ATTR}`) attr: string;\r\n\r\n  @HostListener('focus', ['$event'])\r\n  handleFocus(event?: KeyboardEvent) {\r\n    this.service.set(this.key, this.group);\r\n\r\n    event?.preventDefault();\r\n    event?.stopPropagation();\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: PersistFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.attr = this.key ? this.key : undefined;\r\n  }\r\n\r\n  protected setDefaultConfiguration() {\r\n    if (typeof this.config === 'string' && this.config !== '') {\r\n      this.config = { key: this.config };\r\n    }\r\n    super.setDefaultConfiguration();\r\n  }\r\n\r\n  /**\r\n   * Focus the element explicitly if it was focused before.\r\n   */\r\n  ngAfterViewInit() {\r\n    if (this.isPersisted) {\r\n      this.host.focus({ preventScroll: true });\r\n    }\r\n  }\r\n\r\n  protected get isPersisted(): boolean {\r\n    return !!this.key && this.service.get(this.group) === this.key;\r\n  }\r\n\r\n  /**\r\n   * Returns the key for the host element, which is used to persist the\r\n   * focus state. This is useful in cases where the DOM is rebuild.\r\n   */\r\n  protected get key(): string {\r\n    return (this.config as PersistFocusConfig)?.key;\r\n  }\r\n\r\n  /**\r\n   * returns the persistence group (if any) for the focusable elements.\r\n   */\r\n  protected get group(): string {\r\n    return this.service.getPersistenceGroup(\r\n      this.host,\r\n      this.config as PersistFocusConfig\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AutoFocusConfig } from '../keyboard-focus.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SelectFocusUtility {\r\n  /**\r\n   * Query selectors used to query focusable child elements of the host element.\r\n   * The selectors are supplemented with `:not([disabled])` and `:not([hidden])`.\r\n   */\r\n  protected focusableSelectors: string[] = [\r\n    'a[href]',\r\n    'button',\r\n    '[tabindex]',\r\n    'input',\r\n    'select',\r\n    'textarea',\r\n  ];\r\n\r\n  // like to leave out the following as we don't use it, and make this list exensible.\r\n  //   `[contentEditable=true]`, // very unlikely to suport as we're not a business tool\r\n  //   `iframe`, // we really don't like iframes...\r\n  //   `area[href]`, // very debatable!\r\n\r\n  protected focusableSelectorSuffix = ':not([disabled]):not([hidden])';\r\n\r\n  query(host: HTMLElement, selector: string): HTMLElement[] {\r\n    if (!selector || selector === '') {\r\n      return [];\r\n    }\r\n    return Array.from(\r\n      host.querySelectorAll(selector) as NodeListOf<HTMLElement>\r\n    );\r\n  }\r\n\r\n  findFirstFocusable(\r\n    host: HTMLElement,\r\n    config: AutoFocusConfig = { autofocus: true }\r\n  ): HTMLElement {\r\n    const selector =\r\n      typeof config?.autofocus === 'string' ? config.autofocus : '[autofocus]';\r\n    // fallback to first focusable\r\n    return (\r\n      this.query(host, selector).find((el) => !this.isHidden(el)) ||\r\n      this.findFocusable(host).find((el) => Boolean(el))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * returns all focusable child elements of the host element. The element selectors\r\n   * are build from the `focusableSelectors`.\r\n   *\r\n   * @param host the `HTMLElement` used to query focusable elements\r\n   * @param locked indicates whether inactive (`tabindex=\"-1\"`) focusable elements should be returned\r\n   * @param invisible indicates whether hidden focusable elements should be returned\r\n   */\r\n  findFocusable(\r\n    host: HTMLElement,\r\n    locked = false,\r\n    invisible = false\r\n  ): HTMLElement[] {\r\n    let suffix = this.focusableSelectorSuffix;\r\n    if (!locked) {\r\n      suffix += `:not([tabindex='-1'])`;\r\n    }\r\n    const selector = this.focusableSelectors\r\n      .map((s) => (s += suffix))\r\n      .join(',');\r\n    return this.query(host, selector).filter((el) =>\r\n      !invisible ? !this.isHidden(el) : Boolean(el)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the element is hidden by CSS. There are various CSS rules and\r\n   * HTML structures which can lead to an hidden or invisible element. An `offsetParent`\r\n   * of null indicates that the element or any of it's decendants is hidden (`display:none`).\r\n   *\r\n   * Oother techniques use the visibility (`visibility: hidden`), opacity (`opacity`) or\r\n   * phyisical location on the element itself or any of it's anchestor elements. Those\r\n   * technique require to work with the _computed styles_, which will cause a performance\r\n   * downgrade. We don't do this in the standard implementaton.\r\n   */\r\n  protected isHidden(el: HTMLElement): boolean {\r\n    return el.offsetParent === null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\r\nimport { PersistFocusService } from '../persist/persist-focus.service';\r\nimport { SelectFocusUtility } from '../services/select-focus.util';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EscapeFocusService extends PersistFocusService {\r\n  constructor(protected selectFocusUtil: SelectFocusUtility) {\r\n    super();\r\n  }\r\n\r\n  shouldFocus(config: EscapeFocusConfig): boolean {\r\n    return !!config?.focusOnEscape;\r\n  }\r\n\r\n  handleEscape(\r\n    host: HTMLElement,\r\n    config: EscapeFocusConfig,\r\n    event: KeyboardEvent\r\n  ): void {\r\n    if (this.shouldFocus(config)) {\r\n      if (host !== event.target) {\r\n        host.focus({ preventScroll: true });\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      } else {\r\n        if (config?.focusOnDoubleEscape) {\r\n          this.selectFocusUtil\r\n            .findFirstFocusable(host, { autofocus: true })\r\n            ?.focus();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\r\nimport { PersistFocusDirective } from '../persist/persist-focus.directive';\r\nimport { EscapeFocusService } from './escape-focus.service';\r\n\r\n/**\r\n * Directive to focus the host element whenever the `escape` key is captured.\r\n * UiEvents bubble up by nature, which is why the `cxEscGroup` can be used\r\n * on a tree of elements. Each time the escape key is used, the focus will\r\n * move up in the DOM tree.\r\n *\r\n */\r\n@Directive() // selector: '[cxEscFocus]',\r\nexport class EscapeFocusDirective extends PersistFocusDirective\r\n  implements OnInit {\r\n  protected defaultConfig: EscapeFocusConfig = { focusOnEscape: true };\r\n\r\n  // @Input('cxEscFocus')\r\n  protected config: EscapeFocusConfig;\r\n\r\n  @Output() esc = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   * Handles the escape key event.\r\n   * @param event the native keyboard event which contains the escape keydown event\r\n   */\r\n  @HostListener('keydown.escape', ['$event'])\r\n  handleEscape(event: KeyboardEvent): void {\r\n    if (this.service.shouldFocus(this.config)) {\r\n      this.service.handleEscape(this.host, this.config, event);\r\n    }\r\n    this.esc.emit(this.service.shouldFocus(this.config));\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: EscapeFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.service.shouldFocus(this.config)) {\r\n      this.requiredTabindex = -1;\r\n    }\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EscapeFocusService } from '../escape/escape-focus.service';\r\nimport {\r\n  AutoFocusConfig,\r\n  FOCUS_ATTR,\r\n  PersistFocusConfig,\r\n} from '../keyboard-focus.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AutoFocusService extends EscapeFocusService {\r\n  /**\r\n   * Returns the first focusable child element of the host element.\r\n   */\r\n  findFirstFocusable(\r\n    host: HTMLElement,\r\n    config: AutoFocusConfig = { autofocus: true }\r\n  ): HTMLElement {\r\n    if (config?.autofocus === ':host') {\r\n      return host;\r\n    } else if (this.hasPersistedFocus(host, config)) {\r\n      return this.getPersisted(host, this.getPersistenceGroup(host, config));\r\n    } else {\r\n      return this.selectFocusUtil.findFirstFocusable(host, config) || host;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates whether any of the focusabe child elements is focused.\r\n   */\r\n  hasPersistedFocus(host: HTMLElement, config: PersistFocusConfig): boolean {\r\n    return !!this.getPersisted(host, this.getPersistenceGroup(host, config));\r\n  }\r\n\r\n  /**\r\n   * Returns the element that has a persisted focus state.\r\n   *\r\n   * @param host the `HTMLElement` used to query for focusable children\r\n   * @param group the optional group for the persistent state, to separate different focus\r\n   *   groups and remain the persistence\r\n   */\r\n  protected getPersisted(host: HTMLElement, group?: string): HTMLElement {\r\n    if (!this.get(group)) {\r\n      return;\r\n    }\r\n    const focussed = Array.from(\r\n      host.querySelectorAll(\r\n        `[${FOCUS_ATTR}='${this.get(group)}']`\r\n      ) as NodeListOf<HTMLElement>\r\n    );\r\n    return focussed.length > 0 ? focussed[0] : null;\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\r\nimport { EscapeFocusDirective } from '../escape/escape-focus.directive';\r\nimport { AutoFocusConfig } from '../keyboard-focus.model';\r\nimport { AutoFocusService } from './auto-focus.service';\r\n\r\n/**\r\n * Directive that focus the first nested _focusable_ element based on state and configuration:\r\n *\r\n * 1. focusable element that was left in a focused state (aka _persisted_ focus)\r\n * 2. focusable element selected by configured CSS selector (i.e. 'button[type=submit]')\r\n * 3. focusable element marked with the native HTML5 `autofocus` attribute\r\n * 4. first focusable element\r\n * 5. the host element, in case the configured CSS selector is `:host`.\r\n *\r\n * Example configurations:\r\n *\r\n * `<div cxAutoFocus>[...]</div>`\r\n *\r\n * `<div [cxAutoFocus]=\"{autofocus: false}\">[...]</div>`\r\n *\r\n * `<div [cxAutoFocus]=\"{autofocus: 'button.active'}\">[...]</div>`\r\n *\r\n * `<div [cxAutoFocus]=\"{autofocus: ':host'}\">[...]</div>`\r\n *\r\n */\r\n@Directive() // selector: '[cxAutoFocus]'\r\nexport class AutoFocusDirective extends EscapeFocusDirective\r\n  implements AfterViewInit {\r\n  /** The AutoFocusDirective will be using autofocus by default  */\r\n  protected defaultConfig: AutoFocusConfig = { autofocus: true };\r\n\r\n  // @Input('cxAutoFocus')\r\n  protected config: AutoFocusConfig;\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: AutoFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  /**\r\n   * Focus the element explicitly if it was focussed before.\r\n   */\r\n  ngAfterViewInit(): void {\r\n    if (this.shouldAutofocus) {\r\n      this.handleFocus();\r\n    }\r\n    if (!this.shouldAutofocus || this.hasPersistedFocus) {\r\n      super.ngAfterViewInit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mimic the focus without setting the actual focus on the host. The first\r\n   * focusable child element will be focussed.\r\n   */\r\n  handleFocus(event?: KeyboardEvent) {\r\n    if (this.shouldAutofocus) {\r\n      if (!event?.target || event.target === this.host) {\r\n        this.firstFocusable?.focus();\r\n      } else {\r\n        (event.target as HTMLElement).focus();\r\n      }\r\n    }\r\n    super.handleFocus(event);\r\n  }\r\n\r\n  /**\r\n   * Helper function to get the first focusable child element\r\n   */\r\n  protected get hasPersistedFocus() {\r\n    return this.service.hasPersistedFocus(this.host, this.config);\r\n  }\r\n\r\n  /**\r\n   * Helper function to indicate whether we should use autofocus for the\r\n   * child elements.\r\n   */\r\n  protected get shouldAutofocus(): boolean {\r\n    return !!this.config?.autofocus;\r\n  }\r\n\r\n  /**\r\n   * Helper function to get the first focusable child element.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private get firstFocusable(): HTMLElement {\r\n    return this.service.findFirstFocusable(this.host, this.config);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AutoFocusService } from '../autofocus/auto-focus.service';\r\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TabFocusService extends AutoFocusService {\r\n  /**\r\n   * Moves to the next (or previous) tab.\r\n   */\r\n  moveTab(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig,\r\n    increment: MOVE_FOCUS,\r\n    event: KeyboardEvent\r\n  ): void {\r\n    if (config?.tab) {\r\n      const next =\r\n        config.tab === 'scroll'\r\n          ? this.findNextScrollable(host, config, increment)\r\n          : this.findNext(host, config, increment);\r\n\r\n      next?.focus();\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * builds out virtual slides out of the full scrollable area, to allow\r\n   * for maximum flexibility for the underlying layout without using hardcoded\r\n   * slide sizes.\r\n   */\r\n  protected findNextScrollable(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig,\r\n    increment: MOVE_FOCUS\r\n  ): HTMLElement {\r\n    const active = this.getActiveChild(host, config);\r\n\r\n    if (!active) {\r\n      return;\r\n    }\r\n    // slide count\r\n    const virtualSlideCount = Math.round(host.scrollWidth / host.clientWidth);\r\n\r\n    // find current virtual slide\r\n    const currentVirtualSlide = Math.round(\r\n      active.offsetLeft / (host.scrollWidth / virtualSlideCount)\r\n    );\r\n\r\n    let nextVirtualSlide = currentVirtualSlide + increment;\r\n    if (\r\n      increment === MOVE_FOCUS.NEXT &&\r\n      nextVirtualSlide >= virtualSlideCount\r\n    ) {\r\n      nextVirtualSlide = 0;\r\n    }\r\n    if (increment === MOVE_FOCUS.PREV && nextVirtualSlide < 0) {\r\n      nextVirtualSlide = virtualSlideCount - 1;\r\n    }\r\n\r\n    const firstItemOnNextSlide = this.getChildren(host, config)?.find(\r\n      (tab) =>\r\n        tab.offsetLeft >=\r\n        (host.scrollWidth / virtualSlideCount) * nextVirtualSlide\r\n    );\r\n\r\n    return firstItemOnNextSlide;\r\n  }\r\n\r\n  protected findNext(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig,\r\n    increment: MOVE_FOCUS\r\n  ): HTMLElement {\r\n    const childs = this.getChildren(host, config);\r\n    let activeIndex = childs?.findIndex(\r\n      (c) => c === this.getActiveChild(host, config)\r\n    );\r\n\r\n    if (!activeIndex || activeIndex === -1) {\r\n      activeIndex = 0;\r\n    }\r\n    activeIndex += increment;\r\n\r\n    if (increment === MOVE_FOCUS.NEXT && activeIndex >= childs?.length) {\r\n      activeIndex = childs.length - 1;\r\n    }\r\n    if (increment === MOVE_FOCUS.PREV && activeIndex < 0) {\r\n      activeIndex = 0;\r\n    }\r\n    return childs ? childs[activeIndex] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Returns the active focusable child element. If there's no active\r\n   * focusable child element, the first focusable child is returned.\r\n   */\r\n  protected getActiveChild(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig\r\n  ): HTMLElement {\r\n    const persisted = this.getPersisted(host, config?.group);\r\n    if (persisted) {\r\n      return persisted;\r\n    }\r\n    const children = this.getChildren(host, config);\r\n    let index = children.findIndex((tab) => this.isActive(tab));\r\n    if (!index || index === -1) {\r\n      index = 0;\r\n    }\r\n    return children[index];\r\n  }\r\n\r\n  protected getChildren(\r\n    host: HTMLElement,\r\n    config: TabFocusConfig\r\n  ): HTMLElement[] {\r\n    if (typeof config.tab === 'string' && config.tab !== 'scroll') {\r\n      return this.selectFocusUtil.query(host, config.tab);\r\n    } else {\r\n      return this.findFocusable(host, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns all focusable child elements of the host element.\r\n   *\r\n   * @param host The host element is used to query child focusable elements.\r\n   * @param locked Indicates if locked elements (tabindex=-1) should be returned, defaults to false.\r\n   * @param invisible Indicates if invisible child elements should be returned, defaults to false.\r\n   */\r\n  findFocusable(\r\n    host: HTMLElement,\r\n    locked = false,\r\n    invisible = false\r\n  ): HTMLElement[] {\r\n    return this.selectFocusUtil.findFocusable(host, locked, invisible);\r\n  }\r\n\r\n  protected isActive(el: HTMLElement): boolean {\r\n    const child = document.activeElement;\r\n    const selector = child.tagName;\r\n\r\n    return (\r\n      el === child ||\r\n      !!Array.from(el.querySelectorAll(selector)).find((e) => e === child)\r\n    );\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\nimport { AutoFocusDirective } from '../autofocus/auto-focus.directive';\r\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\r\nimport { TabFocusService } from './tab-focus.service';\r\n\r\n/**\r\n * Directive to move the focus of (\"locked\") child elements. This is useful\r\n * for a nested list of tabs, carousel slides or any group of elements that\r\n * requires horizontal navigation.\r\n */\r\n@Directive() // selector: '[cxTabFocus]'\r\nexport class TabFocusDirective extends AutoFocusDirective {\r\n  /** `tab` defaults to true if the directive `cxTabFocus` is used. */\r\n  protected defaultConfig: TabFocusConfig = { tab: true };\r\n\r\n  // @Input('cxTabFocus')\r\n  protected config: TabFocusConfig = {};\r\n\r\n  @HostListener('keydown.arrowRight', ['$event'])\r\n  handleNextTab(event: KeyboardEvent) {\r\n    if (this.config?.tab) {\r\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.NEXT, event);\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown.arrowLeft', ['$event'])\r\n  handlePreviousTab(event: KeyboardEvent) {\r\n    if (this.config?.tab) {\r\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.PREV, event);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: TabFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\r\nimport { TabFocusService } from '../tab/tab-focus.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrapFocusService extends TabFocusService {\r\n  /**\r\n   * Indicates whether any of the child elements of the host are focusable.\r\n   *\r\n   * @param host `HTMLElement` that is used to query the focusable elements.\r\n   */\r\n  hasFocusableChildren(host: HTMLElement): boolean {\r\n    return this.findFocusable(host).length > 0;\r\n  }\r\n\r\n  /**\r\n   * Focus the next or previous element of all available focusable elements.\r\n   * The focus is _trapped_ in case there's no next or previous available element.\r\n   * The focus will automatically move the start or end of the list.\r\n   */\r\n  moveFocus(\r\n    host: HTMLElement,\r\n    config: TrapFocusConfig,\r\n    increment: MOVE_FOCUS,\r\n    event: UIEvent\r\n  ): void {\r\n    const focusable: HTMLElement[] = this.findFocusable(host);\r\n\r\n    let index = focusable.findIndex((v) => v === event.target) + increment;\r\n\r\n    const shouldMoveFocus =\r\n      (index >= 0 && index < focusable.length) ||\r\n      (index < 0 && this.getTrapStart(config.trap)) ||\r\n      (index >= focusable.length && this.getTrapEnd(config.trap));\r\n\r\n    if (shouldMoveFocus) {\r\n      if (index >= focusable.length) {\r\n        index = 0;\r\n      }\r\n      if (index < 0) {\r\n        index = focusable.length - 1;\r\n      }\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      const el = focusable[index];\r\n\r\n      el.focus();\r\n    }\r\n  }\r\n\r\n  protected getTrapStart(trap: boolean | 'start' | 'end'): boolean {\r\n    return trap === true || trap === 'start';\r\n  }\r\n\r\n  protected getTrapEnd(trap: boolean | 'start' | 'end'): boolean {\r\n    return trap === true || trap === 'end';\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, OnInit } from '@angular/core';\r\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\r\nimport { TabFocusDirective } from '../tab/tab-focus.directive';\r\nimport { TrapFocusService } from './trap-focus.service';\r\n\r\n/**\r\n * Directive that keeps the focus inside the focussable child elements,\r\n * also known as a _focus trap_.\r\n */\r\n@Directive() // selector: '[cxTrapFocus]'\r\nexport class TrapFocusDirective extends TabFocusDirective implements OnInit {\r\n  protected defaultConfig: TrapFocusConfig = { trap: true };\r\n\r\n  // @Input('cxTrapFocus')\r\n  protected config: TrapFocusConfig = {};\r\n\r\n  @HostListener('keydown.arrowdown', ['$event'])\r\n  @HostListener('keydown.tab', ['$event'])\r\n  handleTrapDown = (event: KeyboardEvent) => {\r\n    if (!!this.config.trap) {\r\n      this.moveFocus(event, MOVE_FOCUS.NEXT);\r\n    }\r\n  };\r\n\r\n  @HostListener('keydown.arrowup', ['$event'])\r\n  @HostListener('keydown.shift.tab', ['$event'])\r\n  handleTrapUp = (event: KeyboardEvent) => {\r\n    if (!!this.config.trap) {\r\n      this.moveFocus(event, MOVE_FOCUS.PREV);\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: TrapFocusService\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  /**\r\n   * Moves the focus of the element reference up or down, depending on the increment.\r\n   * The focus of the element is trapped to avoid it from going out of the group.\r\n   *\r\n   * @param event UIEvent that is used to get the target element. The event is blocked\r\n   *   from standard execution and further bubbling.\r\n   * @param increment indicates whether the next or previous is focussed.\r\n   */\r\n  protected moveFocus(event: UIEvent, increment: number) {\r\n    if (this.service.hasFocusableChildren(this.host)) {\r\n      this.service.moveFocus(\r\n        this.host,\r\n        this.config,\r\n        increment,\r\n        event as UIEvent\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TrapFocusService } from '../trap/trap-focus.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LockFocusService extends TrapFocusService {}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { FOCUS_GROUP_ATTR, LockFocusConfig } from '../keyboard-focus.model';\r\nimport { TrapFocusDirective } from '../trap/trap-focus.directive';\r\nimport { LockFocusService } from './lock-focus.service';\r\n\r\n/**\r\n * Focusable elements exclude hidden elements by default, but this contradicts with\r\n * unlocking (hidden) elements.\r\n */\r\nconst UNLOCK_HIDDEN_ELEMENTS = true;\r\n/**\r\n * Directive that adds persistence for focussed element in case\r\n * the elements are being rebuild. This happens often when change\r\n * detection kicks in because of new data set from the backend.\r\n */\r\n@Directive() // selector: '[cxLockFocus]'\r\nexport class LockFocusDirective extends TrapFocusDirective\r\n  implements OnInit, AfterViewInit {\r\n  protected defaultConfig: LockFocusConfig = { lock: true };\r\n\r\n  // @Input('cxLockFocus')\r\n  protected config: LockFocusConfig = {};\r\n\r\n  /**\r\n   * Indicates that the host is configured to use locking. This is available as a\r\n   * CSS class `focus-lock`.\r\n   */\r\n  @HostBinding('class.focus-lock') shouldLock: boolean;\r\n\r\n  /**\r\n   * Indicates that the host is locked. This is available as a CSS class `is-locked`.\r\n   */\r\n  @HostBinding('class.is-locked') isLocked: boolean;\r\n\r\n  /**\r\n   * Emits an event when the host is unlocked.\r\n   */\r\n  @Output() unlock = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   * When the user selects enter or space, the focusable childs are\r\n   * unlocked, which means that the tabindex is set to 0.\r\n   */\r\n  @HostListener('keydown.enter', ['$event'])\r\n  @HostListener('keydown.space', ['$event'])\r\n  handleEnter(event: KeyboardEvent) {\r\n    if (this.shouldLock && this.host === (event.target as HTMLElement)) {\r\n      this.unlockFocus(event);\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * In case any of the children elements is touched by the mouse,\r\n   * we unlock the group to not break the mouse-experience.\r\n   */\r\n  @HostListener('click', ['$event'])\r\n  handleClick(event: UIEvent): void {\r\n    if (this.shouldLock && this.isLocked) {\r\n      this.unlockFocus(event);\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: LockFocusService,\r\n    protected renderer: Renderer2\r\n  ) {\r\n    super(elementRef, service);\r\n  }\r\n\r\n  protected lockFocus() {\r\n    this.addTabindexToChildren(-1);\r\n  }\r\n\r\n  protected unlockFocus(event?: UIEvent) {\r\n    this.unlock.emit(true);\r\n    this.addTabindexToChildren(0);\r\n    // we focus the host if the event was triggered from a child\r\n    if (event?.target === this.host) {\r\n      // we wait a few milliseconds, mainly because firefox will otherwise apply\r\n      // the mouse event on the new focused child element\r\n      setTimeout(() => {\r\n        super.handleFocus(event as KeyboardEvent);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.shouldLock = this.config?.lock;\r\n\r\n    if (this.shouldLock) {\r\n      this.tabindex = 0;\r\n\r\n      // Locked elements will be set to `autofocus` by default if it's not\r\n      // been configured. This will ensure that autofocus kicks in upon unlock.\r\n      if (!this.config.hasOwnProperty('autofocus')) {\r\n        this.config.autofocus = true;\r\n      }\r\n      // Locked elements will be set to `focusOnEscape` by default if it's not\r\n      // been configured. This will ensure that  the host gets locked again when\r\n      // `escape` is pressed.\r\n      if (!this.config.hasOwnProperty('focusOnEscape')) {\r\n        this.config.focusOnEscape = !(this.config?.focusOnEscape === false);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.shouldLock) {\r\n      /**\r\n       * If the component hosts a group of focusable children elements,\r\n       * we persist the group key to the children, so that they can taken this\r\n       * into account when they persist their focus state.\r\n       */\r\n      if (!!this.group) {\r\n        this.service.findFocusable(this.host).forEach((el) =>\r\n          // we must do this in after view init as\r\n          this.renderer.setAttribute(el, FOCUS_GROUP_ATTR, this.group)\r\n        );\r\n      }\r\n\r\n      if (this.shouldAutofocus) {\r\n        this.handleFocus();\r\n      }\r\n    }\r\n    super.ngAfterViewInit();\r\n  }\r\n\r\n  handleFocus(event?: KeyboardEvent): void {\r\n    if (this.shouldLock) {\r\n      if (this.shouldUnlockAfterAutofocus(event)) {\r\n        // Delay unlocking in case the host is using `ChangeDetectionStrategy.Default`\r\n        setTimeout(() => this.unlockFocus(event));\r\n      } else {\r\n        setTimeout(() => this.lockFocus());\r\n        event?.stopPropagation();\r\n        return;\r\n      }\r\n    }\r\n    super.handleFocus(event);\r\n  }\r\n\r\n  handleEscape(event: KeyboardEvent): void {\r\n    if (this.shouldLock) {\r\n      this.service.clear(this.config.group);\r\n    }\r\n    super.handleEscape(event);\r\n  }\r\n\r\n  /**\r\n   * When the handleFocus is called without an actual event, it's coming from Autofocus.\r\n   * In this case we unlock the focusable children in case there's a focusable child that\r\n   * was unlocked before.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private shouldUnlockAfterAutofocus(event?: KeyboardEvent) {\r\n    return !event && this.service.hasPersistedFocus(this.host, this.config);\r\n  }\r\n\r\n  /**\r\n   * Add the tabindex attribute to the focusable children elements\r\n   */\r\n  protected addTabindexToChildren(i = 0): void {\r\n    if (this.shouldLock) {\r\n      this.isLocked = i === -1;\r\n      if (!(this.hasFocusableChildren && i === 0) || i === 0) {\r\n        this.focusable.forEach((el) =>\r\n          this.renderer.setAttribute(el, 'tabindex', i.toString())\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Utility method, returns all focusable children for the host element.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private get hasFocusableChildren(): boolean {\r\n    return this.service.hasFocusableChildren(this.host);\r\n  }\r\n\r\n  /**\r\n   * Returns the focusable children of the host element. If the host element\r\n   * is configured to be locked, the query is restricted to child elements\r\n   * with a tabindex !== `-1`.\r\n   *\r\n   * We keep this private to not polute the API.\r\n   */\r\n  private get focusable(): HTMLElement[] {\r\n    return this.service.findFocusable(\r\n      this.host,\r\n      this.shouldLock,\r\n      UNLOCK_HIDDEN_ELEMENTS\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LockFocusService } from '../lock/lock-focus.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class KeyboardFocusService extends LockFocusService {}\r\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { FocusConfig } from './keyboard-focus.model';\r\nimport { LockFocusDirective } from './lock/lock-focus.directive';\r\nimport { KeyboardFocusService } from './services/keyboard-focus.service';\r\n\r\n@Directive({\r\n  selector: '[cxFocus]',\r\n})\r\nexport class FocusDirective extends LockFocusDirective {\r\n  protected defaultConfig: FocusConfig = {};\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('cxFocus') protected config: FocusConfig = {};\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef,\r\n    protected service: KeyboardFocusService,\r\n    protected renderer: Renderer2\r\n  ) {\r\n    super(elementRef, service, renderer);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FocusDirective } from './focus.directive';\r\n\r\nconst directives = [\r\n  // PersistFocusDirective,\r\n  // VisibleFocusDirective,\r\n  // BlockFocusDirective,\r\n  // AutoFocusDirective,\r\n  // EscapeFocusDirective,\r\n  // LockFocusDirective,\r\n  // TrapFocusDirective,\r\n  // TabFocusDirective,\r\n  FocusDirective,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [...directives],\r\n  exports: [...directives],\r\n})\r\nexport class KeyboardFocusModule {}\r\n","// given that we're likely going to refactor the directives, we're\r\n// NOT exposing all it to the public API.\r\nexport * from './focus.directive';\r\nexport { FocusConfig } from './keyboard-focus.model';\r\nexport * from './keyboard-focus.module';\r\nexport * from './services/index';\r\n\r\n// export * from './autofocus/index';\r\n// export * from './base/index';\r\n// export * from './block/index';\r\n// export * from './escape/index';\r\n// export * from './lock/index';\r\n// export * from './persist/index';\r\n// export * from './tab/index';\r\n// export * from './trap/index';\r\n// export * from './visible/index';\r\n// export * from './keyboard-focus.model';\r\n","import { Component, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { AnonymousConsentsService } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AnonymousConsentLaunchDialogService } from '../anonymous-consent-launch-dialog.service';\r\n\r\n@Component({\r\n  selector: 'cx-anonymous-consent-management-banner',\r\n  templateUrl: './anonymous-consent-management-banner.component.html',\r\n})\r\nexport class AnonymousConsentManagementBannerComponent implements OnDestroy {\r\n  private subscriptions = new Subscription();\r\n\r\n  bannerVisible$: Observable<\r\n    boolean\r\n  > = this.anonymousConsentsService.isBannerVisible();\r\n\r\n  constructor(\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected anonymousConsentLaunchDialogService: AnonymousConsentLaunchDialogService,\r\n    protected vcr: ViewContainerRef\r\n  ) {}\r\n\r\n  viewDetails(): void {\r\n    this.hideBanner();\r\n    const dialog = this.anonymousConsentLaunchDialogService.openDialog(\r\n      null,\r\n      this.vcr\r\n    );\r\n    if (dialog) {\r\n      this.subscriptions.add(dialog.subscribe());\r\n    }\r\n  }\r\n\r\n  allowAll(): void {\r\n    this.subscriptions.add(\r\n      this.anonymousConsentsService\r\n        .giveAllConsents()\r\n        .pipe(tap(() => this.hideBanner()))\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  hideBanner(): void {\r\n    this.anonymousConsentsService.toggleBannerDismissed(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\nexport enum ICON_TYPE {\r\n  STAR = 'STAR',\r\n  SEARCH = 'SEARCH',\r\n  CART = 'CART',\r\n  INFO = 'INFO',\r\n  GRID = 'GRID',\r\n  LIST = 'LIST',\r\n  CARET_DOWN = 'CARET_DOWN',\r\n  CARET_LEFT = 'CARET_LEFT',\r\n  CARET_RIGHT = 'CARET_RIGHT',\r\n  CLOSE = 'CLOSE',\r\n  ERROR = 'ERROR',\r\n  WARNING = 'WARNING',\r\n  SUCCESS = 'SUCCESS',\r\n  VISA = 'VISA',\r\n  MASTER_CARD = 'MASTER_CARD',\r\n  AMEX = 'AMEX',\r\n  DINERS_CLUB = 'DINERS_CLUB',\r\n  CREDIT_CARD = 'CREDIT_CARD',\r\n  EXPAND = 'EXPAND',\r\n  COLLAPSE = 'COLLAPSE',\r\n  RESET = 'RESET',\r\n  CIRCLE = 'CIRCLE',\r\n  HEART = 'HEART',\r\n  EMPTY_HEART = 'EMPTY_HEART',\r\n  FILTER = 'FILTER',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class IconConfig {\r\n  icon?: IconOptions;\r\n}\r\n\r\nexport interface IconOptions {\r\n  /**\r\n   * Each icon type can be configured with a so-called symbol. The symbol will\r\n   * be used to map the icon to an SVG `symbol` (id) or to the style classes of\r\n   * a font based icon. The following configuration would map to a fontawesome\r\n   * icon:\r\n   *\r\n   * icon: {\r\n   *   symbols: {\r\n   *     CART: 'fas fa-shopping-cart'\r\n   *   }\r\n   * }\r\n   */\r\n  symbols?: {\r\n    [ICON_TYPE: string]: string;\r\n  };\r\n\r\n  /**\r\n   * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\r\n   * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\r\n   * is used for the SVG xlink reference.\r\n   */\r\n  resources?: IconConfigResource[];\r\n}\r\n\r\nexport interface IconConfigResource {\r\n  type: IconResourceType | string;\r\n  url?: string;\r\n  types?: (ICON_TYPE | string)[];\r\n}\r\n\r\n/**\r\n * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.\r\n * The resources will be automitacally loaded in case they're required for the `ICON_TYPE`.\r\n */\r\nexport enum IconResourceType {\r\n  /**\r\n   * An svg based icon requires an SVG resource that must be loaded,\r\n   * this is typically a sprite svg file.\r\n   */\r\n  SVG = 'svg',\r\n\r\n  /**\r\n   * A font based ICON might require an additional CSS file to be loaded.\r\n   */\r\n  LINK = 'link',\r\n  /**\r\n   * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image\r\n   * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)\r\n   */\r\n  TEXT = 'text',\r\n}\r\n","import { IconConfig, IconResourceType } from './icon.model';\r\n\r\nexport const fontawesomeIconConfig: IconConfig = {\r\n  icon: {\r\n    symbols: {\r\n      SEARCH: 'fas fa-search',\r\n      CART: 'fas fa-shopping-cart',\r\n      INFO: 'fas fa-info-circle',\r\n      STAR: 'fas fa-star',\r\n      GRID: 'fas fa-th-large',\r\n      LIST: 'fas fa-bars',\r\n      CARET_DOWN: 'fas fa-angle-down',\r\n      CARET_RIGHT: 'fas fa-angle-right',\r\n      CARET_LEFT: 'fas fa-angle-left',\r\n      ERROR: 'fas fa-exclamation-circle',\r\n      WARNING: 'fas fa-exclamation-triangle',\r\n      SUCCESS: 'fas fa-check-circle',\r\n      CLOSE: 'fas fa-times',\r\n      VISA: 'fab fa-cc-visa',\r\n      MASTER_CARD: 'fab fa-cc-mastercard',\r\n      AMEX: 'fab fa-cc-amex',\r\n      DINERS_CLUB: 'fab fa-cc-diners-club',\r\n      CREDIT_CARD: 'fas fa-credit-card',\r\n      COLLAPSE: 'fas fa-minus',\r\n      EXPAND: 'fas fa-plus',\r\n      RESET: 'fas fa-times-circle',\r\n      CIRCLE: 'fas fa-circle',\r\n      HEART: 'fas fa-heart',\r\n      EMPTY_HEART: 'far fa-heart',\r\n      FILTER: 'fas fa-filter',\r\n    },\r\n    resources: [\r\n      {\r\n        type: IconResourceType.LINK,\r\n        url: 'https://use.fontawesome.com/releases/v5.8.1/css/all.css',\r\n      },\r\n    ],\r\n  },\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport {\r\n  IconConfig,\r\n  IconConfigResource,\r\n  IconOptions,\r\n  IconResourceType,\r\n  ICON_TYPE,\r\n} from './icon.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IconLoaderService {\r\n  private loadedResources = [];\r\n  constructor(\r\n    protected winRef: WindowRef,\r\n    protected iconConfig: IconConfig,\r\n    protected sanitizer: DomSanitizer\r\n  ) {}\r\n\r\n  /**\r\n   * Returns an html fragment which can be added to the DOM in a safe way.\r\n   */\r\n  getHtml(type: ICON_TYPE | string): SafeHtml {\r\n    if (this.isResourceType(type, IconResourceType.SVG)) {\r\n      return this.sanitizer.bypassSecurityTrustHtml(\r\n        `<svg><use xlink:href=\"${this.getSvgPath(type)}\"></use></svg>`\r\n      );\r\n    }\r\n    if (this.isResourceType(type, IconResourceType.TEXT)) {\r\n      return this.sanitizer.bypassSecurityTrustHtml(this.getSymbol(type));\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Returns the symbol class(es) for the icon type.\r\n   */\r\n  getStyleClasses(iconType: ICON_TYPE | string): string {\r\n    return this.getSymbol(iconType) || '';\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the given `ICON_TYPE` is configured for\r\n   * the given `IconResourceType`.\r\n   */\r\n  private isResourceType(\r\n    iconType: ICON_TYPE | string,\r\n    resourceType: IconResourceType\r\n  ): boolean {\r\n    return (\r\n      this.config.resources &&\r\n      !!this.config.resources.find(\r\n        (res) =>\r\n          res.types && res.type === resourceType && res.types.includes(iconType)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the path to the svg link. The link supports path names\r\n   * as well, if the config a[[s been setup to support a svg file path.\r\n   * Additionally, the icon prefix will be taken into account to prefix the\r\n   * icon IDs in the SVG.\r\n   */\r\n  private getSvgPath(iconType: ICON_TYPE | string): string {\r\n    const svgResource = this.config.resources.find(\r\n      (res) =>\r\n        res.type === IconResourceType.SVG &&\r\n        res.types &&\r\n        res.types.includes(iconType)\r\n    );\r\n    if (svgResource) {\r\n      return svgResource.url\r\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\r\n        : `#${this.getSymbol(iconType)}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads the resource url (if any) for the given icon.\r\n   * The icon will only be loaded once.\r\n   *\r\n   * NOTE: this is not working when the shadow is used as there's\r\n   * no head element available and the link must be loaded for every\r\n   * web component.\r\n   */\r\n  addLinkResource(iconType: ICON_TYPE | string): void {\r\n    const resource: IconConfigResource = this.findResource(\r\n      iconType,\r\n      IconResourceType.LINK\r\n    );\r\n    if (\r\n      resource &&\r\n      resource.url &&\r\n      !this.loadedResources.includes(resource.url)\r\n    ) {\r\n      this.loadedResources.push(resource.url);\r\n      const head = this.winRef.document.getElementsByTagName('head')[0];\r\n      const link = this.winRef.document.createElement('link');\r\n      link.rel = 'stylesheet';\r\n      link.type = 'text/css';\r\n      link.href = resource.url;\r\n      head.appendChild(link);\r\n    }\r\n  }\r\n\r\n  private findResource(\r\n    iconType: ICON_TYPE | string,\r\n    resourceType: IconResourceType\r\n  ): IconConfigResource {\r\n    if (!this.config.resources) {\r\n      return;\r\n    }\r\n\r\n    let resource = this.config.resources.find(\r\n      (res) =>\r\n        res.type === resourceType && res.types && res.types.includes(iconType)\r\n    );\r\n    // no specific resource found, let's try to find a one-size-fits-all resource\r\n    if (!resource) {\r\n      resource = this.config.resources.find(\r\n        (res) => (res.type === resourceType && !res.types) || res.types === []\r\n      );\r\n    }\r\n    return resource;\r\n  }\r\n\r\n  getSymbol(iconType: ICON_TYPE | string) {\r\n    if (this.config && this.config.symbols && this.config.symbols[iconType]) {\r\n      return this.config.symbols[iconType];\r\n    }\r\n  }\r\n\r\n  private get config(): IconOptions {\r\n    return this.iconConfig.icon;\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { IconLoaderService } from './icon-loader.service';\r\nimport { ICON_TYPE } from './icon.model';\r\n\r\n/**\r\n *\r\n * The icon component can be added in different ways:\r\n *\r\n * With the component selector:\r\n * `<cx-icon type=\"SEARCH\"></cx-icon>`\r\n *\r\n * With the attribute selector:\r\n * `<span cxIcon=\"STAR\"></span>`\r\n *\r\n * Additionally, content can be projected to the icon:\r\n *\r\n * `<button cxIcon=\"HAPPY\">happy label</button>`\r\n *\r\n * The above button would become (based on a TEXT resource type):\r\n * `<button>😊happy label</button>`\r\n *\r\n * While the content is projected, the icon itself doesn't require an\r\n * additional DOM node which is an advantage over the component selector.\r\n */\r\n@Component({\r\n  selector: 'cx-icon,[cxIcon]',\r\n  templateUrl: './icon.component.html',\r\n})\r\nexport class IconComponent {\r\n  /**\r\n   * The cxIcon directive is bound to the icon type. You can feed the `ICON_TYPE` to\r\n   * accomplish a configurable button in the UI.\r\n   */\r\n  @Input() set cxIcon(type: ICON_TYPE) {\r\n    this.setIcon(type);\r\n  }\r\n\r\n  /**\r\n   * The type input parameter is bound to the icon type. You can feed the `ICON_TYPE` to\r\n   * accomplish a configurable button in the UI.\r\n   */\r\n  @Input() set type(type: ICON_TYPE) {\r\n    this.setIcon(type);\r\n  }\r\n\r\n  /**\r\n   * the icon provides an html fragment that is used to add SVG or text based icons.\r\n   */\r\n  icon: SafeHtml;\r\n\r\n  /**\r\n   * Maintains the applied style classes so we can remove them when the\r\n   * icon type changes at run time.\r\n   */\r\n  protected styleClasses: string[];\r\n\r\n  constructor(\r\n    protected iconLoader: IconLoaderService,\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected renderer: Renderer2\r\n  ) {}\r\n\r\n  protected setIcon(type: ICON_TYPE): void {\r\n    if (!type || <string>type === '') {\r\n      return;\r\n    }\r\n    this.icon = this.iconLoader.getHtml(type);\r\n    this.addStyleClasses(type);\r\n    this.iconLoader.addLinkResource(type);\r\n  }\r\n\r\n  /**\r\n   * Adds the style classes and the link resource (if available).\r\n   */\r\n  protected addStyleClasses(type: ICON_TYPE): void {\r\n    this.renderer.addClass(this.host, 'cx-icon');\r\n\r\n    if (this.styleClasses) {\r\n      this.styleClasses.forEach((cls) =>\r\n        this.renderer.removeClass(this.host, cls)\r\n      );\r\n    }\r\n\r\n    this.styleClasses = this.iconLoader.getStyleClasses(type).split(' ');\r\n\r\n    this.styleClasses.forEach((cls) => {\r\n      if (cls !== '') {\r\n        this.renderer.addClass(this.host, cls);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected get host() {\r\n    return this.elementRef.nativeElement;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { provideDefaultConfig } from '@spartacus/core';\r\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\r\nimport { IconComponent } from './icon.component';\r\n\r\n@NgModule({\r\n  declarations: [IconComponent],\r\n  imports: [CommonModule],\r\n  providers: [provideDefaultConfig(fontawesomeIconConfig)],\r\n  exports: [IconComponent],\r\n})\r\nexport class IconModule {}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  AnonymousConsent,\r\n  AnonymousConsentsConfig,\r\n  AnonymousConsentsService,\r\n  ConsentTemplate,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, take, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\r\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/index';\r\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\r\n\r\n@Component({\r\n  selector: 'cx-anonymous-consent-dialog',\r\n  templateUrl: './anonymous-consent-dialog.component.html',\r\n})\r\nexport class AnonymousConsentDialogComponent implements OnInit, OnDestroy {\r\n  @HostBinding('attr.role') role = 'dialog';\r\n  @HostBinding('attr.aria-modal') modal = true;\r\n\r\n  private subscriptions = new Subscription();\r\n\r\n  showLegalDescription = true;\r\n  iconTypes = ICON_TYPE;\r\n  requiredConsents: string[] = [];\r\n\r\n  loading$: Observable<boolean>;\r\n  templates$: Observable<ConsentTemplate[]>;\r\n  consents$: Observable<AnonymousConsent[]>;\r\n\r\n  focusConfig: FocusConfig = {\r\n    trap: true,\r\n    block: true,\r\n    autofocus: 'input[type=\"checkbox\"]',\r\n    focusOnEscape: true,\r\n  };\r\n\r\n  @HostListener('click', ['$event'])\r\n  handleClick(event: UIEvent): void {\r\n    // Close on click outside the dialog window\r\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\r\n      this.close('Cross click');\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected config: AnonymousConsentsConfig,\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected el: ElementRef,\r\n    protected launchDialogService: LaunchDialogService\r\n  ) {\r\n    if (Boolean(this.config.anonymousConsents)) {\r\n      this.showLegalDescription = this.config.anonymousConsents.showLegalDescriptionInDialog;\r\n      if (Boolean(this.config.anonymousConsents.requiredConsents)) {\r\n        this.requiredConsents = this.config.anonymousConsents.requiredConsents;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.templates$ = this.anonymousConsentsService.getTemplates();\r\n    this.consents$ = this.anonymousConsentsService.getConsents();\r\n    this.loading$ = this.anonymousConsentsService.getLoadTemplatesLoading();\r\n  }\r\n\r\n  close(reason?: any): void {\r\n    this.launchDialogService.closeDialog(reason);\r\n  }\r\n\r\n  rejectAll(): void {\r\n    this.subscriptions.add(\r\n      combineLatest([this.templates$, this.consents$])\r\n        .pipe(\r\n          take(1),\r\n          distinctUntilChanged(),\r\n          tap(([templates, consents]) =>\r\n            templates.forEach((template) => {\r\n              const consent = this.getCorrespondingConsent(template, consents);\r\n              if (this.anonymousConsentsService.isConsentGiven(consent)) {\r\n                if (this.isRequiredConsent(template)) {\r\n                  return;\r\n                }\r\n\r\n                this.anonymousConsentsService.withdrawConsent(template.id);\r\n              }\r\n            })\r\n          )\r\n        )\r\n        .subscribe()\r\n    );\r\n    this.close('rejectAll');\r\n  }\r\n\r\n  allowAll(): void {\r\n    this.subscriptions.add(\r\n      combineLatest([this.templates$, this.consents$])\r\n        .pipe(\r\n          take(1),\r\n          distinctUntilChanged(),\r\n          tap(([templates, consents]) =>\r\n            templates.forEach((template) => {\r\n              const consent = this.getCorrespondingConsent(template, consents);\r\n              if (\r\n                (consent && consent.consentState == null) ||\r\n                this.anonymousConsentsService.isConsentWithdrawn(consent)\r\n              ) {\r\n                if (this.isRequiredConsent(template)) {\r\n                  return;\r\n                }\r\n\r\n                this.anonymousConsentsService.giveConsent(template.id);\r\n              }\r\n            })\r\n          )\r\n        )\r\n        .subscribe()\r\n    );\r\n    this.close('allowAll');\r\n  }\r\n\r\n  private isRequiredConsent(template: ConsentTemplate): boolean {\r\n    return (\r\n      Boolean(this.config.anonymousConsents) &&\r\n      Boolean(this.config.anonymousConsents.requiredConsents) &&\r\n      this.config.anonymousConsents.requiredConsents.includes(template.id)\r\n    );\r\n  }\r\n\r\n  onConsentChange({\r\n    given,\r\n    template,\r\n  }: {\r\n    given: boolean;\r\n    template: ConsentTemplate;\r\n  }): void {\r\n    if (given) {\r\n      this.anonymousConsentsService.giveConsent(template.id);\r\n    } else {\r\n      this.anonymousConsentsService.withdrawConsent(template.id);\r\n    }\r\n  }\r\n\r\n  getCorrespondingConsent(\r\n    template: ConsentTemplate,\r\n    consents: AnonymousConsent[] = []\r\n  ): AnonymousConsent {\r\n    for (const consent of consents) {\r\n      if (template.id === consent.templateCode) {\r\n        return consent;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { LayoutConfig } from '../../layout/config/layout-config';\r\nimport { DIALOG_TYPE } from '../../layout/launch-dialog/index';\r\nimport { AnonymousConsentDialogComponent } from '../../shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component';\r\n\r\nexport const defaultAnonymousConsentLayoutConfig: LayoutConfig = {\r\n  launch: {\r\n    ANONYMOUS_CONSENT: {\r\n      inline: true,\r\n      component: AnonymousConsentDialogComponent,\r\n      dialogType: DIALOG_TYPE.DIALOG,\r\n    },\r\n  },\r\n};\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { AnonymousConsentLaunchDialogService } from '../anonymous-consent-launch-dialog.service';\r\n\r\n@Component({\r\n  selector: 'cx-anonymous-consent-open-dialog',\r\n  templateUrl: './anonymous-consent-open-dialog.component.html',\r\n})\r\nexport class AnonymousConsentOpenDialogComponent {\r\n  @ViewChild('open') openElement: ElementRef;\r\n\r\n  constructor(\r\n    protected vcr: ViewContainerRef,\r\n    protected anonymousConsentLaunchDialogService: AnonymousConsentLaunchDialogService\r\n  ) {}\r\n\r\n  openDialog(): void {\r\n    const dialog = this.anonymousConsentLaunchDialogService.openDialog(\r\n      this.openElement,\r\n      this.vcr\r\n    );\r\n    if (dialog) {\r\n      dialog.pipe(take(1)).subscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  CmsConfig,\r\n  DeferLoadingStrategy,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideConfig,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { KeyboardFocusModule } from '../../layout/a11y/keyboard-focus/index';\r\nimport { AnonymousConsentManagementBannerComponent } from './banner/anonymous-consent-management-banner.component';\r\nimport { defaultAnonymousConsentLayoutConfig } from './default-anonymous-consent-layout.config';\r\nimport { AnonymousConsentOpenDialogComponent } from './open-dialog/anonymous-consent-open-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    FeaturesConfigModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  providers: [\r\n    provideConfig(defaultAnonymousConsentLayoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AnonymousConsentManagementBannerComponent: {\r\n          component: AnonymousConsentManagementBannerComponent,\r\n          deferLoading: DeferLoadingStrategy.INSTANT,\r\n        },\r\n        AnonymousConsentOpenDialogComponent: {\r\n          component: AnonymousConsentOpenDialogComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [\r\n    AnonymousConsentManagementBannerComponent,\r\n    AnonymousConsentOpenDialogComponent,\r\n  ],\r\n  exports: [\r\n    AnonymousConsentManagementBannerComponent,\r\n    AnonymousConsentOpenDialogComponent,\r\n  ],\r\n  entryComponents: [\r\n    AnonymousConsentManagementBannerComponent,\r\n    AnonymousConsentOpenDialogComponent,\r\n  ],\r\n})\r\nexport class AnonymousConsentManagementBannerModule {}\r\n","import { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {\r\n  AnonymousConsent,\r\n  ANONYMOUS_CONSENT_STATUS,\r\n  ConsentTemplate,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-consent-management-form',\r\n  templateUrl: './consent-management-form.component.html',\r\n})\r\nexport class ConsentManagementFormComponent implements OnInit {\r\n  consentGiven = false;\r\n\r\n  @Input()\r\n  consentTemplate: ConsentTemplate;\r\n\r\n  @Input()\r\n  requiredConsents: string[] = [];\r\n\r\n  @Input()\r\n  consent: AnonymousConsent;\r\n\r\n  @Output()\r\n  consentChanged = new EventEmitter<{\r\n    given: boolean;\r\n    template: ConsentTemplate;\r\n  }>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.consent) {\r\n      this.consentGiven = Boolean(\r\n        this.consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN\r\n      );\r\n    } else {\r\n      if (this.consentTemplate && this.consentTemplate.currentConsent) {\r\n        if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\r\n          this.consentGiven = false;\r\n        } else if (this.consentTemplate.currentConsent.consentGivenDate) {\r\n          this.consentGiven = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onConsentChange(): void {\r\n    this.consentGiven = !this.consentGiven;\r\n\r\n    this.consentChanged.emit({\r\n      given: this.consentGiven,\r\n      template: this.consentTemplate,\r\n    });\r\n  }\r\n\r\n  isRequired(templateId: string): boolean {\r\n    return this.requiredConsents.includes(templateId);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  AnonymousConsentsConfig,\r\n  AnonymousConsentsService,\r\n  AuthService,\r\n  ConsentTemplate,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  UserConsentService,\r\n} from '@spartacus/core';\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  concat,\r\n  Observable,\r\n  Subscription,\r\n} from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  scan,\r\n  skipWhile,\r\n  tap,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-consent-management',\r\n  templateUrl: './consent-management.component.html',\r\n})\r\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\r\n  private subscriptions = new Subscription();\r\n  private allConsentsLoading = new BehaviorSubject<boolean>(false);\r\n\r\n  templateList$: Observable<ConsentTemplate[]>;\r\n  loading$: Observable<boolean>;\r\n\r\n  requiredConsents: string[] = [];\r\n\r\n  constructor(\r\n    protected userConsentService: UserConsentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected anonymousConsentsConfig: AnonymousConsentsConfig,\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = combineLatest([\r\n      this.userConsentService.getConsentsResultLoading(),\r\n      this.userConsentService.getGiveConsentResultLoading(),\r\n      this.userConsentService.getWithdrawConsentResultLoading(),\r\n      this.authService.isUserLoggedIn(),\r\n      this.allConsentsLoading,\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          consentLoading,\r\n          giveConsentLoading,\r\n          withdrawConsentLoading,\r\n          isUserLoggedIn,\r\n          allConsentsLoading,\r\n        ]) =>\r\n          consentLoading ||\r\n          giveConsentLoading ||\r\n          withdrawConsentLoading ||\r\n          !isUserLoggedIn ||\r\n          allConsentsLoading\r\n      )\r\n    );\r\n    this.consentListInit();\r\n    this.giveConsentInit();\r\n    this.withdrawConsentInit();\r\n  }\r\n\r\n  private consentListInit(): void {\r\n    this.templateList$ = this.userConsentService.getConsents().pipe(\r\n      withLatestFrom(\r\n        this.anonymousConsentsService.getTemplates(),\r\n        this.authService.isUserLoggedIn()\r\n      ),\r\n      filter(\r\n        ([_templateList, _anonymousTemplates, isUserLoggedIn]) => isUserLoggedIn\r\n      ),\r\n      tap(([templateList, _anonymousTemplates]) => {\r\n        if (!this.consentsExists(templateList)) {\r\n          this.userConsentService.loadConsents();\r\n        }\r\n      }),\r\n      map(([templateList, anonymousTemplates]) => {\r\n        if (Boolean(this.anonymousConsentsConfig.anonymousConsents)) {\r\n          if (\r\n            Boolean(\r\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents\r\n            )\r\n          ) {\r\n            this.requiredConsents = this.anonymousConsentsConfig.anonymousConsents.requiredConsents;\r\n          }\r\n          if (\r\n            Boolean(\r\n              this.anonymousConsentsConfig.anonymousConsents\r\n                .consentManagementPage\r\n            )\r\n          ) {\r\n            return this.hideAnonymousConsents(templateList, anonymousTemplates);\r\n          }\r\n        }\r\n\r\n        return templateList;\r\n      })\r\n    );\r\n  }\r\n\r\n  private hideAnonymousConsents(\r\n    templateList: ConsentTemplate[],\r\n    anonymousTemplates: ConsentTemplate[] = []\r\n  ): ConsentTemplate[] {\r\n    let hideTemplateIds: string[] = [];\r\n\r\n    if (\r\n      !this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\r\n        .showAnonymousConsents\r\n    ) {\r\n      hideTemplateIds = anonymousTemplates.map((template) => template.id);\r\n      return this.userConsentService.filterConsentTemplates(\r\n        templateList,\r\n        hideTemplateIds\r\n      );\r\n    }\r\n\r\n    if (\r\n      Boolean(\r\n        this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\r\n          .hideConsents\r\n      ) &&\r\n      this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\r\n        .hideConsents.length > 0\r\n    ) {\r\n      hideTemplateIds = this.anonymousConsentsConfig.anonymousConsents\r\n        .consentManagementPage.hideConsents;\r\n    }\r\n\r\n    return this.userConsentService.filterConsentTemplates(\r\n      templateList,\r\n      hideTemplateIds\r\n    );\r\n  }\r\n\r\n  private giveConsentInit(): void {\r\n    this.userConsentService.resetGiveConsentProcessState();\r\n    this.subscriptions.add(\r\n      this.userConsentService\r\n        .getGiveConsentResultSuccess()\r\n        .subscribe((success) => this.onConsentGivenSuccess(success))\r\n    );\r\n  }\r\n\r\n  private withdrawConsentInit(): void {\r\n    this.userConsentService.resetWithdrawConsentProcessState();\r\n    this.subscriptions.add(\r\n      this.userConsentService\r\n        .getWithdrawConsentResultLoading()\r\n        .pipe(\r\n          skipWhile(Boolean),\r\n          withLatestFrom(\r\n            this.userConsentService.getWithdrawConsentResultSuccess()\r\n          ),\r\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\r\n          tap((withdrawalSuccess) => {\r\n            if (withdrawalSuccess) {\r\n              this.userConsentService.loadConsents();\r\n            }\r\n          })\r\n        )\r\n        .subscribe((withdrawalSuccess) =>\r\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\r\n        )\r\n    );\r\n  }\r\n\r\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\r\n    return Boolean(templateList) && templateList.length > 0;\r\n  }\r\n\r\n  onConsentChange({\r\n    given,\r\n    template,\r\n  }: {\r\n    given: boolean;\r\n    template: ConsentTemplate;\r\n  }): void {\r\n    if (given) {\r\n      this.userConsentService.giveConsent(template.id, template.version);\r\n    } else {\r\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\r\n    }\r\n  }\r\n\r\n  private onConsentGivenSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.userConsentService.resetGiveConsentProcessState();\r\n      this.globalMessageService.add(\r\n        { key: 'consentManagementForm.message.success.given' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n    }\r\n  }\r\n\r\n  private onConsentWithdrawnSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.userConsentService.resetWithdrawConsentProcessState();\r\n      this.globalMessageService.add(\r\n        { key: 'consentManagementForm.message.success.withdrawn' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n    }\r\n  }\r\n\r\n  rejectAll(templates: ConsentTemplate[] = []): void {\r\n    const consentsToWithdraw: ConsentTemplate[] = [];\r\n    templates.forEach((template) => {\r\n      if (this.userConsentService.isConsentGiven(template.currentConsent)) {\r\n        if (this.isRequiredConsent(template)) {\r\n          return;\r\n        }\r\n        consentsToWithdraw.push(template);\r\n      }\r\n    });\r\n\r\n    this.allConsentsLoading.next(true);\r\n\r\n    this.subscriptions.add(\r\n      this.setupWithdrawalStream(consentsToWithdraw)\r\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private setupWithdrawalStream(\r\n    consentsToWithdraw: ConsentTemplate[] = []\r\n  ): Observable<number> {\r\n    const loading$ = concat(\r\n      this.userConsentService.getWithdrawConsentResultLoading()\r\n    ).pipe(\r\n      distinctUntilChanged(),\r\n      filter((loading) => !loading)\r\n    );\r\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\r\n    const withdraw$ = count$.pipe(\r\n      tap((i) => {\r\n        if (i < consentsToWithdraw.length) {\r\n          this.userConsentService.withdrawConsent(\r\n            consentsToWithdraw[i].currentConsent.code\r\n          );\r\n        }\r\n      })\r\n    );\r\n    const checkTimesLoaded$ = withdraw$.pipe(\r\n      filter((timesLoaded) => timesLoaded === consentsToWithdraw.length)\r\n    );\r\n\r\n    return checkTimesLoaded$;\r\n  }\r\n\r\n  allowAll(templates: ConsentTemplate[] = []): void {\r\n    const consentsToGive: ConsentTemplate[] = [];\r\n    templates.forEach((template) => {\r\n      if (this.userConsentService.isConsentWithdrawn(template.currentConsent)) {\r\n        if (this.isRequiredConsent(template)) {\r\n          return;\r\n        }\r\n\r\n        consentsToGive.push(template);\r\n      }\r\n    });\r\n\r\n    this.allConsentsLoading.next(true);\r\n\r\n    this.subscriptions.add(\r\n      this.setupGiveStream(consentsToGive)\r\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private setupGiveStream(\r\n    consentsToGive: ConsentTemplate[] = []\r\n  ): Observable<number> {\r\n    const loading$ = concat(\r\n      this.userConsentService.getGiveConsentResultLoading()\r\n    ).pipe(\r\n      distinctUntilChanged(),\r\n      filter((loading) => !loading)\r\n    );\r\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\r\n    const giveConsent$ = count$.pipe(\r\n      tap((i) => {\r\n        if (i < consentsToGive.length) {\r\n          this.userConsentService.giveConsent(\r\n            consentsToGive[i].id,\r\n            consentsToGive[i].version\r\n          );\r\n        }\r\n      })\r\n    );\r\n    const checkTimesLoaded$ = giveConsent$.pipe(\r\n      filter((timesLoaded) => timesLoaded === consentsToGive.length)\r\n    );\r\n\r\n    return checkTimesLoaded$;\r\n  }\r\n\r\n  private isRequiredConsent(template: ConsentTemplate): boolean {\r\n    return (\r\n      Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\r\n      Boolean(\r\n        this.anonymousConsentsConfig.anonymousConsents.requiredConsents\r\n      ) &&\r\n      this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\r\n        template.id\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.allConsentsLoading.unsubscribe();\r\n\r\n    this.userConsentService.resetGiveConsentProcessState();\r\n    this.userConsentService.resetWithdrawConsentProcessState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\r\nimport { ConsentManagementComponent } from './components/consent-management.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    IconModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ConsentManagementComponent: {\r\n          component: ConsentManagementComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\r\n  exports: [ConsentManagementComponent, ConsentManagementFormComponent],\r\n  entryComponents: [ConsentManagementComponent],\r\n})\r\nexport class ConsentManagementModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { ConsentManagementModule } from '../../../cms-components/myaccount/consent-management/consent-management.module';\r\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/index';\r\nimport { SpinnerModule } from '../spinner/spinner.module';\r\nimport { AnonymousConsentDialogComponent } from './anonymous-consent-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n    ConsentManagementModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [AnonymousConsentDialogComponent],\r\n  entryComponents: [AnonymousConsentDialogComponent],\r\n  exports: [AnonymousConsentDialogComponent],\r\n})\r\nexport class AnonymousConsentsDialogModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\n\r\nexport interface CardAction {\r\n  event: string;\r\n  name: string;\r\n}\r\n\r\nexport interface CardLinkAction {\r\n  link: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Card {\r\n  header?: string;\r\n  title?: string;\r\n  textBold?: string;\r\n  text?: Array<string>;\r\n  img?: string;\r\n  actions?: Array<CardAction | CardLinkAction>;\r\n  deleteMsg?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-card',\r\n  templateUrl: './card.component.html',\r\n})\r\nexport class CardComponent implements OnInit {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  @Output()\r\n  deleteCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  sendCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  editCard: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  cancelCard: EventEmitter<number> = new EventEmitter();\r\n\r\n  @Input()\r\n  border = false;\r\n\r\n  @Input()\r\n  editMode = false;\r\n\r\n  @Input()\r\n  isDefault = false;\r\n\r\n  @Input()\r\n  content: Card;\r\n  @Input()\r\n  fitToContainer = false;\r\n\r\n  // ACTIONS\r\n\r\n  setEditMode(): void {\r\n    this.editMode = true;\r\n  }\r\n\r\n  cancelEdit(): void {\r\n    this.editMode = false;\r\n    this.cancelCard.emit(5);\r\n  }\r\n\r\n  delete(): void {\r\n    this.deleteCard.emit(1);\r\n  }\r\n\r\n  setDefault(): void {\r\n    this.isDefault = true;\r\n    this.setDefaultCard.emit(2);\r\n  }\r\n\r\n  send(): void {\r\n    this.sendCard.emit(3);\r\n  }\r\n\r\n  edit(): void {\r\n    this.editCard.emit(4);\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { CardComponent } from './card.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, IconModule],\r\n  declarations: [CardComponent],\r\n  exports: [CardComponent],\r\n})\r\nexport class CardModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CarouselService {\r\n  constructor(private winRef: WindowRef) {}\r\n\r\n  /**\r\n   * The number of items per slide is calculated by the help of\r\n   * the item width and the available width of the host element.\r\n   * This appoach makes it possible to place the carousel in different\r\n   * layouts. Instead of using the page breakpoints, the host size is\r\n   * taken into account.\r\n   *\r\n   * Since there's no element resize API available, we use the\r\n   * window `resize` event, so that we can adjust the number of items\r\n   * whenever the window got resized.\r\n   */\r\n  getItemsPerSlide(\r\n    nativeElement: HTMLElement,\r\n    itemWidth: string\r\n  ): Observable<number> {\r\n    return this.winRef.resize$.pipe(\r\n      map(() => (nativeElement as HTMLElement).clientWidth),\r\n      map((totalWidth) => this.calculateItems(totalWidth, itemWidth))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Calculates the number of items per given hostSize.  calculated based on the given\r\n   * intended size in pixels or percentages. The\r\n   *\r\n   * @param availableWidth The available width in pixels for the carousel items.\r\n   * @param itemWidth The width per carousel item, in px or percentage.\r\n   */\r\n  private calculateItems(availableWidth: number, itemWidth: string) {\r\n    let calculatedItems = 0;\r\n    if (itemWidth.endsWith('px')) {\r\n      const num = itemWidth.substring(0, itemWidth.length - 2);\r\n      calculatedItems = availableWidth / <number>(<any>num);\r\n    }\r\n\r\n    if (itemWidth.endsWith('%')) {\r\n      const perc = itemWidth.substring(0, itemWidth.length - 1);\r\n      calculatedItems =\r\n        availableWidth / (availableWidth * (<number>(<any>perc) / 100));\r\n    }\r\n\r\n    return Math.floor(calculatedItems) || 1;\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  isDevMode,\r\n  OnInit,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\nimport { CarouselService } from './carousel.service';\r\n\r\n/**\r\n * Generic carousel component that can be used to render any carousel items,\r\n * such as products, images, banners, or any component. Carousel items are\r\n * rendered in so-called carousel slides, and the previous/next buttons as well as\r\n * the indicator-buttons can used to navigate the slides.\r\n *\r\n * The component uses an array of Observables (`items$`) as an input, to allow\r\n * for lazy loading of items.\r\n *\r\n * The number of items per slide is calculated with the `itemWidth`, which can given\r\n * in pixels or percentage.\r\n *\r\n * To allow for flexible rendering of items, the rendering is delegated to the\r\n * given `template`. This allows for maximum flexibility.\r\n */\r\n@Component({\r\n  selector: 'cx-carousel',\r\n  templateUrl: './carousel.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CarouselComponent implements OnInit {\r\n  /**\r\n   * The title is rendered as the carousel heading.\r\n   */\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * The items$ represent the carousel items. The items$ are\r\n   * observables so that the items can be loaded on demand.\r\n   */\r\n  items: Observable<any>[];\r\n  @Input('items')\r\n  set setItems(inputItems: Observable<any>[]) {\r\n    this.items = inputItems;\r\n    //Reset slider when changing products\r\n    this.activeSlide = 0;\r\n  }\r\n\r\n  /**\r\n   * The template is rendered for each item, so that the actual\r\n   * view can be given by the compoent that uses the `CarouselComponent`.\r\n   */\r\n  @Input() template: TemplateRef<any>;\r\n\r\n  /**\r\n   * Specifies the minimum size of the carousel item, either in px or %.\r\n   * This value is used for the calculation of numbers per carousel, so that\r\n   * the number of carousel items is dynamic. The calculation uses the `itemWidth`\r\n   * and the host element `clientWidth`, so that the carousel is reusable in\r\n   * different layouts (for example in a 50% grid).\r\n   */\r\n  @Input() itemWidth = '300px';\r\n\r\n  /**\r\n   * Indicates whether the visual indicators are used.\r\n   */\r\n  @Input() hideIndicators = false;\r\n\r\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\r\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\r\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\r\n\r\n  activeSlide: number;\r\n  size$: Observable<number>;\r\n\r\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\r\n\r\n  ngOnInit() {\r\n    if (!this.template && isDevMode()) {\r\n      console.error(\r\n        'No template reference provided to render the carousel items for the `cx-carousel`'\r\n      );\r\n      return;\r\n    }\r\n    this.size$ = this.service\r\n      .getItemsPerSlide(this.el.nativeElement, this.itemWidth)\r\n      .pipe(tap(() => (this.activeSlide = 0)));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { BREAKPOINT, LayoutConfig } from '../config/layout-config';\r\n\r\nconst DEFAULT_BREAKPOINTS = {\r\n  [BREAKPOINT.xs]: 576,\r\n  [BREAKPOINT.sm]: 768,\r\n  [BREAKPOINT.md]: 992,\r\n  [BREAKPOINT.lg]: 1200,\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BreakpointService {\r\n  constructor(private winRef: WindowRef, private config: LayoutConfig) {}\r\n\r\n  get breakpoint$(): Observable<BREAKPOINT> {\r\n    if (!this.window) {\r\n      return of(BREAKPOINT.xs);\r\n    }\r\n    return this.winRef.resize$.pipe(\r\n      map((event) => this.getBreakpoint((<Window>event.target).innerWidth)),\r\n      distinctUntilChanged()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the _maximum_ size for the breakpint, given by the `LayoutConfig.breakpoints`\r\n   * configuration. If no configuration is available for the given breakpoint, the\r\n   * method will return the default values:\r\n   * - xs: 567\r\n   * - sm: 768\r\n   * - md: 992\r\n   * - lg: 1200\r\n   */\r\n  getSize(breakpoint: BREAKPOINT): number {\r\n    return this.config.breakpoints?.hasOwnProperty(breakpoint)\r\n      ? this.config.breakpoints[breakpoint]\r\n      : DEFAULT_BREAKPOINTS[breakpoint];\r\n  }\r\n\r\n  /**\r\n   * Returns all available breakpoints for the system.\r\n   */\r\n  get breakpoints(): BREAKPOINT[] {\r\n    return [\r\n      BREAKPOINT.xs,\r\n      BREAKPOINT.sm,\r\n      BREAKPOINT.md,\r\n      BREAKPOINT.lg,\r\n      BREAKPOINT.xl,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the current screen size is smaller than the maximum size of the\r\n   * given breakpoint.\r\n   *\r\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\r\n   * window innerWidth is smaller than the configured size of `BREAKPOINT.md`.\r\n   */\r\n  isDown(breakpoint: BREAKPOINT): Observable<boolean> {\r\n    return this.breakpoint$.pipe(\r\n      map((br) =>\r\n        this.breakpoints\r\n          .slice(0, this.breakpoints.indexOf(breakpoint) + 1)\r\n          .includes(br)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the current screen size is larger than the minimum size of the\r\n   * given breakpoint.\r\n   *\r\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\r\n   * window innerWidth is larger than the configured size of `BREAKPOINT.sm`.\r\n   */\r\n  isUp(breakpoint: BREAKPOINT): Observable<boolean> {\r\n    return this.breakpoint$.pipe(\r\n      map((br) =>\r\n        this.breakpoints\r\n          .slice(this.breakpoints.indexOf(breakpoint))\r\n          .includes(br)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the current screen size fits to the given breakpoint\r\n   */\r\n  isEqual(breakpoint: BREAKPOINT): Observable<boolean> {\r\n    return this.breakpoint$.pipe(map((br) => br === breakpoint));\r\n  }\r\n\r\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\r\n    const breakpoint = this.getClosest(windowWidth);\r\n    return BREAKPOINT[breakpoint || BREAKPOINT.lg];\r\n  }\r\n\r\n  protected getClosest(windowWidth?: number): BREAKPOINT {\r\n    if (!windowWidth) {\r\n      windowWidth = this.window.innerWidth;\r\n    }\r\n\r\n    return windowWidth > this.getSize(BREAKPOINT.lg)\r\n      ? BREAKPOINT.xl\r\n      : this.breakpoints.find((br) => windowWidth <= this.getSize(br));\r\n  }\r\n\r\n  get window(): Window {\r\n    return this.winRef.nativeWindow;\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Config, Image, OccConfig } from '@spartacus/core';\r\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\r\nimport { StorefrontConfig } from '../../../storefront-config';\r\nimport { MediaConfig } from './media.config';\r\nimport { Media, MediaContainer, MediaFormatSize } from './media.model';\r\n\r\n/**\r\n * Service which generates media URLs. It leverage the MediaContainer and MediaFormats so\r\n * that URLs and sizes are generated for the same media. This helps to improve performance\r\n * across difference devices and layouts.\r\n *\r\n * Media formats are optional, but highly recommended. The format will help the browser to\r\n * identify the right media for the right experience.\r\n *\r\n * The MediaService will generate absolute URLs in case relative URLs are provided for the Media.\r\n * The baseUrl is read from the `occConfig.backend.media.baseUrl` or\r\n * `occConfig.backend.occ.baseUrl`.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MediaService {\r\n  /**\r\n   * The media formats sorted by size. The media format representing the smallest\r\n   * size is sorted on top.\r\n   */\r\n  private _sortedFormats: { code: string; size: MediaFormatSize }[];\r\n  private _reversedFormats: { code: string; size: MediaFormatSize }[];\r\n\r\n  constructor(\r\n    @Inject(Config) protected config: StorefrontConfig,\r\n    /**\r\n     * The BreakpointService is no longer used in version 2.0 as the different size formats are\r\n     * driven by configuration only. There's however a change that this service will play a role\r\n     * in the near future, which is why we keep the constructor as-is.\r\n     */\r\n    protected breakpointService: BreakpointService\r\n  ) {}\r\n\r\n  /**\r\n   * Returns a `Media` object with the main media (`src`) and various media (`src`)\r\n   * for specific formats.\r\n   */\r\n  getMedia(\r\n    mediaContainer: MediaContainer | Image,\r\n    format?: string,\r\n    alt?: string\r\n  ): Media {\r\n    if (!mediaContainer) {\r\n      return;\r\n    }\r\n\r\n    const mainMedia: Image = mediaContainer.url\r\n      ? mediaContainer\r\n      : this.resolveMedia(mediaContainer as MediaContainer, format);\r\n\r\n    return {\r\n      src: this.resolveAbsoluteUrl(mainMedia?.url),\r\n      alt: alt || mainMedia?.altText,\r\n      srcset: this.resolveSrcSet(mediaContainer),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates the media formats in a logical sorted order. The map contains the\r\n   * format key and the format size information. We do this only once for performance\r\n   * benefits.\r\n   */\r\n  protected get sortedFormats(): { code: string; size: MediaFormatSize }[] {\r\n    if (!this._sortedFormats) {\r\n      this._sortedFormats = Object.keys(\r\n        (this.config as MediaConfig).mediaFormats\r\n      )\r\n        .map((key) => ({\r\n          code: key,\r\n          size: (this.config as MediaConfig).mediaFormats[key],\r\n        }))\r\n        .sort((a, b) => (a.size.width > b.size.width ? 1 : -1));\r\n    }\r\n    return this._sortedFormats;\r\n  }\r\n\r\n  /**\r\n   * Creates the media formats in a reversed sorted order.\r\n   */\r\n  protected get reversedFormats(): { code: string; size: MediaFormatSize }[] {\r\n    if (!this._reversedFormats) {\r\n      this._reversedFormats = this.sortedFormats.slice().reverse();\r\n    }\r\n    return this._reversedFormats;\r\n  }\r\n\r\n  /**\r\n   * Resolves the right media for the given format. The fo\r\n   */\r\n  protected resolveMedia(media: MediaContainer, format?: string): Image {\r\n    return media[this.resolveFormat(media, format)];\r\n  }\r\n\r\n  /**\r\n   * Validates the format against the given mediaContainer. If there is no format available,\r\n   * or if the mediaContainer doesn't contain a media for the given media, the most optimal\r\n   * format is resolved. If even that is not possible, the first format is returned.\r\n   */\r\n  protected resolveFormat(\r\n    mediaContainer: MediaContainer,\r\n    format?: string\r\n  ): string {\r\n    if (format && mediaContainer[format]) {\r\n      return format;\r\n    }\r\n    return (\r\n      this.resolveBestFormat(mediaContainer) || Object.keys(mediaContainer)[0]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the media format code with the best size.\r\n   */\r\n  protected resolveBestFormat(media: MediaContainer | Image): string {\r\n    return this.reversedFormats.find((format) =>\r\n      media.hasOwnProperty(format.code)\r\n    )?.code;\r\n  }\r\n\r\n  /**\r\n   * Returns a set of media for the available media formats. Additionally, the congiured media\r\n   * format width is added to the srcset, so that browsers can select the appropriate media.\r\n   */\r\n  protected resolveSrcSet(media: MediaContainer | Image): string {\r\n    if (!media) {\r\n      return undefined;\r\n    }\r\n\r\n    const srcset = this.sortedFormats.reduce((set, format) => {\r\n      if (!!media[format.code]) {\r\n        if (set) {\r\n          set += ', ';\r\n        }\r\n        set += `${this.resolveAbsoluteUrl(media[format.code].url)} ${\r\n          format.size.width\r\n        }w`;\r\n      }\r\n      return set;\r\n    }, '');\r\n\r\n    return srcset === '' ? undefined : srcset;\r\n  }\r\n\r\n  /**\r\n   * Resolves the absolute URL for the given url. In most cases, this URL represents\r\n   * the relative URL on the backend. In that case, we prefix the url with the baseUrl.\r\n   */\r\n  protected resolveAbsoluteUrl(url: string): string {\r\n    if (!url) {\r\n      return null;\r\n    }\r\n    return url.startsWith('http') ? url : this.getBaseUrl() + url;\r\n  }\r\n\r\n  /**\r\n   * The base URL is either driven by a specific `backend.media.baseUrl`, or by the\r\n   * `backend.occ.baseUrl`.\r\n   *\r\n   * The `backend.media.baseUrl` can be used to load media from a different location.\r\n   *\r\n   * In Commerce Cloud, a differnt location could mean a different \"aspect\".\r\n   */\r\n  protected getBaseUrl(): string {\r\n    return (\r\n      (this.config as OccConfig).backend.media.baseUrl ||\r\n      (this.config as OccConfig).backend.occ.baseUrl ||\r\n      ''\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n} from '@angular/core';\r\nimport { Media, MediaContainer } from './media.model';\r\nimport { MediaService } from './media.service';\r\n\r\n@Component({\r\n  selector: 'cx-media',\r\n  templateUrl: './media.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MediaComponent implements OnChanges {\r\n  /**\r\n   * The media container can hold multiple media items, so that\r\n   * a specific media (by format) can be used or multiple media\r\n   * can be provided in a `srcset` so the browser will figure out\r\n   * the best media for the device.\r\n   */\r\n  @Input() container: MediaContainer;\r\n\r\n  /**\r\n   * if a media format is given, a media for the given format will be rendered\r\n   */\r\n  @Input() format: string;\r\n\r\n  /**\r\n   * A specific alt text for an image, which overrules the alt text\r\n   * from the container data.\r\n   */\r\n  @Input() alt: string;\r\n\r\n  /**\r\n   * Once the media is loaded, we emit an event.\r\n   */\r\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\r\n\r\n  /**\r\n   * The media contains the info for the UI to create the image. This media\r\n   * object might contain more info once other media types (i.e. video) is supported.\r\n   */\r\n  media: Media;\r\n\r\n  /**\r\n   * The `cx-media` component has an `is-initialized` class as long as the\r\n   * media is being initialized.\r\n   */\r\n  @HostBinding('class.is-initialized') isInitialized = false;\r\n\r\n  /**\r\n   * The `cx-media` component has a `is-loading` class as long as the\r\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\r\n   * is added.\r\n   */\r\n  @HostBinding('class.is-loading') isLoading = true;\r\n\r\n  /**\r\n   * When there's no media provided for the content, or in case an error\r\n   * happened during loading, we add the `is-missing` class. Visual effects\r\n   * can be controlled by CSS.\r\n   */\r\n  @HostBinding('class.is-missing') isMissing = false;\r\n\r\n  constructor(protected mediaService: MediaService) {}\r\n\r\n  ngOnChanges(): void {\r\n    this.create();\r\n  }\r\n\r\n  /**\r\n   * Creates the `Media` object\r\n   */\r\n  protected create(): void {\r\n    this.media = this.mediaService.getMedia(\r\n      this.container,\r\n      this.format,\r\n      this.alt\r\n    );\r\n    if (!this.media?.src) {\r\n      this.handleMissing();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This handler is called from the UI when the image is loaded.\r\n   */\r\n  loadHandler(): void {\r\n    this.isLoading = false;\r\n    this.isInitialized = true;\r\n    this.isMissing = false;\r\n    this.loaded.emit(true);\r\n  }\r\n\r\n  /**\r\n   * Whenever an error happens during load, we mark the component\r\n   * with css classes to have a missing media.\r\n   */\r\n  errorHandler(): void {\r\n    this.handleMissing();\r\n  }\r\n\r\n  protected handleMissing() {\r\n    this.isLoading = false;\r\n    this.isInitialized = true;\r\n    this.isMissing = true;\r\n    this.loaded.emit(false);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { MediaComponent } from './media.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [MediaComponent],\r\n  exports: [MediaComponent],\r\n})\r\nexport class MediaModule {\r\n  static forRoot(): ModuleWithProviders<MediaModule> {\r\n    return {\r\n      ngModule: MediaModule,\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, IconModule, MediaModule, UrlModule],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  HostBinding,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\n/**\r\n * This component renders form errors.\r\n */\r\n@Component({\r\n  selector: 'cx-form-errors',\r\n  templateUrl: './form-errors.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FormErrorsComponent {\r\n  _control: FormControl;\r\n  errors$: Observable<string[]>;\r\n\r\n  @Input()\r\n  set control(control: FormControl) {\r\n    this._control = control;\r\n\r\n    this.errors$ = control?.statusChanges.pipe(\r\n      startWith({}),\r\n      map(() => control.errors || {}),\r\n      map((errors) =>\r\n        Object.entries(errors)\r\n          .filter((error) => error[1])\r\n          .map((error) => error[0])\r\n      )\r\n    );\r\n  }\r\n\r\n  get control(): FormControl {\r\n    return this._control;\r\n  }\r\n\r\n  @HostBinding('class.control-invalid') get invalid() {\r\n    return this.control.invalid;\r\n  }\r\n  @HostBinding('class.control-dirty') get dirty() {\r\n    return this.control.dirty;\r\n  }\r\n  @HostBinding('class.control-touched') get touched() {\r\n    return this.control.touched;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormErrorsComponent } from './form-errors.component';\r\nimport { I18nModule } from '@spartacus/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule],\r\n  declarations: [FormErrorsComponent],\r\n  exports: [FormErrorsComponent],\r\n})\r\nexport class FormErrorsModule {}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Params, Router } from '@angular/router';\r\n\r\n// private\r\ninterface RouteParts {\r\n  /** Path in the Angular-like array format */\r\n  path?: string[];\r\n\r\n  /** Query params */\r\n  queryParams?: Params;\r\n\r\n  /** Hash fragment */\r\n  fragment?: string;\r\n}\r\n\r\n/**\r\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\r\n */\r\n@Component({\r\n  selector: 'cx-generic-link',\r\n  templateUrl: './generic-link.component.html',\r\n})\r\nexport class GenericLinkComponent implements OnChanges {\r\n  constructor(protected router: Router) {}\r\n\r\n  /**\r\n   * Pattern matching string starting with `http://` or `https://`.\r\n   */\r\n  private readonly PROTOCOL_REGEX: RegExp = /^https?:\\/\\//i;\r\n\r\n  /**\r\n   * Used to split url into 2 parts:\r\n   * 1. the path\r\n   * 2. query params + hash fragment\r\n   */\r\n  private readonly URL_SPLIT = /(^[^#?]*)(.*)/;\r\n\r\n  /**\r\n   * Parsed parts of the @Input `url`, when it's a local URL.\r\n   * It should not be used when the `url` is external.\r\n   * @see `url`\r\n   */\r\n  private routeParts: RouteParts = {};\r\n\r\n  @Input() url: string | any[];\r\n  @Input() target: string;\r\n  @Input() class: string;\r\n  @Input() id: string;\r\n  @Input() style: string;\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * Returns true when the @Input `url` is a string starting with `http://` or `https://`.\r\n   */\r\n  isExternalUrl(): boolean {\r\n    return typeof this.url === 'string' && this.PROTOCOL_REGEX.test(this.url);\r\n  }\r\n\r\n  get rel() {\r\n    return this.target === '_blank' ? 'noopener' : null;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['url']) {\r\n      this.setUrlParts(changes['url'].currentValue);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The part with the path of the local url.\r\n   */\r\n  get routerUrl(): any[] {\r\n    return this.routeParts.path;\r\n  }\r\n\r\n  /**\r\n   * The part with the query params of the local url.\r\n   */\r\n  get queryParams(): Params {\r\n    return this.routeParts.queryParams;\r\n  }\r\n\r\n  /**\r\n   * The part with the hash fragment of the local url.\r\n   */\r\n  get fragment(): string {\r\n    return this.routeParts.fragment;\r\n  }\r\n\r\n  /**\r\n   * Parses the given url and sets the property `urlParts` accordingly.\r\n   */\r\n  private setUrlParts(url: string | any[]) {\r\n    if (typeof url === 'string') {\r\n      url = this.getAbsoluteUrl(url); // string links in CMS sometimes don't have the leading slash, so fix it here\r\n      this.routeParts = this.splitUrl(url as string);\r\n    } else {\r\n      this.routeParts = { path: url };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses the given string into 3 parts:\r\n   * - string path (wrapped in an array to be compatible with Angular syntax for the `routerLink`)\r\n   * - query params (as an object)\r\n   * - hash fragment (string)\r\n   */\r\n  private splitUrl(url: string = ''): RouteParts {\r\n    const { queryParams, fragment } = this.router.parseUrl(url);\r\n    const [, path] = url.match(this.URL_SPLIT);\r\n\r\n    // wrap path in an array, to have the Angular-like path format\r\n    return { path: [path], queryParams, fragment };\r\n  }\r\n\r\n  /**\r\n   * Prepends a leading slash to the given URL string, in case it doesn't have it.\r\n   */\r\n  private getAbsoluteUrl(url: string): string {\r\n    return url.startsWith('/') ? url : '/' + url;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { startWith } from 'rxjs/operators';\r\n\r\n/**\r\n * Provides a UI to manage the count of the quantity, typically by using\r\n * increase and decrease functionality. The item counter expects an input `FormControl`\r\n * so that the state of the control can be managed outside of this component.\r\n */\r\n@Component({\r\n  selector: 'cx-item-counter',\r\n  templateUrl: './item-counter.component.html',\r\n  // do not use OnPush change detection strategy as we would not\r\n  // get updates of other form control state (disabled). We want to have a\r\n  // disabled state in order to ensure that the control cannot be used while\r\n  // the cart is updated.\r\n})\r\nexport class ItemCounterComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Holds the value of the counter, the state of the `FormControl`\r\n   * can be managed outside of the item counter.\r\n   */\r\n  @Input() control: FormControl;\r\n\r\n  /**\r\n   * This can be used in case an item has a minmum order quantity.\r\n   * @default 1\r\n   */\r\n  @Input() min = 1;\r\n\r\n  /**\r\n   * This can be used in case an item has a maximum order quantity.\r\n   */\r\n  @Input() max: number;\r\n\r\n  /**\r\n   * The step is used to increment the count. It is supposed to be a\r\n   * positive integer or float.\r\n   * @default 1\r\n   */\r\n  @Input() step = 1;\r\n\r\n  /**\r\n   * Indicates that the input can be manually set to zero,\r\n   * despite the fact that the input controls will be limited to\r\n   * the minimum. The zero value can be used to remove an item.\r\n   */\r\n  @Input() allowZero = false;\r\n\r\n  /**\r\n   * In readonly mode the item counter will only be shown as a label,\r\n   * the form controls are not rendered.\r\n   * Please not that readonly is different from the `disabled` form state.\r\n   * @default false\r\n   */\r\n  @HostBinding('class.readonly') @Input() readonly = false;\r\n\r\n  @ViewChild('qty') private input: ElementRef<HTMLInputElement>;\r\n\r\n  /**\r\n   * Subscription responsible for auto-correcting control's value when it's invalid.\r\n   */\r\n  private sub: Subscription;\r\n\r\n  @HostListener('click') handleClick() {\r\n    this.input.nativeElement.focus();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.control.valueChanges\r\n      .pipe(startWith(this.control.value))\r\n      .subscribe((value) =>\r\n        this.control.setValue(this.getValidCount(value), { emitEvent: false })\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  increment() {\r\n    // it's too early to use the `stepUp` and `stepDown` API...\r\n    // let's wait for FF: https://caniuse.com/#search=stepUp\r\n    this.control.setValue(this.control.value + this.step);\r\n    this.control.markAsDirty();\r\n  }\r\n\r\n  decrement() {\r\n    this.control.setValue(this.control.value - this.step);\r\n    this.control.markAsDirty();\r\n  }\r\n\r\n  /**\r\n   * Validate that the given value is in between\r\n   * the `min` and `max` value. If the value is out\r\n   * of  the min/max range, it will be altered.\r\n   * If `allowZero` is set to true, the 0 value is ignored.\r\n   *\r\n   */\r\n  private getValidCount(value: number) {\r\n    if (value < this.min && !(value === 0 && this.allowZero)) {\r\n      value = this.min;\r\n    }\r\n    if (this.max && value > this.max) {\r\n      value = this.max;\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ItemCounterComponent } from './item-counter.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  declarations: [ItemCounterComponent],\r\n  exports: [ItemCounterComponent],\r\n})\r\nexport class ItemCounterModule {}\r\n","import { PaginationConfig } from './pagination.config';\r\n\r\nexport const defaultPaginationConfig: PaginationConfig = {\r\n  pagination: {\r\n    addStart: true,\r\n    addEnd: true,\r\n  },\r\n};\r\n","import { PaginationOptions } from '../pagination.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class PaginationConfig {\r\n  pagination?: PaginationOptions;\r\n}\r\n","/**\r\n * Represents a page item for a pagination system. This is used\r\n * to store the model of each page.\r\n */\r\nexport interface PaginationItem {\r\n  label?: string;\r\n  type?: PaginationItemType;\r\n  /** The number is used when the type is {@link PaginationItemType.PAGE} */\r\n  number?: number;\r\n}\r\n\r\n/**\r\n * The item type is used to add semantic structure to the\r\n * PaginationItem, so that the UI understands the usage.\r\n */\r\nexport enum PaginationItemType {\r\n  GAP = 'gap',\r\n  FIRST = 'first',\r\n  LAST = 'last',\r\n  PREVIOUS = 'previous',\r\n  NEXT = 'next',\r\n  START = 'start',\r\n  END = 'end',\r\n  PAGE = 'page',\r\n}\r\n\r\nexport interface PaginationOptions {\r\n  /**\r\n   * The range of direct accessible pages in the pagination.\r\n   *\r\n   * `« 4 (5) 6 »`\r\n   *\r\n   * Defaults to 3.\r\n   */\r\n  rangeCount?: number;\r\n\r\n  /** Adds a link to skip to the start of the pages, defaults to false. */\r\n  addStart?: boolean;\r\n  /** A link to skip to the end of the pages, defaults to false. */\r\n  addEnd?: boolean;\r\n  /** A link to the previous page, defaults to false. */\r\n  addPrevious?: boolean;\r\n  /** A link to the previous page, defaults to false. */\r\n  addNext?: boolean;\r\n\r\n  navigationPosition?: PaginationNavigationPosition;\r\n\r\n  /** A link to the first page can be added in case it is not included already, defaults to false. */\r\n  addFirst?: boolean;\r\n  /** A link to the last page can be added in case it is not included already, defaults to false. */\r\n  addLast?: boolean;\r\n\r\n  /**\r\n   * Adds a gap before and after the pages. to visualize hidden pages. Defaults to false.\r\n   *\r\n   * `1 ...  4 (5) 6 ... 18`\r\n   *\r\n   * Defaults to false.\r\n   */\r\n  addDots?: boolean;\r\n\r\n  /**\r\n   * If the page dots only represents a single page, we rather add the page\r\n   * as this would take the same amount of space. Some UX might want to use\r\n   * the dots for consistency reasons, which why this option is configurable.\r\n   *\r\n   * This typically happens on the 4th page (in case the range is 3):\r\n   * Instead of having:\r\n   *\r\n   *  `1 ...  3 (4) 5`\r\n   *\r\n   * we'd have\r\n   *\r\n   * `1 2 3 (4) 5`.\r\n   *\r\n   * Defaults to false.\r\n   */\r\n  substituteDotsForSingularPage?: boolean;\r\n\r\n  /** Custom label for the start link, defaults to `«`. */\r\n  startLabel?: string;\r\n  /** Custom label for the previous link, defaults to `‹`. */\r\n  previousLabel?: string;\r\n  /** Custom label for the next link, defaults to `›`. */\r\n  nextLabel?: string;\r\n  /** Custom label for the end link, defaults to `»`. */\r\n  endLabel?: string;\r\n  /** Custom label for the dots, defaults to `...`. */\r\n  dotsLabel?: string;\r\n}\r\n\r\nexport enum PaginationNavigationPosition {\r\n  ASIDE = 'aside',\r\n  BEFORE = 'before',\r\n  AFTER = 'after',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PaginationConfig } from './config/pagination.config';\r\nimport {\r\n  PaginationItem,\r\n  PaginationItemType,\r\n  PaginationNavigationPosition,\r\n  PaginationOptions,\r\n} from './pagination.model';\r\n\r\nconst FALLBACK_PAGINATION_OPTIONS: PaginationOptions = {\r\n  rangeCount: 3,\r\n  dotsLabel: '...',\r\n  startLabel: '«',\r\n  previousLabel: '‹',\r\n  nextLabel: '›',\r\n  endLabel: '»',\r\n};\r\n\r\n/**\r\n * Builds a pagination structures based on a pageCount and current page number.\r\n * There are various {@link PaginationConfig} options which can be used to configure\r\n * the behaviour of the build. Alternatively, CSS can be used to further customise\r\n * the pagination.\r\n *\r\n * Examples:\r\n * The full blown pagination items contain the follow elements:\r\n *\r\n * `« ‹ 1 ... 4 (5) 6 ... 9 › »`\r\n *\r\n * This includes pagination items to the following pages:\r\n * - start page\r\n * - previous page\r\n * - first page\r\n * - page range\r\n * - last page\r\n * - next page\r\n * - end page\r\n *\r\n * All of those links are configurable, including the size of the page range.\r\n * The current page will always be centered in the page range to provide direct access\r\n * to the previous and next page.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PaginationBuilder {\r\n  constructor(protected paginationConfig: PaginationConfig) {}\r\n\r\n  /**\r\n   * Builds a list of `PaginationItem`. The give pageCount and current are used\r\n   * to build out the full pagination. There are various {@link PaginationConfig} options\r\n   * which can be used to configure the behaviour of the build. Alternatively, CSS\r\n   * can be used to further specialize visibility of the pagination.\r\n   *\r\n   * @param pageCount The total number of pages\r\n   * @param current The current page number, 0-index based\r\n   * @returns An array of `PaginationItem`\r\n   */\r\n  paginate(pageCount: number, current: number): PaginationItem[] {\r\n    const pages: PaginationItem[] = [];\r\n    if (pageCount < 2) {\r\n      return pages;\r\n    }\r\n    this.addPages(pages, pageCount, current);\r\n    this.addDots(pages, pageCount);\r\n    this.addFirstLast(pages, pageCount);\r\n    this.addNavigation(pages, pageCount, current);\r\n\r\n    return pages;\r\n  }\r\n\r\n  /**\r\n   * Returns the current page with surrounding pages (based on the `config.rangeCount`).\r\n   * The current page is always centered to provide direct access to the previous and next page.\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   * @param current The current page number, 0-index based\r\n   */\r\n  protected addPages(\r\n    pages: PaginationItem[],\r\n    pageCount: number,\r\n    current: number\r\n  ): void {\r\n    const start = this.getStartOfRange(pageCount, current);\r\n    const max = Math.min(this.config.rangeCount, pageCount);\r\n\r\n    Array.from(Array(max)).forEach((_, i) => {\r\n      pages.push({\r\n        number: i + start,\r\n        label: String(i + start + 1),\r\n        type: PaginationItemType.PAGE,\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds dots before and after the given pages, if configured (defaults to true).\r\n   * If the dots only represent a single page, the page number is added instead of\r\n   * the dots, unless the configuration requires dots always.\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   */\r\n  protected addDots(pages: PaginationItem[], pageCount: number): void {\r\n    if (!this.config.addDots) {\r\n      return;\r\n    }\r\n\r\n    const addFirstGap = () => {\r\n      const firstItemNumber = pages[0].number;\r\n      const gapNumber = this.config.addFirst ? 1 : 0;\r\n      if (firstItemNumber > gapNumber) {\r\n        const isGap =\r\n          !this.config.substituteDotsForSingularPage ||\r\n          firstItemNumber !== gapNumber + 1;\r\n        const isSubstitued =\r\n          this.config.addFirst &&\r\n          this.config.substituteDotsForSingularPage &&\r\n          gapNumber === 0;\r\n        const type = isGap\r\n          ? PaginationItemType.GAP\r\n          : isSubstitued\r\n          ? PaginationItemType.FIRST\r\n          : PaginationItemType.PAGE;\r\n        return [\r\n          Object.assign(\r\n            {\r\n              label: isGap ? this.config.dotsLabel : String(gapNumber + 1),\r\n              type,\r\n            },\r\n            isGap ? null : { number: gapNumber }\r\n          ),\r\n        ];\r\n      } else return [];\r\n    };\r\n\r\n    const addLastGap = () => {\r\n      const nextPageNumber = pages[pages.length - 1].number + 1;\r\n      const last = pageCount - (this.config.addLast ? 2 : 1);\r\n      if (nextPageNumber <= last) {\r\n        const isSubstitued =\r\n          this.config.addLast &&\r\n          this.config.substituteDotsForSingularPage &&\r\n          nextPageNumber === last;\r\n        const isGap =\r\n          nextPageNumber <\r\n          pageCount -\r\n            (this.config.substituteDotsForSingularPage ? 1 : 0) -\r\n            (this.config.addLast ? 1 : 0);\r\n\r\n        const type = isGap\r\n          ? PaginationItemType.GAP\r\n          : isSubstitued\r\n          ? PaginationItemType.LAST\r\n          : PaginationItemType.PAGE;\r\n        return [\r\n          Object.assign(\r\n            {\r\n              label: isGap ? this.config.dotsLabel : String(nextPageNumber + 1),\r\n              type,\r\n            },\r\n            isGap ? null : { number: nextPageNumber }\r\n          ),\r\n        ];\r\n      } else return [];\r\n    };\r\n\r\n    pages.unshift(...addFirstGap());\r\n    pages.push(...addLastGap());\r\n  }\r\n\r\n  /**\r\n   * Add links to the first and last page, if configured to do so.\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   *\r\n   */\r\n  protected addFirstLast(pages: PaginationItem[], pageCount: number) {\r\n    if (this.config.addFirst && pages[0].number !== 0) {\r\n      pages.unshift({\r\n        number: 0,\r\n        label: '1',\r\n        type: PaginationItemType.FIRST,\r\n      });\r\n    }\r\n    if (\r\n      this.config.addLast &&\r\n      pages[pages.length - 1].number !== pageCount - 1\r\n    ) {\r\n      pages.push({\r\n        number: pageCount - 1,\r\n        label: String(pageCount),\r\n        type: PaginationItemType.LAST,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add links to the start, previous, next and last page, if configured to do so.\r\n   * The order of the links can be configured by using the {@link PaginationConfig},\r\n   * using the `PaginationNavigationPosition` (`BEFORE` or `AFTER`).\r\n   * The `PaginationNavigationPosition` allows for 3 flavours:\r\n   *\r\n   * - by default the pagination starts with start and previous and ends with the next and end links\r\n   * - BEFORE – all navigation links are added in the front of the pagination list\r\n   * - AFTER – all navigation links are pushed to the end of the pagination list\r\n   *\r\n   * @param pages The list of page items that is used to amend\r\n   * @param pageCount The total number of pages\r\n   * @param current The current page number, 0-index based\r\n   *\r\n   */\r\n  protected addNavigation(\r\n    pages: PaginationItem[],\r\n    pageCount: number,\r\n    current: number\r\n  ): void {\r\n    const before = this.getBeforeLinks(current);\r\n    const after = this.getAfter(pageCount, current);\r\n    const pos = this.config.navigationPosition;\r\n    if (!pos || pos === PaginationNavigationPosition.ASIDE) {\r\n      pages.unshift(...before);\r\n      pages.push(...after);\r\n    } else {\r\n      if (pos === PaginationNavigationPosition.BEFORE) {\r\n        pages.unshift(...before, ...after);\r\n      }\r\n      if (pos === PaginationNavigationPosition.AFTER) {\r\n        pages.push(...before, ...after);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the start and previous links, if applicable.\r\n   */\r\n  private getBeforeLinks(current: number): PaginationItem[] {\r\n    const list = [];\r\n\r\n    if (this.config.addStart) {\r\n      const start = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.startLabel,\r\n            type: PaginationItemType.START,\r\n          },\r\n          current > 0 ? { number: 0 } : null\r\n        );\r\n      };\r\n      list.push(start());\r\n    }\r\n    if (this.config.addPrevious) {\r\n      const previous = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.previousLabel,\r\n            type: PaginationItemType.PREVIOUS,\r\n          },\r\n          current > 0 ? { number: current - 1 } : null\r\n        );\r\n      };\r\n      list.push(previous());\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * Returns the next and end links, if applicable.\r\n   */\r\n  private getAfter(pageCount: number, current: number): PaginationItem[] {\r\n    const list = [];\r\n\r\n    if (this.config.addNext) {\r\n      const next = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.nextLabel,\r\n            type: PaginationItemType.NEXT,\r\n          },\r\n          current < pageCount - 1 ? { number: current + 1 } : null\r\n        );\r\n      };\r\n      list.push(next());\r\n    }\r\n    if (this.config.addEnd) {\r\n      const end = () => {\r\n        return Object.assign(\r\n          {\r\n            label: this.config.endLabel,\r\n            type: PaginationItemType.END,\r\n          },\r\n          current < pageCount - 1 ? { number: pageCount - 1 } : null\r\n        );\r\n      };\r\n      list.push(end());\r\n    }\r\n\r\n    return list;\r\n  }\r\n  /**\r\n   * Resolves the first page of the range we need to build.\r\n   * This is the page that is leading up to the range of the\r\n   * current page.\r\n   *\r\n   * @param pageCount The total number of pages.\r\n   * @param current The current page number, 0-index based.\r\n   */\r\n  private getStartOfRange(pageCount: number, current: number): number {\r\n    const count = this.config.rangeCount - 1;\r\n    // the least number of pages before and after the current\r\n    const delta = Math.round(count / 2);\r\n\r\n    // ensure that we start with at least the first page\r\n    const minStart = Math.max(0, current - delta);\r\n    // ensures that we start with at least 1 and do not pass the last range\r\n    const maxStart = Math.max(0, pageCount - count - 1);\r\n\r\n    // ensure that we get at least a full range at the end\r\n    return Math.min(maxStart, minStart);\r\n  }\r\n\r\n  private get config(): PaginationOptions {\r\n    return Object.assign(\r\n      FALLBACK_PAGINATION_OPTIONS,\r\n      this.paginationConfig.pagination\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { PaginationModel } from '@spartacus/core';\r\nimport { PaginationBuilder } from './pagination.builder';\r\nimport { PaginationItem, PaginationItemType } from './pagination.model';\r\n\r\n/**\r\n * The `PaginationComponent` is a generic component that is used for\r\n * all lists in Spartacus that require pagination. The component supports\r\n * all common features, which can be configured or hidden by CSS.\r\n */\r\n@Component({\r\n  selector: 'cx-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaginationComponent {\r\n  /** The (optional) pageRoute used for the anchor links created in the pagination   */\r\n  @Input() pageRoute: string;\r\n\r\n  /** The (optional) query parameter which is added to the page route.  */\r\n  @Input() queryParam: string;\r\n\r\n  /**\r\n   * Whenever there's a default page specified, the routing logic\r\n   * will omit the page number in routeLink or parameters.\r\n   */\r\n  @Input() defaultPage;\r\n\r\n  private _pagination: PaginationModel;\r\n  get pagination(): PaginationModel {\r\n    return this._pagination;\r\n  }\r\n  @Input() set pagination(value: PaginationModel) {\r\n    this._pagination = value;\r\n    this.render(value);\r\n  }\r\n\r\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  pages: PaginationItem[] = [];\r\n\r\n  constructor(\r\n    private paginationBuilder: PaginationBuilder,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  private render(pagination: PaginationModel) {\r\n    this.pages = this.paginationBuilder.paginate(\r\n      pagination.totalPages,\r\n      pagination.currentPage\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Inidicates whether the given item is the current item.\r\n   *\r\n   * @param item PaginationItem\r\n   * @returns boolean\r\n   */\r\n  isCurrent(item: PaginationItem): boolean {\r\n    return (\r\n      item.type === PaginationItemType.PAGE &&\r\n      item.number === this.pagination.currentPage\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the pagination item is inactive. This is used\r\n   * to disabled a link or set the tabindex to `-1`.\r\n   *\r\n   * Defaults to true\r\n   *\r\n   * @param item PaginationItem\r\n   * @returns returns -1 in case of a disabled\r\n   */\r\n  isInactive(item: PaginationItem): boolean {\r\n    return (\r\n      !item.hasOwnProperty('number') ||\r\n      item.number === this.pagination.currentPage\r\n    );\r\n  }\r\n\r\n  getQueryParams(item: PaginationItem): Params {\r\n    const queryParams = Object.assign(\r\n      {},\r\n      this.activatedRoute.snapshot.queryParams\r\n    );\r\n    if (\r\n      this.queryParam &&\r\n      item.number < this.pagination.totalPages &&\r\n      !this.isCurrent(item)\r\n    ) {\r\n      queryParams[this.queryParam] = item.number;\r\n    }\r\n    // omit the page number from the query parameters in case it's the default\r\n    // to clean up the experience and avoid unnecessary polluting of the URL\r\n    if (queryParams[this.queryParam] === this.defaultPage) {\r\n      delete queryParams[this.queryParam];\r\n    }\r\n    return queryParams;\r\n  }\r\n\r\n  pageChange(page: PaginationItem): void {\r\n    this.viewPageEvent.emit(page.number);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { provideDefaultConfig } from '@spartacus/core';\r\nimport { defaultPaginationConfig } from './config/index';\r\nimport { PaginationComponent } from './pagination.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule],\r\n  providers: [provideDefaultConfig(defaultPaginationConfig)],\r\n  declarations: [PaginationComponent],\r\n  exports: [PaginationComponent],\r\n})\r\nexport class PaginationModule {}\r\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[];\n  @Input()\n  selectedOption: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string };\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { PaginationComponent, PaginationModule } from './pagination/index';\r\nimport { SortingComponent } from './sorting/sorting.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, NgSelectModule, FormsModule, PaginationModule],\r\n  declarations: [SortingComponent],\r\n  exports: [SortingComponent, PaginationComponent],\r\n})\r\nexport class ListNavigationModule {}\r\n","import { MediaFormatSize } from './media.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n/**\r\n * Provides configuration specific to Media, such as images. This is used to optimize\r\n * rendering of the media, SEO and performance.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class MediaConfig {\r\n  /**\r\n   * Media _format_ configuration holds the size of the media's assigned to\r\n   * a format.\r\n   */\r\n  mediaFormats?: {\r\n    /**\r\n     * Represents the media format code, that is the key to distinguish different\r\n     * media in a container.\r\n     */\r\n    [format: string]: MediaFormatSize;\r\n  };\r\n}\r\n","import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * A reference to a newly opened modal\n *\n * @todo remove ngb dependency and create our own implementation of ModalRef\n */\nexport class ModalRef extends NgbModalRef {}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalRef } from './modal-ref';\nimport { ModalOptions } from './modal-options';\n\n/**\n * A service to handle modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: ModalRef[] = [];\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(content: any, options?: ModalOptions): ModalRef {\n    let activeModal: ModalRef;\n\n    activeModal = this.ngbModalService.open(content, options);\n    this.modals.push(activeModal);\n\n    return activeModal;\n  }\n\n  getActiveModal(): ModalRef {\n    const modal = this.modals[this.modals.length - 1];\n    return modal ? modal : null;\n  }\n\n  dismissActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.dismiss(reason);\n      this.modals.pop();\n    }\n  }\n\n  closeActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.close(reason);\n      this.modals.pop();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  GlobalMessageEntities,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-global-message',\r\n  templateUrl: './global-message.component.html',\r\n})\r\nexport class GlobalMessageComponent implements OnInit {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  messages$: Observable<GlobalMessageEntities>;\r\n  messageType: typeof GlobalMessageType = GlobalMessageType;\r\n\r\n  constructor(protected globalMessageService: GlobalMessageService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.messages$ = this.globalMessageService.get();\r\n  }\r\n\r\n  clear(type: GlobalMessageType, index: number): void {\r\n    this.globalMessageService.remove(type, index);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { GlobalMessageComponent } from './global-message.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule, IconModule, I18nModule],\r\n  declarations: [GlobalMessageComponent],\r\n  exports: [GlobalMessageComponent],\r\n})\r\nexport class GlobalMessageComponentModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n/**\r\n * Configuration options for the Qualtrics integration, which allows you to\r\n * specify the qualtrics project and deployment script.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class QualtricsConfig {\r\n  /**\r\n   * Holds the qualtrics integration options.\r\n   */\r\n  qualtrics?: {\r\n    /**\r\n     * Deployment script, loaded from a resource, to integrate the deployment of the qualtrics project.\r\n     * You would typically store the file in the local assets folder.\r\n     *\r\n     * Defaults to `assets/qualtricsIntegration.js`\r\n     */\r\n    scriptSource?: string;\r\n  };\r\n}\r\n","import {\r\n  Injectable,\r\n  isDevMode,\r\n  Renderer2,\r\n  RendererFactory2,\r\n} from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { fromEvent, Observable, of } from 'rxjs';\r\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\r\n\r\nexport const QUALTRICS_EVENT_NAME = 'qsi_js_loaded';\r\n\r\n/**\r\n * Service to integration Qualtrics.\r\n *\r\n * The integration observes the Qualtrics API, and when available, it runs the QSI API\r\n * to let Qualtrics evaluate the application.\r\n *\r\n * The service supports an additional _hook_ (`isDataLoaded()`) that can be used to load application\r\n * data before pulling the QSI API. This is beneficial in a single page application when additional\r\n * data is required before the Qualtrics _creatives_ run.\r\n *\r\n * This service also supports the creation of the Qualtrics deployment script. This is optional, as\r\n * the script can be added in alternatives ways.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QualtricsLoaderService {\r\n  /**\r\n   * Reference to the QSI API.\r\n   */\r\n  protected qsiApi: any;\r\n\r\n  /**\r\n   * QSI load event that happens when the QSI JS file is loaded.\r\n   */\r\n  private qsiLoaded$: Observable<any> = this.winRef?.nativeWindow\r\n    ? fromEvent(this.winRef.nativeWindow, QUALTRICS_EVENT_NAME)\r\n    : of();\r\n\r\n  /**\r\n   * Emits the Qualtrics Site Intercept (QSI) JavaScript API whenever available.\r\n   *\r\n   * The API is emitted when the JavaScript resource holding this API is fully loaded.\r\n   * The API is also stored locally in the service, in case it's required later on.\r\n   */\r\n  protected qsi$: Observable<any> = this.qsiLoaded$.pipe(\r\n    switchMap(() => this.isDataLoaded()),\r\n    map(() => this.winRef?.nativeWindow['QSI']),\r\n    filter((api) => Boolean(api)),\r\n    tap((qsi) => (this.qsiApi = qsi))\r\n  );\r\n\r\n  constructor(\r\n    protected winRef: WindowRef,\r\n    protected rendererFactory: RendererFactory2\r\n  ) {\r\n    this.initialize();\r\n  }\r\n\r\n  /**\r\n   * Starts observing the Qualtrics integration. The integration is based on a\r\n   * Qualtrics specific event (`qsi_js_loaded`). As soon as this events happens,\r\n   * we run the API.\r\n   */\r\n  protected initialize() {\r\n    this.qsi$.subscribe(() => this.run());\r\n  }\r\n\r\n  /**\r\n   * Evaluates the Qualtrics project code for the application.\r\n   *\r\n   * In order to reload the evaluation in Qualtrics, the API requires to unload the API before\r\n   * running it again. We don't do this by default, but offer a flag to conditionally unload the API.\r\n   */\r\n  protected run(reload = false): void {\r\n    if (!this.qsiApi?.API) {\r\n      if (isDevMode()) {\r\n        console.log('The QSI api is not available');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (reload) {\r\n      // Removes any currently displaying creatives\r\n      this.qsiApi.API.unload();\r\n    }\r\n\r\n    // Starts the intercept code evaluation right after loading the Site Intercept\r\n    // code for any defined intercepts or creatives\r\n    this.qsiApi.API.load().done(this.qsiApi.API.run());\r\n  }\r\n\r\n  /**\r\n   * Adds the deployment script to the DOM.\r\n   *\r\n   * The script will not be added twice if it was loaded before. In that case, we use\r\n   * the Qualtrics API directly to _unload_ and _run_ the project.\r\n   */\r\n  addScript(scriptSource: string): void {\r\n    if (this.hasScript(scriptSource)) {\r\n      this.run(true);\r\n    } else {\r\n      const script: HTMLScriptElement = this.renderer.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.defer = true;\r\n      script.src = scriptSource;\r\n      this.renderer.appendChild(this.winRef.document.body, script);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This logic exist in order to let the client(s) add their own logic to wait for any kind of page data.\r\n   * You can observe any data in this method.\r\n   *\r\n   * Defaults to true.\r\n   */\r\n  protected isDataLoaded(): Observable<boolean> {\r\n    return of(true);\r\n  }\r\n\r\n  /**\r\n   * Indicates if the script is already added to the DOM.\r\n   */\r\n  protected hasScript(source?: string): boolean {\r\n    return !!this.winRef.document.querySelector(`script[src=\"${source}\"]`);\r\n  }\r\n\r\n  protected get renderer(): Renderer2 {\r\n    return this.rendererFactory.createRenderer(null, null);\r\n  }\r\n}\r\n","import { Component, isDevMode } from '@angular/core';\r\nimport { QualtricsConfig } from './config/qualtrics-config';\r\nimport { QualtricsLoaderService } from './qualtrics-loader.service';\r\n/**\r\n * Adds the Qualtrics deployment script whenever the component is loaded. The\r\n * deployment script is loaded from the global configuration (`qualtrics.scriptSource`).\r\n */\r\n@Component({\r\n  selector: 'cx-qualtrics',\r\n  template: ``,\r\n})\r\nexport class QualtricsComponent {\r\n  constructor(\r\n    protected qualtricsLoader: QualtricsLoaderService,\r\n    protected config: QualtricsConfig\r\n  ) {\r\n    if (this.config.qualtrics?.scriptSource) {\r\n      this.qualtricsLoader.addScript(this.config.qualtrics.scriptSource);\r\n    } else if (isDevMode()) {\r\n      console.warn(\r\n        `We're unable to add the Qualtrics deployment code as there is no script source defined in config.qualtrics.scriptSource.`\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { QualtricsConfig } from './qualtrics-config';\n\nexport const defaultQualtricsConfig: QualtricsConfig = {\n  qualtrics: {},\n};\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { defaultQualtricsConfig } from './config/default-qualtrics-config';\r\nimport { QualtricsComponent } from './qualtrics.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule],\r\n  declarations: [QualtricsComponent],\r\n  entryComponents: [QualtricsComponent],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        QualtricsComponent: {\r\n          component: QualtricsComponent,\r\n        },\r\n      },\r\n    }),\r\n    provideDefaultConfig(defaultQualtricsConfig),\r\n  ],\r\n})\r\nexport class QualtricsModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector context=\"language\"></cx-site-context-selector>\n    <cx-site-context-selector context=\"currency\"></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","import { Injectable, Injector, Optional } from '@angular/core';\r\nimport {\r\n  CmsSiteContextSelectorComponent,\r\n  ContextServiceMap,\r\n  CURRENCY_CONTEXT_ID,\r\n  LANGUAGE_CONTEXT_ID,\r\n  SiteContext,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map, switchMap, take } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { SiteContextType } from './site-context.model';\r\n\r\nconst LABELS = {\r\n  [LANGUAGE_CONTEXT_ID]: 'Language',\r\n  [CURRENCY_CONTEXT_ID]: 'Currency',\r\n};\r\n\r\n@Injectable()\r\nexport class SiteContextComponentService {\r\n  constructor(\r\n    @Optional()\r\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\r\n    private contextServiceMap: ContextServiceMap,\r\n    protected injector: Injector\r\n  ) {}\r\n\r\n  getItems(context?: SiteContextType): Observable<any> {\r\n    return this.getService(context).pipe(\r\n      switchMap((service: SiteContext<any>) => service.getAll()),\r\n      switchMap((items) =>\r\n        this.getContext(context).pipe(\r\n          switchMap((ctx) => {\r\n            const itemsCopy = [];\r\n            for (const item of items) {\r\n              itemsCopy.push({\r\n                ...item,\r\n                label: this.getOptionLabel(item, ctx),\r\n              });\r\n            }\r\n            return of(itemsCopy);\r\n          })\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getActiveItem(context?: SiteContextType): Observable<string> {\r\n    return this.getService(context).pipe(\r\n      switchMap((service: SiteContext<any>) => service.getActive())\r\n    );\r\n  }\r\n\r\n  getLabel(context?: SiteContextType): Observable<any> {\r\n    return this.getContext(context).pipe(\r\n      map((ctx) => {\r\n        return LABELS[ctx];\r\n      })\r\n    );\r\n  }\r\n\r\n  setActive(value: string, context?: SiteContextType): void {\r\n    this.getService(context)\r\n      .pipe(take(1))\r\n      .subscribe((service) => {\r\n        service.setActive(value);\r\n      });\r\n  }\r\n\r\n  protected getService(\r\n    context?: SiteContextType\r\n  ): Observable<SiteContext<any>> {\r\n    return this.getContext(context).pipe(\r\n      map((ctx: string) => (ctx ? this.getInjectedService(ctx) : undefined)),\r\n      filter((s) => !!s)\r\n    );\r\n  }\r\n\r\n  protected getContext(context?: SiteContextType): Observable<string> {\r\n    if (context) {\r\n      return of(context);\r\n    } else if (this.componentData) {\r\n      return this.componentData.data$.pipe(\r\n        map((data) => data?.context),\r\n        map((ctx) => {\r\n          switch (ctx) {\r\n            case 'LANGUAGE':\r\n              return LANGUAGE_CONTEXT_ID;\r\n            case 'CURRENCY':\r\n              return CURRENCY_CONTEXT_ID;\r\n            default:\r\n              return ctx;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  protected getInjectedService(context: string): SiteContext<any> {\r\n    return this.injector.get<SiteContext<any>>(\r\n      this.contextServiceMap[context],\r\n      null\r\n    );\r\n  }\r\n\r\n  protected getOptionLabel(item: any, context?: string): string {\r\n    switch (context) {\r\n      case LANGUAGE_CONTEXT_ID:\r\n        return item.nativeName;\r\n      case CURRENCY_CONTEXT_ID:\r\n        return item.symbol + ' ' + item.isocode;\r\n      default:\r\n        return item.isocode;\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { Injector, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  ContextServiceMap,\r\n  provideDefaultConfig,\r\n  SiteContextModule,\r\n} from '@spartacus/core';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { IconModule } from '../icon/index';\r\nimport { LanguageCurrencyComponent } from './language-currency.component';\r\nimport { SiteContextComponentService } from './site-context-component.service';\r\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, SiteContextModule, IconModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSSiteContextComponent: {\r\n          component: SiteContextSelectorComponent,\r\n          providers: [\r\n            {\r\n              provide: SiteContextComponentService,\r\n              useClass: SiteContextComponentService,\r\n              deps: [CmsComponentData, ContextServiceMap, Injector],\r\n            },\r\n          ],\r\n        },\r\n        LanguageCurrencyComponent: {\r\n          component: LanguageCurrencyComponent,\r\n        },\r\n      },\r\n    }),\r\n    SiteContextComponentService,\r\n  ],\r\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\r\n  entryComponents: [SiteContextSelectorComponent, LanguageCurrencyComponent],\r\n  exports: [SiteContextSelectorComponent, LanguageCurrencyComponent],\r\n})\r\nexport class SiteContextSelectorModule {}\r\n","export enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\r\n\r\n@Component({\r\n  selector: 'cx-star-rating',\r\n  templateUrl: './star-rating.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class StarRatingComponent implements OnInit {\r\n  /**\r\n   * The rating component can be used in disabled mode,\r\n   * so that the interation is not provided.\r\n   */\r\n  @Input() @HostBinding('attr.disabled') disabled = false;\r\n\r\n  /**\r\n   * The rating will be used to render some colorful stars in the UI.\r\n   */\r\n  @Input() rating: number;\r\n\r\n  /**\r\n   * Emits the given rating when the user clicks on a star.\r\n   */\r\n  // tslint:disable-next-line:no-output-native\r\n  @Output() change = new EventEmitter<number>();\r\n\r\n  private initialRate = 0;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(protected el: ElementRef, protected renderer: Renderer2) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setRate(this.rating, true);\r\n  }\r\n\r\n  setRate(value: number, force?: boolean): void {\r\n    if (!this.disabled || force) {\r\n      this.renderer.setAttribute(\r\n        this.el.nativeElement,\r\n        'style',\r\n        `--star-fill:${value || this.initialRate};`\r\n      );\r\n    }\r\n  }\r\n\r\n  saveRate(rating: number): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    this.initialRate = rating;\r\n    this.setRate(rating);\r\n    this.change.emit(rating);\r\n  }\r\n\r\n  setRateOnEvent(event: any, rating: number) {\r\n    if (event.code === 'Space') {\r\n      event.preventDefault();\r\n      this.setRate(rating);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class ViewConfig {\r\n  view?: {\r\n    /**\r\n     * Configurations related to the view of the application\r\n     */\r\n    infiniteScroll?: {\r\n      active?: boolean;\r\n      productLimit?: number;\r\n      showMoreButton?: boolean;\r\n    };\r\n  };\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { provideDefaultConfig } from '@spartacus/core';\r\n\r\n@NgModule({})\r\nexport class ViewConfigModule {\r\n  static forRoot(): ModuleWithProviders<ViewConfigModule> {\r\n    return {\r\n      ngModule: ViewConfigModule,\r\n      providers: [\r\n        provideDefaultConfig({\r\n          view: {},\r\n        }),\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Order, RoutingService, UserOrderService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderDetailsService {\r\n  orderCode$: Observable<string>;\r\n  orderLoad$: Observable<{}>;\r\n\r\n  constructor(\r\n    private userOrderService: UserOrderService,\r\n    private routingService: RoutingService\r\n  ) {\r\n    this.orderCode$ = this.routingService\r\n      .getRouterState()\r\n      .pipe(map((routingData) => routingData.state.params.orderCode));\r\n\r\n    this.orderLoad$ = this.orderCode$.pipe(\r\n      tap((orderCode) => {\r\n        if (orderCode) {\r\n          this.userOrderService.loadOrderDetails(orderCode);\r\n        } else {\r\n          this.userOrderService.clearOrderDetails();\r\n        }\r\n      }),\r\n      shareReplay({ bufferSize: 1, refCount: true })\r\n    );\r\n  }\r\n\r\n  getOrderDetails(): Observable<Order> {\r\n    return this.orderLoad$.pipe(\r\n      switchMap(() => this.userOrderService.getOrderDetails())\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  CheckoutService,\r\n  Order,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../../../cms-components/myaccount/order/order-details/order-details.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PromotionService {\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected checkoutService: CheckoutService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  getOrderPromotions(\r\n    promotionLocation: PromotionLocation\r\n  ): Observable<PromotionResult[]> {\r\n    switch (promotionLocation) {\r\n      case PromotionLocation.ActiveCart:\r\n        return this.getOrderPromotionsFromCart();\r\n      case PromotionLocation.Checkout:\r\n        return this.getOrderPromotionsFromCheckout();\r\n      case PromotionLocation.Order:\r\n        return this.getOrderPromotionsFromOrder();\r\n      default:\r\n        return of([]);\r\n    }\r\n  }\r\n\r\n  getOrderPromotionsFromCart(): Observable<PromotionResult[]> {\r\n    return this.activeCartService\r\n      .getActive()\r\n      .pipe(map((cart) => this.getOrderPromotionsFromCartHelper(cart)));\r\n  }\r\n\r\n  private getOrderPromotionsFromCartHelper(cart: Cart): PromotionResult[] {\r\n    const potentialPromotions = [];\r\n    potentialPromotions.push(...(cart.potentialOrderPromotions || []));\r\n\r\n    const appliedPromotions = [];\r\n    appliedPromotions.push(...(cart.appliedOrderPromotions || []));\r\n\r\n    return [...potentialPromotions, ...appliedPromotions];\r\n  }\r\n\r\n  getOrderPromotionsFromCheckout(): Observable<PromotionResult[]> {\r\n    return this.checkoutService\r\n      .getOrderDetails()\r\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\r\n  }\r\n\r\n  getOrderPromotionsFromOrder(): Observable<PromotionResult[]> {\r\n    return this.orderDetailsService\r\n      .getOrderDetails()\r\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\r\n  }\r\n\r\n  private getOrderPromotionsFromOrderHelper(order: Order): PromotionResult[] {\r\n    const appliedOrderPromotions = [];\r\n    appliedOrderPromotions.push(...(order.appliedOrderPromotions || []));\r\n\r\n    return appliedOrderPromotions;\r\n  }\r\n\r\n  getProductPromotionForEntry(\r\n    item: OrderEntry,\r\n    promotionLocation: PromotionLocation\r\n  ): Observable<PromotionResult[]> {\r\n    switch (promotionLocation) {\r\n      case PromotionLocation.ActiveCart:\r\n        return this.activeCartService\r\n          .getActive()\r\n          .pipe(\r\n            map((cart) =>\r\n              this.getProductPromotion(\r\n                item,\r\n                cart.appliedProductPromotions || []\r\n              )\r\n            )\r\n          );\r\n      case PromotionLocation.Checkout:\r\n        return this.checkoutService\r\n          .getOrderDetails()\r\n          .pipe(\r\n            map((order) =>\r\n              this.getProductPromotion(\r\n                item,\r\n                order.appliedProductPromotions || []\r\n              )\r\n            )\r\n          );\r\n      case PromotionLocation.Order:\r\n        return this.orderDetailsService\r\n          .getOrderDetails()\r\n          .pipe(\r\n            map((order) =>\r\n              this.getProductPromotion(\r\n                item,\r\n                order.appliedProductPromotions || []\r\n              )\r\n            )\r\n          );\r\n    }\r\n  }\r\n\r\n  private getProductPromotion(\r\n    item: OrderEntry,\r\n    promotions: PromotionResult[]\r\n  ): PromotionResult[] {\r\n    const entryPromotions: PromotionResult[] = [];\r\n    if (promotions && promotions.length > 0) {\r\n      for (const promotion of promotions) {\r\n        if (\r\n          promotion.description &&\r\n          promotion.consumedEntries &&\r\n          promotion.consumedEntries.length > 0\r\n        ) {\r\n          for (const consumedEntry of promotion.consumedEntries) {\r\n            if (this.isConsumedByEntry(consumedEntry, item)) {\r\n              entryPromotions.push(promotion);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return entryPromotions;\r\n  }\r\n\r\n  private isConsumedByEntry(consumedEntry: any, entry: any): boolean {\r\n    const consumedEntryNumber = consumedEntry.orderEntryNumber;\r\n    if (entry.entries && entry.entries.length > 0) {\r\n      for (const subEntry of entry.entries) {\r\n        if (subEntry.entryNumber === consumedEntryNumber) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    } else {\r\n      return consumedEntryNumber === entry.entryNumber;\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl, ValidationErrors, FormGroup } from '@angular/forms';\r\nimport { EMAIL_PATTERN, PASSWORD_PATTERN } from '@spartacus/core';\r\n\r\nexport class CustomFormValidators {\r\n  /**\r\n   * Checks control's value with predefined email regexp\r\n   *\r\n   * NOTE: Use it as a control validator\r\n   *\r\n   * @static\r\n   * @param {AbstractControl} control\r\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidEmail' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\r\n    const email = control.value as string;\r\n\r\n    return !email.length || email.match(EMAIL_PATTERN)\r\n      ? null\r\n      : { cxInvalidEmail: true };\r\n  }\r\n\r\n  /**\r\n   * Checks control's value with predefined password regexp\r\n   *\r\n   * NOTE: Use it as a control validator\r\n   *\r\n   * @static\r\n   * @param {AbstractControl} control\r\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidPassword' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\r\n    const password = control.value as string;\r\n\r\n    return !password.length || password.match(PASSWORD_PATTERN)\r\n      ? null\r\n      : { cxInvalidPassword: true };\r\n  }\r\n\r\n  /**\r\n   * Checks if control's value is between 1 and 5\r\n   *\r\n   * NOTE: Use it as a control validator\r\n   *\r\n   * @static\r\n   * @param {AbstractControl} control\r\n   * @returns {(ValidationErrors | null)} Uses 'cxStarRatingEmpty' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static starRatingEmpty(control: AbstractControl): ValidationErrors | null {\r\n    const rating = control.value as number;\r\n\r\n    return rating >= 1 && rating <= 5 ? null : { cxStarRatingEmpty: true };\r\n  }\r\n\r\n  /**\r\n   * Checks if two password controls match\r\n   *\r\n   * NOTE: Use it as a form validator and pass password control names as parameters\r\n   *\r\n   * @static\r\n   * @param {string} password First password control name\r\n   * @param {string} passwordConfirmation Second password control name\r\n   * @returns Uses 'cxPasswordsMustMatch' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static passwordsMustMatch(\r\n    password: string,\r\n    passwordConfirmation: string\r\n  ): any {\r\n    const validator = (formGroup: FormGroup) =>\r\n      controlsMustMatch(\r\n        formGroup,\r\n        password,\r\n        passwordConfirmation,\r\n        'cxPasswordsMustMatch'\r\n      );\r\n\r\n    return validator;\r\n  }\r\n\r\n  /**\r\n   * Checks if two email controls match\r\n   *\r\n   * NOTE: Use it as a form validator and pass email control names as parameters\r\n   *\r\n   * @static\r\n   * @param {string} email First email control name\r\n   * @param {string} emailConfirmation Second email control name\r\n   * @returns Uses 'cxEmailsMustMatch' validator error\r\n   * @memberof CustomFormValidators\r\n   */\r\n  static emailsMustMatch(email: string, emailConfirmation: string): any {\r\n    const validator = (formGroup: FormGroup) =>\r\n      controlsMustMatch(\r\n        formGroup,\r\n        email,\r\n        emailConfirmation,\r\n        'cxEmailsMustMatch'\r\n      );\r\n\r\n    return validator;\r\n  }\r\n}\r\n\r\n/**\r\n * Generic function for validators, which checks if two passed controls match.\r\n *\r\n * @param formGroup\r\n * @param firstControlName First control to check\r\n * @param secondControlName Second control to check\r\n * @param errorName Error which will be returned by validator\r\n */\r\nexport function controlsMustMatch(\r\n  formGroup: FormGroup,\r\n  firstControlName: string,\r\n  secondControlName: string,\r\n  errorName: string\r\n): void {\r\n  const firstControl = formGroup.controls[firstControlName];\r\n  const secondControl = formGroup.controls[secondControlName];\r\n\r\n  if (secondControl.errors && !secondControl.errors[errorName]) {\r\n    return;\r\n  }\r\n\r\n  secondControl.setErrors(\r\n    firstControl.value !== secondControl.value ? { [errorName]: true } : null\r\n  );\r\n}\r\n","import { Title } from '@spartacus/core';\n\nexport const titleScores = {\n  mr: 1,\n  mrs: 2,\n  miss: 3,\n  ms: 4,\n  dr: 5,\n  rev: 6,\n};\n\nexport function sortTitles(title1: Title, title2: Title) {\n  if (!titleScores[title1.code] || !titleScores[title2.code]) {\n    return 1;\n  } else {\n    return titleScores[title1.code] - titleScores[title2.code];\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport {\r\n  CmsComponentMapping,\r\n  CmsConfig,\r\n  DeferLoadingStrategy,\r\n} from '@spartacus/core';\r\nimport { Route } from '@angular/router';\r\nimport { isPlatformServer } from '@angular/common';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsComponentsService {\r\n  private missingComponents: string[] = [];\r\n\r\n  constructor(\r\n    protected config: CmsConfig,\r\n    @Inject(PLATFORM_ID) protected platformId: Object\r\n  ) {}\r\n\r\n  /**\r\n   * Should be called to make sure all component mappings are determined,\r\n   * especially lazy loaded ones.\r\n   *\r\n   * It's recommended way to make sure all other methods of CmsComponentService\r\n   * will be able to work synchronously for asked component types and avoid risk\r\n   * of potential errors that could be thrown otherwise.\r\n   */\r\n  determineMappings(componentTypes: string[]): Observable<string[]> {\r\n    return of(componentTypes);\r\n  }\r\n\r\n  /**\r\n   * Return collection of component mapping configuration for specified list of\r\n   * component types.\r\n   *\r\n   * If component mapping can't be determined synchronously, for example, lazy\r\n   * loaded one, it will throw an error.\r\n   *\r\n   * To make sure component mapping is available, determineMappings()\r\n   * should be called and completed first.\r\n   */\r\n  getMapping(componentType: string): CmsComponentMapping {\r\n    const componentConfig = this.config.cmsComponents?.[componentType];\r\n\r\n    if (!componentConfig) {\r\n      if (!this.missingComponents.includes(componentType)) {\r\n        this.missingComponents.push(componentType);\r\n        console.warn(\r\n          `No component implementation found for the CMS component type '${componentType}'.\\n`,\r\n          `Make sure you implement a component and register it in the mapper.`\r\n        );\r\n      }\r\n    }\r\n\r\n    return componentConfig;\r\n  }\r\n\r\n  /**\r\n   * Checks, if component should be rendered as some components\r\n   * could be disabled for server side renderings\r\n   */\r\n  shouldRender(componentType: string): boolean {\r\n    const isSSR = isPlatformServer(this.platformId);\r\n    return !(isSSR && this.getMapping(componentType)?.disableSSR);\r\n  }\r\n\r\n  /**\r\n   * Return DeferLoadingStrategy for component type.\r\n   */\r\n  getDeferLoadingStrategy(componentType: string): DeferLoadingStrategy {\r\n    return this.config.cmsComponents?.[componentType]?.deferLoading;\r\n  }\r\n\r\n  /**\r\n   * Get cms driven child routes for components\r\n   */\r\n  getChildRoutes(componentTypes: string[]): Route[] {\r\n    const routes = [];\r\n    for (const componentType of componentTypes) {\r\n      if (this.shouldRender(componentType)) {\r\n        routes.push(...(this.getMapping(componentType)?.childRoutes ?? []));\r\n      }\r\n    }\r\n    return routes;\r\n  }\r\n\r\n  /**\r\n   * Get cms driven guards for components\r\n   */\r\n  getGuards(componentTypes: string[]): any[] {\r\n    const guards = new Set<any>();\r\n    for (const componentType of componentTypes) {\r\n      this.getMapping(componentType)?.guards?.forEach((guard) =>\r\n        guards.add(guard)\r\n      );\r\n    }\r\n    return Array.from(guards);\r\n  }\r\n\r\n  /**\r\n   * Get i18n keys associated with components\r\n   */\r\n  getI18nKeys(componentTypes: string[]): string[] {\r\n    const i18nKeys = new Set<string>();\r\n    for (const componentType of componentTypes) {\r\n      if (this.shouldRender(componentType)) {\r\n        this.getMapping(componentType)?.i18nKeys?.forEach((key) =>\r\n          i18nKeys.add(key)\r\n        );\r\n      }\r\n    }\r\n    return Array.from(i18nKeys);\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { CmsComponentData } from '../../model';\r\nimport { CmsComponent, CmsService } from '@spartacus/core';\r\nimport { CmsComponentsService } from '../../../services/cms-components.service';\r\n\r\n/**\r\n * Used to prepare injector for CMS components.\r\n *\r\n * Injector will take into account configured providers and provides CmsComponentData\r\n * for specified component's uid\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsInjectorService {\r\n  constructor(\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected injector: Injector\r\n  ) {}\r\n\r\n  private getCmsData<T extends CmsComponent>(\r\n    uid: string,\r\n    parentInjector?: Injector\r\n  ): CmsComponentData<T> {\r\n    return {\r\n      uid: uid,\r\n      data$: (parentInjector ?? this.injector)\r\n        .get(CmsService)\r\n        .getComponentData<T>(uid),\r\n    };\r\n  }\r\n\r\n  public getInjector(\r\n    type: string,\r\n    uid: string,\r\n    parentInjector?: Injector\r\n  ): Injector {\r\n    const configProviders =\r\n      this.cmsComponentsService.getMapping(type)?.providers ?? [];\r\n    return Injector.create({\r\n      providers: [\r\n        {\r\n          provide: CmsComponentData,\r\n          useValue: this.getCmsData(uid),\r\n        },\r\n        ...configProviders,\r\n      ],\r\n      parent: parentInjector ?? this.injector,\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  ElementRef,\r\n  Injector,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Applicable, CmsComponentMapping, Priority } from '@spartacus/core';\r\n\r\n/**\r\n * ComponentHandler implementations can be used for instantiating and launching\r\n * different types of CMS mapped components\r\n */\r\nexport abstract class ComponentHandler implements Applicable {\r\n  /**\r\n   * Returns component resource - an observable stream used to launch and dispose\r\n   * component.\r\n   *\r\n   * Instantiate and launch component by subscribing to launcher.\r\n   * Successful component launch will be followed by emission of ElementRef\r\n   * (and in case of native Angular component, also ComponentRef).\r\n   * Unsubscribing from the launcher will remove and tear down the component.\r\n   *\r\n   * @param componentMapping\r\n   * @param viewContainerRef\r\n   * @param elementInjector\r\n   */\r\n  abstract launcher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }>;\r\n\r\n  abstract hasMatch(componentMapping: CmsComponentMapping): boolean;\r\n  abstract getPriority?(): Priority;\r\n}\r\n","import {\r\n  ComponentRef,\r\n  ElementRef,\r\n  Inject,\r\n  Injectable,\r\n  Injector,\r\n  isDevMode,\r\n  Optional,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ComponentHandler } from '../handlers/component-handler';\r\nimport { CmsComponentMapping, resolveApplicable } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * Responsible for obtaining component handler for specified component mapping\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComponentHandlerService {\r\n  constructor(\r\n    @Optional()\r\n    @Inject(ComponentHandler)\r\n    protected handlers: ComponentHandler[]\r\n  ) {}\r\n\r\n  protected invalidMappings = new Set<CmsComponentMapping>();\r\n\r\n  /**\r\n   * Get best matching component handler\r\n   *\r\n   * @param componentMapping\r\n   */\r\n  protected resolve(componentMapping: CmsComponentMapping): ComponentHandler {\r\n    const handler = resolveApplicable(this.handlers, [componentMapping]);\r\n\r\n    if (isDevMode() && !handler) {\r\n      if (!this.invalidMappings.has(componentMapping)) {\r\n        this.invalidMappings.add(componentMapping);\r\n        console.warn(\r\n          \"Can't resolve handler for component mapping: \",\r\n          componentMapping\r\n        );\r\n      }\r\n    }\r\n\r\n    return handler;\r\n  }\r\n\r\n  /**\r\n   * Get launcher for specified component mapping\r\n   *\r\n   * @param componentMapping\r\n   * @param viewContainerRef\r\n   * @param elementInjector\r\n   */\r\n  getLauncher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\r\n    return this.resolve(componentMapping)?.launcher(\r\n      componentMapping,\r\n      viewContainerRef,\r\n      elementInjector\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  Injector,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {\r\n  ContentSlotComponentData,\r\n  DynamicAttributeService,\r\n} from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CmsComponentsService } from '../../services/cms-components.service';\r\nimport { CmsInjectorService } from './services/cms-injector.service';\r\nimport { ComponentHandlerService } from './services/component-handler.service';\r\n\r\n/**\r\n * Directive used to facilitate instantiation of CMS driven dynamic components\r\n */\r\n@Directive({\r\n  selector: '[cxComponentWrapper]',\r\n})\r\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\r\n  @Input() cxComponentWrapper: ContentSlotComponentData;\r\n\r\n  /**\r\n   * @deprecated since 2.0\r\n   *\r\n   * This property in unsafe, i.e.\r\n   * - cmpRef can be set later because of lazy loading or deferred loading\r\n   * - cmpRef can be not set at all if for example, web components are used as cms components\r\n   */\r\n  cmpRef?: ComponentRef<any>;\r\n\r\n  private launcherResource?: Subscription;\r\n\r\n  constructor(\r\n    protected vcr: ViewContainerRef,\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected injector: Injector,\r\n    protected dynamicAttributeService: DynamicAttributeService,\r\n    protected renderer: Renderer2,\r\n    protected componentHandler: ComponentHandlerService,\r\n    protected cmsInjector: CmsInjectorService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.cmsComponentsService\r\n      .determineMappings([this.cxComponentWrapper.flexType])\r\n      .subscribe(() => {\r\n        if (\r\n          this.cmsComponentsService.shouldRender(\r\n            this.cxComponentWrapper.flexType\r\n          )\r\n        ) {\r\n          this.launchComponent();\r\n        }\r\n      });\r\n  }\r\n\r\n  private launchComponent() {\r\n    const componentMapping = this.cmsComponentsService.getMapping(\r\n      this.cxComponentWrapper.flexType\r\n    );\r\n\r\n    if (!componentMapping) {\r\n      return;\r\n    }\r\n\r\n    this.launcherResource = this.componentHandler\r\n      .getLauncher(\r\n        componentMapping,\r\n        this.vcr,\r\n        this.cmsInjector.getInjector(\r\n          this.cxComponentWrapper.flexType,\r\n          this.cxComponentWrapper.uid,\r\n          this.injector\r\n        )\r\n      )\r\n      ?.subscribe(({ elementRef, componentRef }) => {\r\n        this.cmpRef = componentRef;\r\n        this.decorate(elementRef);\r\n      });\r\n  }\r\n\r\n  private decorate(elementRef: ElementRef): void {\r\n    this.dynamicAttributeService.addDynamicAttributes(\r\n      elementRef.nativeElement,\r\n      this.renderer,\r\n      { componentData: this.cxComponentWrapper }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.launcherResource) {\r\n      this.launcherResource.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ElementRef,\r\n  Injectable,\r\n  Injector,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ComponentHandler } from './component-handler';\r\nimport { Observable } from 'rxjs';\r\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\r\n\r\n/**\r\n * Default component handler used for dynamically launching cms components implemented\r\n * as native Angular components.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DefaultComponentHandler implements ComponentHandler {\r\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\r\n    return typeof componentMapping.component === 'function';\r\n  }\r\n\r\n  getPriority(): Priority {\r\n    return Priority.FALLBACK;\r\n  }\r\n\r\n  launcher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\r\n    return new Observable<{\r\n      elementRef: ElementRef;\r\n      componentRef?: ComponentRef<any>;\r\n    }>((subscriber) => {\r\n      let componentRef: ComponentRef<any>;\r\n\r\n      const injector = elementInjector ?? viewContainerRef.injector;\r\n\r\n      const dispose = () => {\r\n        if (componentRef) {\r\n          componentRef.destroy();\r\n        }\r\n      };\r\n\r\n      const factory = this.getComponentFactory(\r\n        injector,\r\n        componentMapping.component\r\n      );\r\n\r\n      if (factory) {\r\n        componentRef = viewContainerRef.createComponent(\r\n          factory,\r\n          undefined,\r\n          injector\r\n        );\r\n        subscriber.next({ elementRef: componentRef.location, componentRef });\r\n      }\r\n\r\n      return dispose;\r\n    });\r\n  }\r\n\r\n  protected getComponentFactory(injector: Injector, component: any): any {\r\n    if (!component) {\r\n      return null;\r\n    }\r\n    const factory = injector\r\n      .get(ComponentFactoryResolver)\r\n      .resolveComponentFactory(component);\r\n\r\n    return factory;\r\n  }\r\n}\r\n","import {\r\n  ComponentRef,\r\n  ElementRef,\r\n  Injectable,\r\n  Injector,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\r\nimport { from, Observable } from 'rxjs';\r\nimport { DefaultComponentHandler } from './default-component.handler';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ComponentHandler } from './component-handler';\r\n\r\n/**\r\n * Lazy component handler used for launching lazy loaded cms components implemented\r\n * as native Angular components.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyComponentHandler implements ComponentHandler {\r\n  constructor(protected defaultHandler: DefaultComponentHandler) {}\r\n\r\n  /**\r\n   * We want to mach dynamic import signature () => import('')\r\n   */\r\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\r\n    return (\r\n      typeof componentMapping.component === 'function' &&\r\n      this.isNotClass(componentMapping.component)\r\n    );\r\n  }\r\n\r\n  private isNotClass(symbol: any): boolean {\r\n    const signature = symbol.toString().substr(0, 20).replace(' ', '');\r\n    return signature.startsWith('function()') || signature.startsWith('()=>');\r\n  }\r\n\r\n  getPriority(): Priority {\r\n    return Priority.LOW;\r\n  }\r\n\r\n  launcher(\r\n    componentMapping: CmsComponentMapping,\r\n    viewContainerRef: ViewContainerRef,\r\n    elementInjector?: Injector\r\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\r\n    return from(componentMapping.component()).pipe(\r\n      switchMap((component) =>\r\n        this.defaultHandler.launcher(\r\n          { ...componentMapping, component },\r\n          viewContainerRef,\r\n          elementInjector\r\n        )\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\r\nimport { ComponentHandler } from './handlers/component-handler';\r\nimport { DefaultComponentHandler } from './handlers/default-component.handler';\r\nimport { LazyComponentHandler } from './handlers/lazy-component.handler';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    {\r\n      provide: ComponentHandler,\r\n      useExisting: DefaultComponentHandler,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: ComponentHandler,\r\n      useExisting: LazyComponentHandler,\r\n      multi: true,\r\n    },\r\n  ],\r\n  declarations: [ComponentWrapperDirective],\r\n  exports: [ComponentWrapperDirective],\r\n})\r\nexport class PageComponentModule {}\r\n","export const ASM_ENABLED_LOCAL_STORAGE_KEY = 'asm_enabled';\n","import { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { LAUNCH_CALLER } from '../../../layout/launch-dialog/config/index';\r\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\r\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\r\n\r\n/**\r\n * The AsmEnablerService is used to enable ASM for those scenario's\r\n * where it's actually used. This service is added to avoid any polution\r\n * of the UI and runtime performance for the ordinary production user.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AsmEnablerService {\r\n  constructor(\r\n    protected location: Location,\r\n    protected winRef: WindowRef,\r\n    protected launchDialogService: LaunchDialogService\r\n  ) {}\r\n\r\n  /**\r\n   * Loads the ASM UI if needed. The ASM UI will be added based on the\r\n   * existence of a URL parameter or previous usage given by local storage.\r\n   */\r\n  load(): void {\r\n    if (this.isEnabled()) {\r\n      this.addUi();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the ASM module is enabled.\r\n   */\r\n  isEnabled(): boolean {\r\n    if (this.isLaunched() && !this.isUsedBefore()) {\r\n      if (this.winRef.localStorage) {\r\n        this.winRef.localStorage.setItem(ASM_ENABLED_LOCAL_STORAGE_KEY, 'true');\r\n      }\r\n    }\r\n    return this.isLaunched() || this.isUsedBefore();\r\n  }\r\n\r\n  /**\r\n   * Indicates whether ASM is launched through the URL,\r\n   * using the asm flag in the URL.\r\n   */\r\n  protected isLaunched(): boolean {\r\n    const params = this.location.path().split('?')[1];\r\n    return params && params.split('&').includes('asm=true');\r\n  }\r\n\r\n  /**\r\n   * Evaluates local storage where we persist the usage of ASM.\r\n   */\r\n  protected isUsedBefore(): boolean {\r\n    return (\r\n      this.winRef.localStorage &&\r\n      this.winRef.localStorage.getItem(ASM_ENABLED_LOCAL_STORAGE_KEY) === 'true'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Adds the ASM UI by using the `cx-storefront` outlet.\r\n   */\r\n  protected addUi(): void {\r\n    this.launchDialogService.launch(LAUNCH_CALLER.ASM);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\r\nimport { PageComponentModule } from '../../cms-structure/page/component/page-component.module';\r\nimport { AsmEnablerService } from './services/asm-enabler.service';\r\n\r\n/**\r\n * The ASM loader module takes care of loading the ASM UI\r\n * only in case there's a reason to do so.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PageComponentModule],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: asmFactory,\r\n      deps: [AsmEnablerService],\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class AsmLoaderModule {}\r\n\r\n/**\r\n *\r\n * We do not like to block the UI, which is why we delgate loading of ASM\r\n * to a real component; the router and state aren't available in an optimized\r\n * way during the APP_INITIALIZER.\r\n */\r\nexport function asmFactory(asmEnablerService: AsmEnablerService) {\r\n  const isReady = () => {\r\n    asmEnablerService.load();\r\n  };\r\n  return isReady;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  AsmAuthService,\r\n  AuthService,\r\n  RoutingService,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AsmComponentService {\r\n  constructor(\r\n    protected authService: AuthService,\r\n    protected asmAuthService: AsmAuthService,\r\n    protected routingService: RoutingService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  logoutCustomerSupportAgentAndCustomer(): void {\r\n    this.authService\r\n      .getUserToken()\r\n      .pipe(take(1))\r\n      .subscribe((token) => {\r\n        if (this.asmAuthService.isCustomerEmulationToken(token)) {\r\n          this.logoutCustomer();\r\n        }\r\n        this.asmAuthService.logoutCustomerSupportAgent();\r\n      });\r\n  }\r\n\r\n  logoutCustomer(): void {\r\n    this.authService.logout();\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  isCustomerEmulationSessionInProgress(): Observable<boolean> {\r\n    return this.authService\r\n      .getUserToken()\r\n      .pipe(\r\n        mergeMap((userToken) =>\r\n          of(this.asmAuthService.isCustomerEmulationToken(userToken))\r\n        )\r\n      );\r\n  }\r\n\r\n  /**\r\n   * We're currently only removing the persisted storage in the browser\r\n   * to ensure the ASM experience isn't loaded on the next visit. There are a few\r\n   * optimsiations we could think of:\r\n   * - drop the `asm` parameter from the URL, in case it's still there\r\n   * - remove the generated UI from the DOM (outlets currently do not support this)\r\n   */\r\n  unload() {\r\n    if (this.winRef.localStorage) {\r\n      this.winRef.localStorage.removeItem(ASM_ENABLED_LOCAL_STORAGE_KEY);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  HostBinding,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  AsmAuthService,\r\n  AsmService,\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  User,\r\n  UserService,\r\n  UserToken,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, take } from 'rxjs/operators';\r\nimport { AsmComponentService } from '../services/asm-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-asm-main-ui',\r\n  templateUrl: './asm-main-ui.component.html',\r\n  styleUrls: ['./asm-main-ui.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AsmMainUiComponent implements OnInit {\r\n  csAgentToken$: Observable<UserToken>;\r\n  csAgentTokenLoading$: Observable<boolean>;\r\n  customer$: Observable<User>;\r\n  isCollapsed$: Observable<boolean>;\r\n\r\n  @HostBinding('class.hidden') disabled = false;\r\n\r\n  private startingCustomerSession = false;\r\n\r\n  constructor(\r\n    protected authService: AuthService,\r\n    protected asmAuthService: AsmAuthService,\r\n    protected userService: UserService,\r\n    protected asmComponentService: AsmComponentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected routingService: RoutingService,\r\n    protected asmService: AsmService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.csAgentToken$ = this.asmAuthService.getCustomerSupportAgentToken();\r\n    this.csAgentTokenLoading$ = this.asmAuthService.getCustomerSupportAgentTokenLoading();\r\n    this.customer$ = this.authService.getUserToken().pipe(\r\n      switchMap((token) => {\r\n        if (token && !!token.access_token) {\r\n          this.handleCustomerSessionStartRedirection(token);\r\n          return this.userService.get();\r\n        } else {\r\n          return of(undefined);\r\n        }\r\n      })\r\n    );\r\n    this.isCollapsed$ = this.asmService\r\n      .getAsmUiState()\r\n      .pipe(map((uiState) => uiState.collapsed));\r\n  }\r\n\r\n  private handleCustomerSessionStartRedirection(token: UserToken): void {\r\n    if (\r\n      this.startingCustomerSession &&\r\n      this.asmAuthService.isCustomerEmulationToken(token)\r\n    ) {\r\n      this.startingCustomerSession = false;\r\n      this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\r\n      this.routingService.go('/');\r\n    }\r\n  }\r\n\r\n  loginCustomerSupportAgent({\r\n    userId,\r\n    password,\r\n  }: {\r\n    userId: string;\r\n    password: string;\r\n  }): void {\r\n    this.asmAuthService.authorizeCustomerSupportAgent(userId, password);\r\n  }\r\n\r\n  logout(): void {\r\n    this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\r\n  }\r\n\r\n  startCustomerEmulationSession({ customerId }: { customerId: string }): void {\r\n    this.asmAuthService\r\n      .getCustomerSupportAgentToken()\r\n      .pipe(take(1))\r\n      .subscribe((customerSupportAgentToken) =>\r\n        this.asmAuthService.startCustomerEmulationSession(\r\n          customerSupportAgentToken,\r\n          customerId\r\n        )\r\n      )\r\n      .unsubscribe();\r\n    this.startingCustomerSession = true;\r\n  }\r\n\r\n  hideUi(): void {\r\n    this.disabled = true;\r\n    this.asmComponentService.unload();\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { AsmConfig, AuthService, RoutingService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { AsmComponentService } from '../services/asm-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-asm-session-timer',\r\n  templateUrl: './asm-session-timer.component.html',\r\n  styleUrls: ['./asm-session-timer.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AsmSessionTimerComponent implements OnInit, OnDestroy {\r\n  private subscriptions = new Subscription();\r\n  private interval: any;\r\n  private maxStartDelayInSeconds = 60000;\r\n  timeLeft: number;\r\n\r\n  constructor(\r\n    private config: AsmConfig,\r\n    private asmComponentService: AsmComponentService,\r\n    private authService: AuthService,\r\n    private routingService: RoutingService,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.timeLeft = this.getTimerStartDelayInSeconds();\r\n    this.interval = setInterval(() => {\r\n      if (this.timeLeft > 0) {\r\n        this.timeLeft--;\r\n      } else {\r\n        clearInterval(this.interval);\r\n        this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\r\n      }\r\n      this.changeDetectorRef.markForCheck();\r\n    }, 1000);\r\n\r\n    this.resetOnNavigate();\r\n    this.resetOnCustomerSessionChange();\r\n  }\r\n\r\n  private resetOnNavigate(): void {\r\n    this.subscriptions.add(\r\n      this.routingService.isNavigating().subscribe((isNavigating) => {\r\n        if (isNavigating) {\r\n          this.resetTimer();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private resetOnCustomerSessionChange(): void {\r\n    this.subscriptions.add(\r\n      this.authService\r\n        .getOccUserId()\r\n        .pipe(distinctUntilChanged())\r\n        .subscribe(() => this.resetTimer())\r\n    );\r\n  }\r\n\r\n  resetTimer(): void {\r\n    if (this.timeLeft > 0) {\r\n      this.timeLeft = this.getTimerStartDelayInSeconds();\r\n    }\r\n  }\r\n\r\n  private getTimerStartDelayInSeconds(): number {\r\n    if (\r\n      this.config.asm.agentSessionTimer.startingDelayInSeconds >\r\n      this.maxStartDelayInSeconds\r\n    ) {\r\n      return this.maxStartDelayInSeconds;\r\n    } else {\r\n      return this.config.asm.agentSessionTimer.startingDelayInSeconds;\r\n    }\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatTimer',\n})\nexport class FormatTimerPipe implements PipeTransform {\n  transform(totalSeconds: number): string {\n    if (totalSeconds < 0) {\n      totalSeconds = 0;\n    }\n    const minutes: number = Math.floor(totalSeconds / 60);\n    const seconds: number = totalSeconds % 60;\n    let zeroPaddedMinutes: string;\n    if (minutes < 10) {\n      zeroPaddedMinutes = ('00' + minutes).slice(-2);\n    } else {\n      zeroPaddedMinutes = minutes + '';\n    }\n    const zeroPaddedSeconds: string = ('00' + seconds).slice(-2);\n    return `${zeroPaddedMinutes}:${zeroPaddedSeconds}`;\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AsmService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-asm-toggle-ui',\r\n  templateUrl: './asm-toggle-ui.component.html',\r\n  styleUrls: ['./asm-toggle-ui.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AsmToggleUiComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n  isCollapsed: boolean;\r\n\r\n  constructor(protected asmService: AsmService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.asmService.getAsmUiState().subscribe((uiState) => {\r\n        this.isCollapsed = uiState.collapsed;\r\n      })\r\n    );\r\n  }\r\n\r\n  toggleUi(): void {\r\n    this.asmService.updateAsmUiState({ collapsed: !this.isCollapsed });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'cx-csagent-login-form',\r\n  templateUrl: './csagent-login-form.component.html',\r\n  styleUrls: ['./csagent-login-form.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CSAgentLoginFormComponent implements OnInit {\r\n  csAgentLoginForm: FormGroup;\r\n\r\n  @Input()\r\n  csAgentTokenLoading = false;\r\n\r\n  @Output()\r\n  submitEvent = new EventEmitter<{ userId: string; password: string }>();\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.csAgentLoginForm = this.fb.group({\r\n      userId: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.csAgentLoginForm.valid) {\r\n      this.submitEvent.emit({\r\n        userId: this.csAgentLoginForm.get('userId').value,\r\n        password: this.csAgentLoginForm.get('password').value,\r\n      });\r\n    } else {\r\n      this.csAgentLoginForm.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { User, UserService } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AsmComponentService } from '../services/asm-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-customer-emulation',\r\n  templateUrl: './customer-emulation.component.html',\r\n  styleUrls: ['./customer-emulation.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CustomerEmulationComponent implements OnInit, OnDestroy {\r\n  customer: User;\r\n  isCustomerEmulationSessionInProgress$: Observable<boolean>;\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    protected asmComponentService: AsmComponentService,\r\n    protected userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.userService.get().subscribe((user) => (this.customer = user))\r\n    );\r\n    this.isCustomerEmulationSessionInProgress$ = this.asmComponentService.isCustomerEmulationSessionInProgress();\r\n  }\r\n\r\n  logoutCustomer() {\r\n    this.asmComponentService.logoutCustomer();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  AsmConfig,\r\n  AsmService,\r\n  CustomerSearchPage,\r\n  User,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-customer-selection',\r\n  templateUrl: './customer-selection.component.html',\r\n  styleUrls: ['./customer-selection.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  // tslint:disable-next-line:no-host-metadata-property\r\n  host: {\r\n    '(document:click)': 'onDocumentClick($event)',\r\n  },\r\n})\r\nexport class CustomerSelectionComponent implements OnInit, OnDestroy {\r\n  customerSelectionForm: FormGroup;\r\n  private subscription = new Subscription();\r\n  searchResultsLoading$: Observable<boolean>;\r\n  searchResults: Observable<CustomerSearchPage>;\r\n  selectedCustomer: User;\r\n\r\n  @Output()\r\n  submitEvent = new EventEmitter<{ customerId: string }>();\r\n\r\n  @ViewChild('resultList') resultList: ElementRef;\r\n  @ViewChild('searchTerm') searchTerm: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private asmService: AsmService,\r\n    private config: AsmConfig\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.customerSelectionForm = this.fb.group({\r\n      searchTerm: ['', Validators.required],\r\n    });\r\n    this.asmService.customerSearchReset();\r\n    this.searchResultsLoading$ = this.asmService.getCustomerSearchResultsLoading();\r\n    this.searchResults = this.asmService.getCustomerSearchResults();\r\n\r\n    this.subscription.add(\r\n      this.customerSelectionForm.controls.searchTerm.valueChanges\r\n        .pipe(debounceTime(300))\r\n        .subscribe((searchTermValue) => {\r\n          this.handleSearchTerm(searchTermValue);\r\n        })\r\n    );\r\n  }\r\n\r\n  private handleSearchTerm(searchTermValue: string) {\r\n    if (\r\n      Boolean(this.selectedCustomer) &&\r\n      searchTermValue !== this.selectedCustomer.name\r\n    ) {\r\n      this.selectedCustomer = undefined;\r\n    }\r\n    if (Boolean(this.selectedCustomer)) {\r\n      return;\r\n    }\r\n    this.asmService.customerSearchReset();\r\n    if (searchTermValue.trim().length >= 3) {\r\n      this.asmService.customerSearch({\r\n        query: searchTermValue,\r\n        pageSize: this.config.asm.customerSearch.maxResults,\r\n      });\r\n    }\r\n  }\r\n\r\n  selectCustomerFromList(customer: User) {\r\n    this.selectedCustomer = customer;\r\n    this.customerSelectionForm.controls.searchTerm.setValue(\r\n      this.selectedCustomer.name\r\n    );\r\n    this.asmService.customerSearchReset();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.customerSelectionForm.valid && Boolean(this.selectedCustomer)) {\r\n      this.submitEvent.emit({ customerId: this.selectedCustomer.customerId });\r\n    } else {\r\n      this.customerSelectionForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onDocumentClick(event) {\r\n    if (Boolean(this.resultList)) {\r\n      if (\r\n        this.resultList.nativeElement.contains(event.target) ||\r\n        this.searchTerm.nativeElement.contains(event.target)\r\n      ) {\r\n        return;\r\n      } else {\r\n        this.asmService.customerSearchReset();\r\n      }\r\n    }\r\n  }\r\n\r\n  closeResults() {\r\n    this.asmService.customerSearchReset();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n    this.asmService.customerSearchReset();\r\n  }\r\n}\r\n","import { LayoutConfig } from '../../layout/config/layout-config';\r\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\r\n\r\nexport const defaultAsmLayoutConfig: LayoutConfig = {\r\n  launch: {\r\n    ASM: {\r\n      outlet: 'cx-storefront',\r\n      component: AsmMainUiComponent,\r\n    },\r\n  },\r\n};\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AsmModule as AsmCoreModule,\r\n  I18nModule,\r\n  provideConfig,\r\n} from '@spartacus/core';\r\nimport { FormErrorsModule } from '../../shared/index';\r\nimport { AsmLoaderModule } from './asm-loader.module';\r\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\r\nimport { AsmSessionTimerComponent } from './asm-session-timer/asm-session-timer.component';\r\nimport { FormatTimerPipe } from './asm-session-timer/format-timer.pipe';\r\nimport { AsmToggleUiComponent } from './asm-toggle-ui/asm-toggle-ui.component';\r\nimport { CSAgentLoginFormComponent } from './csagent-login-form/csagent-login-form.component';\r\nimport { CustomerEmulationComponent } from './customer-emulation/customer-emulation.component';\r\nimport { CustomerSelectionComponent } from './customer-selection/customer-selection.component';\r\nimport { defaultAsmLayoutConfig } from './default-asm-layout.config';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    I18nModule,\r\n    AsmCoreModule.forRoot(),\r\n    AsmLoaderModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [\r\n    AsmMainUiComponent,\r\n    CSAgentLoginFormComponent,\r\n    CustomerSelectionComponent,\r\n    AsmSessionTimerComponent,\r\n    FormatTimerPipe,\r\n    CustomerEmulationComponent,\r\n    AsmToggleUiComponent,\r\n  ],\r\n  providers: [provideConfig(defaultAsmLayoutConfig)],\r\n  entryComponents: [AsmMainUiComponent],\r\n})\r\nexport class AsmModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Product,\r\n  ProductScope,\r\n  ProductService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CurrentProductService {\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private productService: ProductService\r\n  ) {}\r\n\r\n  protected readonly DEFAULT_PRODUCT_SCOPE = ProductScope.DETAILS;\r\n\r\n  /**\r\n   * Will emit current product or null, if there is no current product (i.e. we are not on PDP)\r\n   *\r\n   * @param scopes\r\n   */\r\n  getProduct(\r\n    scopes?: (ProductScope | string)[] | ProductScope | string\r\n  ): Observable<Product | null> {\r\n    return this.routingService.getRouterState().pipe(\r\n      map((state) => state.state.params['productCode']),\r\n      switchMap((productCode: string) => {\r\n        return productCode\r\n          ? this.productService.get(\r\n              productCode,\r\n              scopes || this.DEFAULT_PRODUCT_SCOPE\r\n            )\r\n          : of(null);\r\n      }),\r\n      filter((x) => x !== undefined),\r\n      distinctUntilChanged()\r\n    );\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport {\r\n  Cart,\r\n  ActiveCartService,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, startWith, switchMap, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\r\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\n@Component({\r\n  selector: 'cx-added-to-cart-dialog',\r\n  templateUrl: './added-to-cart-dialog.component.html',\r\n})\r\nexport class AddedToCartDialogComponent implements OnInit {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  entry$: Observable<OrderEntry>;\r\n  cart$: Observable<Cart>;\r\n  loaded$: Observable<boolean>;\r\n  increment: boolean;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  quantity = 0;\r\n  modalIsOpen = false;\r\n\r\n  @ViewChild('dialog', { read: ElementRef })\r\n  dialog: ElementRef;\r\n\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  private quantityControl$: Observable<FormControl>;\r\n\r\n  constructor(\r\n    protected modalService: ModalService,\r\n    protected cartService: ActiveCartService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n  /**\r\n   * Returns an observable formControl with the quantity of the cartEntry,\r\n   * but also updates the entry in case of a changed value.\r\n   * The quantity can be set to zero in order to remove the entry.\r\n   */\r\n  getQuantityControl(): Observable<FormControl> {\r\n    if (!this.quantityControl$) {\r\n      this.quantityControl$ = this.entry$.pipe(\r\n        filter((e) => !!e),\r\n        map((entry) => this.getFormControl(entry)),\r\n        switchMap(() =>\r\n          this.form.valueChanges.pipe(\r\n            // tslint:disable-next-line:deprecation\r\n            startWith(null),\r\n            tap((valueChange) => {\r\n              if (valueChange) {\r\n                this.cartService.updateEntry(\r\n                  valueChange.entryNumber,\r\n                  valueChange.quantity\r\n                );\r\n                if (valueChange.quantity === 0) {\r\n                  this.dismissModal('Removed');\r\n                }\r\n              } else {\r\n                this.form.markAsPristine();\r\n              }\r\n            })\r\n          )\r\n        ),\r\n        map(() => <FormControl>this.form.get('quantity'))\r\n      );\r\n    }\r\n    return this.quantityControl$;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  private getFormControl(entry: OrderEntry): FormControl {\r\n    if (!this.form.get('quantity')) {\r\n      const quantity = new FormControl(entry.quantity, { updateOn: 'blur' });\r\n      this.form.addControl('quantity', quantity);\r\n\r\n      const entryNumber = new FormControl(entry.entryNumber);\r\n      this.form.addControl('entryNumber', entryNumber);\r\n    }\r\n    return <FormControl>this.form.get('quantity');\r\n  }\r\n\r\n  dismissModal(reason?: any): void {\r\n    this.modalService.dismissActiveModal(reason);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActiveCartService, OrderEntry, Product } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ModalRef } from '../../../shared/components/modal/modal-ref';\r\nimport { ModalService } from '../../../shared/components/modal/modal.service';\r\nimport { CurrentProductService } from '../../product/current-product.service';\r\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\r\n\r\n@Component({\r\n  selector: 'cx-add-to-cart',\r\n  templateUrl: './add-to-cart.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddToCartComponent implements OnInit, OnDestroy {\r\n  @Input() productCode: string;\r\n  @Input() showQuantity = true;\r\n\r\n  /**\r\n   * As long as we do not support #5026, we require product input, as we need\r\n   *  a reference to the product model to fetch the stock data.\r\n   */\r\n  @Input() product: Product;\r\n\r\n  maxQuantity: number;\r\n  modalRef: ModalRef;\r\n\r\n  hasStock = false;\r\n  quantity = 1;\r\n  increment = false;\r\n  cartEntry$: Observable<OrderEntry>;\r\n\r\n  subscription: Subscription;\r\n\r\n  addToCartForm = new FormGroup({\r\n    quantity: new FormControl(1),\r\n  });\r\n\r\n  constructor(\r\n    protected modalService: ModalService,\r\n    protected currentProductService: CurrentProductService,\r\n    private cd: ChangeDetectorRef,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.product) {\r\n      this.productCode = this.product.code;\r\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\r\n      this.setStockInfo(this.product);\r\n      this.cd.markForCheck();\r\n    } else if (this.productCode) {\r\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\r\n      // force hasStock and quantity for the time being, as we do not have more info:\r\n      this.quantity = 1;\r\n      this.hasStock = true;\r\n      this.cd.markForCheck();\r\n    } else {\r\n      this.subscription = this.currentProductService\r\n        .getProduct()\r\n        .pipe(filter(Boolean))\r\n        .subscribe((product: Product) => {\r\n          this.productCode = product.code;\r\n          this.setStockInfo(product);\r\n          this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\r\n          this.cd.markForCheck();\r\n        });\r\n    }\r\n  }\r\n\r\n  private setStockInfo(product: Product): void {\r\n    this.quantity = 1;\r\n    this.hasStock =\r\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\r\n    if (this.hasStock && product.stock.stockLevel) {\r\n      this.maxQuantity = product.stock.stockLevel;\r\n    }\r\n  }\r\n\r\n  updateCount(value: number): void {\r\n    this.quantity = value;\r\n  }\r\n\r\n  addToCart() {\r\n    const quantity = this.addToCartForm.get('quantity').value;\r\n    if (!this.productCode || quantity <= 0) {\r\n      return;\r\n    }\r\n    // check item is already present in the cart\r\n    // so modal will have proper header text displayed\r\n    this.activeCartService\r\n      .getEntry(this.productCode)\r\n      .subscribe((entry) => {\r\n        if (entry) {\r\n          this.increment = true;\r\n        }\r\n        this.openModal();\r\n        this.activeCartService.addEntry(this.productCode, quantity);\r\n        this.increment = false;\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  private openModal() {\r\n    let modalInstance: any;\r\n    this.modalRef = this.modalService.open(AddedToCartDialogComponent, {\r\n      centered: true,\r\n      size: 'lg',\r\n    });\r\n\r\n    modalInstance = this.modalRef.componentInstance;\r\n    modalInstance.entry$ = this.cartEntry$;\r\n    modalInstance.cart$ = this.activeCartService.getActive();\r\n    modalInstance.loaded$ = this.activeCartService.isStable();\r\n    modalInstance.quantity = this.quantity;\r\n    modalInstance.increment = this.increment;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PromotionsComponent } from './promotions.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PromotionsComponent],\r\n  exports: [PromotionsComponent],\r\n})\r\nexport class PromotionsModule {}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Voucher, CartVoucherService } from '@spartacus/core';\r\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-applied-coupons',\r\n  templateUrl: './applied-coupons.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppliedCouponsComponent {\r\n  @Input()\r\n  vouchers: Voucher[];\r\n  @Input()\r\n  cartIsLoading = false;\r\n  @Input()\r\n  isReadOnly = false;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(private cartVoucherService: CartVoucherService) {}\r\n\r\n  public get sortedVouchers(): Voucher[] {\r\n    this.vouchers = this.vouchers || [];\r\n    return this.vouchers.slice().sort((a, b) => {\r\n      return a.code.localeCompare(b.code);\r\n    });\r\n  }\r\n\r\n  removeVoucher(voucherId: string) {\r\n    this.cartVoucherService.removeVoucher(voucherId);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  CartVoucherService,\r\n  CustomerCoupon,\r\n  CustomerCouponSearchResult,\r\n  CustomerCouponService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-cart-coupon',\r\n  templateUrl: './cart-coupon.component.html',\r\n})\r\nexport class CartCouponComponent implements OnInit, OnDestroy {\r\n  MAX_CUSTOMER_COUPON_PAGE = 100;\r\n  couponForm: FormGroup;\r\n  cartIsLoading$: Observable<boolean>;\r\n  cart$: Observable<Cart>;\r\n  cartId: string;\r\n  applicableCoupons: CustomerCoupon[];\r\n\r\n  private ignoreCloseEvent = false;\r\n\r\n  private subscription = new Subscription();\r\n\r\n  couponBoxIsActive = false;\r\n\r\n  constructor(\r\n    protected cartVoucherService: CartVoucherService,\r\n    protected formBuilder: FormBuilder,\r\n    protected customerCouponService: CustomerCouponService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.customerCouponService) {\r\n      this.customerCouponService.loadCustomerCoupons(\r\n        this.MAX_CUSTOMER_COUPON_PAGE\r\n      );\r\n    }\r\n\r\n    this.cart$ = combineLatest([\r\n      this.activeCartService.getActive(),\r\n      this.activeCartService.getActiveCartId(),\r\n      this.customerCouponService.getCustomerCoupons(\r\n        this.MAX_CUSTOMER_COUPON_PAGE\r\n      ),\r\n    ]).pipe(\r\n      tap(\r\n        ([cart, activeCardId, customerCoupons]: [\r\n          Cart,\r\n          string,\r\n          CustomerCouponSearchResult\r\n        ]) => {\r\n          this.cartId = activeCardId;\r\n          this.getApplicableCustomerCoupons(cart, customerCoupons.coupons);\r\n        }\r\n      ),\r\n      map(([cart]: [Cart, string, CustomerCouponSearchResult]) => cart)\r\n    );\r\n\r\n    this.cartIsLoading$ = this.activeCartService\r\n      .isStable()\r\n      .pipe(map((loaded) => !loaded));\r\n\r\n    this.cartVoucherService.resetAddVoucherProcessingState();\r\n\r\n    this.couponForm = this.formBuilder.group({\r\n      couponCode: ['', [Validators.required]],\r\n    });\r\n\r\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\r\n    this.subscription.add(\r\n      this.cartVoucherService\r\n        .getAddVoucherResultSuccess()\r\n        .subscribe((success) => {\r\n          this.onSuccess(success);\r\n        })\r\n    );\r\n\r\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\r\n    this.subscription.add(\r\n      this.cartVoucherService.getAddVoucherResultError().subscribe((error) => {\r\n        this.onError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  protected onError(error: boolean) {\r\n    if (error) {\r\n      this.customerCouponService.loadCustomerCoupons(\r\n        this.MAX_CUSTOMER_COUPON_PAGE\r\n      );\r\n      this.cartVoucherService.resetAddVoucherProcessingState();\r\n    }\r\n  }\r\n\r\n  onSuccess(success: boolean) {\r\n    if (success) {\r\n      this.couponForm.reset();\r\n      this.cartVoucherService.resetAddVoucherProcessingState();\r\n    }\r\n  }\r\n\r\n  protected getApplicableCustomerCoupons(\r\n    cart: Cart,\r\n    coupons: CustomerCoupon[]\r\n  ): void {\r\n    this.applicableCoupons = coupons || [];\r\n    if (cart.appliedVouchers) {\r\n      cart.appliedVouchers.forEach((appliedVoucher) => {\r\n        this.applicableCoupons = this.applicableCoupons.filter(\r\n          (coupon) => coupon.couponId !== appliedVoucher.code\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  applyVoucher(): void {\r\n    if (this.couponForm.valid) {\r\n      this.cartVoucherService.addVoucher(\r\n        this.couponForm.value.couponCode,\r\n        this.cartId\r\n      );\r\n    } else {\r\n      this.couponForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  applyCustomerCoupon(couponId: string): void {\r\n    this.cartVoucherService.addVoucher(couponId, this.cartId);\r\n    this.couponBoxIsActive = false;\r\n  }\r\n\r\n  close(event: UIEvent): void {\r\n    if (!this.ignoreCloseEvent) {\r\n      this.couponBoxIsActive = false;\r\n      if (event && event.target) {\r\n        (<HTMLElement>event.target).blur();\r\n      }\r\n    }\r\n    this.ignoreCloseEvent = false;\r\n  }\r\n\r\n  disableClose(): void {\r\n    this.ignoreCloseEvent = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.cartVoucherService.resetAddVoucherProcessingState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { AppliedCouponsComponent } from './applied-coupons/applied-coupons.component';\r\nimport { CartCouponComponent } from './cart-coupon.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  declarations: [CartCouponComponent, AppliedCouponsComponent],\r\n  exports: [CartCouponComponent, AppliedCouponsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    I18nModule,\r\n    IconModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CartApplyCouponComponent: {\r\n          component: CartCouponComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n\r\n  entryComponents: [CartCouponComponent],\r\n})\r\nexport class CartCouponModule {}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport {\r\n  ActiveCartService,\r\n  ConsignmentEntry,\r\n  PromotionLocation,\r\n  SelectiveCartService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport {\r\n  CartItemComponentOptions,\r\n  Item,\r\n} from '../cart-item/cart-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-cart-item-list',\r\n  templateUrl: './cart-item-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CartItemListComponent {\r\n  @Input() readonly = false;\r\n\r\n  @Input() hasHeader = true;\r\n\r\n  @Input() options: CartItemComponentOptions = {\r\n    isSaveForLater: false,\r\n    optionalBtn: null,\r\n  };\r\n\r\n  private _items: Item[] = [];\r\n  form: FormGroup;\r\n\r\n  @Input('items')\r\n  // TODO: currently we're getting a new array of items if the cart changes.\r\n  // pretty annoying as it forces a repaint on the screen,\r\n  // which is noticable in the UI.\r\n  set items(items: Item[]) {\r\n    this.resolveItems(items);\r\n    this.createForm();\r\n  }\r\n  get items(): Item[] {\r\n    return this._items;\r\n  }\r\n\r\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  @Input('cartIsLoading') set setLoading(value: boolean) {\r\n    if (!this.readonly) {\r\n      // Whenver the cart is loading, we disable the complete form\r\n      // to avoid any user interaction with the cart.\r\n      value\r\n        ? this.form.disable({ emitEvent: false })\r\n        : this.form.enable({ emitEvent: false });\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected activeCartService: ActiveCartService,\r\n    protected selectiveCartService: SelectiveCartService\r\n  ) {}\r\n\r\n  /**\r\n   * The items we're getting form the input do not have a consistent model.\r\n   * In case of a `consignmentEntry`, we need to normalize the data from the orderEntry.\r\n   */\r\n  private resolveItems(items: Item[]): void {\r\n    if (items.every((item) => item.hasOwnProperty('orderEntry'))) {\r\n      this._items = items.map((consignmentEntry) => {\r\n        const entry = Object.assign(\r\n          {},\r\n          (consignmentEntry as ConsignmentEntry).orderEntry\r\n        );\r\n        entry.quantity = consignmentEntry.quantity;\r\n        return entry;\r\n      });\r\n    } else {\r\n      this._items = items;\r\n    }\r\n  }\r\n\r\n  private createForm(): void {\r\n    this.form = new FormGroup({});\r\n    this._items.forEach((item) => {\r\n      const { code } = item.product;\r\n      const group = new FormGroup({\r\n        entryNumber: new FormControl((<any>item).entryNumber),\r\n        quantity: new FormControl(item.quantity, { updateOn: 'blur' }),\r\n      });\r\n      if (!item.updateable || this.readonly) {\r\n        group.disable();\r\n      }\r\n      this.form.addControl(code, group);\r\n    });\r\n  }\r\n\r\n  removeEntry(item: Item): void {\r\n    if (this.selectiveCartService && this.options.isSaveForLater) {\r\n      this.selectiveCartService.removeEntry(item);\r\n    } else {\r\n      this.activeCartService.removeEntry(item);\r\n    }\r\n    delete this.form.controls[item.product.code];\r\n  }\r\n\r\n  getControl(item: Item): Observable<FormGroup> {\r\n    return this.form.get(item.product.code).valueChanges.pipe(\r\n      // tslint:disable-next-line:deprecation\r\n      startWith(null),\r\n      map((value) => {\r\n        if (value && this.selectiveCartService && this.options.isSaveForLater) {\r\n          this.selectiveCartService.updateEntry(\r\n            value.entryNumber,\r\n            value.quantity\r\n          );\r\n        } else if (value) {\r\n          this.activeCartService.updateEntry(value.entryNumber, value.quantity);\r\n        }\r\n      }),\r\n      map(() => <FormGroup>this.form.get(item.product.code))\r\n    );\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { PromotionLocation, PromotionResult } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\nexport interface Item {\r\n  product?: any;\r\n  quantity?: any;\r\n  basePrice?: any;\r\n  totalPrice?: any;\r\n  updateable?: boolean;\r\n}\r\n\r\nexport interface CartItemComponentOptions {\r\n  isSaveForLater?: boolean;\r\n  optionalBtn?: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-cart-item',\r\n  templateUrl: './cart-item.component.html',\r\n})\r\nexport class CartItemComponent implements OnInit {\r\n  @Input() compact = false;\r\n  @Input() item: Item;\r\n  @Input() readonly = false;\r\n  @Input() quantityControl: FormControl;\r\n\r\n  @Output() view = new EventEmitter<any>();\r\n\r\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  // TODO: evaluate whether this is generic enough\r\n  @Input() options: CartItemComponentOptions = {\r\n    isSaveForLater: false,\r\n    optionalBtn: null,\r\n  };\r\n\r\n  appliedProductPromotions$: Observable<PromotionResult[]>;\r\n\r\n  constructor(protected promotionService: PromotionService) {}\r\n\r\n  ngOnInit() {\r\n    this.appliedProductPromotions$ = this.promotionService.getProductPromotionForEntry(\r\n      this.item,\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  isProductOutOfStock(product: any) {\r\n    // TODO Move stocklevelstatuses across the app to an enum\r\n    return (\r\n      product &&\r\n      product.stock &&\r\n      product.stock.stockLevelStatus === 'outOfStock'\r\n    );\r\n  }\r\n\r\n  removeItem() {\r\n    this.quantityControl.setValue(0);\r\n    this.quantityControl.markAsDirty();\r\n  }\r\n\r\n  viewItem() {\r\n    this.view.emit();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\nimport { Cart } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-summary',\n  templateUrl: './order-summary.component.html',\n})\nexport class OrderSummaryComponent {\n  @Input()\n  cart: Cart;\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FeaturesConfigModule, I18nModule, UrlModule } from '@spartacus/core';\r\nimport { ItemCounterModule } from '../../../shared/components/item-counter/item-counter.module';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\r\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\r\nimport { CartItemListComponent } from './cart-item-list/cart-item-list.component';\r\nimport { CartItemComponent } from './cart-item/cart-item.component';\r\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    CartCouponModule,\r\n    ReactiveFormsModule,\r\n    UrlModule,\r\n    NgbModule,\r\n    PromotionsModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    ItemCounterModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  declarations: [\r\n    CartItemComponent,\r\n    OrderSummaryComponent,\r\n    CartItemListComponent,\r\n  ],\r\n  exports: [CartItemComponent, CartItemListComponent, OrderSummaryComponent],\r\n})\r\nexport class CartSharedModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { ItemCounterModule, SpinnerModule } from '../../../shared/index';\r\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\r\nimport { CartSharedModule } from './../cart-shared/cart-shared.module';\r\nimport { AddToCartComponent } from './add-to-cart.component';\r\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    CartSharedModule,\r\n    RouterModule,\r\n    SpinnerModule,\r\n    PromotionsModule,\r\n    FeaturesConfigModule,\r\n    UrlModule,\r\n    IconModule,\r\n    I18nModule,\r\n    ItemCounterModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductAddToCartComponent: {\r\n          component: AddToCartComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [AddToCartComponent, AddedToCartDialogComponent],\r\n  entryComponents: [AddToCartComponent, AddedToCartDialogComponent],\r\n  exports: [AddToCartComponent, AddedToCartDialogComponent],\r\n})\r\nexport class AddToCartModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  AuthService,\r\n  Cart,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n  RoutingService,\r\n  SelectiveCartService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { PromotionService } from '../../../shared/services/promotion/promotion.service';\r\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-cart-details',\r\n  templateUrl: './cart-details.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CartDetailsComponent implements OnInit {\r\n  cart$: Observable<Cart>;\r\n  entries$: Observable<OrderEntry[]>;\r\n  cartLoaded$: Observable<boolean>;\r\n  loggedIn = false;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n  promotions$: Observable<PromotionResult[]>;\r\n  selectiveCartEnabled: boolean;\r\n\r\n  constructor(\r\n    protected activeCartService: ActiveCartService,\r\n    protected promotionService: PromotionService,\r\n    protected selectiveCartService: SelectiveCartService,\r\n    protected authService: AuthService,\r\n    protected routingService: RoutingService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.promotions$ = this.promotionService.getOrderPromotionsFromCart();\r\n\r\n    this.entries$ = this.activeCartService\r\n      .getEntries()\r\n      .pipe(filter((entries) => entries.length > 0));\r\n\r\n    this.selectiveCartEnabled = this.selectiveCartService.isEnabled();\r\n\r\n    this.cartLoaded$ = combineLatest([\r\n      this.activeCartService.isStable(),\r\n      this.selectiveCartEnabled\r\n        ? this.selectiveCartService.getLoaded()\r\n        : of(false),\r\n      this.authService.isUserLoggedIn(),\r\n    ]).pipe(\r\n      tap(([, , loggedIn]) => (this.loggedIn = loggedIn)),\r\n      map(([cartLoaded, sflLoaded, loggedIn]) =>\r\n        loggedIn && this.selectiveCartEnabled\r\n          ? cartLoaded && sflLoaded\r\n          : cartLoaded\r\n      )\r\n    );\r\n\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  saveForLater(item: Item) {\r\n    if (this.loggedIn) {\r\n      this.activeCartService.removeEntry(item);\r\n      this.selectiveCartService.addEntry(item.product.code, item.quantity);\r\n    } else {\r\n      this.routingService.go({ cxRoute: 'login' });\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\r\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\r\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\r\nimport { CartDetailsComponent } from './cart-details.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CartSharedModule,\r\n    CommonModule,\r\n    CartCouponModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    PromotionsModule,\r\n    FeaturesConfigModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CartComponent: {\r\n          component: CartDetailsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CartDetailsComponent],\r\n  exports: [CartDetailsComponent],\r\n  entryComponents: [CartDetailsComponent],\r\n})\r\nexport class CartDetailsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { ActiveCartService, Cart, RoutingService } from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CartNotEmptyGuard implements CanActivate {\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return combineLatest([\r\n      this.activeCartService.getActive(),\r\n      this.activeCartService.isStable(),\r\n    ]).pipe(\r\n      filter(([_, loaded]) => loaded),\r\n      map(([cart]) => {\r\n        if (this.isEmpty(cart)) {\r\n          this.routingService.go({ cxRoute: 'home' });\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  private isEmpty(cart: Cart): boolean {\r\n    return cart && !cart.totalItems;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActiveCartService, Cart, SelectiveCartService } from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PageLayoutHandler } from '../../cms-structure/page/page-layout/page-layout-handler';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CartPageLayoutHandler implements PageLayoutHandler {\r\n  constructor(\r\n    protected activeCartService: ActiveCartService,\r\n    protected selectiveCartService: SelectiveCartService\r\n  ) {}\r\n\r\n  handle(\r\n    slots$: Observable<string[]>,\r\n    pageTemplate?: string,\r\n    section?: string\r\n  ) {\r\n    if (pageTemplate === 'CartPageTemplate' && !section) {\r\n      return combineLatest([\r\n        slots$,\r\n        this.activeCartService.getActive(),\r\n        this.selectiveCartService.isEnabled()\r\n          ? this.selectiveCartService.getCart()\r\n          : of({} as Cart),\r\n        this.activeCartService.getLoading(),\r\n      ]).pipe(\r\n        map(([slots, cart, selectiveCart, loadingCart]) => {\r\n          const exclude = (arr, args) =>\r\n            arr.filter((item) => args.every((arg) => arg !== item));\r\n          return Object.keys(cart).length === 0 && loadingCart\r\n            ? exclude(slots, [\r\n                'TopContent',\r\n                'CenterRightContentSlot',\r\n                'EmptyCartMiddleContent',\r\n              ])\r\n            : cart.totalItems\r\n            ? exclude(slots, ['EmptyCartMiddleContent'])\r\n            : selectiveCart.totalItems\r\n            ? exclude(slots, [\r\n                'EmptyCartMiddleContent',\r\n                'CenterRightContentSlot',\r\n              ])\r\n            : exclude(slots, ['TopContent', 'CenterRightContentSlot']);\r\n        })\r\n      );\r\n    }\r\n    return slots$;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActiveCartService, Cart, OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-cart-totals',\r\n  templateUrl: './cart-totals.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CartTotalsComponent implements OnInit {\r\n  cart$: Observable<Cart>;\r\n  entries$: Observable<OrderEntry[]>;\r\n\r\n  constructor(protected activeCartService: ActiveCartService) {}\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.entries$ = this.activeCartService\r\n      .getEntries()\r\n      .pipe(filter((entries) => entries.length > 0));\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\r\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\r\nimport { CartTotalsComponent } from './cart-totals.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    CartSharedModule,\r\n    I18nModule,\r\n    CartCouponModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CartTotalsComponent: {\r\n          component: CartTotalsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CartTotalsComponent],\r\n  exports: [CartTotalsComponent],\r\n  entryComponents: [CartTotalsComponent],\r\n})\r\nexport class CartTotalsModule {}\r\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler[]>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActiveCartService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, startWith } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-mini-cart',\r\n  templateUrl: './mini-cart.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MiniCartComponent {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  quantity$: Observable<number> = this.activeCartService.getActive().pipe(\r\n    startWith({ deliveryItemsQuantity: 0 }),\r\n    map((cart) => cart.deliveryItemsQuantity || 0)\r\n  );\r\n\r\n  total$: Observable<string> = this.activeCartService.getActive().pipe(\r\n    filter((cart) => !!cart.totalPrice),\r\n    map((cart) => cart.totalPrice.formattedValue)\r\n  );\r\n\r\n  constructor(protected activeCartService: ActiveCartService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\r\nimport { MiniCartComponent } from './mini-cart.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, UrlModule, IconModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        MiniCartComponent: {\r\n          component: MiniCartComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [MiniCartComponent],\r\n  exports: [MiniCartComponent],\r\n  entryComponents: [MiniCartComponent],\r\n})\r\nexport class MiniCartModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport {\r\n  AuthService,\r\n  OrderEntry,\r\n  Product,\r\n  WishListService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\r\nimport { CurrentProductService } from '../../product/current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-add-to-wishlist',\r\n  templateUrl: './add-to-wish-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddToWishListComponent {\r\n  product$: Observable<Product> = this.currentProductService.getProduct().pipe(\r\n    filter((product) => Boolean(product)),\r\n    tap((product) => this.setStockInfo(product))\r\n  );\r\n\r\n  wishListEntries$: Observable<\r\n    OrderEntry[]\r\n  > = this.wishListService.getWishList().pipe(\r\n    filter((wishlist) => Boolean(wishlist)),\r\n    map((wishList) => wishList.entries)\r\n  );\r\n\r\n  userLoggedIn$: Observable<boolean> = this.authService.isUserLoggedIn();\r\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\r\n\r\n  hasStock = false;\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(\r\n    protected wishListService: WishListService,\r\n    protected currentProductService: CurrentProductService,\r\n    protected authService: AuthService\r\n  ) {}\r\n\r\n  add(product: Product): void {\r\n    this.wishListService.addEntry(product.code);\r\n  }\r\n\r\n  remove(entry: OrderEntry): void {\r\n    this.wishListService.removeEntry(entry);\r\n  }\r\n\r\n  getProductInWishList(product: Product, entries: OrderEntry[]): OrderEntry {\r\n    const item = entries.find((entry) => entry.product.code === product.code);\r\n    return item;\r\n  }\r\n\r\n  private setStockInfo(product: Product): void {\r\n    this.hasStock =\r\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { AddToWishListComponent } from './add-to-wish-list.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, IconModule, RouterModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AddToWishListComponent: {\r\n          component: AddToWishListComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [AddToWishListComponent],\r\n  entryComponents: [AddToWishListComponent],\r\n  exports: [AddToWishListComponent],\r\n})\r\nexport class AddToWishListModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  CmsParagraphComponent,\r\n  CmsService,\r\n  OrderEntry,\r\n  SelectiveCartService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-save-for-later',\r\n  templateUrl: './save-for-later.component.html',\r\n})\r\nexport class SaveForLaterComponent implements OnInit {\r\n  saveForLater$: Observable<Cart>;\r\n  cart$: Observable<Cart>;\r\n  entries$: Observable<OrderEntry[]>;\r\n  cartLoaded$: Observable<boolean>;\r\n  data$: Observable<CmsParagraphComponent>;\r\n  isCartEmpty$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected cmsService: CmsService,\r\n    protected cartService: ActiveCartService,\r\n    protected selectiveCartService: SelectiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isCartEmpty$ = this.cartService\r\n      .getActive()\r\n      .pipe(map((cart) => !(cart && cart.totalItems && cart.totalItems > 0)));\r\n    this.saveForLater$ = this.selectiveCartService.getCart();\r\n    this.entries$ = this.selectiveCartService\r\n      .getEntries()\r\n      .pipe(filter((entries) => entries.length > 0));\r\n    this.cartLoaded$ = combineLatest([\r\n      this.cartService.isStable(),\r\n      this.selectiveCartService.getLoaded(),\r\n    ]).pipe(map(([cartLoaded, sflLoaded]) => cartLoaded && sflLoaded));\r\n    this.data$ = this.cmsService.getComponentData(\r\n      'EmptyCartParagraphComponent'\r\n    );\r\n  }\r\n\r\n  moveToCart(item: Item) {\r\n    this.selectiveCartService.removeEntry(item);\r\n    this.cartService.addEntry(item.product.code, item.quantity);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\r\nimport { SaveForLaterComponent } from './save-for-later.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, CartSharedModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\r\n      cmsComponents: {\r\n        SaveForLaterComponent: {\r\n          component: SaveForLaterComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [SaveForLaterComponent],\r\n  exports: [SaveForLaterComponent],\r\n  entryComponents: [SaveForLaterComponent],\r\n})\r\nexport class SaveForLaterModule {}\r\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartModule } from '@spartacus/core';\nimport { PAGE_LAYOUT_HANDLER } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { AddToCartModule } from './add-to-cart/add-to-cart.module';\nimport { CartDetailsModule } from './cart-details/cart-details.module';\nimport { CartPageLayoutHandler } from './cart-page-layout-handler';\nimport { CartSharedModule } from './cart-shared/cart-shared.module';\nimport { CartTotalsModule } from './cart-totals/cart-totals.module';\nimport { MiniCartModule } from './mini-cart/mini-cart.module';\nimport { AddToWishListModule } from './add-to-wishlist/add-to-wish-list.module';\nimport { SaveForLaterModule } from './save-for-later/save-for-later.module';\n@NgModule({\n  imports: [\n    NgbModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    SaveForLaterModule,\n  ],\n  exports: [\n    AddToWishListModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    AddToCartModule,\n    MiniCartModule,\n    CartModule,\n    SaveForLaterModule,\n  ],\n  declarations: [],\n  providers: [\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useExisting: CartPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CartComponentModule {}\n","export enum CheckoutStepType {\n  SHIPPING_ADDRESS = 'shippingAddress',\n  DELIVERY_MODE = 'deliveryMode',\n  PAYMENT_DETAILS = 'paymentDetails',\n  REVIEW_ORDER = 'reviewOrder',\n}\n\nexport interface CheckoutStep {\n  id: string;\n  name: string;\n  routeName: string;\n  type: Array<CheckoutStepType>;\n}\n","import { CheckoutStep } from '../model/checkout-step.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\nexport enum DeliveryModePreferences {\r\n  FREE = 'FREE',\r\n  LEAST_EXPENSIVE = 'LEAST_EXPENSIVE', // but not free\r\n  MOST_EXPENSIVE = 'MOST_EXPENSIVE',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class CheckoutConfig {\r\n  checkout?: {\r\n    /**\r\n     * Set checkout steps as ordered array of pages.\r\n     */\r\n    steps?: Array<CheckoutStep>;\r\n    /**\r\n     * Allow for express checkout when default shipping method and payment method are available.\r\n     */\r\n    express?: boolean;\r\n    /**\r\n     * Default delivery mode for i.a. express checkout. Set preferences in order with general preferences (eg. DeliveryModePreferences.LEAST_EXPENSIVE) or specific delivery codes.\r\n     */\r\n    defaultDeliveryMode?: Array<DeliveryModePreferences | string>;\r\n    /**\r\n     * Allow for guest checkout.\r\n     */\r\n    guest?: boolean;\r\n  };\r\n}\r\n","import { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfig, DeliveryModePreferences } from './checkout-config';\n\nexport const defaultCheckoutConfig: CheckoutConfig = {\n  checkout: {\n    steps: [\n      {\n        id: 'shippingAddress',\n        name: 'checkoutProgress.shippingAddress',\n        routeName: 'checkoutShippingAddress',\n        type: [CheckoutStepType.SHIPPING_ADDRESS],\n      },\n      {\n        id: 'deliveryMode',\n        name: 'checkoutProgress.deliveryMode',\n        routeName: 'checkoutDeliveryMode',\n        type: [CheckoutStepType.DELIVERY_MODE],\n      },\n      {\n        id: 'paymentDetails',\n        name: 'checkoutProgress.paymentDetails',\n        routeName: 'checkoutPaymentDetails',\n        type: [CheckoutStepType.PAYMENT_DETAILS],\n      },\n      {\n        id: 'reviewOrder',\n        name: 'checkoutProgress.reviewOrder',\n        routeName: 'checkoutReviewOrder',\n        type: [CheckoutStepType.REVIEW_ORDER],\n      },\n    ],\n    express: false,\n    defaultDeliveryMode: [DeliveryModePreferences.FREE],\n    guest: false,\n  },\n};\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DeliveryMode, RoutingConfigService } from '@spartacus/core';\r\nimport {\r\n  CheckoutConfig,\r\n  DeliveryModePreferences,\r\n} from '../config/checkout-config';\r\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutConfigService {\r\n  steps: CheckoutStep[] = this.checkoutConfig.checkout.steps;\r\n  private express: boolean = this.checkoutConfig.checkout.express;\r\n  private guest: boolean = this.checkoutConfig.checkout.guest;\r\n  private defaultDeliveryMode: Array<DeliveryModePreferences | string> =\r\n    this.checkoutConfig.checkout.defaultDeliveryMode || [];\r\n\r\n  constructor(\r\n    private checkoutConfig: CheckoutConfig,\r\n    private routingConfigService: RoutingConfigService\r\n  ) {}\r\n\r\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep {\r\n    return this.steps[this.getCheckoutStepIndex('type', currentStepType)];\r\n  }\r\n\r\n  getCheckoutStepRoute(currentStepType: CheckoutStepType): string {\r\n    return this.getCheckoutStep(currentStepType).routeName;\r\n  }\r\n\r\n  getFirstCheckoutStepRoute(): string {\r\n    return this.steps[0].routeName;\r\n  }\r\n\r\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\r\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\r\n\r\n    return stepIndex >= 0 && this.steps[stepIndex + 1]\r\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex + 1].routeName)\r\n      : null;\r\n  }\r\n\r\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\r\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\r\n\r\n    return stepIndex >= 0 && this.steps[stepIndex - 1]\r\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex - 1].routeName)\r\n      : null;\r\n  }\r\n\r\n  getCurrentStepIndex(activatedRoute: ActivatedRoute): number | null {\r\n    const currentStepUrl: string = this.getStepUrlFromActivatedRoute(\r\n      activatedRoute\r\n    );\r\n\r\n    let stepIndex: number;\r\n    let index = 0;\r\n    for (const step of this.steps) {\r\n      if (\r\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\r\n      ) {\r\n        stepIndex = index;\r\n      } else {\r\n        index++;\r\n      }\r\n    }\r\n\r\n    return stepIndex >= 0 ? stepIndex : null;\r\n  }\r\n\r\n  protected compareDeliveryCost(\r\n    deliveryMode1: DeliveryMode,\r\n    deliveryMode2: DeliveryMode\r\n  ): number {\r\n    if (deliveryMode1.deliveryCost.value > deliveryMode2.deliveryCost.value) {\r\n      return 1;\r\n    } else if (\r\n      deliveryMode1.deliveryCost.value < deliveryMode2.deliveryCost.value\r\n    ) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  protected findMatchingDeliveryMode(\r\n    deliveryModes: DeliveryMode[],\r\n    index = 0\r\n  ): string {\r\n    switch (this.defaultDeliveryMode[index]) {\r\n      case DeliveryModePreferences.FREE:\r\n        if (deliveryModes[0].deliveryCost.value === 0) {\r\n          return deliveryModes[0].code;\r\n        }\r\n        break;\r\n      case DeliveryModePreferences.LEAST_EXPENSIVE:\r\n        const leastExpensiveFound = deliveryModes.find(\r\n          (deliveryMode) => deliveryMode.deliveryCost.value !== 0\r\n        );\r\n        if (leastExpensiveFound) {\r\n          return leastExpensiveFound.code;\r\n        }\r\n        break;\r\n      case DeliveryModePreferences.MOST_EXPENSIVE:\r\n        return deliveryModes[deliveryModes.length - 1].code;\r\n      default:\r\n        const codeFound = deliveryModes.find(\r\n          (deliveryMode) =>\r\n            deliveryMode.code === this.defaultDeliveryMode[index]\r\n        );\r\n        if (codeFound) {\r\n          return codeFound.code;\r\n        }\r\n    }\r\n    const lastMode = this.defaultDeliveryMode.length - 1 <= index;\r\n    return lastMode\r\n      ? deliveryModes[0].code\r\n      : this.findMatchingDeliveryMode(deliveryModes, index + 1);\r\n  }\r\n\r\n  getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string {\r\n    deliveryModes.sort(this.compareDeliveryCost);\r\n    return this.findMatchingDeliveryMode(deliveryModes);\r\n  }\r\n\r\n  isExpressCheckout(): boolean {\r\n    return this.express;\r\n  }\r\n\r\n  isGuestCheckout(): boolean {\r\n    return this.guest;\r\n  }\r\n\r\n  private getStepUrlFromActivatedRoute(\r\n    activatedRoute: ActivatedRoute\r\n  ): string | null {\r\n    return activatedRoute &&\r\n      activatedRoute.snapshot &&\r\n      activatedRoute.snapshot.url\r\n      ? `/${activatedRoute.snapshot.url.join('/')}`\r\n      : null;\r\n  }\r\n\r\n  private getStepUrlFromStepRoute(stepRoute: string): string {\r\n    return this.routingConfigService.getRouteConfig(stepRoute).paths[0];\r\n  }\r\n\r\n  private getCheckoutStepIndex(key: string, value: any): number | null {\r\n    return key && value\r\n      ? this.steps.findIndex((step: CheckoutStep) => step[key].includes(value))\r\n      : null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  AuthRedirectService,\r\n  AuthService,\r\n  RoutingService,\r\n  User,\r\n  UserToken,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CheckoutConfigService } from '../services/checkout-config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutAuthGuard implements CanActivate {\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected authService: AuthService,\r\n    protected authRedirectService: AuthRedirectService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return combineLatest([\r\n      this.authService.getUserToken(),\r\n      this.activeCartService.getAssignedUser(),\r\n    ]).pipe(\r\n      map(([token, user]: [UserToken, User]) => {\r\n        if (!token.access_token) {\r\n          if (this.activeCartService.isGuestCart()) {\r\n            return Boolean(user);\r\n          }\r\n          if (this.checkoutConfigService.isGuestCheckout()) {\r\n            this.routingService.go({ cxRoute: 'login' }, { forced: true });\r\n          } else {\r\n            this.routingService.go({ cxRoute: 'login' });\r\n          }\r\n          this.authRedirectService.reportAuthGuard();\r\n        }\r\n        return !!token.access_token;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  CheckoutService,\r\n  OCC_USER_ID_ANONYMOUS,\r\n  PaymentDetails,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  filter,\r\n  map,\r\n  shareReplay,\r\n  skipWhile,\r\n  switchMap,\r\n  tap,\r\n} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutDetailsService {\r\n  cartId$: Observable<string>;\r\n  getCheckoutDetailsLoaded$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {\r\n    this.cartId$ = this.activeCartService.getActive().pipe(\r\n      map((cartData) => {\r\n        if (\r\n          (cartData.user && cartData.user.uid === OCC_USER_ID_ANONYMOUS) ||\r\n          this.activeCartService.isGuestCart()\r\n        ) {\r\n          return cartData.guid;\r\n        }\r\n        return cartData.code;\r\n      }),\r\n      filter((cartId) => !!cartId)\r\n    );\r\n\r\n    this.getCheckoutDetailsLoaded$ = this.cartId$.pipe(\r\n      tap((cartId) => this.checkoutService.loadCheckoutDetails(cartId)),\r\n      shareReplay(1),\r\n      switchMap(() => this.checkoutService.getCheckoutDetailsLoaded()),\r\n      skipWhile((loaded) => !loaded)\r\n    );\r\n  }\r\n\r\n  getDeliveryAddress(): Observable<Address> {\r\n    return this.getCheckoutDetailsLoaded$.pipe(\r\n      switchMap(() => this.checkoutDeliveryService.getDeliveryAddress())\r\n    );\r\n  }\r\n\r\n  getSelectedDeliveryModeCode(): Observable<string> {\r\n    return this.getCheckoutDetailsLoaded$.pipe(\r\n      switchMap(() =>\r\n        this.checkoutDeliveryService.getSelectedDeliveryModeCode()\r\n      )\r\n    );\r\n  }\r\n\r\n  getPaymentDetails(): Observable<PaymentDetails> {\r\n    return this.getCheckoutDetailsLoaded$.pipe(\r\n      switchMap(() => this.checkoutPaymentService.getPaymentDetails())\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { combineLatest, of, Observable } from 'rxjs';\r\nimport { filter, map, switchMap, tap, debounceTime } from 'rxjs/operators';\r\n\r\nimport {\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  UserAddressService,\r\n  UserPaymentService,\r\n  PaymentDetails,\r\n  DeliveryMode,\r\n  CheckoutPaymentService,\r\n  StateUtils,\r\n} from '@spartacus/core';\r\nimport { CheckoutConfigService } from './checkout-config.service';\r\nimport { CheckoutDetailsService } from './checkout-details.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExpressCheckoutService {\r\n  private shippingAddressSet$: Observable<boolean>;\r\n  private deliveryModeSet$: Observable<boolean>;\r\n  private paymentMethodSet$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected userAddressService: UserAddressService,\r\n    protected userPaymentService: UserPaymentService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected checkoutDetailsService: CheckoutDetailsService,\r\n    protected checkoutConfigService: CheckoutConfigService\r\n  ) {\r\n    this.setShippingAddress();\r\n    this.setDeliveryMode();\r\n    this.setPaymentMethod();\r\n  }\r\n\r\n  protected setShippingAddress() {\r\n    this.shippingAddressSet$ = combineLatest([\r\n      this.userAddressService.getAddresses(),\r\n      this.userAddressService.getAddressesLoadedSuccess(),\r\n      this.checkoutDeliveryService.getSetDeliveryAddressProcess(),\r\n    ]).pipe(\r\n      debounceTime(0),\r\n      tap(\r\n        ([, addressesLoadedSuccess]: [\r\n          Address[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          if (!addressesLoadedSuccess) {\r\n            this.userAddressService.loadAddresses();\r\n          }\r\n        }\r\n      ),\r\n      filter(\r\n        ([, addressesLoadedSuccess]: [\r\n          Address[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => addressesLoadedSuccess\r\n      ),\r\n      switchMap(\r\n        ([addresses, , setDeliveryAddressProcess]: [\r\n          Address[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          const defaultAddress =\r\n            addresses.find((address) => address.defaultAddress) || addresses[0];\r\n          if (defaultAddress && Object.keys(defaultAddress).length) {\r\n            if (\r\n              !(\r\n                setDeliveryAddressProcess.success ||\r\n                setDeliveryAddressProcess.error ||\r\n                setDeliveryAddressProcess.loading\r\n              )\r\n            ) {\r\n              this.checkoutDeliveryService.setDeliveryAddress(defaultAddress);\r\n            }\r\n            return of(setDeliveryAddressProcess).pipe(\r\n              filter(\r\n                (\r\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  return (\r\n                    (setDeliveryAddressProcessState.success ||\r\n                      setDeliveryAddressProcessState.error) &&\r\n                    !setDeliveryAddressProcessState.loading\r\n                  );\r\n                }\r\n              ),\r\n              switchMap(\r\n                (\r\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  if (setDeliveryAddressProcessState.success) {\r\n                    return this.checkoutDetailsService.getDeliveryAddress();\r\n                  }\r\n                  return of(false);\r\n                }\r\n              ),\r\n              map((data) => Boolean(data && Object.keys(data).length))\r\n            );\r\n          }\r\n          return of(false);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  protected setPaymentMethod() {\r\n    this.paymentMethodSet$ = combineLatest([\r\n      this.userPaymentService.getPaymentMethods(),\r\n      this.userPaymentService.getPaymentMethodsLoadedSuccess(),\r\n      this.checkoutPaymentService.getSetPaymentDetailsResultProcess(),\r\n    ]).pipe(\r\n      debounceTime(0),\r\n      tap(\r\n        ([, paymentMethodsLoadedSuccess]: [\r\n          PaymentDetails[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          if (!paymentMethodsLoadedSuccess) {\r\n            this.userPaymentService.loadPaymentMethods();\r\n          }\r\n        }\r\n      ),\r\n      filter(\r\n        ([, success]: [\r\n          PaymentDetails[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => success\r\n      ),\r\n      switchMap(\r\n        ([payments, , setPaymentDetailsProcess]: [\r\n          PaymentDetails[],\r\n          boolean,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          const defaultPayment =\r\n            payments.find((address) => address.defaultPayment) || payments[0];\r\n          if (defaultPayment && Object.keys(defaultPayment).length) {\r\n            if (\r\n              !(\r\n                setPaymentDetailsProcess.success ||\r\n                setPaymentDetailsProcess.error ||\r\n                setPaymentDetailsProcess.loading\r\n              )\r\n            ) {\r\n              this.checkoutPaymentService.setPaymentDetails(defaultPayment);\r\n            }\r\n            return of(setPaymentDetailsProcess).pipe(\r\n              filter(\r\n                (\r\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  return (\r\n                    (setPaymentDetailsProcessState.success ||\r\n                      setPaymentDetailsProcessState.error) &&\r\n                    !setPaymentDetailsProcessState.loading\r\n                  );\r\n                }\r\n              ),\r\n              switchMap(\r\n                (\r\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\r\n                ) => {\r\n                  if (setPaymentDetailsProcessState.success) {\r\n                    return this.checkoutDetailsService.getPaymentDetails();\r\n                  }\r\n                  return of(false);\r\n                }\r\n              ),\r\n              map((data) => Boolean(data && Object.keys(data).length))\r\n            );\r\n          }\r\n          return of(false);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  protected setDeliveryMode() {\r\n    this.deliveryModeSet$ = combineLatest([\r\n      this.shippingAddressSet$,\r\n      this.checkoutDeliveryService.getSupportedDeliveryModes(),\r\n      this.checkoutDeliveryService.getSetDeliveryModeProcess(),\r\n      this.checkoutDeliveryService.getLoadSupportedDeliveryModeProcess(),\r\n    ]).pipe(\r\n      debounceTime(0),\r\n      switchMap(\r\n        ([\r\n          addressSet,\r\n          supportedDeliveryModes,\r\n          setDeliveryModeStatusFlag,\r\n          loadSupportedDeliveryModeStatus,\r\n        ]: [\r\n          boolean,\r\n          DeliveryMode[],\r\n          StateUtils.LoaderState<void>,\r\n          StateUtils.LoaderState<void>\r\n        ]) => {\r\n          if (addressSet) {\r\n            return of([\r\n              supportedDeliveryModes,\r\n              setDeliveryModeStatusFlag,\r\n              loadSupportedDeliveryModeStatus,\r\n            ]).pipe(\r\n              filter(\r\n                ([, , supportedDeliveryModeStatus]: [\r\n                  DeliveryMode[],\r\n                  StateUtils.LoaderState<void>,\r\n                  StateUtils.LoaderState<void>\r\n                ]) => supportedDeliveryModeStatus.success\r\n              ),\r\n              switchMap(\r\n                ([deliveryModes, setDeliveryModeStatus, ,]: [\r\n                  DeliveryMode[],\r\n                  StateUtils.LoaderState<void>,\r\n                  StateUtils.LoaderState<void>\r\n                ]) => {\r\n                  if (Boolean(deliveryModes.length)) {\r\n                    const preferredDeliveryMode = this.checkoutConfigService.getPreferredDeliveryMode(\r\n                      deliveryModes\r\n                    );\r\n                    return of([\r\n                      preferredDeliveryMode,\r\n                      setDeliveryModeStatus,\r\n                    ]).pipe(\r\n                      tap(\r\n                        ([deliveryMode, deliveryModeLoadingStatus]: [\r\n                          string,\r\n                          StateUtils.LoaderState<void>\r\n                        ]) => {\r\n                          if (\r\n                            deliveryMode &&\r\n                            !(\r\n                              deliveryModeLoadingStatus.success ||\r\n                              deliveryModeLoadingStatus.error ||\r\n                              deliveryModeLoadingStatus.loading\r\n                            )\r\n                          ) {\r\n                            this.checkoutDeliveryService.setDeliveryMode(\r\n                              deliveryMode\r\n                            );\r\n                          }\r\n                        }\r\n                      ),\r\n                      filter(\r\n                        ([, deliveryModeLoadingStatus]: [\r\n                          string,\r\n                          StateUtils.LoaderState<void>\r\n                        ]) => {\r\n                          return (\r\n                            (deliveryModeLoadingStatus.success ||\r\n                              deliveryModeLoadingStatus.error) &&\r\n                            !deliveryModeLoadingStatus.loading\r\n                          );\r\n                        }\r\n                      ),\r\n                      switchMap(\r\n                        ([, deliveryModeLoadingStatus]: [\r\n                          string,\r\n                          StateUtils.LoaderState<void>\r\n                        ]) => {\r\n                          if (deliveryModeLoadingStatus.success) {\r\n                            return this.checkoutDetailsService.getSelectedDeliveryModeCode();\r\n                          }\r\n                          return of(false);\r\n                        }\r\n                      ),\r\n                      map((data) => Boolean(data))\r\n                    );\r\n                  }\r\n                  return of(false);\r\n                }\r\n              )\r\n            );\r\n          } else {\r\n            return of(false);\r\n          }\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  protected resetCheckoutProcesses() {\r\n    this.checkoutDeliveryService.resetSetDeliveryAddressProcess();\r\n    this.checkoutPaymentService.resetSetPaymentDetailsProcess();\r\n    this.checkoutDeliveryService.resetSetDeliveryModeProcess();\r\n  }\r\n\r\n  public trySetDefaultCheckoutDetails(): Observable<boolean> {\r\n    this.resetCheckoutProcesses();\r\n    return combineLatest([this.deliveryModeSet$, this.paymentMethodSet$]).pipe(\r\n      map(([deliveryModeSet, paymentMethodSet]) =>\r\n        Boolean(deliveryModeSet && paymentMethodSet)\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, UrlTree } from '@angular/router';\r\nimport { ActiveCartService, RoutingConfigService } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { CheckoutStepType } from '../model/checkout-step.model';\r\nimport { CheckoutConfigService } from '../services/checkout-config.service';\r\nimport { ExpressCheckoutService } from '../services/express-checkout.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutGuard implements CanActivate {\r\n  private readonly firstStep$: Observable<UrlTree>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected routingConfigService: RoutingConfigService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected expressCheckoutService: ExpressCheckoutService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {\r\n    this.firstStep$ = of(\r\n      this.router.parseUrl(\r\n        this.routingConfigService.getRouteConfig(\r\n          this.checkoutConfigService.getFirstCheckoutStepRoute()\r\n        ).paths[0]\r\n      )\r\n    );\r\n  }\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    if (\r\n      this.checkoutConfigService.isExpressCheckout() &&\r\n      !this.activeCartService.isGuestCart()\r\n    ) {\r\n      return this.expressCheckoutService.trySetDefaultCheckoutDetails().pipe(\r\n        switchMap((expressCheckoutPossible: boolean) => {\r\n          return expressCheckoutPossible\r\n            ? of(\r\n                this.router.parseUrl(\r\n                  this.routingConfigService.getRouteConfig(\r\n                    this.checkoutConfigService.getCheckoutStepRoute(\r\n                      CheckoutStepType.REVIEW_ORDER\r\n                    )\r\n                  ).paths[0]\r\n                )\r\n              )\r\n            : this.firstStep$;\r\n        })\r\n      );\r\n    }\r\n    return this.firstStep$;\r\n  }\r\n}\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  templateUrl: './checkout-orchestrator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { CheckoutGuard } from '../../guards/checkout.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutOrchestrator: {\r\n          component: CheckoutOrchestratorComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutOrchestratorComponent],\r\n  entryComponents: [CheckoutOrchestratorComponent],\r\n  exports: [CheckoutOrchestratorComponent],\r\n})\r\nexport class CheckoutOrchestratorModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActiveCartService, Cart } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n@Component({\r\n  selector: 'cx-checkout-order-summary',\r\n  templateUrl: './checkout-order-summary.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CheckoutOrderSummaryComponent {\r\n  cart$: Observable<Cart>;\r\n\r\n  constructor(protected activeCartService: ActiveCartService) {\r\n    this.cart$ = this.activeCartService.getActive();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\r\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CartSharedModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutOrderSummary: {\r\n          component: CheckoutOrderSummaryComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutOrderSummaryComponent],\r\n  entryComponents: [CheckoutOrderSummaryComponent],\r\n  exports: [CheckoutOrderSummaryComponent],\r\n})\r\nexport class CheckoutOrderSummaryModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RoutingService, RoutingConfigService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CheckoutConfig } from '../../../config/checkout-config';\r\nimport { CheckoutStep } from '../../../model/checkout-step.model';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-progress-mobile-bottom',\r\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\r\n})\r\nexport class CheckoutProgressMobileBottomComponent implements OnInit {\r\n  constructor(\r\n    protected config: CheckoutConfig,\r\n    protected routingService: RoutingService,\r\n    protected routingConfigService: RoutingConfigService\r\n  ) {}\r\n\r\n  steps: Array<CheckoutStep>;\r\n  routerState$: Observable<any>;\r\n  activeStepIndex: number;\r\n  activeStepUrl: string;\r\n\r\n  ngOnInit() {\r\n    this.steps = this.config.checkout.steps;\r\n    this.routerState$ = this.routingService.getRouterState().pipe(\r\n      tap((router) => {\r\n        this.activeStepUrl = router.state.context.id;\r\n\r\n        this.steps.forEach((step, index) => {\r\n          const routeUrl = `/${\r\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\r\n          }`;\r\n          if (routeUrl === this.activeStepUrl) {\r\n            this.activeStepIndex = index;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\r\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutProgressMobileBottom: {\r\n          component: CheckoutProgressMobileBottomComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutProgressMobileBottomComponent],\r\n  entryComponents: [CheckoutProgressMobileBottomComponent],\r\n  exports: [CheckoutProgressMobileBottomComponent],\r\n})\r\nexport class CheckoutProgressMobileBottomModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  ActiveCartService,\r\n  Cart,\r\n  RoutingConfigService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CheckoutConfig } from '../../../config/checkout-config';\r\nimport { CheckoutStep } from '../../../model/checkout-step.model';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-progress-mobile-top',\r\n  templateUrl: './checkout-progress-mobile-top.component.html',\r\n})\r\nexport class CheckoutProgressMobileTopComponent implements OnInit {\r\n  constructor(\r\n    protected config: CheckoutConfig,\r\n    protected routingService: RoutingService,\r\n    protected routingConfigService: RoutingConfigService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  steps: Array<CheckoutStep>;\r\n  routerState$: Observable<any>;\r\n  cart$: Observable<Cart>;\r\n  activeStepIndex: number;\r\n  activeStepUrl: string;\r\n\r\n  ngOnInit(): void {\r\n    this.steps = this.config.checkout.steps;\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.routerState$ = this.routingService.getRouterState().pipe(\r\n      tap((router) => {\r\n        this.activeStepUrl = router.state.context.id;\r\n\r\n        this.steps.forEach((step, index) => {\r\n          const routeUrl = `/${\r\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\r\n          }`;\r\n          if (routeUrl === this.activeStepUrl) {\r\n            this.activeStepIndex = index;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\r\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutProgressMobileTop: {\r\n          component: CheckoutProgressMobileTopComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutProgressMobileTopComponent],\r\n  entryComponents: [CheckoutProgressMobileTopComponent],\r\n  exports: [CheckoutProgressMobileTopComponent],\r\n})\r\nexport class CheckoutProgressMobileTopModule {}\r\n","import { RoutingService, RoutingConfigService } from '@spartacus/core';\r\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\nimport { CheckoutConfig } from '../../config/checkout-config';\r\nimport { CheckoutStep } from '../../model/checkout-step.model';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-progress',\r\n  templateUrl: './checkout-progress.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CheckoutProgressComponent implements OnInit {\r\n  constructor(\r\n    protected config: CheckoutConfig,\r\n    protected routingService: RoutingService,\r\n    protected routingConfigService: RoutingConfigService\r\n  ) {}\r\n\r\n  steps: Array<CheckoutStep>;\r\n  routerState$: Observable<any>;\r\n  activeStepIndex: number;\r\n  activeStepUrl: string;\r\n\r\n  ngOnInit(): void {\r\n    this.steps = this.config.checkout.steps;\r\n    this.routerState$ = this.routingService.getRouterState().pipe(\r\n      tap((router) => {\r\n        this.activeStepUrl = router.state.context.id;\r\n\r\n        this.steps.forEach((step, index) => {\r\n          const routeUrl = `/${\r\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\r\n          }`;\r\n          if (routeUrl === this.activeStepUrl) {\r\n            this.activeStepIndex = index;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  getTabIndex(stepIndex: number): number {\r\n    return !this.isActive(stepIndex) && !this.isDisabled(stepIndex) ? 0 : -1;\r\n  }\r\n\r\n  isActive(index: number): boolean {\r\n    return index === this.activeStepIndex;\r\n  }\r\n\r\n  isDisabled(index: number): boolean {\r\n    return index > this.activeStepIndex;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { CheckoutProgressComponent } from './checkout-progress.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\r\n  declarations: [CheckoutProgressComponent],\r\n  entryComponents: [CheckoutProgressComponent],\r\n  exports: [CheckoutProgressComponent],\r\n  providers: [\r\n    provideDefaultConfig(defaultCheckoutConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutProgress: {\r\n          component: CheckoutProgressComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n})\r\nexport class CheckoutProgressModule {}\r\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Address, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShippingAddressSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.SHIPPING_ADDRESS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.SHIPPING_ADDRESS} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getDeliveryAddress()\n      .pipe(\n        map((deliveryAddress: Address) =>\n          deliveryAddress && Object.keys(deliveryAddress).length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  CheckoutDeliveryService,\r\n  DeliveryMode,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, withLatestFrom } from 'rxjs/operators';\r\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\r\n\r\n@Component({\r\n  selector: 'cx-delivery-mode',\r\n  templateUrl: './delivery-mode.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DeliveryModeComponent implements OnInit, OnDestroy {\r\n  supportedDeliveryModes$: Observable<DeliveryMode[]>;\r\n  selectedDeliveryMode$: Observable<DeliveryMode>;\r\n  currentDeliveryModeId: string;\r\n  checkoutStepUrlNext: string;\r\n  checkoutStepUrlPrevious: string;\r\n  private allowRedirect = false;\r\n\r\n  deliveryModeSub: Subscription;\r\n\r\n  mode: FormGroup = this.fb.group({\r\n    deliveryModeId: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private checkoutDeliveryService: CheckoutDeliveryService,\r\n    private routingService: RoutingService,\r\n    private checkoutConfigService: CheckoutConfigService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n\r\n    this.supportedDeliveryModes$ = this.checkoutDeliveryService.getSupportedDeliveryModes();\r\n\r\n    this.deliveryModeSub = this.supportedDeliveryModes$\r\n      .pipe(\r\n        withLatestFrom(\r\n          this.checkoutDeliveryService\r\n            .getSelectedDeliveryMode()\r\n            .pipe(\r\n              map((deliveryMode: DeliveryMode) =>\r\n                deliveryMode && deliveryMode.code ? deliveryMode.code : null\r\n              )\r\n            )\r\n        )\r\n      )\r\n      .subscribe(([deliveryModes, code]: [DeliveryMode[], string]) => {\r\n        if (!code && deliveryModes && deliveryModes.length) {\r\n          code = this.checkoutConfigService.getPreferredDeliveryMode(\r\n            deliveryModes\r\n          );\r\n        }\r\n        if (\r\n          this.allowRedirect &&\r\n          !!code &&\r\n          code === this.currentDeliveryModeId\r\n        ) {\r\n          this.routingService.go(this.checkoutStepUrlNext);\r\n        }\r\n        if (code) {\r\n          this.mode.controls['deliveryModeId'].setValue(code);\r\n          if (code !== this.currentDeliveryModeId) {\r\n            this.checkoutDeliveryService.setDeliveryMode(code);\r\n          }\r\n        }\r\n        this.currentDeliveryModeId = code;\r\n      });\r\n  }\r\n\r\n  changeMode(code: string): void {\r\n    if (code !== this.currentDeliveryModeId) {\r\n      this.checkoutDeliveryService.setDeliveryMode(code);\r\n      this.currentDeliveryModeId = code;\r\n    }\r\n  }\r\n\r\n  next(): void {\r\n    this.allowRedirect = true;\r\n    if (this.mode.valid && this.mode.value) {\r\n      if (!this.currentDeliveryModeId) {\r\n        this.currentDeliveryModeId = this.mode.value.deliveryModeId;\r\n      }\r\n      this.checkoutDeliveryService.setDeliveryMode(this.currentDeliveryModeId);\r\n    }\r\n  }\r\n\r\n  back(): void {\r\n    this.routingService.go(this.checkoutStepUrlPrevious);\r\n  }\r\n\r\n  get deliveryModeInvalid(): boolean {\r\n    return this.mode.controls['deliveryModeId'].invalid;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.deliveryModeSub) {\r\n      this.deliveryModeSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { DeliveryModeComponent } from './delivery-mode.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, I18nModule, SpinnerModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutDeliveryMode: {\r\n          component: DeliveryModeComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            ShippingAddressSetGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [DeliveryModeComponent],\r\n  entryComponents: [DeliveryModeComponent],\r\n  exports: [DeliveryModeComponent],\r\n})\r\nexport class DeliveryModeModule {}\r\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryModeSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.DELIVERY_MODE\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.DELIVERY_MODE} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { ModalService } from '../../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  constructor(protected modalService: ModalService) {}\n\n  @Input()\n  suggestedAddresses: Address[];\n  @Input()\n  enteredAddress: Address;\n\n  selectedAddress: Address;\n\n  ngOnInit(): void {\n    this.selectedAddress = this.suggestedAddresses.length\n      ? this.suggestedAddresses[0]\n      : this.enteredAddress;\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  Address,\r\n  AddressValidation,\r\n  CardType,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  Country,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  Region,\r\n  StateUtils,\r\n  UserAddressService,\r\n  UserPaymentService,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { Card } from '../../../../../shared/components/card/card.component'; // tslint:disable-line\r\nimport {\r\n  ModalRef,\r\n  ModalService,\r\n} from '../../../../../shared/components/modal/index';\r\nimport { ICON_TYPE } from '../../../../misc/icon/index';\r\nimport { SuggestedAddressDialogComponent } from '../../shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component'; // tslint:disable-line\r\n\r\n@Component({\r\n  selector: 'cx-payment-form',\r\n  templateUrl: './payment-form.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaymentFormComponent implements OnInit, OnDestroy {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  private addressVerifySub: Subscription;\r\n  suggestedAddressModalRef: ModalRef;\r\n  months: string[] = [];\r\n  years: number[] = [];\r\n\r\n  cardTypes$: Observable<CardType[]>;\r\n  shippingAddress$: Observable<Address>;\r\n  countries$: Observable<Country[]>;\r\n  loading$: Observable<StateUtils.LoaderState<void>>;\r\n  sameAsShippingAddress = true;\r\n  regions$: Observable<Region[]>;\r\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n  showSameAsShippingAddressCheckbox$: Observable<boolean>;\r\n\r\n  @Input()\r\n  setAsDefaultField: boolean;\r\n\r\n  @Input()\r\n  paymentMethodsCount: number;\r\n\r\n  @Output()\r\n  goBack = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  closeForm = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  setPaymentDetails = new EventEmitter<any>();\r\n\r\n  paymentForm: FormGroup = this.fb.group({\r\n    cardType: this.fb.group({\r\n      code: [null, Validators.required],\r\n    }),\r\n    accountHolderName: ['', Validators.required],\r\n    cardNumber: ['', Validators.required],\r\n    expiryMonth: [null, Validators.required],\r\n    expiryYear: [null, Validators.required],\r\n    cvn: ['', Validators.required],\r\n    defaultPayment: [false],\r\n  });\r\n\r\n  billingAddressForm: FormGroup = this.fb.group({\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    line1: ['', Validators.required],\r\n    line2: [''],\r\n    town: ['', Validators.required],\r\n    region: this.fb.group({\r\n      isocodeShort: [null, Validators.required],\r\n    }),\r\n    country: this.fb.group({\r\n      isocode: [null, Validators.required],\r\n    }),\r\n    postalCode: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected userPaymentService: UserPaymentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected fb: FormBuilder,\r\n    protected modalService: ModalService,\r\n    protected userAddressService: UserAddressService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.expMonthAndYear();\r\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\r\n      tap((countries) => {\r\n        // If the store is empty fetch countries. This is also used when changing language.\r\n        if (Object.keys(countries).length === 0) {\r\n          this.userPaymentService.loadBillingCountries();\r\n        }\r\n      })\r\n    );\r\n\r\n    this.cardTypes$ = this.checkoutPaymentService.getCardTypes().pipe(\r\n      tap((cardTypes) => {\r\n        if (Object.keys(cardTypes).length === 0) {\r\n          this.checkoutPaymentService.loadSupportedCardTypes();\r\n        }\r\n      })\r\n    );\r\n\r\n    this.shippingAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\r\n    this.loading$ = this.checkoutPaymentService.getSetPaymentDetailsResultProcess();\r\n\r\n    this.showSameAsShippingAddressCheckbox$ = combineLatest([\r\n      this.countries$,\r\n      this.shippingAddress$,\r\n    ]).pipe(\r\n      map(([countries, address]) => {\r\n        return (\r\n          address?.country &&\r\n          !!countries.filter(\r\n            (country: Country): boolean =>\r\n              country.isocode === address.country.isocode\r\n          ).length\r\n        );\r\n      }),\r\n      tap((shouldShowCheckbox) => {\r\n        this.sameAsShippingAddress = shouldShowCheckbox;\r\n      })\r\n    );\r\n\r\n    // verify the new added address\r\n    this.addressVerifySub = this.checkoutDeliveryService\r\n      .getAddressVerificationResults()\r\n      .subscribe((results: AddressValidation) => {\r\n        if (results.decision === 'FAIL') {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'ACCEPT') {\r\n          this.next();\r\n        } else if (results.decision === 'REJECT') {\r\n          this.globalMessageService.add(\r\n            { key: 'addressForm.invalidAddress' },\r\n            GlobalMessageType.MSG_TYPE_ERROR\r\n          );\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'REVIEW') {\r\n          this.openSuggestedAddress(results);\r\n        }\r\n      });\r\n\r\n    this.regions$ = this.selectedCountry$.pipe(\r\n      switchMap((country) => this.userAddressService.getRegions(country)),\r\n      tap((regions) => {\r\n        const regionControl = this.billingAddressForm.get(\r\n          'region.isocodeShort'\r\n        );\r\n        if (regions.length > 0) {\r\n          regionControl.enable();\r\n        } else {\r\n          regionControl.disable();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  expMonthAndYear(): void {\r\n    const year = new Date().getFullYear();\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      this.years.push(year + i);\r\n    }\r\n\r\n    for (let j = 1; j <= 12; j++) {\r\n      if (j < 10) {\r\n        this.months.push(`0${j}`);\r\n      } else {\r\n        this.months.push(j.toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleDefaultPaymentMethod(): void {\r\n    this.paymentForm.value.defaultPayment = !this.paymentForm.value\r\n      .defaultPayment;\r\n  }\r\n\r\n  toggleSameAsShippingAddress(): void {\r\n    this.sameAsShippingAddress = !this.sameAsShippingAddress;\r\n  }\r\n\r\n  getAddressCardContent(address: Address): Card {\r\n    let region = '';\r\n    if (address.region && address.region.isocode) {\r\n      region = address.region.isocode + ', ';\r\n    }\r\n\r\n    return {\r\n      textBold: address.firstName + ' ' + address.lastName,\r\n      text: [\r\n        address.line1,\r\n        address.line2,\r\n        address.town + ', ' + region + address.country.isocode,\r\n        address.postalCode,\r\n        address.phone,\r\n      ],\r\n    };\r\n  }\r\n\r\n  openSuggestedAddress(results: AddressValidation): void {\r\n    if (!this.suggestedAddressModalRef) {\r\n      this.suggestedAddressModalRef = this.modalService.open(\r\n        SuggestedAddressDialogComponent,\r\n        { centered: true, size: 'lg' }\r\n      );\r\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.billingAddressForm.value;\r\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\r\n        results.suggestedAddresses;\r\n      this.suggestedAddressModalRef.result\r\n        .then(() => {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          this.suggestedAddressModalRef = null;\r\n        })\r\n        .catch(() => {\r\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          this.suggestedAddressModalRef = null;\r\n        });\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    this.closeForm.emit();\r\n  }\r\n\r\n  back(): void {\r\n    this.goBack.emit();\r\n  }\r\n\r\n  verifyAddress(): void {\r\n    if (this.sameAsShippingAddress) {\r\n      this.next();\r\n    } else {\r\n      this.checkoutDeliveryService.verifyAddress(this.billingAddressForm.value);\r\n    }\r\n  }\r\n\r\n  countrySelected(country: Country): void {\r\n    this.billingAddressForm.get('country.isocode').setValue(country.isocode);\r\n    this.selectedCountry$.next(country.isocode);\r\n  }\r\n\r\n  next(): void {\r\n    if (this.paymentForm.valid) {\r\n      if (this.sameAsShippingAddress) {\r\n        this.setPaymentDetails.emit({\r\n          paymentDetails: this.paymentForm.value,\r\n          billingAddress: null,\r\n        });\r\n      } else {\r\n        if (this.billingAddressForm.valid) {\r\n          this.setPaymentDetails.emit({\r\n            paymentDetails: this.paymentForm.value,\r\n            billingAddress: this.billingAddressForm.value,\r\n          });\r\n        } else {\r\n          this.billingAddressForm.markAllAsTouched();\r\n        }\r\n      }\r\n    } else {\r\n      this.paymentForm.markAllAsTouched();\r\n\r\n      if (!this.sameAsShippingAddress) {\r\n        this.billingAddressForm.markAllAsTouched();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.addressVerifySub) {\r\n      this.addressVerifySub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { CardModule } from '../../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../../shared/components/spinner/spinner.module';\r\nimport { IconModule } from '../../../../misc/icon/icon.module';\r\nimport { PaymentFormComponent } from './payment-form.component';\r\nimport { FormErrorsModule } from '../../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    CardModule,\r\n    I18nModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [PaymentFormComponent],\r\n  entryComponents: [PaymentFormComponent],\r\n  exports: [PaymentFormComponent],\r\n})\r\nexport class PaymentFormModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  CheckoutService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  PaymentDetails,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserPaymentService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\nimport { ICON_TYPE } from '../../../misc/icon';\r\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\r\n\r\n@Component({\r\n  selector: 'cx-payment-method',\r\n  templateUrl: './payment-method.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaymentMethodComponent implements OnInit, OnDestroy {\r\n  iconTypes = ICON_TYPE;\r\n  existingPaymentMethods$: Observable<PaymentDetails[]>;\r\n  isLoading$: Observable<boolean>;\r\n  cards$: Observable<{ content: Card; paymentMethod: PaymentDetails }[]>;\r\n  selectedMethod$: Observable<PaymentDetails>;\r\n  isGuestCheckout = false;\r\n  newPaymentFormManuallyOpened = false;\r\n\r\n  protected shouldRedirect: boolean;\r\n  protected deliveryAddress: Address;\r\n  protected checkoutStepUrlNext: string;\r\n  protected checkoutStepUrlPrevious: string;\r\n\r\n  constructor(\r\n    protected userPaymentService: UserPaymentService,\r\n    protected checkoutService: CheckoutService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected routingService: RoutingService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected translation: TranslationService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.shouldRedirect = false;\r\n    this.isLoading$ = this.userPaymentService.getPaymentMethodsLoading();\r\n\r\n    if (!this.activeCartService.isGuestCart()) {\r\n      this.userPaymentService.loadPaymentMethods();\r\n    } else {\r\n      this.isGuestCheckout = true;\r\n    }\r\n\r\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n\r\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\r\n      this.activatedRoute\r\n    );\r\n\r\n    this.checkoutDeliveryService\r\n      .getDeliveryAddress()\r\n      .pipe(take(1))\r\n      .subscribe((address: Address) => {\r\n        this.deliveryAddress = address;\r\n      });\r\n\r\n    this.existingPaymentMethods$ = this.userPaymentService.getPaymentMethods();\r\n\r\n    this.selectedMethod$ = this.checkoutPaymentService.getPaymentDetails().pipe(\r\n      tap((paymentInfo) => {\r\n        if (paymentInfo && !!Object.keys(paymentInfo).length) {\r\n          if (paymentInfo['hasError']) {\r\n            Object.keys(paymentInfo).forEach((key) => {\r\n              if (key.startsWith('InvalidField')) {\r\n                this.sendPaymentMethodFailGlobalMessage(paymentInfo[key]);\r\n              }\r\n            });\r\n            this.checkoutService.clearCheckoutStep(3);\r\n          } else if (this.shouldRedirect) {\r\n            this.routingService.go(this.checkoutStepUrlNext);\r\n          }\r\n        }\r\n      })\r\n    );\r\n\r\n    this.cards$ = combineLatest([\r\n      this.existingPaymentMethods$.pipe(\r\n        switchMap((methods) => {\r\n          return !methods?.length\r\n            ? of([])\r\n            : combineLatest(\r\n                methods.map((method) =>\r\n                  combineLatest([\r\n                    of(method),\r\n                    this.translation.translate('paymentCard.expires', {\r\n                      month: method.expiryMonth,\r\n                      year: method.expiryYear,\r\n                    }),\r\n                  ]).pipe(\r\n                    map(([payment, translation]) => ({\r\n                      payment,\r\n                      expiryTranslation: translation,\r\n                    }))\r\n                  )\r\n                )\r\n              );\r\n        })\r\n      ),\r\n      this.selectedMethod$,\r\n      this.translation.translate('paymentForm.useThisPayment'),\r\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\r\n      this.translation.translate('paymentCard.selected'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          paymentMethods,\r\n          selectedMethod,\r\n          textUseThisPayment,\r\n          textDefaultPaymentMethod,\r\n          textSelected,\r\n        ]) => {\r\n          if (\r\n            paymentMethods.length &&\r\n            (!selectedMethod || Object.keys(selectedMethod).length === 0)\r\n          ) {\r\n            const defaultPaymentMethod = paymentMethods.find(\r\n              (paymentMethod) => paymentMethod.payment.defaultPayment\r\n            );\r\n            if (defaultPaymentMethod) {\r\n              selectedMethod = defaultPaymentMethod.payment;\r\n              this.checkoutPaymentService.setPaymentDetails(selectedMethod);\r\n            }\r\n          }\r\n          return paymentMethods.map((payment) => ({\r\n            content: this.createCard(\r\n              payment.payment,\r\n              {\r\n                textExpires: payment.expiryTranslation,\r\n                textUseThisPayment,\r\n                textDefaultPaymentMethod,\r\n                textSelected,\r\n              },\r\n              selectedMethod\r\n            ),\r\n            paymentMethod: payment.payment,\r\n          }));\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  selectPaymentMethod(paymentDetails: PaymentDetails): void {\r\n    this.checkoutPaymentService.setPaymentDetails(paymentDetails);\r\n  }\r\n\r\n  showNewPaymentForm(): void {\r\n    this.newPaymentFormManuallyOpened = true;\r\n  }\r\n\r\n  hideNewPaymentForm(): void {\r\n    this.newPaymentFormManuallyOpened = false;\r\n  }\r\n\r\n  setPaymentDetails({\r\n    paymentDetails,\r\n    billingAddress,\r\n  }: {\r\n    paymentDetails: PaymentDetails;\r\n    billingAddress?: Address;\r\n  }): void {\r\n    const details: PaymentDetails = { ...paymentDetails };\r\n    details.billingAddress = billingAddress || this.deliveryAddress;\r\n    this.checkoutPaymentService.createPaymentDetails(details);\r\n    this.shouldRedirect = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.checkoutPaymentService.paymentProcessSuccess();\r\n  }\r\n\r\n  protected getCardIcon(code: string): string {\r\n    let ccIcon: string;\r\n    if (code === 'visa') {\r\n      ccIcon = this.iconTypes.VISA;\r\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\r\n      ccIcon = this.iconTypes.MASTER_CARD;\r\n    } else if (code === 'diners') {\r\n      ccIcon = this.iconTypes.DINERS_CLUB;\r\n    } else if (code === 'amex') {\r\n      ccIcon = this.iconTypes.AMEX;\r\n    } else {\r\n      ccIcon = this.iconTypes.CREDIT_CARD;\r\n    }\r\n\r\n    return ccIcon;\r\n  }\r\n\r\n  protected sendPaymentMethodFailGlobalMessage(field: string) {\r\n    this.globalMessageService.add(\r\n      {\r\n        key: 'paymentMethods.invalidField',\r\n        params: { field },\r\n      },\r\n      GlobalMessageType.MSG_TYPE_ERROR\r\n    );\r\n  }\r\n\r\n  protected createCard(\r\n    paymentDetails: PaymentDetails,\r\n    cardLabels: {\r\n      textDefaultPaymentMethod: string;\r\n      textExpires: string;\r\n      textUseThisPayment: string;\r\n      textSelected: string;\r\n    },\r\n    selected: PaymentDetails\r\n  ): Card {\r\n    return {\r\n      title: paymentDetails.defaultPayment\r\n        ? cardLabels.textDefaultPaymentMethod\r\n        : '',\r\n      textBold: paymentDetails.accountHolderName,\r\n      text: [paymentDetails.cardNumber, cardLabels.textExpires],\r\n      img: this.getCardIcon(paymentDetails.cardType.code),\r\n      actions: [{ name: cardLabels.textUseThisPayment, event: 'send' }],\r\n      header:\r\n        selected?.id === paymentDetails.id\r\n          ? cardLabels.textSelected\r\n          : undefined,\r\n    };\r\n  }\r\n\r\n  goNext(): void {\r\n    this.routingService.go(this.checkoutStepUrlNext);\r\n  }\r\n\r\n  goPrevious(): void {\r\n    this.routingService.go(this.checkoutStepUrlPrevious);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\r\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { PaymentFormModule } from './payment-form/payment-form.module';\r\nimport { PaymentMethodComponent } from './payment-method.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    PaymentFormModule,\r\n    CardModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutPaymentDetails: {\r\n          component: PaymentMethodComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            ShippingAddressSetGuard,\r\n            DeliveryModeSetGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [PaymentMethodComponent],\r\n  entryComponents: [PaymentMethodComponent],\r\n  exports: [PaymentMethodComponent],\r\n})\r\nexport class PaymentMethodModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CheckoutService, RoutingService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-place-order',\r\n  templateUrl: './place-order.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PlaceOrderComponent implements OnInit, OnDestroy {\r\n  placeOrderSubscription: Subscription;\r\n\r\n  checkoutSubmitForm: FormGroup = this.fb.group({\r\n    termsAndConditions: [false, Validators.requiredTrue],\r\n  });\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    protected routingService: RoutingService,\r\n    protected fb: FormBuilder\r\n  ) {}\r\n\r\n  submitForm(): void {\r\n    if (this.checkoutSubmitForm.valid) {\r\n      this.checkoutService.placeOrder();\r\n    } else {\r\n      this.checkoutSubmitForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.placeOrderSubscription = this.checkoutService\r\n      .getOrderDetails()\r\n      .pipe(filter((order) => Object.keys(order).length !== 0))\r\n      .subscribe(() => {\r\n        this.routingService.go({ cxRoute: 'orderConfirmation' });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.placeOrderSubscription) {\r\n      this.placeOrderSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CartNotEmptyGuard } from '../../../cart/cart-not-empty.guard';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { PlaceOrderComponent } from './place-order.component';\r\nimport { FormErrorsModule } from '../../../../shared/index';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    ReactiveFormsModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutPlaceOrder: {\r\n          component: PlaceOrderComponent,\r\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [PlaceOrderComponent],\r\n  entryComponents: [PlaceOrderComponent],\r\n  exports: [PlaceOrderComponent],\r\n})\r\nexport class PlaceOrderModule {}\r\n","import { Injectable, isDevMode } from '@angular/core';\r\nimport { CanActivate, Router, UrlTree } from '@angular/router';\r\nimport { RoutingConfigService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\r\nimport { CheckoutConfigService } from '../services/checkout-config.service';\r\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PaymentDetailsSetGuard implements CanActivate {\r\n  constructor(\r\n    private checkoutDetailsService: CheckoutDetailsService,\r\n    private checkoutConfigService: CheckoutConfigService,\r\n    private routingConfigService: RoutingConfigService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\r\n      CheckoutStepType.PAYMENT_DETAILS\r\n    );\r\n\r\n    if (!checkoutStep && isDevMode()) {\r\n      console.warn(\r\n        `Missing step with type ${CheckoutStepType.PAYMENT_DETAILS} in checkout configuration.`\r\n      );\r\n    }\r\n\r\n    return this.checkoutDetailsService\r\n      .getPaymentDetails()\r\n      .pipe(\r\n        map((paymentDetails) =>\r\n          paymentDetails && Object.keys(paymentDetails).length !== 0\r\n            ? true\r\n            : this.router.parseUrl(\r\n                checkoutStep &&\r\n                  this.routingConfigService.getRouteConfig(\r\n                    checkoutStep.routeName\r\n                  ).paths[0]\r\n              )\r\n        )\r\n      );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n  Address,\r\n  Cart,\r\n  ActiveCartService,\r\n  CheckoutDeliveryService,\r\n  CheckoutPaymentService,\r\n  Country,\r\n  DeliveryMode,\r\n  OrderEntry,\r\n  PaymentDetails,\r\n  TranslationService,\r\n  UserAddressService,\r\n  PromotionResult,\r\n  PromotionLocation,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\nimport { CheckoutStepType } from '../../model/index';\r\nimport { CheckoutConfigService } from '../../services/index';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\n@Component({\r\n  selector: 'cx-review-submit',\r\n  templateUrl: './review-submit.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReviewSubmitComponent implements OnInit {\r\n  checkoutStepType = CheckoutStepType;\r\n  entries$: Observable<OrderEntry[]>;\r\n  cart$: Observable<Cart>;\r\n  deliveryMode$: Observable<DeliveryMode>;\r\n  countryName$: Observable<string>;\r\n  deliveryAddress$: Observable<Address>;\r\n  paymentDetails$: Observable<PaymentDetails>;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\r\n\r\n  constructor(\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutPaymentService: CheckoutPaymentService,\r\n    protected userAddressService: UserAddressService,\r\n    protected activeCartService: ActiveCartService,\r\n    protected translation: TranslationService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeCartService.getActive();\r\n    this.entries$ = this.activeCartService.getEntries();\r\n    this.deliveryAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\r\n    this.paymentDetails$ = this.checkoutPaymentService.getPaymentDetails();\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n\r\n    this.deliveryMode$ = this.checkoutDeliveryService\r\n      .getSelectedDeliveryMode()\r\n      .pipe(\r\n        tap((selected: DeliveryMode) => {\r\n          if (selected === null) {\r\n            this.checkoutDeliveryService.loadSupportedDeliveryModes();\r\n          }\r\n        })\r\n      );\r\n\r\n    this.countryName$ = this.deliveryAddress$.pipe(\r\n      switchMap((address: Address) =>\r\n        this.userAddressService.getCountry(address.country.isocode)\r\n      ),\r\n      tap((country: Country) => {\r\n        if (country === null) {\r\n          this.userAddressService.loadDeliveryCountries();\r\n        }\r\n      }),\r\n      map((country: Country) => country && country.name)\r\n    );\r\n  }\r\n\r\n  getShippingAddressCard(\r\n    deliveryAddress: Address,\r\n    countryName: string\r\n  ): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('addressCard.shipTo'),\r\n    ]).pipe(\r\n      map(([textTitle]) => {\r\n        if (!countryName) {\r\n          countryName = deliveryAddress.country.isocode;\r\n        }\r\n\r\n        let region = '';\r\n        if (deliveryAddress.region && deliveryAddress.region.isocode) {\r\n          region = deliveryAddress.region.isocode + ', ';\r\n        }\r\n\r\n        return {\r\n          title: textTitle,\r\n          textBold: deliveryAddress.firstName + ' ' + deliveryAddress.lastName,\r\n          text: [\r\n            deliveryAddress.line1,\r\n            deliveryAddress.line2,\r\n            deliveryAddress.town + ', ' + region + countryName,\r\n            deliveryAddress.postalCode,\r\n            deliveryAddress.phone,\r\n          ],\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('checkoutShipping.shippingMethod'),\r\n    ]).pipe(\r\n      map(([textTitle]) => {\r\n        return {\r\n          title: textTitle,\r\n          textBold: deliveryMode.name,\r\n          text: [deliveryMode.description],\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('paymentForm.payment'),\r\n      this.translation.translate('paymentCard.expires', {\r\n        month: paymentDetails.expiryMonth,\r\n        year: paymentDetails.expiryYear,\r\n      }),\r\n    ]).pipe(\r\n      map(([textTitle, textExpires]) => {\r\n        return {\r\n          title: textTitle,\r\n          textBold: paymentDetails.accountHolderName,\r\n          text: [paymentDetails.cardNumber, textExpires],\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  getCheckoutStepUrl(stepType: CheckoutStepType): string {\r\n    const step = this.checkoutConfigService.getCheckoutStep(stepType);\r\n    return step && step.routeName;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\r\nimport { PaymentDetailsSetGuard } from '../../guards/payment-details-set.guard';\r\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { ReviewSubmitComponent } from './review-submit.component';\r\nimport { PromotionsModule } from '../promotions/promotions.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardModule,\r\n    CartSharedModule,\r\n    I18nModule,\r\n    UrlModule,\r\n    RouterModule,\r\n    PromotionsModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutReviewOrder: {\r\n          component: ReviewSubmitComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            ShippingAddressSetGuard,\r\n            DeliveryModeSetGuard,\r\n            PaymentDetailsSetGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ReviewSubmitComponent],\r\n  entryComponents: [ReviewSubmitComponent],\r\n  exports: [ReviewSubmitComponent],\r\n})\r\nexport class ReviewSubmitModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  Address,\r\n  AddressValidation,\r\n  CheckoutDeliveryService,\r\n  Country,\r\n  ErrorModel,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  Region,\r\n  Title,\r\n  UserAddressService,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport {\r\n  ModalRef,\r\n  ModalService,\r\n} from '../../../../../shared/components/modal/index';\r\nimport { sortTitles } from '../../../../../shared/utils/forms/title-utils';\r\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\r\n\r\n@Component({\r\n  selector: 'cx-address-form',\r\n  templateUrl: './address-form.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddressFormComponent implements OnInit, OnDestroy {\r\n  countries$: Observable<Country[]>;\r\n  titles$: Observable<Title[]>;\r\n  regions$: Observable<Region[]>;\r\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n  @Input()\r\n  addressData: Address;\r\n\r\n  @Input()\r\n  actionBtnLabel: string;\r\n\r\n  @Input()\r\n  cancelBtnLabel: string;\r\n\r\n  @Input()\r\n  setAsDefaultField = true;\r\n\r\n  @Input()\r\n  showTitleCode: boolean;\r\n\r\n  @Input()\r\n  showCancelBtn = true;\r\n\r\n  @Output()\r\n  submitAddress = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  backToAddress = new EventEmitter<any>();\r\n\r\n  addressVerifySub: Subscription;\r\n  regionsSub: Subscription;\r\n  suggestedAddressModalRef: ModalRef;\r\n\r\n  addressForm: FormGroup = this.fb.group({\r\n    country: this.fb.group({\r\n      isocode: [null, Validators.required],\r\n    }),\r\n    titleCode: [''],\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    line1: ['', Validators.required],\r\n    line2: [''],\r\n    town: ['', Validators.required],\r\n    region: this.fb.group({\r\n      isocode: [null, Validators.required],\r\n    }),\r\n    postalCode: ['', Validators.required],\r\n    phone: '',\r\n    defaultAddress: [false],\r\n  });\r\n\r\n  constructor(\r\n    protected fb: FormBuilder,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected userService: UserService,\r\n    protected userAddressService: UserAddressService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected modalService: ModalService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // Fetching countries\r\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\r\n      tap((countries: Country[]) => {\r\n        if (Object.keys(countries).length === 0) {\r\n          this.userAddressService.loadDeliveryCountries();\r\n        }\r\n      })\r\n    );\r\n\r\n    // Fetching titles\r\n    this.titles$ = this.userService.getTitles().pipe(\r\n      tap((titles: Title[]) => {\r\n        if (Object.keys(titles).length === 0) {\r\n          this.userService.loadTitles();\r\n        }\r\n      }),\r\n      map((titles) => {\r\n        titles.sort(sortTitles);\r\n        const noneTitle = { code: '', name: 'Title' };\r\n        return [noneTitle, ...titles];\r\n      })\r\n    );\r\n\r\n    // Fetching regions\r\n    this.regions$ = this.selectedCountry$.pipe(\r\n      switchMap((country) => this.userAddressService.getRegions(country)),\r\n      tap((regions: Region[]) => {\r\n        const regionControl = this.addressForm.get('region.isocode');\r\n        if (regions && regions.length > 0) {\r\n          regionControl.enable();\r\n        } else {\r\n          regionControl.disable();\r\n        }\r\n      })\r\n    );\r\n\r\n    // verify the new added address\r\n    this.addressVerifySub = this.checkoutDeliveryService\r\n      .getAddressVerificationResults()\r\n      .subscribe((results: AddressValidation) => {\r\n        if (results.decision === 'FAIL') {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'ACCEPT') {\r\n          this.submitAddress.emit(this.addressForm.value);\r\n        } else if (results.decision === 'REJECT') {\r\n          // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\r\n          if (\r\n            results.errors.errors.some(\r\n              (error: ErrorModel) => error.subject === 'titleCode'\r\n            )\r\n          ) {\r\n            this.globalMessageService.add(\r\n              { key: 'addressForm.titleRequired' },\r\n              GlobalMessageType.MSG_TYPE_ERROR\r\n            );\r\n          } else {\r\n            this.globalMessageService.add(\r\n              { key: 'addressForm.invalidAddress' },\r\n              GlobalMessageType.MSG_TYPE_ERROR\r\n            );\r\n          }\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n        } else if (results.decision === 'REVIEW') {\r\n          this.openSuggestedAddress(results);\r\n        }\r\n      });\r\n\r\n    if (this.addressData && Object.keys(this.addressData).length !== 0) {\r\n      this.addressForm.patchValue(this.addressData);\r\n\r\n      this.countrySelected(this.addressData.country);\r\n      if (this.addressData.region) {\r\n        this.regionSelected(this.addressData.region);\r\n      }\r\n    }\r\n  }\r\n\r\n  countrySelected(country: Country): void {\r\n    this.addressForm['controls'].country['controls'].isocode.setValue(\r\n      country.isocode\r\n    );\r\n    this.selectedCountry$.next(country.isocode);\r\n  }\r\n\r\n  regionSelected(region: Region): void {\r\n    this.addressForm['controls'].region['controls'].isocode.setValue(\r\n      region.isocode\r\n    );\r\n  }\r\n\r\n  toggleDefaultAddress(): void {\r\n    this.addressForm['controls'].defaultAddress.setValue(\r\n      this.addressForm.value.defaultAddress\r\n    );\r\n  }\r\n\r\n  back(): void {\r\n    this.backToAddress.emit();\r\n  }\r\n\r\n  verifyAddress(): void {\r\n    if (this.addressForm.valid) {\r\n      if (this.addressForm.get('region').value.isocode) {\r\n        this.regionsSub = this.regions$.pipe(take(1)).subscribe((regions) => {\r\n          const obj = regions.find(\r\n            (region) =>\r\n              region.isocode ===\r\n              this.addressForm.controls['region'].value.isocode\r\n          );\r\n          Object.assign(this.addressForm.value.region, {\r\n            isocodeShort: obj.isocodeShort,\r\n          });\r\n        });\r\n      }\r\n\r\n      if (this.addressForm.dirty) {\r\n        this.checkoutDeliveryService.verifyAddress(this.addressForm.value);\r\n      } else {\r\n        // address form value not changed\r\n        // ignore duplicate address\r\n        this.submitAddress.emit(undefined);\r\n      }\r\n    } else {\r\n      this.addressForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  openSuggestedAddress(results: AddressValidation): void {\r\n    if (!this.suggestedAddressModalRef) {\r\n      this.suggestedAddressModalRef = this.modalService.open(\r\n        SuggestedAddressDialogComponent,\r\n        { centered: true, size: 'lg' }\r\n      );\r\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.addressForm.value;\r\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\r\n        results.suggestedAddresses;\r\n      this.suggestedAddressModalRef.result\r\n        .then((address) => {\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          if (address) {\r\n            address = Object.assign(\r\n              {\r\n                titleCode: this.addressForm.value.titleCode,\r\n                phone: this.addressForm.value.phone,\r\n                selected: true,\r\n              },\r\n              address\r\n            );\r\n            this.submitAddress.emit(address);\r\n          }\r\n          this.suggestedAddressModalRef = null;\r\n        })\r\n        .catch(() => {\r\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\r\n          this.checkoutDeliveryService.clearAddressVerificationResults();\r\n          const address = Object.assign(\r\n            {\r\n              selected: true,\r\n            },\r\n            this.addressForm.value\r\n          );\r\n          this.submitAddress.emit(address);\r\n          this.suggestedAddressModalRef = null;\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutDeliveryService.clearAddressVerificationResults();\r\n\r\n    if (this.addressVerifySub) {\r\n      this.addressVerifySub.unsubscribe();\r\n    }\r\n\r\n    if (this.regionsSub) {\r\n      this.regionsSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../../misc/icon/index';\r\nimport { AddressFormComponent } from './address-form.component';\r\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\r\nimport { FormErrorsModule } from '../../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    NgSelectModule,\r\n    IconModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\r\n  entryComponents: [SuggestedAddressDialogComponent],\r\n  exports: [AddressFormComponent, SuggestedAddressDialogComponent],\r\n})\r\nexport class AddressFormModule {}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsLoadedGuard implements CanActivate {\n  constructor(private checkoutDetailsService: CheckoutDetailsService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.checkoutDetailsService.getCheckoutDetailsLoaded$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserAddressService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, take, filter } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\r\n\r\nexport interface CardWithAddress {\r\n  card: Card;\r\n  address: Address;\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-shipping-address',\r\n  templateUrl: './shipping-address.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShippingAddressComponent implements OnInit {\r\n  existingAddresses$: Observable<Address[]>;\r\n  newAddressFormManuallyOpened = false;\r\n  isLoading$: Observable<boolean>;\r\n  cards$: Observable<CardWithAddress[]>;\r\n  selectedAddress$: Observable<Address>;\r\n  forceLoader = false; // this helps with smoother steps transition\r\n  isGuestCheckout = false;\r\n\r\n  constructor(\r\n    protected userAddressService: UserAddressService,\r\n    protected routingService: RoutingService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService,\r\n    protected checkoutConfigService: CheckoutConfigService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected translation: TranslationService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading$ = this.userAddressService.getAddressesLoading();\r\n    this.existingAddresses$ = this.userAddressService.getAddresses();\r\n    this.selectedAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\r\n\r\n    this.cards$ = combineLatest([\r\n      this.existingAddresses$,\r\n      this.selectedAddress$,\r\n      this.translation.translate('checkoutAddress.defaultShippingAddress'),\r\n      this.translation.translate('checkoutAddress.shipToThisAddress'),\r\n      this.translation.translate('addressCard.selected'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          addresses,\r\n          selected,\r\n          textDefaultShippingAddress,\r\n          textShipToThisAddress,\r\n          textSelected,\r\n        ]) => {\r\n          // Select default address if none selected\r\n          if (\r\n            addresses.length &&\r\n            (!selected || Object.keys(selected).length === 0)\r\n          ) {\r\n            const defaultAddress = addresses.find(\r\n              (address) => address.defaultAddress\r\n            );\r\n            selected = defaultAddress;\r\n            this.selectAddress(defaultAddress);\r\n          }\r\n          return addresses.map((address) => {\r\n            const card = this.getCardContent(\r\n              address,\r\n              selected,\r\n              textDefaultShippingAddress,\r\n              textShipToThisAddress,\r\n              textSelected\r\n            );\r\n            return {\r\n              address,\r\n              card,\r\n            };\r\n          });\r\n        }\r\n      )\r\n    );\r\n\r\n    if (!this.activeCartService.isGuestCart()) {\r\n      this.userAddressService.loadAddresses();\r\n    } else {\r\n      this.isGuestCheckout = true;\r\n    }\r\n  }\r\n\r\n  getCardContent(\r\n    address: Address,\r\n    selected: any,\r\n    textDefaultShippingAddress: string,\r\n    textShipToThisAddress: string,\r\n    textSelected: string\r\n  ): Card {\r\n    let region = '';\r\n\r\n    if (address.region && address.region.isocode) {\r\n      region = address.region.isocode + ', ';\r\n    }\r\n\r\n    return {\r\n      title: address.defaultAddress ? textDefaultShippingAddress : '',\r\n      textBold: address.firstName + ' ' + address.lastName,\r\n      text: [\r\n        address.line1,\r\n        address.line2,\r\n        address.town + ', ' + region + address.country.isocode,\r\n        address.postalCode,\r\n        address.phone,\r\n      ],\r\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\r\n      header: selected && selected.id === address.id ? textSelected : '',\r\n    };\r\n  }\r\n\r\n  selectAddress(address: Address): void {\r\n    this.checkoutDeliveryService.setDeliveryAddress(address);\r\n  }\r\n\r\n  addAddress(address: Address): void {\r\n    this.selectedAddress$\r\n      .pipe(\r\n        filter((selected) => !!selected?.shippingAddress),\r\n        take(1)\r\n      )\r\n      .subscribe(() => this.goNext());\r\n\r\n    this.forceLoader = true;\r\n\r\n    this.existingAddresses$.pipe(take(1)).subscribe((addresses) => {\r\n      addresses.includes(address)\r\n        ? this.selectAddress(address)\r\n        : this.checkoutDeliveryService.createAndSetAddress(address);\r\n    });\r\n  }\r\n\r\n  showNewAddressForm(): void {\r\n    this.newAddressFormManuallyOpened = true;\r\n  }\r\n\r\n  hideNewAddressForm(goPrevious: boolean = false): void {\r\n    this.newAddressFormManuallyOpened = false;\r\n    if (goPrevious) {\r\n      this.goPrevious();\r\n    }\r\n  }\r\n\r\n  goNext(): void {\r\n    this.routingService.go(\r\n      this.checkoutConfigService.getNextCheckoutStepUrl(this.activatedRoute)\r\n    );\r\n  }\r\n\r\n  goPrevious(): void {\r\n    this.routingService.go(\r\n      this.checkoutConfigService.getPreviousCheckoutStepUrl(\r\n        this.activatedRoute\r\n      ) || 'cart'\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CheckoutProgressMobileBottomModule } from '../checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\r\nimport { CheckoutProgressMobileTopModule } from '../checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\r\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\r\nimport { AddressFormModule } from './address-form/address-form.module';\r\nimport { CheckoutDetailsLoadedGuard } from '../../guards/checkout-details-loaded.guard';\r\nimport { ShippingAddressComponent } from './shipping-address.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    AddressFormModule,\r\n    CardModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    CheckoutProgressMobileTopModule,\r\n    CheckoutProgressMobileBottomModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CheckoutShippingAddress: {\r\n          component: ShippingAddressComponent,\r\n          guards: [\r\n            CheckoutAuthGuard,\r\n            CartNotEmptyGuard,\r\n            CheckoutDetailsLoadedGuard,\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ShippingAddressComponent],\r\n  entryComponents: [ShippingAddressComponent],\r\n  exports: [ShippingAddressComponent],\r\n})\r\nexport class ShippingAddressModule {}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutOrchestratorModule } from './components/checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './components/checkout-order-summary/checkout-order-summary.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileBottomModule } from './components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileTopModule } from './components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './components/checkout-progress/checkout-progress.module';\nimport { DeliveryModeModule } from './components/delivery-mode/delivery-mode.module';\nimport { PaymentMethodModule } from './components/payment-method/payment-method.module';\nimport { PlaceOrderModule } from './components/place-order/place-order.module';\nimport { PromotionsModule } from './components/promotions/promotions.module';\nimport { ReviewSubmitModule } from './components/review-submit/review-submit.module';\nimport { ShippingAddressModule } from './components/shipping-address/shipping-address.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    DeliveryModeModule,\n    PaymentMethodModule,\n    PlaceOrderModule,\n    PromotionsModule,\n    ReviewSubmitModule,\n    ShippingAddressModule,\n  ],\n})\nexport class CheckoutComponentModule {}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport {\r\n  ActiveCartService,\r\n  AuthService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NotCheckoutAuthGuard implements CanActivate {\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected authService: AuthService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.authService.getUserToken().pipe(\r\n      map((token) => {\r\n        if (token.access_token) {\r\n          this.routingService.go({ cxRoute: 'home' });\r\n        } else if (this.activeCartService.isGuestCart()) {\r\n          this.routingService.go({ cxRoute: 'cart' });\r\n          return false;\r\n        }\r\n        return !token.access_token;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class SkipLinkConfig {\r\n  skipLinks?: SkipLink[];\r\n}\r\n\r\nexport abstract class SkipLink {\r\n  key: string;\r\n  i18nKey: string;\r\n  target?: HTMLElement;\r\n  position?: SkipLinkScrollPosition;\r\n}\r\n\r\nexport enum SkipLinkScrollPosition {\r\n  BEFORE = 'BEFORE',\r\n  AFTER = 'AFTER',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { KeyboardFocusService } from '../../keyboard-focus/services/keyboard-focus.service';\r\nimport { SkipLink, SkipLinkConfig } from '../config/skip-link.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SkipLinkService {\r\n  private skipLinks$ = new BehaviorSubject<SkipLink[]>([]);\r\n\r\n  constructor(\r\n    protected config: SkipLinkConfig,\r\n    protected keyboardFocusService: KeyboardFocusService\r\n  ) {}\r\n\r\n  getSkipLinks(): Observable<SkipLink[]> {\r\n    return this.skipLinks$;\r\n  }\r\n\r\n  add(key: string, target: HTMLElement): void {\r\n    const found: SkipLink = this.config.skipLinks.find(\r\n      (skipLink) => skipLink.key === key\r\n    );\r\n\r\n    if (found) {\r\n      const existing: SkipLink[] = this.skipLinks$.value;\r\n      existing.splice(this.getSkipLinkIndexInArray(key), 0, {\r\n        target,\r\n        i18nKey: found.i18nKey,\r\n        position: found.position,\r\n        key,\r\n      });\r\n      this.skipLinks$.next(existing);\r\n    }\r\n  }\r\n\r\n  remove(key: string): void {\r\n    const found: SkipLink = this.config.skipLinks.find(\r\n      (skipLink) => skipLink.key === key\r\n    );\r\n\r\n    if (found) {\r\n      let existing: SkipLink[] = this.skipLinks$.value;\r\n      existing = existing.filter((skipLink) => skipLink.key !== key);\r\n      this.skipLinks$.next(existing);\r\n    }\r\n  }\r\n\r\n  scrollToTarget(skipLink: SkipLink): void {\r\n    const target =\r\n      skipLink.target instanceof HTMLElement\r\n        ? skipLink.target\r\n        : (skipLink.target as Element).parentElement;\r\n\r\n    // focus first focusable element in the\r\n    const firstFocusable =\r\n      this.keyboardFocusService.findFirstFocusable(target) || target;\r\n\r\n    // we force a tabindex if not available, to ensure we can focus into the element\r\n    const hasTabindex = firstFocusable.hasAttribute('tabindex');\r\n    if (!hasTabindex) {\r\n      firstFocusable.setAttribute('tabindex', '-1');\r\n    }\r\n\r\n    firstFocusable.focus();\r\n\r\n    // drop the tmp tabindex\r\n    if (!hasTabindex) {\r\n      firstFocusable.removeAttribute('tabindex');\r\n    }\r\n  }\r\n\r\n  protected getSkipLinkIndexInArray(key: string): number {\r\n    let index: number = this.config.skipLinks.findIndex(\r\n      (skipLink) => skipLink.key === key\r\n    );\r\n\r\n    while (index > 0) {\r\n      index--;\r\n      const previous: SkipLink = this.config.skipLinks[index];\r\n      if (previous) {\r\n        const existing: SkipLink[] = this.skipLinks$.value;\r\n        const found: number = existing.findIndex(\r\n          (skipLink) => skipLink.key === previous.key\r\n        );\r\n        if (found > -1) {\r\n          return found + 1;\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { SkipLink } from '../config/skip-link.config';\r\nimport { SkipLinkService } from '../service/skip-link.service';\r\n\r\n@Component({\r\n  selector: 'cx-skip-link',\r\n  templateUrl: './skip-link.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SkipLinkComponent {\r\n  skipLinks$: Observable<SkipLink[]> = this.skipLinkService.getSkipLinks();\r\n\r\n  constructor(private skipLinkService: SkipLinkService) {}\r\n\r\n  scrollToTarget(skipLink: SkipLink): void {\r\n    this.skipLinkService.scrollToTarget(skipLink);\r\n  }\r\n}\r\n","import { SkipLinkConfig } from './skip-link.config';\r\n\r\nexport const defaultSkipLinkConfig: SkipLinkConfig = {\r\n  skipLinks: [\r\n    {\r\n      key: 'cx-header',\r\n      i18nKey: 'skipLink.labels.header',\r\n    },\r\n    {\r\n      key: 'cx-main',\r\n      i18nKey: 'skipLink.labels.main',\r\n    },\r\n    { key: 'cx-footer', i18nKey: 'skipLink.labels.footer' },\r\n  ],\r\n};\r\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { SkipLinkService } from '../service/skip-link.service';\r\n\r\n@Directive({\r\n  selector: '[cxSkipLink]',\r\n})\r\nexport class SkipLinkDirective implements OnInit, OnDestroy {\r\n  @Input() cxSkipLink: string;\r\n\r\n  constructor(\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected skipLinkService: SkipLinkService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.skipLinkService.add(this.cxSkipLink, this.elementRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.skipLinkService.remove(this.cxSkipLink);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  APP_INITIALIZER,\r\n  ComponentFactoryResolver,\r\n  NgModule,\r\n} from '@angular/core';\r\nimport {\r\n  ConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\r\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\r\nimport { KeyboardFocusModule } from '../keyboard-focus/keyboard-focus.module';\r\nimport { SkipLinkComponent } from './component/skip-link.component';\r\nimport { defaultSkipLinkConfig } from './config/default-skip-link.config';\r\nimport { SkipLinkDirective } from './directive/skip-link.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    ConfigModule.withConfig(defaultSkipLinkConfig),\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [SkipLinkComponent, SkipLinkDirective],\r\n  exports: [SkipLinkDirective],\r\n  entryComponents: [SkipLinkComponent],\r\n\r\n  providers: [\r\n    provideDefaultConfig(defaultSkipLinkConfig),\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: skipLinkFactory,\r\n      deps: [ComponentFactoryResolver, OutletService],\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class SkipLinkModule {}\r\n\r\n/**\r\n * Adds the skip link component before the cx-storefront.\r\n */\r\nexport function skipLinkFactory(\r\n  componentFactoryResolver: ComponentFactoryResolver,\r\n  outletService: OutletService\r\n) {\r\n  const isReady = () => {\r\n    const factory = componentFactoryResolver.resolveComponentFactory(\r\n      SkipLinkComponent\r\n    );\r\n    outletService.add('cx-storefront', <any>factory, OutletPosition.BEFORE);\r\n  };\r\n  return isReady;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HamburgerMenuService {\r\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  constructor(router: Router) {\r\n    router.events\r\n      .pipe(filter((event) => event instanceof NavigationStart))\r\n      .subscribe(() => {\r\n        this.toggle(true);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * toggles the expand state of the hamburger menu\r\n   */\r\n  toggle(forceCollapse?: boolean): void {\r\n    if (forceCollapse) {\r\n      this.isExpanded.next(false);\r\n    } else {\r\n      this.isExpanded.next(!this.isExpanded.value);\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        HamburgerMenuComponent: {\r\n          component: HamburgerMenuComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [HamburgerMenuComponent],\r\n  exports: [HamburgerMenuComponent],\r\n  entryComponents: [HamburgerMenuComponent],\r\n})\r\nexport class HamburgerMenuModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { OutletRefModule } from '../cms-structure/outlet/outlet-ref/outlet-ref.module';\r\nimport { LaunchDialogModule } from './launch-dialog/index';\r\n\r\n@NgModule({\r\n  imports: [OutletRefModule, LaunchDialogModule.forRoot()],\r\n  exports: [OutletRefModule],\r\n})\r\nexport class LayoutModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport {\r\n  CmsService,\r\n  ContentSlotComponentData,\r\n  ContentSlotData,\r\n  DynamicAttributeService,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\r\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\r\nimport { CmsComponentsService } from '../../services/cms-components.service';\r\n\r\n/**\r\n * The `PageSlotComponent` is used to render the CMS page slot and it's components.\r\n *\r\n * The Page slot host element will be supplemented with css classes so that the layout\r\n * can be fully controlled by customers:\r\n * - The page slot _position_ is added as a css class by default.\r\n * - The `cx-pending` is added for as long as the slot hasn't start loading.\r\n * - The `page-fold` style class is added for the page slot which is configured as the page fold.\r\n */\r\n@Component({\r\n  selector: 'cx-page-slot,[cx-page-slot]',\r\n  templateUrl: './page-slot.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PageSlotComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * The position represents the unique key for a page slot on a single page, but can\r\n   * be reused cross pages.\r\n   *\r\n   * The position is used to find the CMS components for the page slot. It is also\r\n   * added as an additional CSS class so that layoutt can be applied.\r\n   */\r\n  @Input() set position(value: string) {\r\n    this.position$.next(value);\r\n  }\r\n  get position(): string {\r\n    return this.position$.value;\r\n  }\r\n\r\n  /**\r\n   * Maintains css classes introduced by the host and adds additional classes.\r\n   */\r\n  @Input() @HostBinding() class: string;\r\n\r\n  /**\r\n   * Indicates that the page slot is the last page slot above the fold.\r\n   */\r\n  @HostBinding('class.page-fold') @Input() isPageFold = false;\r\n\r\n  /**\r\n   * Indicates that the components of the page slot haven't been loaded as long\r\n   * as the isPending state is true.\r\n   */\r\n  @HostBinding('class.cx-pending') isPending = true;\r\n\r\n  /**\r\n   * Indicates that the page slot doesn't contain any components. This is no\r\n   * longer used in spartacus, but kept for backwards compatibility.\r\n   */\r\n  @HostBinding('class.has-components') @Input() hasComponents = false;\r\n\r\n  protected position$: BehaviorSubject<string> = new BehaviorSubject(undefined);\r\n\r\n  components: ContentSlotComponentData[];\r\n\r\n  protected slot$: Observable<ContentSlotData> = this.position$.pipe(\r\n    switchMap((position) => this.cmsService.getContentSlot(position)),\r\n    distinctUntilChanged(this.isDistinct)\r\n  );\r\n\r\n  /** Observes the components for the given page slot. */\r\n  components$: Observable<ContentSlotComponentData[]> = this.slot$.pipe(\r\n    map((slot) => slot?.components ?? [])\r\n  );\r\n\r\n  protected subscription: Subscription = new Subscription();\r\n\r\n  /** Keeps track of the pending components that must be loaded for the page slot */\r\n  private pendingComponentCount = 0;\r\n\r\n  /** Tracks the last used position, in case the page slot is used dynamically */\r\n  private lastPosition: string;\r\n  constructor(\r\n    protected cmsService: CmsService,\r\n    protected dynamicAttributeService: DynamicAttributeService,\r\n    protected renderer: Renderer2,\r\n    protected elementRef: ElementRef,\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.slot$.pipe(tap((slot) => this.decorate(slot))).subscribe((value) => {\r\n        this.components = value?.components || [];\r\n        this.cd.markForCheck();\r\n      })\r\n    );\r\n  }\r\n\r\n  protected decorate(slot: ContentSlotData): void {\r\n    let cls = this.class || '';\r\n\r\n    if (this.lastPosition && cls.indexOf(this.lastPosition) > -1) {\r\n      cls = cls.replace(this.lastPosition, '');\r\n    }\r\n    if (this.position$.value) {\r\n      cls += ` ${this.position$.value}`;\r\n      this.lastPosition = this.position$.value;\r\n    }\r\n\r\n    // host bindings\r\n    this.pending = slot?.components?.length || 0;\r\n    this.hasComponents = slot?.components?.length > 0;\r\n    if (cls && cls !== this.class) {\r\n      this.class = cls;\r\n    }\r\n\r\n    this.addSmartEditSlotClass(slot);\r\n  }\r\n\r\n  /**\r\n   * Sets the pending count for the page slot components. Once all pending components are\r\n   * loaded, the `isPending` flag is updated, so that the associated class can be updated\r\n   */\r\n  protected set pending(count: number) {\r\n    this.pendingComponentCount = count;\r\n    this.isPending = this.pendingComponentCount > 0;\r\n  }\r\n\r\n  protected get pending(): number {\r\n    return this.pendingComponentCount;\r\n  }\r\n\r\n  /*\r\n   * Is triggered when a component is added to the view. This is used to\r\n   * update the pending count\r\n   */\r\n  isLoaded(loadState: boolean) {\r\n    if (loadState) {\r\n      this.pending--;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The `DeferLoadingStrategy` indicates whether the component should be\r\n   * rendered instantly or whether it should be deferred.\r\n   */\r\n  getComponentDeferOptions(componentType: string): IntersectionOptions {\r\n    const deferLoading = this.cmsComponentsService.getDeferLoadingStrategy(\r\n      componentType\r\n    );\r\n    return { deferLoading };\r\n  }\r\n\r\n  protected isDistinct(old: ContentSlotData, current: ContentSlotData) {\r\n    return (\r\n      current.components &&\r\n      old.components?.length === current.components.length &&\r\n      !old.components.find(\r\n        (el, index) => el.uid !== current.components[index].uid\r\n      )\r\n    );\r\n  }\r\n\r\n  private addSmartEditSlotClass(slot: ContentSlotData): void {\r\n    if (slot) {\r\n      this.dynamicAttributeService.addDynamicAttributes(\r\n        this.elementRef.nativeElement,\r\n        this.renderer,\r\n        { slotData: slot }\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription?.unsubscribe();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { OutletModule } from '../../outlet/outlet.module';\r\nimport { PageComponentModule } from '../component/page-component.module';\r\nimport { PageSlotComponent } from './page-slot.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OutletModule, PageComponentModule],\r\n  providers: [],\r\n  declarations: [PageSlotComponent],\r\n  exports: [PageSlotComponent],\r\n})\r\nexport class PageSlotModule {}\r\n","import { Inject, Injectable, isDevMode, Optional } from '@angular/core';\r\nimport { CmsService, Page } from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\r\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\r\nimport {\r\n  BREAKPOINT,\r\n  LayoutConfig,\r\n  LayoutSlotConfig,\r\n  SlotConfig,\r\n} from '../../../layout/config/layout-config';\r\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PageLayoutService {\r\n  constructor(\r\n    private cms: CmsService,\r\n    private config: LayoutConfig,\r\n    private breakpointService: BreakpointService,\r\n    @Optional()\r\n    @Inject(PAGE_LAYOUT_HANDLER)\r\n    private handlers: PageLayoutHandler[]\r\n  ) {}\r\n\r\n  // Prints warn messages for missing layout configs.\r\n  // The warnings are only printed once per config\r\n  // to not pollute the console log.\r\n  private warnLogMessages = {};\r\n  private logSlots = {};\r\n\r\n  getSlots(section?: string): Observable<string[]> {\r\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\r\n      map(([page, breakpoint]) => {\r\n        const pageTemplate = page.template;\r\n        const slots = this.resolveSlots(page, section, breakpoint);\r\n        return { slots, pageTemplate, breakpoint };\r\n      }),\r\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\r\n        let result = of(slots);\r\n        for (const handler of this.handlers || []) {\r\n          result = handler.handle(result, pageTemplate, section, breakpoint);\r\n        }\r\n        return result;\r\n      }),\r\n      distinctUntilChanged((a, b) => {\r\n        if (a.length !== b.length) {\r\n          return false;\r\n        }\r\n        for (let i = 0; i < a.length; i++) {\r\n          if (a[i] !== b[i]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns an observable with the last page slot above-the-fold\r\n   * for the given pageTemplate / breakpoint.\r\n   *\r\n   * The page fold is configurable in the `LayoutConfig` for each page layout.\r\n   */\r\n  getPageFoldSlot(pageTemplate: string): Observable<string> {\r\n    return this.breakpointService.breakpoint$.pipe(\r\n      map((breakpoint) => {\r\n        if (!this.config.layoutSlots) {\r\n          // no layout config available\r\n          return null;\r\n        }\r\n        const pageTemplateConfig = this.config.layoutSlots[pageTemplate];\r\n        const config = this.getResponsiveSlotConfig(\r\n          <LayoutSlotConfig>pageTemplateConfig,\r\n          'pageFold',\r\n          breakpoint\r\n        );\r\n        return config ? config.pageFold : null;\r\n      })\r\n    );\r\n  }\r\n\r\n  private resolveSlots(page, section, breakpoint): string[] {\r\n    const config = this.getSlotConfig(\r\n      page.template,\r\n      'slots',\r\n      section,\r\n      breakpoint\r\n    );\r\n    if (config && config.slots) {\r\n      const pageSlots = Object.keys(page.slots);\r\n      return config.slots.filter((slot) => pageSlots.includes(slot));\r\n    } else if (!section) {\r\n      this.logMissingLayoutConfig(page);\r\n      return Object.keys(page.slots);\r\n    } else {\r\n      this.logMissingLayoutConfig(page, section);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  get page$(): Observable<Page> {\r\n    return this.cms.getCurrentPage().pipe(filter((page) => !!page));\r\n  }\r\n\r\n  get templateName$(): Observable<string> {\r\n    return this.page$.pipe(\r\n      filter((page) => !!page.template),\r\n      map((page: Page) => page.template)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * load slots from the layout configuration. The breakpoint is used\r\n   * to load a specific configuration for the given breakpoint. If there's\r\n   * no configuration available for the given breakpoint the default slot\r\n   * configuration is returned.\r\n   */\r\n  protected getSlotConfig(\r\n    templateUid: string,\r\n    configAttribute: string,\r\n    section?: string,\r\n    breakpoint?: BREAKPOINT\r\n  ): SlotConfig {\r\n    if (!this.config.layoutSlots) {\r\n      return null;\r\n    }\r\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\r\n\r\n    if (section) {\r\n      return this.getSlotConfigForSection(\r\n        templateUid,\r\n        configAttribute,\r\n        section,\r\n        breakpoint\r\n      );\r\n    }\r\n\r\n    if (pageTemplateConfig) {\r\n      return this.getResponsiveSlotConfig(\r\n        <LayoutSlotConfig>pageTemplateConfig,\r\n        configAttribute,\r\n        breakpoint\r\n      );\r\n    }\r\n  }\r\n\r\n  protected getSlotConfigForSection(\r\n    templateUid: string,\r\n    configAttribute: string,\r\n    section?: string,\r\n    breakpoint?: BREAKPOINT\r\n  ): SlotConfig {\r\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\r\n\r\n    if (!pageTemplateConfig) {\r\n      return null;\r\n    }\r\n\r\n    // if there's no section config on the page layout\r\n    // we fall back to the global section config\r\n    const sectionConfig = pageTemplateConfig[section]\r\n      ? pageTemplateConfig[section]\r\n      : this.config.layoutSlots[section];\r\n\r\n    if (!sectionConfig) {\r\n      return null;\r\n    }\r\n\r\n    const responsiveConfig = this.getResponsiveSlotConfig(\r\n      <LayoutSlotConfig>sectionConfig,\r\n      configAttribute,\r\n      breakpoint\r\n    );\r\n\r\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\r\n      return responsiveConfig;\r\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\r\n      return pageTemplateConfig[section];\r\n    } else if (this.config.layoutSlots[section]) {\r\n      return <SlotConfig>this.config.layoutSlots[section];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a list of slots for a breakpoint specific configuratoin\r\n   * If there's no specific configuration for the breakpoint,\r\n   * the closest available configuration will be returned.\r\n   */\r\n  protected getResponsiveSlotConfig(\r\n    layoutSlotConfig: LayoutSlotConfig,\r\n    configAttribute: string,\r\n    breakpoint?: BREAKPOINT\r\n  ): SlotConfig {\r\n    let slotConfig = <SlotConfig>layoutSlotConfig;\r\n\r\n    // fallback to default slot config\r\n    if (!layoutSlotConfig || !breakpoint) {\r\n      return slotConfig;\r\n    }\r\n\r\n    // we have a config for the specific breakpoint\r\n    if (\r\n      layoutSlotConfig[breakpoint] &&\r\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\r\n    ) {\r\n      return <SlotConfig>layoutSlotConfig[breakpoint];\r\n    }\r\n\r\n    // find closest config\r\n    const all = this.breakpointService.breakpoints;\r\n\r\n    for (const br of all.splice(0, all.indexOf(breakpoint))) {\r\n      if (\r\n        layoutSlotConfig[br] &&\r\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\r\n      ) {\r\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\r\n      }\r\n    }\r\n    return slotConfig;\r\n  }\r\n\r\n  /**\r\n   * In order to help developers, we print some detailed log information in\r\n   * case there's no layout configuration available for the given page template\r\n   * or section. Additionally, the slot positions are printed in the console\r\n   * in a format that can be copied / paste to the configuration.\r\n   */\r\n  private logMissingLayoutConfig(page: Page, section?: string): void {\r\n    if (!isDevMode()) {\r\n      return;\r\n    }\r\n    if (!this.logSlots[page.template]) {\r\n      // the info log is not printed in production\r\n      // tslint:disable-next-line: no-console\r\n      console.info(\r\n        `Available CMS page slots: '${Object.keys(page.slots).join(`','`)}'`\r\n      );\r\n      this.logSlots[page.template] = true;\r\n    }\r\n\r\n    const cacheKey = section || page.template;\r\n    if (!this.warnLogMessages[cacheKey]) {\r\n      console.warn(\r\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\r\n      );\r\n      this.warnLogMessages[cacheKey] = true;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { PageLayoutService } from './page-layout.service';\r\n\r\n@Component({\r\n  selector: 'cx-page-layout',\r\n  templateUrl: './page-layout.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PageLayoutComponent {\r\n  @Input() set section(value: string) {\r\n    this.section$.next(value);\r\n  }\r\n  readonly section$: BehaviorSubject<string> = new BehaviorSubject(undefined);\r\n  readonly templateName$: Observable<string> = this.pageLayoutService\r\n    .templateName$;\r\n\r\n  readonly layoutName$: Observable<string> = this.section$.pipe(\r\n    switchMap((section) => (section ? of(section) : this.templateName$)),\r\n    tap((name) => {\r\n      this.styleClass = name;\r\n    })\r\n  );\r\n\r\n  readonly slots$: Observable<string[]> = this.section$.pipe(\r\n    switchMap((section) => this.pageLayoutService.getSlots(section))\r\n  );\r\n\r\n  readonly pageFoldSlot$: Observable<string> = this.templateName$.pipe(\r\n    switchMap((templateName) =>\r\n      this.pageLayoutService.getPageFoldSlot(templateName)\r\n    ),\r\n    distinctUntilChanged()\r\n  );\r\n\r\n  private currentClass;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private pageLayoutService: PageLayoutService\r\n  ) {}\r\n\r\n  set styleClass(cls: string) {\r\n    if (this.currentClass) {\r\n      this.renderer.removeClass(this.el.nativeElement, this.currentClass);\r\n    }\r\n    this.renderer.addClass(this.el.nativeElement, cls);\r\n    this.currentClass = cls;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\r\nimport { OutletModule } from '../../outlet/outlet.module';\r\nimport { PageLayoutComponent } from './page-layout.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OutletModule, PageSlotModule],\r\n  declarations: [PageLayoutComponent],\r\n  exports: [PageLayoutComponent],\r\n})\r\nexport class PageLayoutModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: Config,\r\n})\r\nexport abstract class PWAModuleConfig {\r\n  pwa?: {\r\n    enabled?: boolean;\r\n    addToHomeScreen?: boolean;\r\n  };\r\n}\r\n\r\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\r\n  pwa: {\r\n    enabled: false,\r\n    addToHomeScreen: false,\r\n  },\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { PWAModuleConfig } from '../pwa.module-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AddToHomeScreenService {\r\n  private deferredEvent: any;\r\n\r\n  private canPrompt = new BehaviorSubject<boolean>(false);\r\n\r\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\r\n\r\n  constructor(\r\n    private config: PWAModuleConfig,\r\n    private globalMessageService: GlobalMessageService,\r\n    private winRef: WindowRef\r\n  ) {\r\n    if (this.config.pwa.addToHomeScreen) {\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  init() {\r\n    if (this.winRef.nativeWindow) {\r\n      this.winRef.nativeWindow.addEventListener(\r\n        'beforeinstallprompt',\r\n        (event) => {\r\n          event.preventDefault();\r\n          this.deferredEvent = event;\r\n          this.enableAddToHomeScreen();\r\n        }\r\n      );\r\n\r\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\r\n        this.globalMessageService.add(\r\n          { key: 'pwa.addedToHomeScreen' },\r\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n        );\r\n\r\n        this.disableAddToHomeScreen();\r\n        this.deferredEvent = null;\r\n      });\r\n    }\r\n  }\r\n\r\n  enableAddToHomeScreen(): void {\r\n    this.canPrompt.next(true);\r\n  }\r\n\r\n  disableAddToHomeScreen(): void {\r\n    this.canPrompt.next(false);\r\n  }\r\n\r\n  firePrompt(): void {\r\n    if (this.deferredEvent) {\r\n      this.deferredEvent.prompt();\r\n    }\r\n  }\r\n}\r\n","import { OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { APP_INITIALIZER, isDevMode, NgModule } from '@angular/core';\r\nimport {\r\n  ServiceWorkerModule,\r\n  SwRegistrationOptions,\r\n} from '@angular/service-worker';\r\nimport { Config, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\r\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\r\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\r\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\r\n\r\nexport function pwaConfigurationFactory(\r\n  pwaConfig: PWAModuleConfig\r\n): SwRegistrationOptions {\r\n  return { enabled: (!isDevMode() && pwaConfig.pwa.enabled) || false };\r\n}\r\n\r\nexport function pwaFactory(addToHomeScreenService): any {\r\n  const result = () => addToHomeScreenService;\r\n  return result;\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ServiceWorkerModule.register('/ngsw-worker.js'),\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(defaultPWAModuleConfig),\r\n    {\r\n      provide: SwRegistrationOptions,\r\n      useFactory: pwaConfigurationFactory,\r\n      deps: [Config],\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: pwaFactory,\r\n      deps: [AddToHomeScreenService],\r\n      multi: true,\r\n    },\r\n  ],\r\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\r\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\r\n})\r\nexport class PwaModule {}\r\n","import { APP_INITIALIZER, Provider } from '@angular/core';\r\nimport { LanguageService, WindowRef } from '@spartacus/core';\r\n\r\nexport const htmlLangProvider: Provider = {\r\n  provide: APP_INITIALIZER,\r\n  multi: true,\r\n  useFactory: setHtmlLangAttribute,\r\n  deps: [WindowRef, LanguageService],\r\n};\r\n\r\n/**\r\n * Sets active language in <html lang=\"\">\r\n */\r\nexport function setHtmlLangAttribute(\r\n  winRef: WindowRef,\r\n  languageService: LanguageService\r\n) {\r\n  const result = () => {\r\n    languageService.getActive().subscribe((lang) => {\r\n      winRef.document.documentElement.lang = lang.replace(/_/g, '-');\r\n    });\r\n  };\r\n  return result;\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\r\nimport { PageMeta, PageMetaService, PageRobotsMeta } from '@spartacus/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SeoMetaService implements OnDestroy {\r\n  constructor(\r\n    protected ngTitle: Title,\r\n    protected ngMeta: Meta,\r\n    protected pageMetaService: PageMetaService\r\n  ) {}\r\n\r\n  private subscription: Subscription;\r\n\r\n  init() {\r\n    this.subscription = this.pageMetaService\r\n      .getMeta()\r\n      .pipe(filter(Boolean))\r\n      .subscribe((meta: PageMeta) => (this.meta = meta));\r\n  }\r\n\r\n  protected set meta(meta: PageMeta) {\r\n    this.title = meta.title;\r\n    this.description = meta.description;\r\n    this.image = meta.image;\r\n    this.robots = meta.robots || [PageRobotsMeta.INDEX, PageRobotsMeta.FOLLOW];\r\n  }\r\n\r\n  protected set title(title: string) {\r\n    this.ngTitle.setTitle(title || '');\r\n  }\r\n\r\n  protected set description(value: string) {\r\n    this.addTag({ name: 'description', content: value });\r\n  }\r\n\r\n  protected set image(imageUrl: string) {\r\n    if (imageUrl) {\r\n      this.addTag({ name: 'og:image', content: imageUrl });\r\n    }\r\n  }\r\n\r\n  protected set robots(value: PageRobotsMeta[]) {\r\n    if (value) {\r\n      this.addTag({ name: 'robots', content: value.join(', ') });\r\n    }\r\n  }\r\n\r\n  protected addTag(meta: MetaDefinition) {\r\n    if (meta.content) {\r\n      this.ngMeta.updateTag(meta);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  PLATFORM_ID,\n  Renderer2,\n  RendererFactory2,\n  SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdScriptFactory {\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: string,\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  build(schema: {}[]): void {\n    if (schema && this.isJsonLdRequired()) {\n      this.createJsonLdScriptElement().innerHTML = this.sanitize(schema);\n    }\n  }\n\n  /**\n   * Only return schema data in case of SSR or development mode,\n   * to not waste memory unnecessary.\n   */\n  isJsonLdRequired(): boolean {\n    return !isPlatformBrowser(this.platformId) || isDevMode();\n  }\n\n  private createJsonLdScriptElement(): HTMLScriptElement {\n    const id = 'json-ld';\n    let scriptElement: HTMLScriptElement = <HTMLScriptElement>(\n      this.winRef.document.getElementById(id)\n    );\n\n    if (!scriptElement) {\n      const renderer: Renderer2 = this.rendererFactory.createRenderer(\n        null,\n        null\n      );\n      const script: HTMLScriptElement = renderer.createElement('script');\n      script.id = id;\n      script.type = 'application/ld+json';\n      renderer.appendChild(this.winRef.document.body, script);\n      scriptElement = script;\n    }\n    return scriptElement;\n  }\n\n  /**\n   * Sanitizes the given json-ld schema by leveraging the angular HTML sanitizer.\n   *\n   * The given schema is not trusted, as malicious code could be injected (XSS)\n   * into the json-ld script.\n   */\n  sanitize(schema: {}): string {\n    return JSON.stringify(schema, (_key, value) =>\n      typeof value === 'string'\n        ? this.sanitizer.sanitize(SecurityContext.HTML, value)\n        : value\n    );\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Low level directive that adds a json-ld script tag to the component.\n * This code bypasses the strict XSS security, as otherwise we're not able\n * to append a script tag with JS inside.\n */\n@Directive({\n  selector: '[cxJsonLd]',\n})\nexport class JsonLdDirective {\n  @Input() set cxJsonLd(schema: string | number) {\n    this.writeJsonLd(schema);\n  }\n\n  @HostBinding('innerHTML') jsonLD: SafeHtml;\n\n  constructor(\n    protected jsonLdScriptFactory: JsonLdScriptFactory,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  private writeJsonLd(schema: {}) {\n    if (schema && this.jsonLdScriptFactory.isJsonLdRequired()) {\n      const sanitizedSchema = this.jsonLdScriptFactory.sanitize(schema);\n      const html = `<script type=\"application/ld+json\">${sanitizedSchema}</script>`;\n      this.jsonLD = this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Injection token to extend schema builders for adding structural data (json-ld).\n *\n * Some builders (i.e. `JSONLD_PRODUCT_BUILDER`) might have additional\n * lowever level builder to further extend the schema.\n */\nexport const SCHEMA_BUILDER = new InjectionToken('SchemaBuilderToken');\n\n/**\n * Injection token to add specific json-ld builders for product related schema's.\n * See see https://schema.org/product for more information.\n */\nexport const JSONLD_PRODUCT_BUILDER = new InjectionToken(\n  'JsonLdProductBuilderToken'\n);\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\r\nimport { combineLatest, Observable, of, Subscription } from 'rxjs';\r\nimport { SchemaBuilder } from './builders/schema.interface';\r\nimport { SCHEMA_BUILDER } from './builders/tokens';\r\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StructuredDataFactory implements OnDestroy {\r\n  constructor(\r\n    private scriptBuilder: JsonLdScriptFactory,\r\n    @Optional()\r\n    @Inject(SCHEMA_BUILDER)\r\n    private builders: SchemaBuilder[]\r\n  ) {}\r\n\r\n  private subscription: Subscription;\r\n\r\n  build() {\r\n    this.subscription = this.collectSchemas().subscribe((schema: {}[]) => {\r\n      this.scriptBuilder.build(schema);\r\n    });\r\n  }\r\n\r\n  private collectSchemas(): Observable<any[]> {\r\n    if (!this.scriptBuilder.isJsonLdRequired() || !this.builders) {\r\n      return of();\r\n    }\r\n    return combineLatest(\r\n      this.builders.map((builder) => builder.build())\r\n    ).pipe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { JsonLdDirective } from './json-ld.directive';\nimport { StructuredDataFactory } from './structured-data.factory';\n\n/**\n * Factory to build the structure data\n * without any interaction with the UI.\n */\nexport function getStructuredDataFactory(injector: Injector) {\n  const result = () => {\n    const factory = injector.get(StructuredDataFactory);\n    factory.build();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [JsonLdDirective],\n  exports: [JsonLdDirective],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getStructuredDataFactory,\n      deps: [Injector],\n      multi: true,\n    },\n  ],\n})\nexport class StructuredDataModule {}\n","import { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { htmlLangProvider } from './html-lang-provider';\nimport { SeoMetaService } from './seo-meta.service';\nimport { StructuredDataModule } from './structured-data/structured-data.module';\n\nexport function initSeoService(injector: Injector) {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [StructuredDataModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport {\r\n  FocusConfig,\r\n  KeyboardFocusService,\r\n} from '../a11y/keyboard-focus/index';\r\nimport { SkipLinkComponent } from '../a11y/skip-link/index';\r\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\r\n\r\n@Component({\r\n  selector: 'cx-storefront',\r\n  templateUrl: './storefront.component.html',\r\n})\r\nexport class StorefrontComponent implements OnInit, OnDestroy {\r\n  navigateSubscription: Subscription;\r\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\r\n\r\n  @HostBinding('class.start-navigating') startNavigating;\r\n  @HostBinding('class.stop-navigating') stopNavigating;\r\n\r\n  // required by esc focus\r\n  @HostBinding('tabindex') tabindex = '0';\r\n\r\n  @ViewChild(SkipLinkComponent) child: SkipLinkComponent;\r\n\r\n  private keyboardFocusConfig: FocusConfig = {\r\n    focusOnEscape: true,\r\n    focusOnDoubleEscape: true,\r\n  };\r\n\r\n  @HostListener('keydown.escape', ['$event'])\r\n  handleEscape(event: KeyboardEvent): void {\r\n    this.keyboardFocusService.handleEscape(\r\n      this.elementRef.nativeElement,\r\n      this.keyboardFocusConfig,\r\n      event\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private hamburgerMenuService: HamburgerMenuService,\r\n    private routingService: RoutingService,\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected keyboardFocusService: KeyboardFocusService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.navigateSubscription = this.routingService\r\n      .isNavigating()\r\n      .subscribe((val) => {\r\n        this.startNavigating = val === true;\r\n        this.stopNavigating = val === false;\r\n      });\r\n  }\r\n\r\n  collapseMenuIfClickOutside(event: MouseEvent) {\r\n    if ((<HTMLElement>event.target).className.includes('is-expanded')) {\r\n      this.collapseMenu();\r\n    }\r\n  }\r\n\r\n  collapseMenu(): void {\r\n    this.hamburgerMenuService.toggle(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.navigateSubscription) {\r\n      this.navigateSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FeaturesConfigModule } from '@spartacus/core';\r\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\r\nimport { OutletRefModule } from '../../cms-structure/outlet/outlet-ref/outlet-ref.module';\r\nimport { OutletModule } from '../../cms-structure/outlet/outlet.module';\r\nimport { PageLayoutModule } from '../../cms-structure/page/page-layout/page-layout.module';\r\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\r\nimport { PwaModule } from '../../cms-structure/pwa/pwa.module';\r\nimport { SeoModule } from '../../cms-structure/seo/seo.module';\r\nimport { AnonymousConsentsDialogModule } from '../../shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module';\r\nimport { KeyboardFocusModule } from '../a11y/keyboard-focus/keyboard-focus.module';\r\nimport { SkipLinkModule } from '../a11y/skip-link/skip-link.module';\r\nimport { StorefrontComponent } from './storefront.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    GlobalMessageComponentModule,\r\n    OutletModule,\r\n    OutletRefModule,\r\n    PwaModule,\r\n    PageLayoutModule,\r\n    SeoModule,\r\n    PageSlotModule,\r\n    AnonymousConsentsDialogModule,\r\n    FeaturesConfigModule,\r\n\r\n    SkipLinkModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [StorefrontComponent],\r\n  exports: [StorefrontComponent],\r\n})\r\nexport class MainModule {}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { CmsActivatedRouteSnapshot } from '@spartacus/core';\r\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\r\nimport { endWith, first, skipWhile } from 'rxjs/operators';\r\nimport { CmsComponentsService } from './cms-components.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsGuardsService {\r\n  constructor(\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected injector: Injector\r\n  ) {}\r\n\r\n  cmsPageCanActivate(\r\n    componentTypes: string[],\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    const guards = this.cmsComponentsService.getGuards(componentTypes);\r\n\r\n    if (guards.length) {\r\n      const canActivateObservables = guards.map((guardClass) => {\r\n        const guard = this.injector.get<CanActivate>(guardClass, null);\r\n        if (isCanActivate(guard)) {\r\n          return wrapIntoObservable(guard.canActivate(route, state)).pipe(\r\n            first()\r\n          );\r\n        } else {\r\n          throw new Error('Invalid CanActivate guard in cmsMapping');\r\n        }\r\n      });\r\n\r\n      return concat(...canActivateObservables).pipe(\r\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\r\n        endWith(true),\r\n        first()\r\n      );\r\n    } else {\r\n      return of(true);\r\n    }\r\n  }\r\n}\r\n\r\nfunction wrapIntoObservable<T>(\r\n  value: T | Promise<T> | Observable<T>\r\n): Observable<T> {\r\n  if (isObservable(value)) {\r\n    return value;\r\n  }\r\n\r\n  if (isPromise(value)) {\r\n    return from(Promise.resolve(value));\r\n  }\r\n\r\n  return of(value);\r\n}\r\n\r\nfunction isPromise(obj: any): obj is Promise<any> {\r\n  return !!obj && typeof obj.then === 'function';\r\n}\r\n\r\nfunction isCanActivate(guard: any): guard is CanActivate {\r\n  return guard && isFunction<CanActivate>(guard.canActivate);\r\n}\r\n\r\nfunction isFunction<T>(v: any): v is T {\r\n  return typeof v === 'function';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslationChunkService, TranslationService } from '@spartacus/core';\r\nimport { CmsComponentsService } from './cms-components.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsI18nService {\r\n  constructor(\r\n    protected cmsComponentsService: CmsComponentsService,\r\n    protected translation: TranslationService,\r\n    protected translationChunk: TranslationChunkService\r\n  ) {}\r\n\r\n  loadForComponents(componentTypes: string[]) {\r\n    const i18nKeys = this.cmsComponentsService.getI18nKeys(componentTypes);\r\n    const i18nChunks = new Set<string>();\r\n    for (const key of i18nKeys) {\r\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\r\n    }\r\n    this.translation.loadChunks(Array.from(i18nChunks));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\nimport { CmsRoute, PageContext, PageType } from '@spartacus/core';\r\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\r\nimport { CmsComponentsService } from './cms-components.service';\r\n\r\n// This service should be exposed in public API only after the refactor planned in https://github.com/SAP/spartacus/issues/7070\r\n@Injectable({ providedIn: 'root' })\r\nexport class CmsRoutesImplService {\r\n  constructor(\r\n    private router: Router,\r\n    private cmsComponentsService: CmsComponentsService\r\n  ) {}\r\n\r\n  private cmsRouteExists(url: string): boolean {\r\n    const isCmsDrivenRoute = url.startsWith('/');\r\n\r\n    if (!isCmsDrivenRoute) {\r\n      return false;\r\n    }\r\n\r\n    const routePath = url.substr(1);\r\n\r\n    return (\r\n      isCmsDrivenRoute &&\r\n      !!this.router.config.find(\r\n        (route: CmsRoute) =>\r\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\r\n   *\r\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\r\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\r\n   *\r\n   * @param pageContext\r\n   * @param currentUrl\r\n   */\r\n  handleCmsRoutesInGuard(\r\n    pageContext: PageContext,\r\n    componentTypes: string[],\r\n    currentUrl: string,\r\n    currentPageLabel: string\r\n  ): boolean {\r\n    if (this.cmsRouteExists(currentPageLabel)) {\r\n      return true;\r\n    }\r\n\r\n    const componentRoutes = this.cmsComponentsService.getChildRoutes(\r\n      componentTypes\r\n    );\r\n    if (componentRoutes.length) {\r\n      if (this.updateRouting(pageContext, currentPageLabel, componentRoutes)) {\r\n        this.router.navigateByUrl(currentUrl);\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private updateRouting(\r\n    pageContext: PageContext,\r\n    pageLabel: string,\r\n    routes: Route[]\r\n  ): boolean {\r\n    if (\r\n      pageContext.type === PageType.CONTENT_PAGE &&\r\n      pageLabel.startsWith('/') &&\r\n      pageLabel.length > 1\r\n    ) {\r\n      const newRoute: CmsRoute = {\r\n        path: pageLabel.substr(1),\r\n        component: PageLayoutComponent,\r\n        children: routes,\r\n        data: {\r\n          cxCmsRouteContext: {\r\n            type: pageContext.type,\r\n            id: pageLabel,\r\n          },\r\n        },\r\n      };\r\n\r\n      this.router.resetConfig([newRoute, ...this.router.config]);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PageContext } from '@spartacus/core';\r\nimport { CmsRoutesImplService } from './cms-routes-impl.service';\r\n\r\n// Public injection token for the private implementation of the service `CmsRoutesImplService`.\r\n// After #7070, this class should be replaced with a real implementation.\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useExisting: CmsRoutesImplService,\r\n})\r\nexport abstract class CmsRoutesService {\r\n  abstract handleCmsRoutesInGuard(\r\n    pageContext: PageContext,\r\n    componentTypes: string[],\r\n    currentUrl: string,\r\n    currentPageLabel: string\r\n  ): boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport {\r\n  CmsActivatedRouteSnapshot,\r\n  CmsService,\r\n  Page,\r\n  PageContext,\r\n  PageType,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport {\r\n  filter,\r\n  map,\r\n  switchMap,\r\n  take,\r\n  tap,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\nimport { CmsGuardsService } from '../services/cms-guards.service';\r\nimport { CmsI18nService } from '../services/cms-i18n.service';\r\nimport { CmsRoutesService } from '../services/cms-routes.service';\r\nimport { CmsComponentsService } from '../services';\r\n\r\n/**\r\n * Helper service for `CmsPageGuard`\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsPageGuardService {\r\n  constructor(\r\n    protected semanticPathService: SemanticPathService,\r\n    protected cmsService: CmsService,\r\n    protected cmsRoutes: CmsRoutesService,\r\n    protected cmsI18n: CmsI18nService,\r\n    protected cmsGuards: CmsGuardsService,\r\n    protected cmsComponentsService: CmsComponentsService\r\n  ) {}\r\n\r\n  /**\r\n   * Takes CMS components types in the current CMS page, triggers (configurable) side effects and returns a boolean - whether the route can be activated.\r\n   *\r\n   * Based on `cmsComponents` config for the components in the page:\r\n   * - Evaluates components' guards; if one of them emits false or UrlTree - the route cannot be activated or redirects to the given UrlTree, respectively.\r\n   * - If all components' guards emitted true, then the route can be activated\r\n   * - Then we trigger loading of configured i18n chunks in parallel\r\n   * - And we register the configured children routes of cms components\r\n   *\r\n   * @param pageContext current cms page context\r\n   * @param pageData cms page data\r\n   * @param route activated route snapshot\r\n   * @param state router state snapshot\r\n   *\r\n   * @returns boolean observable - whether the route can be activated\r\n   */\r\n  canActivatePage(\r\n    pageContext: PageContext,\r\n    pageData: Page,\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\r\n      take(1),\r\n      switchMap((componentTypes) =>\r\n        this.cmsComponentsService.determineMappings(componentTypes)\r\n      ),\r\n      switchMap((componentTypes) =>\r\n        this.cmsGuards\r\n          .cmsPageCanActivate(componentTypes, route, state)\r\n          .pipe(withLatestFrom(of(componentTypes)))\r\n      ),\r\n      tap(([canActivate, componentTypes]) => {\r\n        if (canActivate === true) {\r\n          this.cmsI18n.loadForComponents(componentTypes);\r\n        }\r\n      }),\r\n      map(([canActivate, componentTypes]) => {\r\n        const pageLabel = pageData.label || pageContext.id; // for content pages the page label returned from backend can be different than ID initially assumed from route\r\n        if (canActivate === true && !route?.data?.cxCmsRouteContext) {\r\n          return this.cmsRoutes.handleCmsRoutesInGuard(\r\n            pageContext,\r\n            componentTypes,\r\n            state.url,\r\n            pageLabel\r\n          );\r\n        }\r\n        return canActivate;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Activates the \"NOT FOUND\" cms page.\r\n   *\r\n   * It loads cms page data for the \"NOT FOUND\" page and puts it in the state of the the requested page label.\r\n   * Then it processes its CMS components with the method `canActivatePage()` of this service. For more, see its docs.\r\n   */\r\n  canActivateNotFoundPage(\r\n    pageContext: PageContext,\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    const notFoundCmsPageContext: PageContext = {\r\n      type: PageType.CONTENT_PAGE,\r\n      id: this.semanticPathService.get('notFound'),\r\n    };\r\n\r\n    return this.cmsService.getPage(notFoundCmsPageContext).pipe(\r\n      switchMap((notFoundPage) => {\r\n        if (notFoundPage) {\r\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\r\n            tap((notFoundIndex) => {\r\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\r\n            }),\r\n            switchMap((notFoundIndex) =>\r\n              this.cmsService.getPageIndex(pageContext).pipe(\r\n                // we have to wait for page index update\r\n                filter((index) => index === notFoundIndex)\r\n              )\r\n            ),\r\n            switchMap(() =>\r\n              this.canActivatePage(pageContext, notFoundPage, route, state)\r\n            )\r\n          );\r\n        }\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport {\r\n  CmsActivatedRouteSnapshot,\r\n  CmsService,\r\n  ProtectedRoutesGuard,\r\n  RouteLoadStrategy,\r\n  RoutingConfigService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { first, switchMap } from 'rxjs/operators';\r\nimport { CmsPageGuardService } from './cms-page-guard.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CmsPageGuard implements CanActivate {\r\n  static guardName = 'CmsPageGuard';\r\n\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected cmsService: CmsService,\r\n    protected protectedRoutesGuard: ProtectedRoutesGuard,\r\n    protected service: CmsPageGuardService,\r\n    protected routingConfig: RoutingConfigService\r\n  ) {}\r\n\r\n  /**\r\n   * Tries to load the CMS page data for the anticipated route and returns:\r\n   * - `true` - if it can be activated\r\n   * - `false` - if it cannot be activated\r\n   * - `UrlTree` - if user should be redirected to a given `UrlTree`\r\n   *\r\n   * If the route can be activated, it fires additional calculations on the CMS components present on this CMS page,\r\n   * based on their configuration (`cmsComponents` config).\r\n   *\r\n   * For more, see docs of the `CmsPageGuardService.canActivatePage`.\r\n   */\r\n  canActivate(\r\n    route: CmsActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> {\r\n    return this.protectedRoutesGuard.canActivate(route).pipe(\r\n      switchMap((canActivate) =>\r\n        canActivate\r\n          ? this.routingService.getNextPageContext().pipe(\r\n              switchMap((pageContext) =>\r\n                this.cmsService.getPage(pageContext, this.shouldReload()).pipe(\r\n                  first(),\r\n                  switchMap((pageData) =>\r\n                    pageData\r\n                      ? this.service.canActivatePage(\r\n                          pageContext,\r\n                          pageData,\r\n                          route,\r\n                          state\r\n                        )\r\n                      : this.service.canActivateNotFoundPage(\r\n                          pageContext,\r\n                          route,\r\n                          state\r\n                        )\r\n                  )\r\n                )\r\n              )\r\n            )\r\n          : of(false)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns whether we should reload the CMS page data, even when it was loaded before.\r\n   */\r\n  private shouldReload(): boolean {\r\n    return this.routingConfig.getLoadStrategy() !== RouteLoadStrategy.ONCE;\r\n  }\r\n}\r\n","import { Injector } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../page/page-layout/page-layout.component';\r\n\r\nconst cmsRoute: Route = {\r\n  path: '**',\r\n  canActivate: [CmsPageGuard],\r\n  component: PageLayoutComponent,\r\n};\r\n\r\nexport function addCmsRoute(injector: Injector) {\r\n  const result = () => {\r\n    const router = injector.get(Router);\r\n    router.config.push(cmsRoute);\r\n  };\r\n  return result;\r\n}\r\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","import { RoutesConfig, RoutingConfig } from '@spartacus/core';\r\n\r\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\r\n  home: { paths: [''] },\r\n  notFound: { paths: ['not-found'] },\r\n  cart: { paths: ['cart'] },\r\n\r\n  // semantic links for login related pages\r\n  login: { paths: ['login'], protected: false },\r\n  register: { paths: ['login/register'], protected: false },\r\n  forgotPassword: { paths: ['login/forgot-password'], protected: false },\r\n  resetPassword: { paths: ['login/pw/change'], protected: false },\r\n  logout: { paths: ['logout'] },\r\n  checkoutLogin: { paths: ['checkout-login'] },\r\n\r\n  checkout: { paths: ['checkout'] },\r\n  checkoutShippingAddress: { paths: ['checkout/shipping-address'] },\r\n  checkoutDeliveryMode: { paths: ['checkout/delivery-mode'] },\r\n  checkoutPaymentDetails: { paths: ['checkout/payment-details'] },\r\n  checkoutReviewOrder: { paths: ['checkout/review-order'] },\r\n  orderConfirmation: { paths: ['order-confirmation'] },\r\n\r\n  // plp routes\r\n  search: { paths: ['search/:query'] },\r\n  category: {\r\n    paths: ['category/:categoryCode'],\r\n    paramsMapping: { categoryCode: 'code' },\r\n  },\r\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\r\n\r\n  // pdp routes\r\n  product: {\r\n    paths: ['product/:productCode/:name'],\r\n    paramsMapping: { productCode: 'code' },\r\n  },\r\n\r\n  termsAndConditions: { paths: ['terms-and-conditions'] },\r\n  orders: {\r\n    paths: ['my-account/orders'],\r\n  },\r\n  orderDetails: {\r\n    paths: ['my-account/order/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderGuest: {\r\n    paths: ['guest/order/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderReturn: {\r\n    paths: ['my-account/order/return/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderReturnConfirmation: {\r\n    paths: ['my-account/order/return/confirmation/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderCancel: {\r\n    paths: ['my-account/order/cancel/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  orderCancelConfirmation: {\r\n    paths: ['my-account/order/cancel/confirmation/:orderCode'],\r\n    paramsMapping: { orderCode: 'code' },\r\n  },\r\n  returnRequestDetails: {\r\n    paths: ['my-account/return-request/:returnCode'],\r\n    paramsMapping: { returnCode: 'rma' },\r\n  },\r\n  coupons: { paths: ['my-account/coupons'] },\r\n  couponClaim: {\r\n    paths: ['my-account/coupon/claim/:couponCode'],\r\n    paramsMapping: { couponCode: 'code' },\r\n  },\r\n};\r\n\r\nexport const defaultRoutingConfig: RoutingConfig = {\r\n  routing: {\r\n    routes: defaultStorefrontRoutesConfig,\r\n  },\r\n};\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport {\r\n  provideDefaultConfig,\r\n  RoutingModule as CoreRoutingModule,\r\n} from '@spartacus/core';\r\nimport { CmsRouteModule } from './cms-route/cms-route.module';\r\nimport { defaultRoutingConfig } from './default-routing-config';\r\n\r\n@NgModule({\r\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\r\n})\r\nexport class RoutingModule {\r\n  static forRoot(): ModuleWithProviders<RoutingModule> {\r\n    return {\r\n      ngModule: RoutingModule,\r\n      providers: [provideDefaultConfig(defaultRoutingConfig)],\r\n    };\r\n  }\r\n}\r\n","import { isDevMode } from '@angular/core';\r\nimport { UrlMatchResult, UrlSegment } from '@angular/router';\r\n\r\n/**\r\n * Matches the pattern '[ ** / ] marker / :paramName'\r\n *\r\n * @param marker phrase that indicates the start of the match\r\n * @param paramName name of the parameter present after the marker\r\n * @param precedingParamName name of the parameter for every preceding url segment\r\n *        i.e. `param` will result in `param0`, `param1`, ...\r\n */\r\nexport function getSuffixUrlMatcher({\r\n  marker,\r\n  paramName,\r\n  precedingParamName,\r\n}: {\r\n  marker: string;\r\n  paramName: string;\r\n  precedingParamName?: string;\r\n}) {\r\n  precedingParamName = precedingParamName || 'param';\r\n  const matcher = function suffixUrlMatcher(\r\n    segments: UrlSegment[]\r\n  ): UrlMatchResult | null {\r\n    const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\r\n    const isMarkerLastSegment = markerIndex === segments.length - 1;\r\n\r\n    if (markerIndex === -1 || isMarkerLastSegment) {\r\n      return null;\r\n    }\r\n\r\n    const paramIndex = markerIndex + 1;\r\n    const posParams: { [name: string]: UrlSegment } = {\r\n      [paramName]: segments[paramIndex],\r\n    };\r\n\r\n    for (let i = 0; i < markerIndex; i++) {\r\n      posParams[`${precedingParamName}${i}`] = segments[i];\r\n    }\r\n\r\n    return { consumed: segments.slice(0, paramIndex + 1), posParams };\r\n  };\r\n\r\n  if (isDevMode()) {\r\n    matcher['_suffixRouteConfig'] = { marker, paramName, precedingParamName }; // property added for easier debugging of routes\r\n  }\r\n\r\n  return matcher;\r\n}\r\n\r\nfunction findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\r\n  for (let index = elements.length - 1; index >= 0; index--) {\r\n    if (predicate(elements[index])) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PageMeta, PageMetaService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SchemaBuilder } from '../schema.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BreadcrumbSchemaBuilder implements SchemaBuilder {\r\n  constructor(protected pageMetaService: PageMetaService) {}\r\n\r\n  build(): Observable<any> {\r\n    return this.pageMetaService\r\n      .getMeta()\r\n      .pipe(map((pageMeta: PageMeta) => this.collect(pageMeta)));\r\n  }\r\n\r\n  protected collect(pageMeta: PageMeta): any {\r\n    if (!pageMeta?.breadcrumbs) {\r\n      return;\r\n    }\r\n    const crumbs = pageMeta.breadcrumbs.map((crumb, index) => {\r\n      return {\r\n        '@type': 'ListItem',\r\n        position: index + 1,\r\n        item: {\r\n          '@id': crumb.link,\r\n          name: crumb.label,\r\n        },\r\n      };\r\n    });\r\n\r\n    if (pageMeta.title) {\r\n      crumbs.push({\r\n        '@type': 'ListItem',\r\n        position: crumbs.length + 1,\r\n        item: {\r\n          '@id': pageMeta.title,\r\n          name: pageMeta.title,\r\n        },\r\n      });\r\n    }\r\n\r\n    return {\r\n      '@context': 'http://schema.org',\r\n      '@type': 'BreadcrumbList',\r\n      itemListElement: crumbs,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the basic structured data for the product, see https://schema.org/product.\n * This builder includes data for sku number, name, description, brand and main image.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdBaseProductBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    return of({\n      ...this.getProductBase(product),\n      ...this.getProductBrand(product),\n      ...this.getProductImage(product),\n    });\n  }\n\n  private getProductBase(product: Product) {\n    const result: any = { sku: product.code };\n    if (product.name) {\n      result.name = product.name;\n    }\n    if (product.summary) {\n      result.description = product.summary;\n    }\n    return result;\n  }\n\n  private getProductImage(product: Product) {\n    return product.images &&\n      product.images.PRIMARY &&\n      product.images.PRIMARY['zoom'] &&\n      product.images.PRIMARY['zoom'].url\n      ? {\n          image: product.images.PRIMARY['zoom'].url,\n        }\n      : {};\n  }\n\n  private getProductBrand(product: Product) {\n    return product['manufacturer']\n      ? {\n          brand: product['manufacturer'],\n        }\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product offer, see https://schema.org/offers.\n * The data includes the price, currency and availability level.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductOfferBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    const schema: any = { '@type': 'Offer' };\n    if (product.price) {\n      if (product.price.value) {\n        schema.price = product.price.value;\n      }\n      if (product.price.currencyIso) {\n        schema.priceCurrency = product.price.currencyIso;\n      }\n    }\n\n    if (product.stock && product.stock.stockLevelStatus) {\n      schema.availability =\n        product.stock.stockLevelStatus === 'inStock' ? 'InStock' : 'OutOfStock';\n    }\n\n    return of({\n      offers: schema,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { JsonLdBuilder } from '../schema.interface';\r\n\r\n/**\r\n * Builds the structured data for the product reviews, see https://schema.org/Review.\r\n * The data includes the aggregated product rating and the individual reviews.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JsonLdProductReviewBuilder implements JsonLdBuilder<Product> {\r\n  constructor(private reviewService: ProductReviewService) {}\r\n\r\n  build(product: Product): Observable<any> {\r\n    return this.reviewService.getByProductCode(product.code).pipe(\r\n      filter(Boolean),\r\n      map((reviews: Review[]) => {\r\n        return {\r\n          aggregateRating: this.buildAggregatedReviews(product, reviews),\r\n          review: reviews.map((review) => this.buildReviews(review)),\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildAggregatedReviews(product: Product, reviews: Review[]) {\r\n    const aggregated: any = {\r\n      '@type': 'AggregateRating',\r\n    };\r\n    if (product.averageRating) {\r\n      aggregated.ratingValue = product.averageRating;\r\n    }\r\n    if (reviews) {\r\n      aggregated.ratingCount = reviews.filter((rev) => !!rev.rating).length;\r\n      aggregated.reviewCount = reviews.filter((rev) => !!rev.comment).length;\r\n    }\r\n    return aggregated;\r\n  }\r\n\r\n  private buildReviews(review: Review) {\r\n    const reviewSchema: any = {\r\n      '@type': 'review',\r\n    };\r\n\r\n    if (review.principal && review.principal.name) {\r\n      reviewSchema.author = review.principal.name;\r\n    }\r\n    if (review.date) {\r\n      const date = new Date(review.date);\r\n      reviewSchema.datePublished = `${date.getFullYear()}-${\r\n        date.getMonth() + 1\r\n      }-${date.getDate()}`;\r\n    }\r\n    if (review.headline) {\r\n      reviewSchema.name = review.headline;\r\n    }\r\n    if (review.comment) {\r\n      reviewSchema.description = review.comment;\r\n    }\r\n    if (review.rating) {\r\n      reviewSchema.reviewRating = {\r\n        '@type': 'Rating',\r\n        ratingValue: review.rating.toString(),\r\n      };\r\n    }\r\n\r\n    return reviewSchema;\r\n  }\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Product } from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { CurrentProductService } from '../../../../../cms-components/product/current-product.service';\r\nimport { JsonLdBuilder, SchemaBuilder } from '../schema.interface';\r\nimport { JSONLD_PRODUCT_BUILDER } from '../tokens';\r\n\r\n/**\r\n * Adds the minimal structured data for the product, see https://schema.org/product.\r\n * The actual data collection is delegated to `JsonLdBuilder`s, which can be injected\r\n * using the `JSONLD_PRODUCT_BUILDER` token.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductSchemaBuilder implements SchemaBuilder {\r\n  constructor(\r\n    private currentProduct: CurrentProductService,\r\n    @Optional()\r\n    @Inject(JSONLD_PRODUCT_BUILDER)\r\n    protected builders: JsonLdBuilder<Product>[]\r\n  ) {}\r\n\r\n  build(): Observable<any> {\r\n    return this.currentProduct.getProduct().pipe(\r\n      switchMap((product: Product) => {\r\n        if (product) {\r\n          return combineLatest(this.collect(product)).pipe(\r\n            map((res: {}[]) => Object.assign({}, ...res))\r\n          );\r\n        }\r\n        return of({});\r\n      })\r\n    );\r\n  }\r\n\r\n  protected collect(product: Product): Observable<any>[] {\r\n    if (!product || !product.code) {\r\n      return [];\r\n    }\r\n    const builders = this.builders\r\n      ? this.builders.map((builder) => builder.build(product))\r\n      : [];\r\n    return [\r\n      of({\r\n        '@context': 'http://schema.org',\r\n        '@type': 'Product',\r\n      }),\r\n      ...builders,\r\n    ];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BreadcrumbSchemaBuilder } from './breadcrumb/index';\nimport {\n  JsonLdBaseProductBuilder,\n  JsonLdProductOfferBuilder,\n  JsonLdProductReviewBuilder,\n  ProductSchemaBuilder,\n} from './product/index';\nimport { JSONLD_PRODUCT_BUILDER, SCHEMA_BUILDER } from './tokens';\n\n/**\n * Provides several standard json-ld builders that contribute\n * to colleting and building json-ld data.\n */\n@NgModule({\n  providers: [\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: ProductSchemaBuilder,\n      multi: true,\n    },\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: BreadcrumbSchemaBuilder,\n      multi: true,\n    },\n    // lower level json-ld builder classes offering fine-graiend control\n    // for product related schema's\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdBaseProductBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductOfferBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductReviewBuilder,\n      multi: true,\n    },\n  ],\n})\nexport class JsonLdBuilderModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\r\nimport {\r\n  CmsBannerCarouselComponent as model,\r\n  CmsService,\r\n  ContentSlotComponentData,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/index';\r\n\r\n/**\r\n * Generic carousel that renders CMS Components.\r\n */\r\n@Component({\r\n  selector: 'cx-banner-carousel',\r\n  templateUrl: 'banner-carousel.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BannerCarouselComponent {\r\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\r\n    filter(Boolean),\r\n    tap((d: model) => (this.theme = `${d.effect}-theme`))\r\n  );\r\n\r\n  private items$: Observable<\r\n    Observable<ContentSlotComponentData>[]\r\n  > = this.componentData$.pipe(\r\n    map((data) => data.banners.trim().split(' ')),\r\n    map((codes) => codes.map((code) => this.cmsService.getComponentData(code)))\r\n  );\r\n\r\n  /**\r\n   * Adds a specific theme for the carousel. The effect can be\r\n   * used in CSS customisations.\r\n   */\r\n  @HostBinding('class') theme = '';\r\n\r\n  constructor(\r\n    private componentData: CmsComponentData<model>,\r\n    private cmsService: CmsService\r\n  ) {}\r\n\r\n  /**\r\n   * Returns an Obervable with an Array of Observables. This is done, so that\r\n   * the component UI could consider to lazy load the UI components when they're\r\n   * in the viewpoint.\r\n   */\r\n  getItems(): Observable<Observable<ContentSlotComponentData>[]> {\r\n    return this.items$;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\r\nimport { CarouselModule, MediaModule } from '../../../shared/components/index';\r\nimport { BannerCarouselComponent } from './banner-carousel.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PageComponentModule, CarouselModule, MediaModule],\r\n  providers: [\r\n    provideDefaultConfig({\r\n      cmsComponents: {\r\n        RotatingImagesComponent: {\r\n          component: BannerCarouselComponent,\r\n        },\r\n      },\r\n    } as CmsConfig),\r\n  ],\r\n  declarations: [BannerCarouselComponent],\r\n  entryComponents: [BannerCarouselComponent],\r\n  exports: [BannerCarouselComponent],\r\n})\r\nexport class BannerCarouselModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsBannerComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  constructor(public component: CmsComponentData<CmsBannerComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { BannerComponent } from './banner.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, GenericLinkModule, MediaModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        SimpleResponsiveBannerComponent: {\r\n          component: BannerComponent,\r\n        },\r\n        BannerComponent: {\r\n          component: BannerComponent,\r\n        },\r\n        SimpleBannerComponent: {\r\n          component: BannerComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [BannerComponent],\r\n  entryComponents: [BannerComponent],\r\n  exports: [BannerComponent],\r\n})\r\nexport class BannerModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  constructor(public component: CmsComponentData<CmsLinkComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { LinkComponent } from './link.component';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, GenericLinkModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSLinkComponent: { component: LinkComponent },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [LinkComponent],\r\n  exports: [LinkComponent],\r\n  entryComponents: [LinkComponent],\r\n})\r\nexport class LinkModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  constructor(public component: CmsComponentData<CmsParagraphComponent>) {}\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ParagraphComponent } from './paragraph.component';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSParagraphComponent: {\r\n          component: ParagraphComponent,\r\n        },\r\n        CMSTabParagraphComponent: {\r\n          component: ParagraphComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ParagraphComponent],\r\n  exports: [ParagraphComponent],\r\n  entryComponents: [ParagraphComponent],\r\n})\r\nexport class CmsParagraphModule {}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChildren,\r\n} from '@angular/core';\r\nimport {\r\n  CmsService,\r\n  CMSTabParagraphContainer,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap } from 'rxjs/operators';\r\nimport { ComponentWrapperDirective } from '../../../cms-structure/page/component/component-wrapper.directive';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\r\n\r\n@Component({\r\n  selector: 'cx-tab-paragraph-container',\r\n  templateUrl: './tab-paragraph-container.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TabParagraphContainerComponent\r\n  implements AfterViewInit, OnInit, OnDestroy {\r\n  activeTabNum = 0;\r\n\r\n  @ViewChildren(ComponentWrapperDirective) children!: QueryList<\r\n    ComponentWrapperDirective\r\n  >;\r\n\r\n  tabTitleParams: Observable<any>[] = [];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\r\n    protected cmsService: CmsService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  components$: Observable<any[]> = this.componentData.data$.pipe(\r\n    distinctUntilChanged((x, y) => x?.components === y?.components),\r\n    switchMap((data) =>\r\n      combineLatest(\r\n        (data?.components ?? '').split(' ').map((component) =>\r\n          this.cmsService.getComponentData<any>(component).pipe(\r\n            distinctUntilChanged(),\r\n            map((tab) => {\r\n              if (!tab) {\r\n                return undefined;\r\n              }\r\n\r\n              if (!tab.flexType) {\r\n                tab = {\r\n                  ...tab,\r\n                  flexType: tab.typeCode,\r\n                };\r\n              }\r\n\r\n              return {\r\n                ...tab,\r\n                title: `${data.uid}.tabs.${tab.uid}`,\r\n              };\r\n            })\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  select(tabNum: number): void {\r\n    this.activeTabNum = tabNum;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activeTabNum =\r\n      this.winRef.nativeWindow?.history?.state?.activeTab ?? this.activeTabNum;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // If the sub cms components data exist, the components created before ngAfterViewInit are called.\r\n    // In this case, the title parameters are directly pulled from them.\r\n    // If the sub cms components data does not exist, it should should be loaded first.\r\n    // In this case, listen to the changes to wait for them to be created.\r\n    if (this.children.length > 0) {\r\n      this.getTitleParams(this.children);\r\n    } else {\r\n      this.subscription = this.children.changes.subscribe(\r\n        (tabComps: QueryList<ComponentWrapperDirective>) =>\r\n          this.getTitleParams(tabComps)\r\n      );\r\n    }\r\n  }\r\n\r\n  private getTitleParams(children: QueryList<ComponentWrapperDirective>) {\r\n    children.forEach((comp) => {\r\n      if (comp.cmpRef && comp.cmpRef.instance.tabTitleParam$) {\r\n        this.tabTitleParams.push(comp.cmpRef.instance.tabTitleParam$);\r\n      } else {\r\n        this.tabTitleParams.push(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\r\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\r\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PageComponentModule, OutletModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSTabParagraphContainer: {\r\n          component: TabParagraphContainerComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [TabParagraphContainerComponent],\r\n  entryComponents: [TabParagraphContainerComponent],\r\n  exports: [TabParagraphContainerComponent],\r\n})\r\nexport class TabParagraphContainerModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Address,\r\n  CheckoutDeliveryService,\r\n  UserAddressService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AddressBookComponentService {\r\n  constructor(\r\n    protected userAddressService: UserAddressService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService\r\n  ) {}\r\n\r\n  getAddresses(): Observable<Address[]> {\r\n    return this.userAddressService.getAddresses();\r\n  }\r\n\r\n  getAddressesStateLoading(): Observable<boolean> {\r\n    return this.userAddressService.getAddressesLoading();\r\n  }\r\n\r\n  loadAddresses() {\r\n    this.userAddressService.loadAddresses();\r\n  }\r\n\r\n  addUserAddress(address: Address) {\r\n    this.userAddressService.addUserAddress(address);\r\n  }\r\n\r\n  updateUserAddress(addressId: string, address: Address) {\r\n    this.userAddressService.updateUserAddress(addressId, address);\r\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  Address,\r\n  TranslationService,\r\n  UserAddressService,\r\n  CheckoutDeliveryService,\r\n} from '@spartacus/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { AddressBookComponentService } from './address-book.component.service';\r\nimport { Card } from '../../../shared/components/card';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-address-book',\r\n  templateUrl: './address-book.component.html',\r\n})\r\nexport class AddressBookComponent implements OnInit {\r\n  addresses$: Observable<Address[]>;\r\n  cards$: Observable<Card[]>;\r\n  addressesStateLoading$: Observable<boolean>;\r\n  currentAddress: Address;\r\n\r\n  showAddAddressForm = false;\r\n  showEditAddressForm = false;\r\n  editCard: string;\r\n\r\n  constructor(\r\n    public service: AddressBookComponentService,\r\n    protected translation: TranslationService,\r\n    protected userAddressService: UserAddressService,\r\n    protected checkoutDeliveryService: CheckoutDeliveryService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.addresses$ = this.service.getAddresses();\r\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\r\n    this.service.loadAddresses();\r\n  }\r\n\r\n  addAddressButtonHandle(): void {\r\n    this.showEditAddressForm = false;\r\n    this.showAddAddressForm = true;\r\n  }\r\n\r\n  editAddressButtonHandle(address: Address): void {\r\n    this.showAddAddressForm = false;\r\n    this.showEditAddressForm = true;\r\n    this.currentAddress = address;\r\n  }\r\n\r\n  addAddressSubmit(address: Address): void {\r\n    this.showAddAddressForm = false;\r\n    this.service.addUserAddress(address);\r\n  }\r\n\r\n  addAddressCancel(): void {\r\n    this.showAddAddressForm = false;\r\n  }\r\n\r\n  editAddressSubmit(address: Address): void {\r\n    this.showEditAddressForm = false;\r\n    this.service.updateUserAddress(this.currentAddress['id'], address);\r\n  }\r\n\r\n  editAddressCancel(): void {\r\n    this.showEditAddressForm = false;\r\n  }\r\n\r\n  getCardContent(address: Address) {\r\n    return combineLatest([\r\n      this.translation.translate('addressCard.default'),\r\n      this.translation.translate('addressCard.setAsDefault'),\r\n      this.translation.translate('common.delete'),\r\n      this.translation.translate('common.edit'),\r\n      this.translation.translate('addressBook.areYouSureToDeleteAddress'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          defaultText,\r\n          setAsDefaultText,\r\n          textDelete,\r\n          textEdit,\r\n          textVerifyDeleteMsg,\r\n        ]) => {\r\n          let region = '';\r\n\r\n          if (address.region && address.region.isocode) {\r\n            region = address.region.isocode + ', ';\r\n          }\r\n\r\n          const actions: { name: string; event: string }[] = [];\r\n          if (!address.defaultAddress) {\r\n            actions.push({ name: setAsDefaultText, event: 'default' });\r\n          }\r\n          actions.push({ name: textEdit, event: 'edit' });\r\n          actions.push({ name: textDelete, event: 'delete' });\r\n\r\n          return {\r\n            textBold: address.firstName + ' ' + address.lastName,\r\n            text: [\r\n              address.line1,\r\n              address.line2,\r\n              address.town + ', ' + region + address.country.isocode,\r\n              address.postalCode,\r\n              address.phone,\r\n            ],\r\n            actions: actions,\r\n            header: address.defaultAddress ? `✓ ${defaultText}` : '',\r\n            deleteMsg: textVerifyDeleteMsg,\r\n          };\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  setAddressAsDefault(addressId: string): void {\r\n    this.userAddressService.setAddressAsDefault(addressId);\r\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\r\n  }\r\n\r\n  deleteAddress(addressId: string): void {\r\n    this.userAddressService.deleteUserAddress(addressId);\r\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\r\n  }\r\n\r\n  setEdit(addressId: string): void {\r\n    if (this.editCard !== addressId) {\r\n      this.editCard = addressId;\r\n    } else {\r\n      this.deleteAddress(addressId);\r\n    }\r\n  }\r\n\r\n  cancelCard(): void {\r\n    this.editCard = null;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UserAddressService,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { AddressFormModule } from '../../checkout/components/shipping-address/address-form/address-form.module';\r\nimport { AddressBookComponent } from './address-book.component';\r\nimport { AddressBookComponentService } from './address-book.component.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardModule,\r\n    AddressFormModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n  ],\r\n  declarations: [AddressBookComponent],\r\n  exports: [AddressBookComponent],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AccountAddressBookComponent: {\r\n          component: AddressBookComponent,\r\n          providers: [\r\n            {\r\n              provide: AddressBookComponentService,\r\n              useClass: AddressBookComponentService,\r\n              deps: [UserAddressService],\r\n            },\r\n          ],\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n    UserAddressService,\r\n  ],\r\n  entryComponents: [AddressBookComponent],\r\n})\r\nexport class AddressBookModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserService,\r\n  UserToken,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\r\nimport { ModalService } from '../../../../../shared/components/modal/modal.service';\r\n\r\n@Component({\r\n  selector: 'cx-close-account-modal',\r\n  templateUrl: './close-account-modal.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CloseAccountModalComponent implements OnInit, OnDestroy {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  private subscription = new Subscription();\r\n  userToken$: Observable<UserToken>;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    protected modalService: ModalService,\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n    private globalMessageService: GlobalMessageService,\r\n    private routingService: RoutingService,\r\n    private translationService: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.userToken$ = this.authService.getUserToken();\r\n    this.userService.resetRemoveUserProcessState();\r\n    this.subscription.add(\r\n      this.userService\r\n        .getRemoveUserResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.userService\r\n        .getRemoveUserResultError()\r\n        .subscribe((error) => this.onError(error))\r\n    );\r\n    this.isLoading$ = this.userService.getRemoveUserResultLoading();\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.dismissModal();\r\n      this.translationService\r\n        .translate('closeAccount.accountClosedSuccessfully')\r\n        .pipe(first())\r\n        .subscribe((text) => {\r\n          this.globalMessageService.add(\r\n            text,\r\n            GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n          );\r\n        });\r\n      this.routingService.go({ cxRoute: 'home' });\r\n    }\r\n  }\r\n\r\n  onError(error: boolean): void {\r\n    if (error) {\r\n      this.dismissModal();\r\n      this.translationService\r\n        .translate('closeAccount.accountClosedFailure')\r\n        .pipe(first())\r\n        .subscribe((text) => {\r\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_ERROR);\r\n        });\r\n    }\r\n  }\r\n\r\n  dismissModal(reason?: any): void {\r\n    this.modalService.dismissActiveModal(reason);\r\n  }\r\n\r\n  closeAccount() {\r\n    this.userService.remove();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { CloseAccountModalComponent } from '../close-account-modal/close-account-modal.component';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account',\n  templateUrl: './close-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountComponent {\n  modal: any;\n  constructor(private modalService: ModalService) {}\n\n  openModal(): void {\n    this.modal = this.modalService.open(CloseAccountModalComponent, {\n      centered: true,\n    }).componentInstance;\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { CloseAccountModalComponent } from './components/close-account-modal/close-account-modal.component';\r\nimport { IconModule } from '../../../cms-components/misc/icon/index';\r\nimport { CloseAccountComponent } from './components/close-account/close-account.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CloseAccountComponent: {\r\n          component: CloseAccountComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CloseAccountComponent, CloseAccountModalComponent],\r\n  exports: [CloseAccountComponent, CloseAccountModalComponent],\r\n  entryComponents: [CloseAccountComponent, CloseAccountModalComponent],\r\n})\r\nexport class CloseAccountModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { RoutingService, UserService } from '@spartacus/core';\r\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\r\n@Component({\r\n  selector: 'cx-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      userEmail: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.emailValidator],\r\n      ],\r\n    });\r\n  }\r\n\r\n  requestForgotPasswordEmail() {\r\n    if (this.forgotPasswordForm.valid) {\r\n      this.userService.requestForgotPasswordEmail(\r\n        this.forgotPasswordForm.value.userEmail\r\n      );\r\n      this.routingService.go({ cxRoute: 'login' });\r\n    } else {\r\n      this.forgotPasswordForm.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ForgotPasswordComponent } from './forgot-password.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ForgotPasswordComponent: {\r\n          component: ForgotPasswordComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ForgotPasswordComponent],\r\n  exports: [ForgotPasswordComponent],\r\n  entryComponents: [ForgotPasswordComponent],\r\n})\r\nexport class ForgotPasswordModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  HostBinding,\r\n  Input,\r\n} from '@angular/core';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'cx-amend-order-actions',\r\n  templateUrl: './amend-order-actions.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AmendOrderActionsComponent {\r\n  @Input() orderCode: string;\r\n  @Input() amendOrderForm: FormGroup;\r\n  @Input() backRoute: string;\r\n  @Input() forwardRoute: string;\r\n\r\n  @HostBinding('class') styles = 'row';\r\n\r\n  constructor(protected routingService: RoutingService) {}\r\n\r\n  continue(event: Event): void {\r\n    if (this.amendOrderForm.valid) {\r\n      this.routingService.go({\r\n        cxRoute: this.forwardRoute,\r\n        params: { code: this.orderCode },\r\n      });\r\n    } else {\r\n      this.amendOrderForm.markAllAsTouched();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { AmendOrderActionsComponent } from './amend-order-actions.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [AmendOrderActionsComponent],\n  exports: [AmendOrderActionsComponent],\n})\nexport class AmendOrderActionsModule {}\n","export enum AmendOrderType {\n  CANCEL,\n  RETURN,\n}\n","import { formatCurrency, getCurrencySymbol } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Order, OrderEntry, Price } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../order-details/order-details.service';\r\nimport { AmendOrderType } from './amend-order.model';\r\n\r\nfunction ValidateQuantityToCancel(control: FormControl) {\r\n  if (!control.value) {\r\n    return null;\r\n  }\r\n  const quantity = Object.values(control.value).reduce(\r\n    (acc: number, val: number) => acc + val,\r\n    0\r\n  );\r\n  return quantity > 0 ? null : { cxNoSelectedItemToCancel: true };\r\n}\r\n\r\n@Injectable()\r\nexport abstract class OrderAmendService {\r\n  protected amendType: AmendOrderType;\r\n  protected form: FormGroup;\r\n\r\n  constructor(protected orderDetailsService: OrderDetailsService) {}\r\n\r\n  /**\r\n   * Returns entries for the given order.\r\n   */\r\n  abstract getEntries(): Observable<OrderEntry[]>;\r\n\r\n  /**\r\n   * Returns entries with an amended quantity.\r\n   */\r\n  getAmendedEntries(): Observable<OrderEntry[]> {\r\n    return this.getForm().pipe(\r\n      switchMap((form) => {\r\n        return this.getEntries().pipe(\r\n          map((entries) =>\r\n            entries.filter(\r\n              (entry) => this.getFormControl(form, entry).value > 0\r\n            )\r\n          )\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Submits the amended order.\r\n   */\r\n  abstract save(): void;\r\n\r\n  getOrder(): Observable<Order> {\r\n    return this.orderDetailsService.getOrderDetails();\r\n  }\r\n\r\n  /**\r\n   * returns the form with form data at runtime\r\n   */\r\n  getForm(): Observable<FormGroup> {\r\n    return this.getOrder().pipe(\r\n      tap((order) => {\r\n        if (!this.form || this.form.get('orderCode').value !== order.code) {\r\n          this.buildForm(order);\r\n        }\r\n      }),\r\n      map(() => this.form)\r\n    );\r\n  }\r\n\r\n  private buildForm(order: Order): void {\r\n    this.form = new FormGroup({});\r\n    this.form.addControl('orderCode', new FormControl(order.code));\r\n\r\n    const entryGroup = new FormGroup(\r\n      {},\r\n      { validators: [ValidateQuantityToCancel] }\r\n    );\r\n    this.form.addControl('entries', entryGroup);\r\n\r\n    (order.entries || []).forEach((entry) => {\r\n      const key = entry.entryNumber.toString();\r\n      entryGroup.addControl(\r\n        key,\r\n        new FormControl(0, {\r\n          validators: [\r\n            Validators.min(0),\r\n            Validators.max(this.getMaxAmendQuantity(entry)),\r\n          ],\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  protected getFormControl(form: FormGroup, entry: OrderEntry): FormControl {\r\n    return <FormControl>form.get('entries').get(entry.entryNumber.toString());\r\n  }\r\n\r\n  /**\r\n   * As discussed, this calculation is moved to SPA side.\r\n   * The calculation and validation should be in backend facade layer.\r\n   */\r\n  getAmendedPrice(entry: OrderEntry): Price {\r\n    const amendedQuantity = this.getFormControl(this.form, entry).value;\r\n    const amendedPrice = Object.assign({}, entry.basePrice);\r\n    amendedPrice.value =\r\n      Math.round(entry.basePrice.value * amendedQuantity * 100) / 100;\r\n\r\n    amendedPrice.formattedValue = formatCurrency(\r\n      amendedPrice.value,\r\n      // TODO: user current language\r\n      'en',\r\n      getCurrencySymbol(amendedPrice.currencyIso, 'narrow'),\r\n      amendedPrice.currencyIso\r\n    );\r\n\r\n    return amendedPrice;\r\n  }\r\n\r\n  getMaxAmendQuantity(entry: OrderEntry) {\r\n    return (\r\n      (this.isCancellation()\r\n        ? entry.cancellableQuantity\r\n        : entry.returnableQuantity) || entry.quantity\r\n    );\r\n  }\r\n\r\n  isCancellation() {\r\n    return this.amendType === AmendOrderType.CANCEL;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { OrderEntry, Price } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderAmendService } from '../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-amend-order-items',\r\n  templateUrl: './amend-order-items.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CancelOrReturnItemsComponent {\r\n  @Input() entries: OrderEntry[];\r\n  @Input() isConfirmation = false;\r\n\r\n  form$: Observable<FormGroup> = this.orderAmendService.getForm();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n\r\n  getControl(form: FormGroup, entry: OrderEntry): FormControl {\r\n    const control = <FormControl>(\r\n      form.get('entries').get(entry.entryNumber.toString())\r\n    );\r\n    return control;\r\n  }\r\n\r\n  setAll(form: FormGroup): void {\r\n    this.entries.forEach((entry) =>\r\n      this.getControl(form, entry).setValue(this.getMaxAmendQuantity(entry))\r\n    );\r\n  }\r\n\r\n  getItemPrice(entry: OrderEntry): Price {\r\n    return this.orderAmendService.getAmendedPrice(entry);\r\n  }\r\n\r\n  getMaxAmendQuantity(entry: OrderEntry) {\r\n    return this.orderAmendService.getMaxAmendQuantity(entry);\r\n  }\r\n\r\n  isCancellation() {\r\n    return this.orderAmendService.isCancellation();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { I18nModule, FeaturesConfigModule } from '@spartacus/core';\r\nimport {\r\n  FormErrorsModule,\r\n  ItemCounterModule,\r\n  MediaModule,\r\n} from '../../../../../shared/index';\r\nimport { CancelOrReturnItemsComponent } from './amend-order-items.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    ItemCounterModule,\r\n    FeaturesConfigModule,\r\n    FormErrorsModule,\r\n  ],\r\n  declarations: [CancelOrReturnItemsComponent],\r\n  exports: [CancelOrReturnItemsComponent],\r\n  entryComponents: [CancelOrReturnItemsComponent],\r\n})\r\nexport class AmendOrderItemsModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-cancel-order-confirmation',\r\n  templateUrl: './cancel-order-confirmation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CancelOrderConfirmationComponent {\r\n  orderCode: string;\r\n\r\n  form$ = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<\r\n    OrderEntry[]\r\n  > = this.orderAmendService.getAmendedEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n\r\n  submit(form: FormGroup) {\r\n    if (form.valid) {\r\n      this.orderAmendService.save();\r\n    } else {\r\n      form.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CancelOrReturnRequestEntryInput,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  OrderEntry,\r\n  RoutingService,\r\n  UserOrderService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, first, map } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../../order-details/order-details.service';\r\nimport { AmendOrderType } from '../amend-order.model';\r\nimport { OrderAmendService } from '../amend-order.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderCancellationService extends OrderAmendService {\r\n  amendType = AmendOrderType.CANCEL;\r\n\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected userOrderService: UserOrderService,\r\n    protected routing: RoutingService,\r\n    protected globalMessageService: GlobalMessageService\r\n  ) {\r\n    super(orderDetailsService);\r\n  }\r\n  /**\r\n   * Return cancellable order entries.\r\n   */\r\n  getEntries(): Observable<OrderEntry[]> {\r\n    return this.getOrder().pipe(\r\n      filter((order) => !!order?.entries),\r\n      map((order) =>\r\n        order.entries.filter(\r\n          (entry) => entry.entryNumber !== -1 && entry.cancellableQuantity > 0\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  save(): void {\r\n    const orderCode = this.form.value.orderCode;\r\n    const entries = this.form.value.entries;\r\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\r\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\r\n      .map(\r\n        (entryNumber) =>\r\n          ({\r\n            orderEntryNumber: Number(entryNumber),\r\n            quantity: <number>entries[entryNumber],\r\n          } as CancelOrReturnRequestEntryInput)\r\n      );\r\n\r\n    this.form.reset();\r\n\r\n    this.userOrderService.cancelOrder(orderCode, {\r\n      cancellationRequestEntryInputs: inputs,\r\n    });\r\n\r\n    this.userOrderService\r\n      .getCancelOrderSuccess()\r\n      .pipe(first(Boolean))\r\n      .subscribe(() => this.afterSave(orderCode));\r\n  }\r\n\r\n  private afterSave(orderCode: string): void {\r\n    this.userOrderService.resetCancelOrderProcessState();\r\n    this.globalMessageService.add(\r\n      {\r\n        key: 'orderDetails.cancellationAndReturn.cancelSuccess',\r\n        params: { orderCode },\r\n      },\r\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n    );\r\n    this.routing.go({\r\n      cxRoute: 'orders',\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree } from '@angular/router';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderCancellationService } from './order-cancellation.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderCancellationGuard implements CanActivate {\r\n  constructor(\r\n    protected routing: RoutingService,\r\n    protected orderAmendService: OrderCancellationService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.orderAmendService.getForm().pipe(\r\n      map((form) => {\r\n        if (!form.valid) {\r\n          // the order code is not available in the route\r\n          // as long as we're inside a guard, hence we redirect\r\n          // to the common orders page.\r\n          this.routing.go({ cxRoute: 'orders' });\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderCancellationGuard } from '../order-cancellation.guard';\r\nimport { OrderCancellationService } from '../order-cancellation.service';\r\nimport { CancelOrderConfirmationComponent } from './cancel-order-confirmation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderCancelConfirmation',\r\n        },\r\n      },\r\n    ]),\r\n    ReactiveFormsModule,\r\n    AmendOrderItemsModule,\r\n    AmendOrderActionsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CancelOrderConfirmationComponent: {\r\n          component: CancelOrderConfirmationComponent,\r\n          guards: [AuthGuard, OrderCancellationGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderCancellationService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CancelOrderConfirmationComponent],\r\n  exports: [CancelOrderConfirmationComponent],\r\n  entryComponents: [CancelOrderConfirmationComponent],\r\n})\r\nexport class CancelOrderConfirmationModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-cancel-order',\r\n  templateUrl: './cancel-order.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CancelOrderComponent {\r\n  orderCode: string;\r\n\r\n  form$: Observable<FormGroup> = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport {\r\n  CmsPageGuard,\r\n  PageLayoutComponent,\r\n} from '../../../../../../cms-structure/index';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderCancellationService } from '../order-cancellation.service';\r\nimport { CancelOrderComponent } from './cancel-order.component';\r\nimport { FormErrorsModule } from '../../../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderCancel',\r\n        },\r\n      },\r\n    ]),\r\n    AmendOrderItemsModule,\r\n    AmendOrderActionsModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CancelOrderComponent: {\r\n          component: CancelOrderComponent,\r\n          guards: [AuthGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderCancellationService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CancelOrderComponent],\r\n  exports: [CancelOrderComponent],\r\n  entryComponents: [CancelOrderComponent],\r\n})\r\nexport class CancelOrderModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CancelOrderConfirmationModule } from './cancel-order-confirmation/cancel-order-confirmation.module';\nimport { CancelOrderModule } from './cancel-order/cancel-order.module';\n\n@NgModule({\n  imports: [CancelOrderModule, CancelOrderConfirmationModule],\n})\nexport class OrderCancellationModule {}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CancelOrReturnRequestEntryInput,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  OrderEntry,\r\n  OrderReturnRequestService,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, first, map } from 'rxjs/operators';\r\nimport { OrderDetailsService } from '../../order-details/order-details.service';\r\nimport { AmendOrderType } from '../amend-order.model';\r\nimport { OrderAmendService } from '../amend-order.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderReturnService extends OrderAmendService {\r\n  amendType = AmendOrderType.RETURN;\r\n\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected returnRequestService: OrderReturnRequestService,\r\n    protected routing: RoutingService,\r\n    protected globalMessageService: GlobalMessageService\r\n  ) {\r\n    super(orderDetailsService);\r\n  }\r\n\r\n  getEntries(): Observable<OrderEntry[]> {\r\n    return this.getOrder().pipe(\r\n      filter((order) => !!order.entries),\r\n      map((order) =>\r\n        order.entries.filter(\r\n          (entry) => entry.entryNumber !== -1 && entry.returnableQuantity > 0\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  save(): void {\r\n    const orderCode = this.form.value.orderCode;\r\n    const entries = this.form.value.entries;\r\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\r\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\r\n      .map(\r\n        (entryNumber) =>\r\n          ({\r\n            orderEntryNumber: Number(entryNumber),\r\n            quantity: <number>entries[entryNumber],\r\n          } as CancelOrReturnRequestEntryInput)\r\n      );\r\n\r\n    this.form.reset();\r\n\r\n    this.returnRequestService.createOrderReturnRequest({\r\n      orderCode,\r\n      returnRequestEntryInputs: inputs,\r\n    });\r\n\r\n    this.returnRequestService\r\n      .getReturnRequestSuccess()\r\n      .pipe(first(Boolean))\r\n      .subscribe(() => this.afterSave());\r\n  }\r\n\r\n  private afterSave(): void {\r\n    this.returnRequestService\r\n      .getOrderReturnRequest()\r\n      .pipe(first((r) => !!r))\r\n      .subscribe((returnRequest) => {\r\n        const rma = returnRequest.rma;\r\n        this.globalMessageService.add(\r\n          {\r\n            key: 'orderDetails.cancellationAndReturn.returnSuccess',\r\n            params: { rma },\r\n          },\r\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n        );\r\n        this.routing.go({\r\n          cxRoute: 'returnRequestDetails',\r\n          params: { rma },\r\n        });\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree } from '@angular/router';\r\nimport { RoutingService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderReturnService } from './order-return.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderReturnGuard implements CanActivate {\r\n  constructor(\r\n    protected routing: RoutingService,\r\n    protected orderAmendService: OrderReturnService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.orderAmendService.getForm().pipe(\r\n      map((form) => {\r\n        if (!form.valid) {\r\n          // the order code is not available in the route\r\n          // as long as we're inside a guard, hence we redirect\r\n          // to the common orders page.\r\n          this.routing.go({ cxRoute: 'orders' });\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-return-order-confirmation',\r\n  templateUrl: './return-order-confirmation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReturnOrderConfirmationComponent {\r\n  orderCode: string;\r\n\r\n  form$ = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<\r\n    OrderEntry[]\r\n  > = this.orderAmendService.getAmendedEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n\r\n  submit(form: FormGroup): void {\r\n    form.disable();\r\n    this.orderAmendService.save();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderReturnGuard } from '../order-return.guard';\r\nimport { OrderReturnService } from '../order-return.service';\r\nimport { ReturnOrderConfirmationComponent } from './return-order-confirmation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderReturnConfirmation',\r\n        },\r\n      },\r\n    ]),\r\n    AmendOrderItemsModule,\r\n    I18nModule,\r\n    ReactiveFormsModule,\r\n    AmendOrderActionsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturnOrderConfirmationComponent: {\r\n          component: ReturnOrderConfirmationComponent,\r\n          guards: [AuthGuard, OrderReturnGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderReturnService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ReturnOrderConfirmationComponent],\r\n  exports: [ReturnOrderConfirmationComponent],\r\n  entryComponents: [ReturnOrderConfirmationComponent],\r\n})\r\nexport class ReturnOrderConfirmationModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrderEntry } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\n\r\n@Component({\r\n  selector: 'cx-return-order',\r\n  templateUrl: './return-order.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReturnOrderComponent {\r\n  orderCode: string;\r\n\r\n  form$: Observable<FormGroup> = this.orderAmendService\r\n    .getForm()\r\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\r\n\r\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\r\n\r\n  constructor(protected orderAmendService: OrderAmendService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\r\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\r\nimport { OrderAmendService } from '../../amend-order.service';\r\nimport { OrderReturnService } from '../order-return.service';\r\nimport { ReturnOrderComponent } from './return-order.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: {\r\n          cxRoute: 'orderReturn',\r\n        },\r\n      },\r\n    ]),\r\n    AmendOrderItemsModule,\r\n    AmendOrderActionsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturnOrderComponent: {\r\n          component: ReturnOrderComponent,\r\n          guards: [AuthGuard],\r\n          providers: [\r\n            {\r\n              provide: OrderAmendService,\r\n              useExisting: OrderReturnService,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ReturnOrderComponent],\r\n  exports: [ReturnOrderComponent],\r\n  entryComponents: [ReturnOrderComponent],\r\n})\r\nexport class ReturnOrderModule {}\r\n","import { NgModule } from '@angular/core';\nimport { ReturnOrderConfirmationModule } from './return-order-confirmation/return-order-confirmation.module';\nimport { ReturnOrderModule } from './return-order/return-order.module';\n\n@NgModule({\n  imports: [ReturnOrderModule, ReturnOrderConfirmationModule],\n})\nexport class OrderReturnModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-headline',\n  templateUrl: './order-detail-headline.component.html',\n})\nexport class OrderDetailHeadlineComponent implements OnInit {\n  constructor(private orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","export const completedValues = ['DELIVERY_COMPLETED', 'PICKUP_COMPLETE'];\nexport const cancelledValues = ['CANCELLED'];\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  Consignment,\r\n  Order,\r\n  PromotionLocation,\r\n  PromotionResult,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PromotionService } from '../../../../../shared/services/promotion/promotion.service';\r\nimport { OrderDetailsService } from '../order-details.service';\r\nimport {\r\n  cancelledValues,\r\n  completedValues,\r\n} from './order-consigned-entries/order-consigned-entries.model';\r\n\r\n@Component({\r\n  selector: 'cx-order-details-items',\r\n  templateUrl: './order-detail-items.component.html',\r\n})\r\nexport class OrderDetailItemsComponent implements OnInit {\r\n  constructor(\r\n    protected orderDetailsService: OrderDetailsService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n\r\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\r\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n  others$: Observable<Consignment[]>;\r\n  completed$: Observable<Consignment[]>;\r\n  cancel$: Observable<Consignment[]>;\r\n\r\n  ngOnInit() {\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n    this.others$ = this.getOtherStatus(...completedValues, ...cancelledValues);\r\n    this.completed$ = this.getExactStatus(completedValues);\r\n    this.cancel$ = this.getExactStatus(cancelledValues);\r\n  }\r\n\r\n  private getExactStatus(\r\n    consignmentStatus: string[]\r\n  ): Observable<Consignment[]> {\r\n    return this.order$.pipe(\r\n      map((order) => {\r\n        if (Boolean(order.consignments)) {\r\n          return order.consignments.filter((consignment) =>\r\n            consignmentStatus.includes(consignment.status)\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private getOtherStatus(\r\n    ...consignmentStatus: string[]\r\n  ): Observable<Consignment[]> {\r\n    return this.order$.pipe(\r\n      map((order) => {\r\n        if (Boolean(order.consignments)) {\r\n          return order.consignments.filter(\r\n            (consignment) => !consignmentStatus.includes(consignment.status)\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConsignmentTracking, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-tracking-events',\n  templateUrl: './tracking-events.component.html',\n})\nexport class TrackingEventsComponent implements OnDestroy {\n  tracking$: Observable<ConsignmentTracking>;\n  shipDate: Date;\n  consignmentCode: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private userOrderService: UserOrderService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  ConsignmentTracking,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../../shared/components/modal/index';\nimport { TrackingEventsComponent } from './tracking-events/tracking-events.component';\n\n@Component({\n  selector: 'cx-consignment-tracking',\n  templateUrl: './consignment-tracking.component.html',\n})\nexport class ConsignmentTrackingComponent implements OnInit, OnDestroy {\n  consignmentStatus: string[] = [\n    'SHIPPED',\n    'IN_TRANSIT',\n    'DELIVERY_COMPLETED',\n    'DELIVERY_REJECTED',\n    'DELIVERING',\n  ];\n  modalRef: ModalRef;\n\n  @Input()\n  consignment: Consignment;\n  @Input()\n  orderCode: string;\n  consignmentTracking$: Observable<ConsignmentTracking>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.consignmentTracking$ = this.userOrderService.getConsignmentTracking();\n  }\n\n  openTrackingDialog(consignment: Consignment) {\n    this.userOrderService.loadConsignmentTracking(\n      this.orderCode,\n      consignment.code\n    );\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(TrackingEventsComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.tracking$ = this.consignmentTracking$;\n    modalInstance.shipDate = consignment.statusDate;\n    modalInstance.consignmentCode = consignment.code;\n  }\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input } from '@angular/core';\r\nimport {\r\n  Consignment,\r\n  Order,\r\n  OrderEntry,\r\n  PromotionLocation,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-order-consigned-entries',\r\n  templateUrl: './order-consigned-entries.component.html',\r\n})\r\nexport class OrderConsignedEntriesComponent {\r\n  @Input() consignments: Consignment[];\r\n  @Input() order: Order;\r\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\r\n\r\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\r\n    const products: OrderEntry[] = [];\r\n    consignment.entries.forEach((element) => {\r\n      products.push(element.orderEntry);\r\n    });\r\n\r\n    return products;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { Card } from '../../../../../shared/components/card/card.component';\nimport { OrderDetailsService } from '../order-details.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-details-shipping',\n  templateUrl: './order-detail-shipping.component.html',\n})\nexport class OrderDetailShippingComponent implements OnInit {\n  constructor(\n    private orderDetailsService: OrderDetailsService,\n    private translation: TranslationService\n  ) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n\n  getAddressCardContent(address: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${address.firstName} ${address.lastName}`,\n          text: [\n            address.line1,\n            address.line2,\n            `${address.town}, ${address.country.isocode}, ${address.postalCode}`,\n            address.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.billTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n          text: [\n            billingAddress.line1,\n            billingAddress.line2,\n            `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\n            billingAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getPaymentCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: payment.accountHolderName,\n          text: [payment.cardType.name, payment.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n\n  getShippingMethodCardContent(shipping: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: shipping.name,\n          text: [shipping.description],\n        };\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from '@spartacus/core';\n\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-totals',\n  templateUrl: './order-detail-totals.component.html',\n})\nexport class OrderDetailTotalsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-actions',\n  templateUrl: './order-detail-actions.component.html',\n})\nexport class OrderDetailActionsComponent {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  FeaturesConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ConsignmentTrackingComponent } from '../../../../cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component';\r\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { CardModule } from '../../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\r\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\r\nimport { PromotionsModule } from '../../../checkout/components/promotions/promotions.module';\r\nimport { OrderDetailActionsComponent } from './order-detail-actions/order-detail-actions.component';\r\nimport { OrderDetailHeadlineComponent } from './order-detail-headline/order-detail-headline.component';\r\nimport { TrackingEventsComponent } from './order-detail-items/consignment-tracking/tracking-events/tracking-events.component';\r\nimport { OrderConsignedEntriesComponent } from './order-detail-items/order-consigned-entries/order-consigned-entries.component';\r\nimport { OrderDetailItemsComponent } from './order-detail-items/order-detail-items.component';\r\nimport { OrderDetailShippingComponent } from './order-detail-shipping/order-detail-shipping.component';\r\nimport { OrderDetailTotalsComponent } from './order-detail-totals/order-detail-totals.component';\r\nimport { OrderDetailsService } from './order-details.service';\r\n\r\nconst moduleComponents = [\r\n  OrderDetailActionsComponent,\r\n  OrderDetailHeadlineComponent,\r\n  OrderDetailItemsComponent,\r\n  OrderDetailTotalsComponent,\r\n  OrderDetailShippingComponent,\r\n  TrackingEventsComponent,\r\n  ConsignmentTrackingComponent,\r\n  OrderConsignedEntriesComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CartSharedModule,\r\n    CardModule,\r\n    CommonModule,\r\n    I18nModule,\r\n    FeaturesConfigModule,\r\n    PromotionsModule,\r\n    UrlModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { pageLabel: 'order', cxRoute: 'orderGuest' },\r\n      },\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'orderDetails' },\r\n      },\r\n    ]),\r\n    SpinnerModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\r\n      cmsComponents: {\r\n        AccountOrderDetailsActionsComponent: {\r\n          component: OrderDetailActionsComponent,\r\n        },\r\n        AccountOrderDetailsHeadlineComponent: {\r\n          component: OrderDetailHeadlineComponent,\r\n        },\r\n        AccountOrderDetailsItemsComponent: {\r\n          component: OrderDetailItemsComponent,\r\n        },\r\n        AccountOrderDetailsTotalsComponent: {\r\n          component: OrderDetailTotalsComponent,\r\n        },\r\n        AccountOrderDetailsShippingComponent: {\r\n          component: OrderDetailShippingComponent,\r\n        },\r\n      },\r\n      features: {\r\n        consignmentTracking: '1.2',\r\n      },\r\n    }),\r\n    OrderDetailsService,\r\n  ],\r\n  declarations: [...moduleComponents],\r\n  exports: [...moduleComponents],\r\n  entryComponents: [...moduleComponents],\r\n})\r\nexport class OrderDetailsModule {}\r\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport {\r\n  Order,\r\n  OrderHistoryList,\r\n  RoutingService,\r\n  TranslationService,\r\n  UserOrderService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, tap, filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-order-history',\r\n  templateUrl: './order-history.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderHistoryComponent implements OnDestroy {\r\n  constructor(\r\n    private routing: RoutingService,\r\n    private userOrderService: UserOrderService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  private PAGE_SIZE = 5;\r\n  sortType: string;\r\n\r\n  orders$: Observable<\r\n    OrderHistoryList\r\n  > = this.userOrderService.getOrderHistoryList(this.PAGE_SIZE).pipe(\r\n    tap((orders: OrderHistoryList) => {\r\n      if (orders.pagination) {\r\n        this.sortType = orders.pagination.sort;\r\n      }\r\n    })\r\n  );\r\n\r\n  isLoaded$: Observable<\r\n    boolean\r\n  > = this.userOrderService.getOrderHistoryListLoaded();\r\n\r\n  /**\r\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\r\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\r\n   */\r\n  tabTitleParam$: Observable<number> = this.orders$.pipe(\r\n    map((order) => order.pagination.totalResults),\r\n    filter((totalResults) => totalResults !== undefined),\r\n    take(1)\r\n  );\r\n\r\n  ngOnDestroy(): void {\r\n    this.userOrderService.clearOrderList();\r\n  }\r\n\r\n  changeSortCode(sortCode: string): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode,\r\n      currentPage: 0,\r\n    };\r\n    this.sortType = sortCode;\r\n    this.fetchOrders(event);\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode: this.sortType,\r\n      currentPage: page,\r\n    };\r\n    this.fetchOrders(event);\r\n  }\r\n\r\n  goToOrderDetail(order: Order): void {\r\n    this.routing.go({\r\n      cxRoute: 'orderDetails',\r\n      params: order,\r\n    });\r\n  }\r\n\r\n  getSortLabels(): Observable<{ byDate: string; byOrderNumber: string }> {\r\n    return combineLatest([\r\n      this.translation.translate('sorting.date'),\r\n      this.translation.translate('sorting.orderNumber'),\r\n    ]).pipe(\r\n      map(([textByDate, textByOrderNumber]) => {\r\n        return {\r\n          byDate: textByDate,\r\n          byOrderNumber: textByOrderNumber,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private fetchOrders(event: { sortCode: string; currentPage: number }): void {\r\n    this.userOrderService.loadOrderList(\r\n      this.PAGE_SIZE,\r\n      event.currentPage,\r\n      event.sortCode\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\r\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { OrderHistoryComponent } from './order-history.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'orders' },\r\n      },\r\n    ]),\r\n    RouterModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ListNavigationModule,\r\n    UrlModule,\r\n    I18nModule,\r\n  ],\r\n  declarations: [OrderHistoryComponent],\r\n  exports: [OrderHistoryComponent],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AccountOrderHistoryComponent: {\r\n          component: OrderHistoryComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  entryComponents: [OrderHistoryComponent],\r\n})\r\nexport class OrderHistoryModule {}\r\n","import { Injectable } from '@angular/core';\nimport {\n  OrderReturnRequestService,\n  RoutingService,\n  ReturnRequest,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, map, tap, distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReturnRequestService {\n  constructor(\n    protected routingService: RoutingService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  get isCancelling$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestLoading();\n  }\n\n  get isCancelSuccess$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestSuccess();\n  }\n\n  getReturnRequest(): Observable<ReturnRequest> {\n    return combineLatest([\n      this.routingService.getRouterState(),\n      this.returnRequestService.getOrderReturnRequest(),\n      this.returnRequestService.getReturnRequestLoading(),\n    ]).pipe(\n      map(([routingState, returnRequest, isLoading]) => [\n        routingState.state.params['returnCode'],\n        returnRequest,\n        isLoading,\n      ]),\n      filter(([returnCode]) => Boolean(returnCode)),\n      tap(([returnCode, returnRequest, isLoading]) => {\n        if (\n          (returnRequest === undefined || returnRequest.rma !== returnCode) &&\n          !isLoading\n        ) {\n          this.returnRequestService.loadOrderReturnRequestDetail(returnCode);\n        }\n      }),\n      map(([_, returnRequest]) => returnRequest),\n      filter(Boolean),\n      distinctUntilChanged()\n    );\n  }\n\n  clearReturnRequest(): void {\n    this.returnRequestService.clearOrderReturnRequestDetail();\n  }\n\n  cancelReturnRequest(returnRequestCode: string): void {\n    this.returnRequestService.cancelOrderReturnRequest(returnRequestCode, {\n      status: 'CANCELLING',\n    });\n  }\n\n  cancelSuccess(rma: string): void {\n    this.returnRequestService.resetCancelReturnRequestProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'returnRequest.cancelSuccess',\n        params: { rma },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routingService.go({\n      cxRoute: 'orders',\n    });\n  }\n\n  backToList(): void {\n    this.routingService.go({ cxRoute: 'orders' }, null, {\n      state: {\n        activeTab: 1,\n      },\n    });\n  }\n}\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ReturnRequest } from '@spartacus/core';\r\nimport { ReturnRequestService } from '../return-request.service';\r\n\r\n@Component({\r\n  selector: 'cx-return-request-overview',\r\n  templateUrl: './return-request-overview.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReturnRequestOverviewComponent implements OnInit, OnDestroy {\r\n  constructor(protected returnRequestService: ReturnRequestService) {}\r\n\r\n  rma: string;\r\n  subscription: Subscription;\r\n\r\n  returnRequest$: Observable<\r\n    ReturnRequest\r\n  > = this.returnRequestService\r\n    .getReturnRequest()\r\n    .pipe(tap((returnRequest) => (this.rma = returnRequest.rma)));\r\n\r\n  isCancelling$ = this.returnRequestService.isCancelling$;\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.returnRequestService.isCancelSuccess$.subscribe(\r\n      (success) => {\r\n        if (success) {\r\n          this.returnRequestService.cancelSuccess(this.rma);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  cancelReturn(returnRequestCode: string): void {\r\n    this.returnRequestService.cancelReturnRequest(returnRequestCode);\r\n  }\r\n\r\n  back(): void {\r\n    this.returnRequestService.backToList();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-items',\n  templateUrl: './return-request-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestItemsComponent {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-totals',\n  templateUrl: './return-request-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestTotalsComponent implements OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n\n  ngOnDestroy() {\n    this.returnRequestService.clearReturnRequest();\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { MediaModule } from '../../../../shared/index';\r\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { ReturnRequestOverviewComponent } from './return-request-overview/return-request-overview.component';\r\nimport { ReturnRequestItemsComponent } from './return-request-items/return-request-items.component';\r\nimport { ReturnRequestTotalsComponent } from './return-request-totals/return-request-totals.component';\r\n\r\nconst components = [\r\n  ReturnRequestOverviewComponent,\r\n  ReturnRequestItemsComponent,\r\n  ReturnRequestTotalsComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'returnRequestDetails' },\r\n      },\r\n    ]),\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturnRequestOverviewComponent: {\r\n          component: ReturnRequestOverviewComponent,\r\n        },\r\n        ReturnRequestItemsComponent: {\r\n          component: ReturnRequestItemsComponent,\r\n        },\r\n        ReturnRequestTotalsComponent: {\r\n          component: ReturnRequestTotalsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [...components],\r\n  exports: [...components],\r\n  entryComponents: [...components],\r\n})\r\nexport class ReturnRequestDetailModule {}\r\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport {\r\n  ReturnRequestList,\r\n  OrderReturnRequestService,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { tap, map, filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-order-return-request-list',\r\n  templateUrl: './order-return-request-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderReturnRequestListComponent implements OnDestroy {\r\n  constructor(\r\n    private returnRequestService: OrderReturnRequestService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  private PAGE_SIZE = 5;\r\n  sortType: string;\r\n\r\n  returnRequests$: Observable<\r\n    ReturnRequestList\r\n  > = this.returnRequestService.getOrderReturnRequestList(this.PAGE_SIZE).pipe(\r\n    tap((requestList: ReturnRequestList) => {\r\n      if (requestList.pagination) {\r\n        this.sortType = requestList.pagination.sort;\r\n      }\r\n    })\r\n  );\r\n\r\n  /**\r\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\r\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\r\n   */\r\n  tabTitleParam$: Observable<number> = this.returnRequests$.pipe(\r\n    map((returnRequests) => returnRequests.pagination.totalResults),\r\n    filter((totalResults) => totalResults !== undefined),\r\n    take(1)\r\n  );\r\n\r\n  ngOnDestroy(): void {\r\n    this.returnRequestService.clearOrderReturnRequestList();\r\n  }\r\n\r\n  changeSortCode(sortCode: string): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode,\r\n      currentPage: 0,\r\n    };\r\n    this.sortType = sortCode;\r\n    this.fetchReturnRequests(event);\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    const event: { sortCode: string; currentPage: number } = {\r\n      sortCode: this.sortType,\r\n      currentPage: page,\r\n    };\r\n    this.fetchReturnRequests(event);\r\n  }\r\n\r\n  getSortLabels(): Observable<{ byDate: string; byRMA: string }> {\r\n    return combineLatest([\r\n      this.translation.translate('sorting.date'),\r\n      this.translation.translate('sorting.rma'),\r\n    ]).pipe(\r\n      map(([textByDate, textByRma]) => {\r\n        return {\r\n          byDate: textByDate,\r\n          byRMA: textByRma,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private fetchReturnRequests(event: {\r\n    sortCode: string;\r\n    currentPage: number;\r\n  }): void {\r\n    this.returnRequestService.loadOrderReturnRequestList(\r\n      this.PAGE_SIZE,\r\n      event.currentPage,\r\n      event.sortCode\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\r\nimport { OrderReturnRequestListComponent } from './order-return-request-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ListNavigationModule,\r\n    UrlModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        OrderReturnRequestListComponent: {\r\n          component: OrderReturnRequestListComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [OrderReturnRequestListComponent],\r\n  exports: [OrderReturnRequestListComponent],\r\n  entryComponents: [OrderReturnRequestListComponent],\r\n})\r\nexport class ReturnRequestListModule {}\r\n","import { NgModule } from '@angular/core';\nimport {\n  OrderCancellationModule,\n  OrderReturnModule,\n} from './amend-order/index';\nimport { OrderDetailsModule } from './order-details/order-details.module';\nimport { OrderHistoryModule } from './order-history/order-history.module';\nimport { ReturnRequestDetailModule } from './return-request-detail/return-request-detail.module';\nimport { ReturnRequestListModule } from './return-request-list/order-return-request-list.module';\n\n@NgModule({\n  imports: [\n    OrderHistoryModule,\n    OrderDetailsModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n  ],\n})\nexport class OrderModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  PaymentDetails,\r\n  TranslationService,\r\n  UserPaymentService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\r\nimport { Card } from '../../../shared/components/card/card.component';\r\n\r\n@Component({\r\n  selector: 'cx-payment-methods',\r\n  templateUrl: './payment-methods.component.html',\r\n})\r\nexport class PaymentMethodsComponent implements OnInit {\r\n  paymentMethods$: Observable<PaymentDetails[]>;\r\n  editCard: string;\r\n  iconTypes = ICON_TYPE;\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private userPaymentService: UserPaymentService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\r\n      tap((paymentDetails) => {\r\n        // Set first payment method to DEFAULT if none is set\r\n        if (\r\n          paymentDetails.length > 0 &&\r\n          !paymentDetails.find((paymentDetail) => paymentDetail.defaultPayment)\r\n        ) {\r\n          this.setDefaultPaymentMethod(paymentDetails[0]);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.editCard = null;\r\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\r\n    this.userPaymentService.loadPaymentMethods();\r\n  }\r\n\r\n  getCardContent({\r\n    defaultPayment,\r\n    accountHolderName,\r\n    expiryMonth,\r\n    expiryYear,\r\n    cardNumber,\r\n    cardType,\r\n  }: PaymentDetails): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('paymentCard.setAsDefault'),\r\n      this.translation.translate('common.delete'),\r\n      this.translation.translate('paymentCard.deleteConfirmation'),\r\n      this.translation.translate('paymentCard.expires', {\r\n        month: expiryMonth,\r\n        year: expiryYear,\r\n      }),\r\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          textSetAsDefault,\r\n          textDelete,\r\n          textDeleteConfirmation,\r\n          textExpires,\r\n          textDefaultPaymentMethod,\r\n        ]) => {\r\n          const actions: { name: string; event: string }[] = [];\r\n          if (!defaultPayment) {\r\n            actions.push({ name: textSetAsDefault, event: 'default' });\r\n          }\r\n          actions.push({ name: textDelete, event: 'edit' });\r\n          const card: Card = {\r\n            header: defaultPayment ? textDefaultPaymentMethod : null,\r\n            textBold: accountHolderName,\r\n            text: [cardNumber, textExpires],\r\n            actions,\r\n            deleteMsg: textDeleteConfirmation,\r\n            img: this.getCardIcon(cardType.code),\r\n          };\r\n\r\n          return card;\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\r\n    this.userPaymentService.deletePaymentMethod(paymentMethod.id);\r\n    this.editCard = null;\r\n  }\r\n\r\n  setEdit(paymentMethod: PaymentDetails): void {\r\n    this.editCard = paymentMethod.id;\r\n  }\r\n\r\n  cancelCard(): void {\r\n    this.editCard = null;\r\n  }\r\n\r\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\r\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id);\r\n  }\r\n\r\n  getCardIcon(code: string): string {\r\n    let ccIcon: string;\r\n    if (code === 'visa') {\r\n      ccIcon = this.iconTypes.VISA;\r\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\r\n      ccIcon = this.iconTypes.MASTER_CARD;\r\n    } else if (code === 'diners') {\r\n      ccIcon = this.iconTypes.DINERS_CLUB;\r\n    } else if (code === 'amex') {\r\n      ccIcon = this.iconTypes.AMEX;\r\n    } else {\r\n      ccIcon = this.iconTypes.CREDIT_CARD;\r\n    }\r\n\r\n    return ccIcon;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { PaymentMethodsComponent } from './payment-methods.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CardModule, SpinnerModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        AccountPaymentDetailsComponent: {\r\n          component: PaymentMethodsComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [PaymentMethodsComponent],\r\n  exports: [PaymentMethodsComponent],\r\n  entryComponents: [PaymentMethodsComponent],\r\n})\r\nexport class PaymentMethodsModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { RoutingService, UserService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-reset-password-form',\r\n  templateUrl: './reset-password-form.component.html',\r\n})\r\nexport class ResetPasswordFormComponent implements OnInit, OnDestroy {\r\n  token: string;\r\n  subscription = new Subscription();\r\n\r\n  resetPasswordForm: FormGroup = this.fb.group(\r\n    {\r\n      password: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.passwordValidator],\r\n      ],\r\n      repassword: ['', [Validators.required]],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.passwordsMustMatch(\r\n        'password',\r\n        'repassword'\r\n      ),\r\n    }\r\n  );\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private routingService: RoutingService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.routingService\r\n        .getRouterState()\r\n        .subscribe((state) => (this.token = state.state.queryParams['token']))\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.userService.isPasswordReset().subscribe((reset) => {\r\n        if (reset) {\r\n          this.routingService.go({ cxRoute: 'login' });\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  resetPassword() {\r\n    if (this.resetPasswordForm.valid) {\r\n      const password = this.resetPasswordForm.get('password').value;\r\n      this.userService.resetPassword(this.token, password);\r\n    } else {\r\n      this.resetPasswordForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { ResetPasswordFormComponent } from './reset-password-form.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ResetPasswordComponent: {\r\n          component: ResetPasswordFormComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ResetPasswordFormComponent],\r\n  exports: [ResetPasswordFormComponent],\r\n  entryComponents: [ResetPasswordFormComponent],\r\n})\r\nexport class ResetPasswordModule {}\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-update-email-form',\r\n  templateUrl: './update-email-form.component.html',\r\n})\r\nexport class UpdateEmailFormComponent {\r\n  @Output()\r\n  saveEmail = new EventEmitter<{\r\n    newUid: string;\r\n    password: string;\r\n  }>();\r\n\r\n  @Output()\r\n  cancelEmail = new EventEmitter<void>();\r\n\r\n  updateEmailForm: FormGroup = this.fb.group(\r\n    {\r\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\r\n      confirmEmail: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.emailsMustMatch('email', 'confirmEmail'),\r\n    }\r\n  );\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  onSubmit(): void {\r\n    if (this.updateEmailForm.valid) {\r\n      const newUid = this.updateEmailForm.get('confirmEmail').value;\r\n      const password = this.updateEmailForm.get('password').value;\r\n\r\n      this.saveEmail.emit({ newUid, password });\r\n    } else {\r\n      this.updateEmailForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancelEmail.emit();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-update-email',\r\n  templateUrl: './update-email.component.html',\r\n})\r\nexport class UpdateEmailComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private globalMessageService: GlobalMessageService,\r\n    private userService: UserService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  private subscription = new Subscription();\r\n  private newUid: string;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  ngOnInit() {\r\n    this.userService.resetUpdateEmailResultState();\r\n    this.subscription.add(\r\n      this.userService\r\n        .getUpdateEmailResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n    this.isLoading$ = this.userService.getUpdateEmailResultLoading();\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  onSubmit({ newUid, password }: { newUid: string; password: string }): void {\r\n    this.newUid = newUid;\r\n    this.userService.updateEmail(password, newUid);\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.globalMessageService.add(\r\n        {\r\n          key: 'updateEmailForm.emailUpdateSuccess',\r\n          params: { newUid: this.newUid },\r\n        },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n      this.authService.logout();\r\n      this.routingService.go({ cxRoute: 'login' }, null, {\r\n        state: {\r\n          newUid: this.newUid,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.userService.resetUpdateEmailResultState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { UpdateEmailFormComponent } from './update-email-form/update-email-form.component';\r\nimport { UpdateEmailComponent } from './update-email.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        UpdateEmailComponent: {\r\n          component: UpdateEmailComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [UpdateEmailFormComponent, UpdateEmailComponent],\r\n  exports: [UpdateEmailComponent, UpdateEmailFormComponent],\r\n  entryComponents: [UpdateEmailComponent],\r\n})\r\nexport class UpdateEmailModule {}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomFormValidators } from '../../../../../shared/utils/validators/custom-form-validators';\r\n@Component({\r\n  selector: 'cx-update-password-form',\r\n  templateUrl: './update-password-form.component.html',\r\n})\r\nexport class UpdatePasswordFormComponent implements OnInit {\r\n  updatePasswordForm: FormGroup;\r\n\r\n  @Output()\r\n  submitted = new EventEmitter<{ oldPassword: string; newPassword: string }>();\r\n\r\n  @Output()\r\n  cancelled = new EventEmitter<void>();\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.updatePasswordForm = this.fb.group(\r\n      {\r\n        oldPassword: ['', [Validators.required]],\r\n        newPassword: [\r\n          '',\r\n          [Validators.required, CustomFormValidators.passwordValidator],\r\n        ],\r\n        newPasswordConfirm: ['', [Validators.required]],\r\n      },\r\n      {\r\n        validators: CustomFormValidators.passwordsMustMatch(\r\n          'newPassword',\r\n          'newPasswordConfirm'\r\n        ),\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.updatePasswordForm.valid) {\r\n      this.submitted.emit({\r\n        oldPassword: this.updatePasswordForm.value.oldPassword,\r\n        newPassword: this.updatePasswordForm.value.newPassword,\r\n      });\r\n    } else {\r\n      this.updatePasswordForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancelled.emit();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-update-password',\r\n  templateUrl: './update-password.component.html',\r\n})\r\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private userService: UserService,\r\n    private globalMessageService: GlobalMessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userService.resetUpdatePasswordProcessState();\r\n    this.loading$ = this.userService.getUpdatePasswordResultLoading();\r\n    this.subscription.add(\r\n      this.userService\r\n        .getUpdatePasswordResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.globalMessageService.add(\r\n        { key: 'updatePasswordForm.passwordUpdateSuccess' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n      this.routingService.go({ cxRoute: 'home' });\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  onSubmit({\r\n    oldPassword,\r\n    newPassword,\r\n  }: {\r\n    oldPassword: string;\r\n    newPassword: string;\r\n  }): void {\r\n    this.userService.updatePassword(oldPassword, newPassword);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n\r\n    this.userService.resetUpdatePasswordProcessState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { UpdatePasswordFormComponent } from './components/update-password-form/update-password-form.component';\r\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        UpdatePasswordComponent: {\r\n          component: UpdatePasswordComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [UpdatePasswordComponent, UpdatePasswordFormComponent],\r\n  exports: [UpdatePasswordComponent, UpdatePasswordFormComponent],\r\n  entryComponents: [UpdatePasswordComponent],\r\n})\r\nexport class UpdatePasswordModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Title, User } from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-update-profile-form',\r\n  templateUrl: './update-profile-form.component.html',\r\n})\r\nexport class UpdateProfileFormComponent implements OnInit {\r\n  @Input()\r\n  user: User;\r\n\r\n  @Input()\r\n  titles: Title[];\r\n\r\n  @Output()\r\n  submitted = new EventEmitter<{ userUpdates: User }>();\r\n\r\n  @Output()\r\n  cancelled = new EventEmitter<void>();\r\n\r\n  updateProfileForm: FormGroup = this.fb.group({\r\n    titleCode: [''],\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n  });\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    if (this.user) {\r\n      this.updateProfileForm.patchValue(this.user);\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.updateProfileForm.valid) {\r\n      this.submitted.emit({\r\n        userUpdates: { ...this.updateProfileForm.value },\r\n      });\r\n    } else {\r\n      this.updateProfileForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancelled.emit();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  Title,\r\n  User,\r\n  UserService,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-update-profile',\r\n  templateUrl: './update-profile.component.html',\r\n})\r\nexport class UpdateProfileComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  titles$: Observable<Title[]>;\r\n  user$: Observable<User>;\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private routingService: RoutingService,\r\n    private userService: UserService,\r\n    private globalMessageService: GlobalMessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // reset the previous form processing state\r\n    this.userService.resetUpdatePersonalDetailsProcessingState();\r\n\r\n    this.user$ = this.userService.get();\r\n    this.titles$ = this.userService.getTitles().pipe(\r\n      tap((titles) => {\r\n        if (Object.keys(titles).length === 0) {\r\n          this.userService.loadTitles();\r\n        }\r\n      })\r\n    );\r\n    this.loading$ = this.userService.getUpdatePersonalDetailsResultLoading();\r\n\r\n    this.subscription.add(\r\n      this.userService\r\n        .getUpdatePersonalDetailsResultSuccess()\r\n        .subscribe((success) => this.onSuccess(success))\r\n    );\r\n  }\r\n\r\n  onSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.globalMessageService.add(\r\n        { key: 'updateProfileForm.profileUpdateSuccess' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n      this.routingService.go({ cxRoute: 'home' });\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.routingService.go({ cxRoute: 'home' });\r\n  }\r\n\r\n  onSubmit({ userUpdates }: { userUpdates: User }): void {\r\n    this.userService.updatePersonalDetails(userUpdates);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n\r\n    // clean up the state\r\n    this.userService.resetUpdatePersonalDetailsProcessingState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { UpdateProfileFormComponent } from './components/update-profile-form.component';\r\nimport { UpdateProfileComponent } from './update-profile.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        UpdateProfileComponent: {\r\n          component: UpdateProfileComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [UpdateProfileComponent, UpdateProfileFormComponent],\r\n  exports: [UpdateProfileComponent, UpdateProfileFormComponent],\r\n  entryComponents: [UpdateProfileComponent],\r\n})\r\nexport class UpdateProfileModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CustomerCoupon,\r\n  RoutingService,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { combineLatest, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MyCouponsComponentService {\r\n  sortLabels: Observable<{\r\n    byStartDateAsc: string;\r\n    byStartDateDesc: string;\r\n    byEndDateAsc: string;\r\n    byEndDateDesc: string;\r\n  }>;\r\n\r\n  protected readonly RELEVANCE = ':relevance';\r\n  protected readonly CUSTOMER_COUPON_CODE = ':customerCouponCode:';\r\n\r\n  constructor(\r\n    protected routingService: RoutingService,\r\n    protected translation: TranslationService\r\n  ) {}\r\n\r\n  launchSearchPage(coupon: CustomerCoupon): void {\r\n    this.routingService.go(\r\n      {\r\n        cxRoute: 'search',\r\n        params: { query: this.buildSearchParam(coupon) },\r\n      },\r\n      { couponcode: coupon.couponId }\r\n    );\r\n  }\r\n\r\n  private buildSearchParam(coupon: CustomerCoupon): string {\r\n    return coupon.allProductsApplicable\r\n      ? this.RELEVANCE\r\n      : this.RELEVANCE + this.CUSTOMER_COUPON_CODE + coupon.couponId;\r\n  }\r\n\r\n  getSortLabels(): Observable<{\r\n    byStartDateAsc: string;\r\n    byStartDateDesc: string;\r\n    byEndDateAsc: string;\r\n    byEndDateDesc: string;\r\n  }> {\r\n    return combineLatest([\r\n      this.translation.translate('myCoupons.startDateAsc'),\r\n      this.translation.translate('myCoupons.startDateDesc'),\r\n      this.translation.translate('myCoupons.endDateAsc'),\r\n      this.translation.translate('myCoupons.endDateDesc'),\r\n    ]).pipe(\r\n      map(\r\n        ([\r\n          textByStartDateAsc,\r\n          textByStartDateDesc,\r\n          textByEndDateAsc,\r\n          textByEndDateDesc,\r\n        ]) => {\r\n          return {\r\n            byStartDateAsc: textByStartDateAsc,\r\n            byStartDateDesc: textByStartDateDesc,\r\n            byEndDateAsc: textByEndDateAsc,\r\n            byEndDateDesc: textByEndDateDesc,\r\n          };\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  CustomerCouponSearchResult,\r\n  CustomerCouponService,\r\n  PaginationModel,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\r\nimport { MyCouponsComponentService } from './my-coupons.component.service';\r\n\r\n@Component({\r\n  selector: 'cx-my-coupons',\r\n  templateUrl: './my-coupons.component.html',\r\n})\r\nexport class MyCouponsComponent implements OnInit, OnDestroy {\r\n  couponResult$: Observable<CustomerCouponSearchResult>;\r\n  couponsLoading$: Observable<boolean>;\r\n  couponSubscriptionLoading$: Observable<boolean>;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  private subscriptions = new Subscription();\r\n\r\n  private PAGE_SIZE = 10;\r\n  private sortMapping = {\r\n    byStartDateAsc: 'startDate:asc',\r\n    byStartDateDesc: 'startDate:desc',\r\n    byEndDateAsc: 'endDate:asc',\r\n    byEndDateDesc: 'endDate:desc',\r\n  };\r\n  sort = 'byStartDateAsc';\r\n\r\n  sortOptions = [\r\n    {\r\n      code: 'byStartDateAsc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byStartDateDesc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byEndDateAsc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byEndDateDesc',\r\n      selected: false,\r\n    },\r\n  ];\r\n\r\n  pagination: PaginationModel;\r\n  sortLabels: Observable<{\r\n    byStartDateAsc: string;\r\n    byStartDateDesc: string;\r\n    byEndDateAsc: string;\r\n    byEndDateDesc: string;\r\n  }>;\r\n\r\n  constructor(\r\n    protected couponService: CustomerCouponService,\r\n    protected myCouponsComponentService: MyCouponsComponentService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.couponResult$ = this.couponService\r\n      .getCustomerCoupons(this.PAGE_SIZE)\r\n      .pipe(\r\n        tap(\r\n          (coupons) =>\r\n            (this.pagination = {\r\n              currentPage: coupons.pagination.page,\r\n              pageSize: coupons.pagination.count,\r\n              totalPages: coupons.pagination.totalPages,\r\n              totalResults: coupons.pagination.totalCount,\r\n              sort: this.sort,\r\n            })\r\n        )\r\n      );\r\n    this.couponsLoading$ = this.couponService.getCustomerCouponsLoading();\r\n    this.couponSubscriptionLoading$ = combineLatest([\r\n      this.couponService.getSubscribeCustomerCouponResultLoading(),\r\n      this.couponService.getUnsubscribeCustomerCouponResultLoading(),\r\n    ]).pipe(\r\n      map(([subscribing, unsubscribing]) => subscribing || unsubscribing)\r\n    );\r\n    this.sortLabels = this.myCouponsComponentService.getSortLabels();\r\n\r\n    this.subscriptions\r\n      .add(\r\n        this.couponService\r\n          .getSubscribeCustomerCouponResultError()\r\n          .subscribe((error) => {\r\n            this.subscriptionFail(error);\r\n          })\r\n      )\r\n      .add(\r\n        this.couponService\r\n          .getUnsubscribeCustomerCouponResultError()\r\n          .subscribe((error) => {\r\n            this.subscriptionFail(error);\r\n          })\r\n      );\r\n  }\r\n\r\n  private subscriptionFail(error: boolean) {\r\n    if (error) {\r\n      this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\r\n    }\r\n  }\r\n\r\n  sortChange(sort: string): void {\r\n    this.sort = sort;\r\n\r\n    this.couponService.loadCustomerCoupons(\r\n      this.PAGE_SIZE,\r\n      this.pagination.currentPage,\r\n      this.sortMapping[sort]\r\n    );\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    this.couponService.loadCustomerCoupons(\r\n      this.PAGE_SIZE,\r\n      page,\r\n      this.sortMapping[this.sort]\r\n    );\r\n  }\r\n\r\n  notificationChange({\r\n    couponId,\r\n    notification,\r\n  }: {\r\n    couponId: string;\r\n    notification: boolean;\r\n  }): void {\r\n    if (notification) {\r\n      this.couponService.subscribeCustomerCoupon(couponId);\r\n    } else {\r\n      this.couponService.unsubscribeCustomerCoupon(couponId);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { ModalService } from '../../../../../shared/components/modal/index';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\r\nimport { CustomerCoupon } from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-coupon-dialog',\r\n  templateUrl: './coupon-dialog.component.html',\r\n})\r\nexport class CouponDialogComponent {\r\n  iconTypes = ICON_TYPE;\r\n  coupon: CustomerCoupon;\r\n\r\n  @ViewChild('dialog', { read: ElementRef })\r\n  dialog: ElementRef;\r\n\r\n  constructor(protected modalService: ModalService) {}\r\n\r\n  dismissModal(reason?: any): void {\r\n    this.modalService.dismissActiveModal(reason);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../shared/components/modal/index';\nimport { CouponDialogComponent } from './coupon-dialog/coupon-dialog.component';\nimport { CustomerCoupon } from '@spartacus/core';\nimport { MyCouponsComponentService } from '../my-coupons.component.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-coupon-card',\n  templateUrl: './coupon-card.component.html',\n})\nexport class CouponCardComponent {\n  @Input() coupon: CustomerCoupon;\n  @Input() couponSubscriptionLoading$: Observable<boolean>;\n  modalRef: ModalRef;\n\n  @Output()\n  notificationChanged = new EventEmitter<{\n    couponId: string;\n    notification: boolean;\n  }>();\n\n  constructor(\n    protected modalService: ModalService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  onSubscriptionChange(): void {\n    this.notificationChanged.emit({\n      couponId: this.coupon.couponId,\n      notification: !this.coupon.notificationOn,\n    });\n  }\n\n  readMore() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(CouponDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.coupon = this.coupon;\n  }\n\n  findProducts(): void {\n    this.myCouponsComponentService.launchSearchPage(this.coupon);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  RoutingService,\r\n  CustomerCouponService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n} from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  templateUrl: './coupon-claim.component.html',\r\n  selector: 'cx-coupon-claim',\r\n})\r\nexport class CouponClaimComponent implements OnInit, OnDestroy {\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    protected couponService: CustomerCouponService,\r\n    protected routingService: RoutingService,\r\n    protected messageService: GlobalMessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.routingService\r\n      .getRouterState()\r\n      .subscribe((k) => {\r\n        const couponCode = k.state.params.couponCode;\r\n        if (couponCode) {\r\n          this.couponService.claimCustomerCoupon(couponCode);\r\n          this.subscription = this.couponService\r\n            .getClaimCustomerCouponResultSuccess()\r\n            .subscribe((success) => {\r\n              if (success) {\r\n                this.messageService.add(\r\n                  { key: 'myCoupons.claimCustomerCoupon' },\r\n                  GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n                );\r\n              }\r\n              this.routingService.go({ cxRoute: 'coupons' });\r\n            });\r\n        } else {\r\n          this.routingService.go({ cxRoute: 'notFound' });\r\n        }\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../../shared/components/card/card.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { MyCouponsComponent } from './my-coupons.component';\r\nimport { CouponCardComponent } from './coupon-card/coupon-card.component';\r\n\r\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\r\nimport { CouponDialogComponent } from './coupon-card/coupon-dialog/coupon-dialog.component';\r\nimport { CouponClaimComponent } from './coupon-claim/coupon-claim.component';\r\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardModule,\r\n    SpinnerModule,\r\n    I18nModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    IconModule,\r\n    ListNavigationModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [AuthGuard, CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'couponClaim' },\r\n      },\r\n    ]),\r\n  ],\r\n  declarations: [\r\n    MyCouponsComponent,\r\n    CouponCardComponent,\r\n    CouponDialogComponent,\r\n    CouponClaimComponent,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        MyCouponsComponent: {\r\n          component: MyCouponsComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n        CouponClaimComponent: {\r\n          component: CouponClaimComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  exports: [MyCouponsComponent, CouponClaimComponent],\r\n  entryComponents: [\r\n    MyCouponsComponent,\r\n    CouponDialogComponent,\r\n    CouponClaimComponent,\r\n  ],\r\n})\r\nexport class MyCouponsModule {}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport {\r\n  NotificationPreference,\r\n  UserNotificationPreferenceService,\r\n} from '@spartacus/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-notification-preference',\r\n  templateUrl: './notification-preference.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NotificationPreferenceComponent implements OnInit {\r\n  preferences$: Observable<NotificationPreference[]>;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  protected preferences: NotificationPreference[] = [];\r\n\r\n  constructor(\r\n    private notificationPreferenceService: UserNotificationPreferenceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.notificationPreferenceService.resetNotificationPreferences();\r\n    this.preferences$ = this.notificationPreferenceService\r\n      .getPreferences()\r\n      .pipe(tap((preferences) => (this.preferences = preferences)));\r\n    this.notificationPreferenceService.loadPreferences();\r\n\r\n    this.isLoading$ = combineLatest([\r\n      this.notificationPreferenceService.getPreferencesLoading(),\r\n      this.notificationPreferenceService.getUpdatePreferencesResultLoading(),\r\n    ]).pipe(\r\n      map(([prefsLoading, updateLoading]) => prefsLoading || updateLoading)\r\n    );\r\n  }\r\n\r\n  updatePreference(preference: NotificationPreference) {\r\n    const updatedPreferences = [];\r\n    this.preferences.forEach((p) => {\r\n      if (p.channel === preference.channel) {\r\n        updatedPreferences.push({\r\n          ...p,\r\n          enabled: !p.enabled,\r\n        });\r\n      } else {\r\n        updatedPreferences.push(p);\r\n      }\r\n    });\r\n    this.notificationPreferenceService.updatePreferences(updatedPreferences);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { NotificationPreferenceComponent } from './notification-preference.component';\r\n\r\n@NgModule({\r\n  declarations: [NotificationPreferenceComponent],\r\n  imports: [CommonModule, SpinnerModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        NotificationPreferenceComponent: {\r\n          component: NotificationPreferenceComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  exports: [NotificationPreferenceComponent],\r\n  entryComponents: [NotificationPreferenceComponent],\r\n})\r\nexport class NotificationPreferenceModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport {\r\n  PaginationModel,\r\n  Product,\r\n  ProductInterestEntryRelation,\r\n  ProductInterestSearchResult,\r\n  ProductScope,\r\n  ProductService,\r\n  TranslationService,\r\n  UserInterestsService,\r\n} from '@spartacus/core';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\ninterface ProductInterestSearchResultUI extends ProductInterestSearchResult {\r\n  results?: (ProductInterestEntryRelation & {\r\n    product$?: Observable<Product>;\r\n  })[];\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-my-interests',\r\n  templateUrl: './my-interests.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MyInterestsComponent implements OnInit, OnDestroy {\r\n  private DEFAULT_PAGE_SIZE = 10;\r\n  private sortMapping = {\r\n    byNameAsc: 'name:asc',\r\n    byNameDesc: 'name:desc',\r\n  };\r\n\r\n  sort = 'byNameAsc';\r\n  sortOptions = [\r\n    {\r\n      code: 'byNameAsc',\r\n      selected: false,\r\n    },\r\n    {\r\n      code: 'byNameDesc',\r\n      selected: false,\r\n    },\r\n  ];\r\n  pagination: PaginationModel;\r\n\r\n  interests$: Observable<ProductInterestSearchResultUI>;\r\n  isRemoveDisabled$: Observable<boolean>;\r\n  getInterestsloading$: Observable<boolean>;\r\n  sortLabels: Observable<{ byNameAsc: string; byNameDesc: string }>;\r\n\r\n  constructor(\r\n    private productInterestService: UserInterestsService,\r\n    private translationService: TranslationService,\r\n    private productService: ProductService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.interests$ = this.productInterestService\r\n      .getAndLoadProductInterests(this.DEFAULT_PAGE_SIZE)\r\n      .pipe(\r\n        tap(\r\n          (interests) =>\r\n            (this.pagination = {\r\n              currentPage: interests.pagination.page,\r\n              pageSize: interests.pagination.count,\r\n              totalPages: interests.pagination.totalPages,\r\n              totalResults: interests.pagination.totalCount,\r\n              sort: 'byNameAsc',\r\n            })\r\n        ),\r\n        map((interest) => ({\r\n          ...interest,\r\n          results: interest.results\r\n            ? interest.results.map((result) => ({\r\n                ...result,\r\n                product$: this.getProduct(result),\r\n              }))\r\n            : interest.results,\r\n        }))\r\n      );\r\n\r\n    this.getInterestsloading$ = this.productInterestService.getProdutInterestsLoading();\r\n    this.isRemoveDisabled$ = combineLatest([\r\n      this.getInterestsloading$,\r\n      this.productInterestService.getRemoveProdutInterestLoading(),\r\n    ]).pipe(map(([getLoading, removeLoading]) => getLoading || removeLoading));\r\n\r\n    this.sortLabels = this.getSortLabels();\r\n  }\r\n\r\n  private getSortLabels(): Observable<{\r\n    byNameAsc: string;\r\n    byNameDesc: string;\r\n  }> {\r\n    return combineLatest([\r\n      this.translationService.translate('myInterests.sorting.byNameAsc'),\r\n      this.translationService.translate('myInterests.sorting.byNameDesc'),\r\n    ]).pipe(\r\n      map(([asc, desc]) => {\r\n        return {\r\n          byNameAsc: asc,\r\n          byNameDesc: desc,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private getProduct(\r\n    interest: ProductInterestEntryRelation\r\n  ): Observable<Product> {\r\n    return this.productService.get(interest.product.code, ProductScope.DETAILS);\r\n  }\r\n\r\n  removeInterest(\r\n    relation: ProductInterestEntryRelation & {\r\n      product$?: Observable<Product>;\r\n    }\r\n  ): void {\r\n    this.productInterestService.removeProdutInterest({\r\n      product: relation.product,\r\n      productInterestEntry: relation.productInterestEntry,\r\n    });\r\n  }\r\n\r\n  sortChange(sort: string): void {\r\n    this.sort = sort;\r\n    this.productInterestService.loadProductInterests(\r\n      this.DEFAULT_PAGE_SIZE,\r\n      0,\r\n      this.sortMapping[sort]\r\n    );\r\n  }\r\n\r\n  pageChange(page: number): void {\r\n    this.productInterestService.loadProductInterests(\r\n      this.DEFAULT_PAGE_SIZE,\r\n      page,\r\n      this.sortMapping[this.sort]\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.productInterestService.clearProductInterests();\r\n    this.productInterestService.resetRemoveInterestState();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\r\nimport { MyInterestsComponent } from './my-interests.component';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\n\r\n@NgModule({\r\n  declarations: [MyInterestsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    RouterModule,\r\n    ListNavigationModule,\r\n    I18nModule,\r\n    UrlModule,\r\n    MediaModule,\r\n    SpinnerModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        MyInterestsComponent: {\r\n          component: MyInterestsComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  exports: [MyInterestsComponent],\r\n  entryComponents: [MyInterestsComponent],\r\n})\r\nexport class MyInterestsModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n  CmsBreadcrumbsComponent,\r\n  PageMeta,\r\n  PageMetaService,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\n\r\n@Component({\r\n  selector: 'cx-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BreadcrumbComponent implements OnInit {\r\n  title$: Observable<string>;\r\n  crumbs$: Observable<any[]>;\r\n\r\n  constructor(\r\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\r\n    protected pageMetaService: PageMetaService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle();\r\n    this.setCrumbs();\r\n  }\r\n\r\n  private setTitle(): void {\r\n    this.title$ = this.pageMetaService.getMeta().pipe(\r\n      filter(Boolean),\r\n      map((meta: PageMeta) => meta.heading || meta.title)\r\n    );\r\n  }\r\n\r\n  private setCrumbs(): void {\r\n    this.crumbs$ = combineLatest([\r\n      this.pageMetaService.getMeta(),\r\n      this.translation.translate('common.home'),\r\n    ]).pipe(\r\n      map(([meta, textHome]) =>\r\n        meta?.breadcrumbs ? meta.breadcrumbs : [{ label: textHome, link: '/' }]\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  CmsPageTitleModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { BreadcrumbComponent } from './breadcrumb.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, CmsPageTitleModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        BreadcrumbComponent: {\r\n          component: BreadcrumbComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [BreadcrumbComponent],\r\n  exports: [BreadcrumbComponent],\r\n  entryComponents: [BreadcrumbComponent],\r\n})\r\nexport class BreadcrumbModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CmsNavigationComponent,\r\n  CmsService,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\r\nimport { NavigationNode } from './navigation-node.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NavigationService {\r\n  constructor(\r\n    protected cmsService: CmsService,\r\n    protected semanticPathService: SemanticPathService\r\n  ) {}\r\n\r\n  public createNavigation(\r\n    data$: Observable<CmsNavigationComponent>\r\n  ): Observable<NavigationNode> {\r\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\r\n      map(([data, nav]) => {\r\n        return data\r\n          ? {\r\n              title: data.name,\r\n              children: [nav],\r\n            }\r\n          : undefined;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\r\n   * This function will load the navigation underlying entries and childs if they haven't been\r\n   * loaded so far.\r\n   */\r\n  public getNavigationNode(\r\n    data$: Observable<CmsNavigationComponent>\r\n  ): Observable<NavigationNode> {\r\n    if (!data$) {\r\n      return of();\r\n    }\r\n    return data$.pipe(\r\n      filter((data) => !!data),\r\n      switchMap((data) => {\r\n        const navigation = data.navigationNode ? data.navigationNode : data;\r\n        return this.cmsService.getNavigationEntryItems(navigation.uid).pipe(\r\n          tap((items) => {\r\n            if (items === undefined) {\r\n              this.loadNavigationEntryItems(navigation, true);\r\n            } else {\r\n              // we should check whether the existing node items are what expected\r\n              const expectedItems = [];\r\n              this.loadNavigationEntryItems(navigation, false, expectedItems);\r\n              const existingItems = Object.keys(items).map(\r\n                (key) => items[key].uid\r\n              );\r\n              const missingItems = expectedItems.filter(\r\n                (it) => !existingItems.includes(it.id)\r\n              );\r\n              if (missingItems.length > 0) {\r\n                this.cmsService.loadNavigationItems(\r\n                  navigation.uid,\r\n                  missingItems\r\n                );\r\n              }\r\n            }\r\n          }),\r\n          filter(Boolean),\r\n          map((items) => this.populateNavigationNode(navigation, items))\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Loads all navigation entry items' type and id. Dispatch action to load all these items\r\n   * @param nodeData\r\n   * @param root\r\n   * @param itemsList\r\n   */\r\n  private loadNavigationEntryItems(\r\n    nodeData: any,\r\n    root: boolean,\r\n    itemsList = []\r\n  ): void {\r\n    if (nodeData.entries && nodeData.entries.length > 0) {\r\n      nodeData.entries.forEach((entry) => {\r\n        itemsList.push({\r\n          superType: entry.itemSuperType,\r\n          id: entry.itemId,\r\n        });\r\n      });\r\n    }\r\n\r\n    if (nodeData.children && nodeData.children.length > 0) {\r\n      nodeData.children.forEach((child) =>\r\n        this.loadNavigationEntryItems(child, false, itemsList)\r\n      );\r\n    }\r\n\r\n    if (root) {\r\n      this.cmsService.loadNavigationItems(nodeData.uid, itemsList);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a new node tree for the view\r\n   * @param nodeData\r\n   * @param items\r\n   */\r\n  private populateNavigationNode(nodeData: any, items: any): NavigationNode {\r\n    const node: NavigationNode = {};\r\n\r\n    if (nodeData.title) {\r\n      // the node title will be populated by the first entry (if any)\r\n      // if there's no nodeData.title available\r\n      node.title = nodeData.title;\r\n    }\r\n\r\n    if (nodeData.entries && nodeData.entries.length > 0) {\r\n      this.populateLink(node, nodeData.entries[0], items);\r\n    }\r\n\r\n    if (nodeData.children && nodeData.children.length > 0) {\r\n      const children = nodeData.children\r\n        .map((child) => this.populateNavigationNode(child, items))\r\n        .filter(Boolean);\r\n      if (children.length > 0) {\r\n        node.children = children;\r\n      }\r\n    }\r\n\r\n    // return null in case there are no children\r\n    return Object.keys(node).length === 0 ? null : node;\r\n  }\r\n\r\n  /**\r\n   * The node link is driven by the first entry.\r\n   */\r\n  private populateLink(node: NavigationNode, entry, items) {\r\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\r\n\r\n    // now we only consider CMSLinkComponent\r\n    if (item && entry.itemType === 'CMSLinkComponent') {\r\n      if (!node.title) {\r\n        node.title = item.linkName;\r\n      }\r\n      const url = this.getLink(item);\r\n      // only populate the node link if we have a visible node\r\n      if (node.title && url) {\r\n        node.url = url;\r\n        // the backend provide boolean value for the target\r\n        // in case the link should be opened in a new window\r\n        node.target = !!item.target ? '_blank' : '';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Gets the URL or link to a related item (category)\r\n   */\r\n  private getLink(item): string | string[] {\r\n    if (item.url) {\r\n      return item.url;\r\n    } else if (item.categoryCode) {\r\n      return this.semanticPathService.transform({\r\n        cxRoute: 'category',\r\n        params: {\r\n          code: item.categoryCode,\r\n          name: item.name,\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../misc/icon/index';\r\nimport { NavigationNode } from './navigation-node.model';\r\n\r\n@Component({\r\n  selector: 'cx-navigation-ui',\r\n  templateUrl: './navigation-ui.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NavigationUIComponent implements OnDestroy {\r\n  /**\r\n   * The navigation node to render.\r\n   */\r\n  @Input() node: NavigationNode;\r\n\r\n  /**\r\n   * The number of child nodes that must be wrapped.\r\n   */\r\n  @Input() wrapAfter: number;\r\n  /**\r\n   * the icon type that will be used for navigation nodes\r\n   * with children.\r\n   */\r\n  iconType = ICON_TYPE;\r\n\r\n  /**\r\n   * Indicates whether the navigation should support flyout.\r\n   * If flyout is set to true, the\r\n   * nested child navigation nodes will only appear on hover or focus.\r\n   */\r\n  @Input() @HostBinding('class.flyout') flyout = true;\r\n\r\n  @Input() @HostBinding('class.is-open') isOpen = false;\r\n\r\n  private openNodes: HTMLElement[] = [];\r\n  private subscriptions = new Subscription();\r\n  private resize = new EventEmitter();\r\n\r\n  @HostListener('window:resize')\r\n  onResize() {\r\n    this.resize.next();\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private renderer: Renderer2,\r\n    private elemRef: ElementRef\r\n  ) {\r\n    this.subscriptions.add(\r\n      this.router.events\r\n        .pipe(filter((event) => event instanceof NavigationEnd))\r\n        .subscribe(() => this.clear())\r\n    );\r\n    this.subscriptions.add(\r\n      this.resize.pipe(debounceTime(50)).subscribe(() => {\r\n        this.alignWrappersToRightIfStickOut();\r\n      })\r\n    );\r\n  }\r\n\r\n  toggleOpen(event: UIEvent): void {\r\n    if (event.type === 'keydown') {\r\n      event.preventDefault();\r\n    }\r\n    const node = <HTMLElement>event.currentTarget;\r\n    if (this.openNodes.includes(node)) {\r\n      if (event.type === 'keydown') {\r\n        this.back();\r\n      } else {\r\n        this.openNodes = this.openNodes.filter((n) => n !== node);\r\n        this.renderer.removeClass(node, 'is-open');\r\n      }\r\n    } else {\r\n      this.openNodes.push(node);\r\n    }\r\n\r\n    this.updateClasses();\r\n\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  back(): void {\r\n    if (this.openNodes[this.openNodes.length - 1]) {\r\n      this.renderer.removeClass(\r\n        this.openNodes[this.openNodes.length - 1],\r\n        'is-open'\r\n      );\r\n      this.openNodes.pop();\r\n      this.updateClasses();\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.openNodes = [];\r\n    this.updateClasses();\r\n  }\r\n\r\n  onMouseEnter(event: MouseEvent) {\r\n    this.alignWrapperToRightIfStickOut(<HTMLElement>event.currentTarget);\r\n    this.focusAfterPreviousClicked(event);\r\n  }\r\n\r\n  getTotalDepth(node: NavigationNode, depth = 0): number {\r\n    if (node.children && node.children.length > 0) {\r\n      return Math.max(\r\n        ...node.children.map((n) => this.getTotalDepth(n, depth + 1))\r\n      );\r\n    } else {\r\n      return depth;\r\n    }\r\n  }\r\n\r\n  getColumnCount(length: number): number {\r\n    return Math.round(length / (this.wrapAfter || length));\r\n  }\r\n\r\n  focusAfterPreviousClicked(event: MouseEvent) {\r\n    const target: HTMLElement = <HTMLElement>(\r\n      (event.target || event.relatedTarget)\r\n    );\r\n    if (\r\n      target.ownerDocument.activeElement.matches('nav[tabindex]') &&\r\n      target.parentElement.matches('.flyout')\r\n    ) {\r\n      target.focus();\r\n    }\r\n    return target.ownerDocument;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscriptions) {\r\n      this.subscriptions.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private alignWrapperToRightIfStickOut(node: HTMLElement) {\r\n    const wrapper = <HTMLElement>node.querySelector('.wrapper');\r\n    const body = <HTMLElement>node.closest('body');\r\n    if (wrapper) {\r\n      this.renderer.removeStyle(wrapper, 'margin-left');\r\n      if (\r\n        wrapper.offsetLeft + wrapper.offsetWidth >\r\n        body.offsetLeft + body.offsetWidth\r\n      ) {\r\n        this.renderer.setStyle(\r\n          wrapper,\r\n          'margin-left',\r\n          `${node.offsetWidth - wrapper.offsetWidth}px`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private alignWrappersToRightIfStickOut() {\r\n    const navs = <HTMLCollection>this.elemRef.nativeElement.childNodes;\r\n    Array.from(navs)\r\n      .filter((node) => node.tagName === 'NAV')\r\n      .forEach((nav) => this.alignWrapperToRightIfStickOut(<HTMLElement>nav));\r\n  }\r\n\r\n  private updateClasses(): void {\r\n    this.openNodes.forEach((node, i) => {\r\n      if (i + 1 < this.openNodes.length) {\r\n        this.renderer.addClass(node, 'is-opened');\r\n        this.renderer.removeClass(node, 'is-open');\r\n      } else {\r\n        this.renderer.removeClass(node, 'is-opened');\r\n        this.renderer.addClass(node, 'is-open');\r\n      }\r\n    });\r\n\r\n    this.isOpen = this.openNodes.length > 0;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { CmsNavigationComponent } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { NavigationNode } from './navigation-node.model';\r\nimport { NavigationService } from './navigation.service';\r\n\r\n@Component({\r\n  selector: 'cx-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NavigationComponent {\r\n  node$: Observable<NavigationNode> = this.service.createNavigation(\r\n    this.componentData.data$\r\n  );\r\n\r\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\r\n    map((d) => d?.styleClass)\r\n  );\r\n\r\n  constructor(\r\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\r\n    protected service: NavigationService\r\n  ) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { NavigationUIComponent } from './navigation-ui.component';\r\nimport { NavigationComponent } from './navigation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    IconModule,\r\n    GenericLinkModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        NavigationComponent: {\r\n          component: NavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [NavigationComponent, NavigationUIComponent],\r\n  entryComponents: [NavigationComponent],\r\n  exports: [NavigationComponent, NavigationUIComponent],\r\n})\r\nexport class NavigationModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { NavigationModule } from '../navigation/navigation.module';\r\nimport { CategoryNavigationComponent } from './category-navigation.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, NavigationModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CategoryNavigationComponent: {\r\n          component: CategoryNavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CategoryNavigationComponent],\r\n  entryComponents: [CategoryNavigationComponent],\r\n  exports: [CategoryNavigationComponent],\r\n})\r\nexport class CategoryNavigationModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { CmsNavigationComponent } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { NavigationNode } from '../navigation/navigation-node.model';\r\nimport { NavigationService } from '../navigation/navigation.service';\r\n\r\n@Component({\r\n  selector: 'cx-footer-navigation',\r\n  templateUrl: './footer-navigation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FooterNavigationComponent {\r\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\r\n    this.componentData.data$\r\n  );\r\n\r\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\r\n    map((d) => d?.styleClass)\r\n  );\r\n\r\n  constructor(\r\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\r\n    protected service: NavigationService\r\n  ) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\r\nimport { NavigationModule } from '../navigation/navigation.module';\r\nimport { FooterNavigationComponent } from './footer-navigation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    NavigationModule,\r\n    GenericLinkModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        FooterNavigationComponent: {\r\n          component: FooterNavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [FooterNavigationComponent],\r\n  entryComponents: [FooterNavigationComponent],\r\n  exports: [FooterNavigationComponent],\r\n})\r\nexport class FooterNavigationModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ProductSearchPage,\r\n  RoutingService,\r\n  SearchboxService,\r\n  TranslationService,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\r\n\r\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SearchBoxComponentService {\r\n  constructor(\r\n    public searchService: SearchboxService,\r\n    protected routingService: RoutingService,\r\n    protected translationService: TranslationService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  /**\r\n   * Executes the search for products and suggestions,\r\n   * unless the configuration is setup to not search for\r\n   * products or suggestions.\r\n   */\r\n  search(query: string, config: SearchBoxConfig): void {\r\n    if (!query || query === '') {\r\n      this.clearResults();\r\n      return;\r\n    }\r\n\r\n    if (\r\n      config.minCharactersBeforeRequest &&\r\n      query.length < config.minCharactersBeforeRequest\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (config.displayProducts) {\r\n      this.searchService.search(query, {\r\n        pageSize: config.maxProducts,\r\n      });\r\n    }\r\n\r\n    if (config.displaySuggestions) {\r\n      this.searchService.searchSuggestions(query, {\r\n        pageSize: config.maxSuggestions,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns an observable with the SearchResults. When there's any\r\n   * result, the body tag will get a classname, so that specific style\r\n   * rules can be applied.\r\n   */\r\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\r\n    return combineLatest([\r\n      this.getProductResults(config),\r\n      this.getProductSuggestions(config),\r\n      this.getSearchMessage(config),\r\n    ]).pipe(\r\n      map(([productResults, suggestions, message]) => {\r\n        return {\r\n          products: productResults ? productResults.products : null,\r\n          suggestions,\r\n          message,\r\n        };\r\n      }),\r\n      tap((results) =>\r\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clears the searchbox results, so that old values are\r\n   * no longer emited upon next search.\r\n   */\r\n  clearResults() {\r\n    this.searchService.clearResults();\r\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\r\n  }\r\n\r\n  hasBodyClass(className: string): boolean {\r\n    return this.winRef.document.body.classList.contains(className);\r\n  }\r\n\r\n  toggleBodyClass(className: string, add?: boolean) {\r\n    if (add === undefined) {\r\n      this.winRef.document.body.classList.toggle(className);\r\n    } else {\r\n      add\r\n        ? this.winRef.document.body.classList.add(className)\r\n        : this.winRef.document.body.classList.remove(className);\r\n    }\r\n  }\r\n\r\n  private hasResults(results: SearchResults): boolean {\r\n    return (\r\n      (!!results.products && results.products.length > 0) ||\r\n      (!!results.suggestions && results.suggestions.length > 0) ||\r\n      !!results.message\r\n    );\r\n  }\r\n\r\n  private getProductResults(\r\n    config: SearchBoxConfig\r\n  ): Observable<ProductSearchPage> {\r\n    if (config.displayProducts) {\r\n      return this.searchService.getResults();\r\n    } else {\r\n      return of({});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads suggestions from the backend. In case there's no suggestion\r\n   * available, we try to get an exact match suggestion.\r\n   */\r\n  private getProductSuggestions(config: SearchBoxConfig): Observable<string[]> {\r\n    if (!config.displaySuggestions) {\r\n      return of([]);\r\n    } else {\r\n      return this.searchService.getSuggestionResults().pipe(\r\n        map((res) => res.map((suggestion) => suggestion.value)),\r\n        switchMap((suggestions) => {\r\n          if (suggestions.length === 0) {\r\n            return this.getExactSuggestion(config).pipe(\r\n              map((match) => (match ? [match] : []))\r\n            );\r\n          } else {\r\n            return of(suggestions);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * whenever there is at least 1 product, we simulate\r\n   * a suggestion to provide easy access to the search result page\r\n   */\r\n  private getExactSuggestion(config: SearchBoxConfig): Observable<string> {\r\n    return this.getProductResults(config).pipe(\r\n      switchMap((productResult) => {\r\n        return productResult.products && productResult.products.length > 0\r\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\r\n              term: productResult.freeTextSearch,\r\n            })\r\n          : of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n  private getSearchMessage(config: SearchBoxConfig): Observable<string> {\r\n    return combineLatest([\r\n      this.getProductResults(config),\r\n      this.getProductSuggestions(config),\r\n    ]).pipe(\r\n      switchMap(([productResult, suggestions]) => {\r\n        if (\r\n          productResult &&\r\n          productResult.products &&\r\n          productResult.products.length === 0 &&\r\n          suggestions &&\r\n          suggestions.length === 0\r\n        ) {\r\n          return this.fetchTranslation('searchBox.help.noMatch');\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Navigates to the search result page with a given query\r\n   */\r\n  public launchSearchPage(query: string): void {\r\n    this.routingService.go({\r\n      cxRoute: 'search',\r\n      params: { query },\r\n    });\r\n  }\r\n\r\n  private fetchTranslation(\r\n    translationKey: string,\r\n    options?: any\r\n  ): Observable<string> {\r\n    return this.translationService.translate(translationKey, options);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { CmsSearchBoxComponent, WindowRef } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\r\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\r\nimport { SearchBoxComponentService } from './search-box-component.service';\r\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\r\n\r\nconst DEFAULT_SEARCHBOX_CONFIG: SearchBoxConfig = {\r\n  minCharactersBeforeRequest: 1,\r\n  displayProducts: true,\r\n  displaySuggestions: true,\r\n  maxProducts: 5,\r\n  maxSuggestions: 5,\r\n  displayProductImages: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'cx-searchbox',\r\n  templateUrl: './search-box.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SearchBoxComponent {\r\n  config: SearchBoxConfig;\r\n  /**\r\n   * Sets the search box input field\r\n   */\r\n  @Input('queryText')\r\n  set queryText(value: string) {\r\n    if (value) {\r\n      this.search(value);\r\n    }\r\n  }\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  /**\r\n   * In some occasions we need to ignore the close event,\r\n   * for example when we click inside the search result section.\r\n   */\r\n  private ignoreCloseEvent = false;\r\n\r\n  /**\r\n   * The component data is optional, so that this component\r\n   * can be reused without CMS integration.\r\n   */\r\n\r\n  constructor(\r\n    protected searchBoxComponentService: SearchBoxComponentService,\r\n    @Optional()\r\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  results$: Observable<SearchResults> = this.config$.pipe(\r\n    tap((c) => (this.config = c)),\r\n    switchMap((config) => this.searchBoxComponentService.getResults(config))\r\n  );\r\n\r\n  /**\r\n   * Returns the backend configuration or default configuration for the searchbox.\r\n   */\r\n  private get config$(): Observable<SearchBoxConfig> {\r\n    if (this.componentData) {\r\n      return <Observable<SearchBoxConfig>>this.componentData.data$.pipe(\r\n        // Since the backend returns string values (i.e. displayProducts: \"true\") for\r\n        // boolean values, we replace them with boolean values.\r\n        map((c) => {\r\n          return {\r\n            ...c,\r\n            displayProducts:\r\n              <any>c?.displayProducts === 'true' || c?.displayProducts === true,\r\n            displayProductImages:\r\n              <any>c?.displayProductImages === 'true' ||\r\n              c?.displayProductImages === true,\r\n            displaySuggestions:\r\n              <any>c?.displaySuggestions === 'true' ||\r\n              c?.displaySuggestions === true,\r\n          };\r\n        })\r\n      );\r\n    } else {\r\n      return of(DEFAULT_SEARCHBOX_CONFIG);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the searchbox and opens the search result page.\r\n   */\r\n  search(query: string): void {\r\n    this.searchBoxComponentService.search(query, this.config);\r\n    // force the searchbox to open\r\n    this.open();\r\n  }\r\n\r\n  /**\r\n   * Opens the typeahead searchbox\r\n   */\r\n  open(): void {\r\n    this.searchBoxComponentService.toggleBodyClass('searchbox-is-active', true);\r\n  }\r\n\r\n  /**\r\n   * Closes the typehead searchbox.\r\n   */\r\n  close(event: UIEvent, force?: boolean): void {\r\n    // Use timeout to detect changes\r\n    setTimeout(() => {\r\n      if ((!this.ignoreCloseEvent && !this.isSearchboxFocused()) || force) {\r\n        this.blurSearchBox(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected blurSearchBox(event: UIEvent): void {\r\n    this.searchBoxComponentService.toggleBodyClass(\r\n      'searchbox-is-active',\r\n      false\r\n    );\r\n    if (event && event.target) {\r\n      (<HTMLElement>event.target).blur();\r\n    }\r\n  }\r\n\r\n  // Check if focus is on searchbox or result list elements\r\n  private isSearchboxFocused(): boolean {\r\n    return (\r\n      this.getResultElements().includes(this.getFocusedElement()) ||\r\n      this.winRef.document.querySelector('input[aria-label=\"search\"]') ===\r\n        this.getFocusedElement()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Especially in mobile we do not want the search icon\r\n   * to focus the input again when it's already open.\r\n   * */\r\n  avoidReopen(event: UIEvent): void {\r\n    if (this.searchBoxComponentService.hasBodyClass('searchbox-is-active')) {\r\n      this.close(event);\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // Return result list as HTMLElement array\r\n  private getResultElements(): HTMLElement[] {\r\n    return Array.from(\r\n      this.winRef.document.querySelectorAll('.products > a, .suggestions > a')\r\n    );\r\n  }\r\n\r\n  // Return focused element as HTMLElement\r\n  private getFocusedElement(): HTMLElement {\r\n    return <HTMLElement>this.winRef.document.activeElement;\r\n  }\r\n\r\n  private getFocusedIndex(): number {\r\n    return this.getResultElements().indexOf(this.getFocusedElement());\r\n  }\r\n\r\n  // Focus on previous item in results list\r\n  focusPreviousChild(event) {\r\n    event.preventDefault(); // Negate normal keyscroll\r\n    const [results, focusedIndex] = [\r\n      this.getResultElements(),\r\n      this.getFocusedIndex(),\r\n    ];\r\n    // Focus on last index moving to first\r\n    if (results.length) {\r\n      if (focusedIndex < 1) {\r\n        results[results.length - 1].focus();\r\n      } else {\r\n        results[focusedIndex - 1].focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Focus on next item in results list\r\n  focusNextChild(event) {\r\n    event.preventDefault(); // Negate normal keyscroll\r\n    const [results, focusedIndex] = [\r\n      this.getResultElements(),\r\n      this.getFocusedIndex(),\r\n    ];\r\n    // Focus on first index moving to last\r\n    if (results.length) {\r\n      if (focusedIndex >= results.length - 1) {\r\n        results[0].focus();\r\n      } else {\r\n        results[focusedIndex + 1].focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the PLP with the given query.\r\n   *\r\n   * TODO: if there's a single product match, we could open the PDP.\r\n   */\r\n  launchSearchResult(event: UIEvent, query: string): void {\r\n    if (!query || query.trim().length === 0) {\r\n      return;\r\n    }\r\n    this.close(event);\r\n    this.searchBoxComponentService.launchSearchPage(query);\r\n  }\r\n\r\n  /**\r\n   * Disables closing the search result list.\r\n   */\r\n  disableClose(): void {\r\n    this.ignoreCloseEvent = true;\r\n  }\r\n\r\n  /**\r\n   * Clears the search box input field\r\n   */\r\n  public clear(el: HTMLInputElement): void {\r\n    this.disableClose();\r\n    el.value = '';\r\n    this.searchBoxComponentService.clearResults();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { IconModule } from '../../misc/icon/icon.module';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { HighlightPipe } from './highlight.pipe';\r\nimport { SearchBoxComponent } from './search-box.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MediaModule,\r\n    IconModule,\r\n    UrlModule,\r\n    I18nModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        SearchBoxComponent: {\r\n          component: SearchBoxComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [SearchBoxComponent, HighlightPipe],\r\n  entryComponents: [SearchBoxComponent],\r\n  exports: [SearchBoxComponent],\r\n})\r\nexport class SearchBoxModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  CheckoutService,\r\n  Order,\r\n  PromotionResult,\r\n  PromotionLocation,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\r\n\r\n@Component({\r\n  selector: 'cx-order-confirmation-items',\r\n  templateUrl: './order-confirmation-items.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderConfirmationItemsComponent implements OnInit, OnDestroy {\r\n  promotionLocation: PromotionLocation = PromotionLocation.Checkout;\r\n  order$: Observable<Order>;\r\n  orderPromotions$: Observable<PromotionResult[]>;\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    protected promotionService: PromotionService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.order$ = this.checkoutService.getOrderDetails();\r\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\r\n      this.promotionLocation\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutService.clearCheckoutData();\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  Address,\r\n  CheckoutService,\r\n  DeliveryMode,\r\n  Order,\r\n  PaymentDetails,\r\n  TranslationService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\n\r\n@Component({\r\n  selector: 'cx-order-confirmation-overview',\r\n  templateUrl: './order-confirmation-overview.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderConfirmationOverviewComponent implements OnInit, OnDestroy {\r\n  order$: Observable<Order>;\r\n\r\n  constructor(\r\n    protected checkoutService: CheckoutService,\r\n    private translation: TranslationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.order$ = this.checkoutService.getOrderDetails();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutService.clearCheckoutData();\r\n  }\r\n\r\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\r\n    return this.translation.translate('addressCard.shipTo').pipe(\r\n      filter(() => Boolean(deliveryAddress)),\r\n      map((textTitle) => ({\r\n        title: textTitle,\r\n        textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\r\n        text: [\r\n          deliveryAddress.line1,\r\n          deliveryAddress.line2,\r\n          `${deliveryAddress.town}, ${deliveryAddress.country.isocode}, ${deliveryAddress.postalCode}`,\r\n          deliveryAddress.phone,\r\n        ],\r\n      }))\r\n    );\r\n  }\r\n\r\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\r\n    return this.translation.translate('checkoutShipping.shippingMethod').pipe(\r\n      filter(() => Boolean(deliveryMode)),\r\n      map((textTitle) => ({\r\n        title: textTitle,\r\n        textBold: deliveryMode.name,\r\n        text: [deliveryMode.description],\r\n      }))\r\n    );\r\n  }\r\n\r\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\r\n    return this.translation.translate('addressCard.billTo').pipe(\r\n      filter(() => Boolean(billingAddress)),\r\n      map((textTitle) => ({\r\n        title: textTitle,\r\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\r\n        text: [\r\n          billingAddress.line1,\r\n          billingAddress.line2,\r\n          `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\r\n          billingAddress.phone,\r\n        ],\r\n      }))\r\n    );\r\n  }\r\n\r\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\r\n    return combineLatest([\r\n      this.translation.translate('paymentForm.payment'),\r\n      this.translation.translate('paymentCard.expires', {\r\n        month: Boolean(payment) ? payment.expiryMonth : '',\r\n        year: Boolean(payment) ? payment.expiryYear : '',\r\n      }),\r\n    ]).pipe(\r\n      filter(() => Boolean(payment)),\r\n      map(([textTitle, textExpires]) => ({\r\n        title: textTitle,\r\n        textBold: payment.accountHolderName,\r\n        text: [payment.cardNumber, textExpires],\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { CheckoutService, Order } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-order-confirmation-thank-you-message',\r\n  templateUrl: './order-confirmation-thank-you-message.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderConfirmationThankYouMessageComponent\r\n  implements OnInit, OnDestroy {\r\n  order$: Observable<Order>;\r\n  isGuestCustomer = false;\r\n  orderGuid: string;\r\n\r\n  constructor(protected checkoutService: CheckoutService) {}\r\n\r\n  ngOnInit() {\r\n    this.order$ = this.checkoutService.getOrderDetails().pipe(\r\n      tap((order) => {\r\n        this.isGuestCustomer = order.guestCustomer;\r\n        this.orderGuid = order.guid;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.checkoutService.clearCheckoutData();\r\n  }\r\n}\r\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-totals',\n  templateUrl: './order-confirmation-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationTotalsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService, RoutingService, UserService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-guest-register-form',\r\n  templateUrl: './guest-register-form.component.html',\r\n})\r\nexport class GuestRegisterFormComponent implements OnDestroy {\r\n  @Input() guid: string;\r\n  @Input() email: string;\r\n\r\n  subscription: Subscription;\r\n  guestRegisterForm: FormGroup = this.fb.group(\r\n    {\r\n      password: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.passwordValidator],\r\n      ],\r\n      passwordconf: ['', Validators.required],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.passwordsMustMatch(\r\n        'password',\r\n        'passwordconf'\r\n      ),\r\n    }\r\n  );\r\n\r\n  constructor(\r\n    protected userService: UserService,\r\n    protected routingService: RoutingService,\r\n    protected authService: AuthService,\r\n    protected fb: FormBuilder\r\n  ) {}\r\n\r\n  submit() {\r\n    if (this.guestRegisterForm.valid) {\r\n      this.userService.registerGuest(\r\n        this.guid,\r\n        this.guestRegisterForm.value.password\r\n      );\r\n      if (!this.subscription) {\r\n        this.subscription = this.authService\r\n          .getUserToken()\r\n          .subscribe((token) => {\r\n            if (token.access_token) {\r\n              this.routingService.go({ cxRoute: 'home' });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      this.guestRegisterForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, UrlTree, Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { CheckoutService, SemanticPathService } from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderConfirmationGuard implements CanActivate {\r\n  constructor(\r\n    private checkoutService: CheckoutService,\r\n    private router: Router,\r\n    private semanticPathService: SemanticPathService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.checkoutService.getOrderDetails().pipe(\r\n      map((orderDetails) => {\r\n        if (orderDetails && Object.keys(orderDetails).length !== 0) {\r\n          return true;\r\n        } else {\r\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n} from '@spartacus/core';\r\nimport { CardModule } from '../../shared/components/card/card.module';\r\nimport { CartSharedModule } from '../cart/cart-shared/cart-shared.module';\r\nimport { PwaModule } from './../../cms-structure/pwa/pwa.module';\r\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\r\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\r\n// tslint:disable-next-line\r\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\r\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\r\nimport { GuestRegisterFormComponent } from './components/guest-register-form/guest-register-form.component';\r\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\r\nimport { PromotionsModule } from '../checkout/components/promotions/promotions.module';\r\nimport { FormErrorsModule } from '../../shared/index';\r\n\r\nconst orderConfirmationComponents = [\r\n  OrderConfirmationItemsComponent,\r\n  OrderConfirmationOverviewComponent,\r\n  OrderConfirmationThankYouMessageComponent,\r\n  OrderConfirmationTotalsComponent,\r\n  GuestRegisterFormComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CartSharedModule,\r\n    CardModule,\r\n    PwaModule,\r\n    PromotionsModule,\r\n    I18nModule,\r\n    ReactiveFormsModule,\r\n    FeaturesConfigModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        OrderConfirmationThankMessageComponent: {\r\n          component: OrderConfirmationThankYouMessageComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n        OrderConfirmationItemsComponent: {\r\n          component: OrderConfirmationItemsComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n        OrderConfirmationTotalsComponent: {\r\n          component: OrderConfirmationTotalsComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n        OrderConfirmationOverviewComponent: {\r\n          component: OrderConfirmationOverviewComponent,\r\n          guards: [OrderConfirmationGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [...orderConfirmationComponents],\r\n  exports: [...orderConfirmationComponents],\r\n  entryComponents: [...orderConfirmationComponents],\r\n})\r\nexport class OrderConfirmationModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Product,\r\n  ProductReference,\r\n  ProductReferenceService,\r\n  ProductService,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ProductCarouselItem } from './product-carousel.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductCarouselService {\r\n  constructor(\r\n    protected productService: ProductService,\r\n    protected referenceService: ProductReferenceService,\r\n    protected semanticPathService: SemanticPathService\r\n  ) {}\r\n\r\n  /**\r\n   * Loads the product data and converts it `CarouselItem`.\r\n   */\r\n  loadProduct(code: string): Observable<ProductCarouselItem> {\r\n    return this.productService.get(code).pipe(\r\n      filter(Boolean),\r\n      map((product) => this.convertProduct(product))\r\n    );\r\n  }\r\n\r\n  getProductReferences(\r\n    code: string,\r\n    referenceType: string,\r\n    displayTitle: boolean,\r\n    displayProductPrices: boolean\r\n  ): Observable<ProductCarouselItem[]> {\r\n    return this.referenceService.get(code, referenceType).pipe(\r\n      filter(Boolean),\r\n      map((refs: ProductReference[]) =>\r\n        refs.map((ref) =>\r\n          this.convertProduct(ref.target, displayTitle, displayProductPrices)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Converts the product to a generic CarouselItem\r\n   */\r\n  private convertProduct(\r\n    source: Product,\r\n    displayTitle = true,\r\n    displayProductPrices = true\r\n  ): ProductCarouselItem {\r\n    const item: ProductCarouselItem = {};\r\n    if (displayTitle) {\r\n      item.title = source.name;\r\n    }\r\n    if (displayProductPrices && source.price && source.price.formattedValue) {\r\n      item.price = source.price.formattedValue;\r\n    }\r\n    if (source.images && source.images.PRIMARY) {\r\n      item.media = {\r\n        container: source.images.PRIMARY,\r\n        format: 'product',\r\n      };\r\n    }\r\n    item.route = this.semanticPathService.transform({\r\n      cxRoute: 'product',\r\n      params: source,\r\n    });\r\n    return item;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport {\r\n  CmsProductCarouselComponent as model,\r\n  Product,\r\n  ProductScope,\r\n  ProductService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\r\n\r\n@Component({\r\n  selector: 'cx-product-carousel',\r\n  templateUrl: './product-carousel.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductCarouselComponent {\r\n  protected readonly PRODUCT_SCOPE = ProductScope.LIST;\r\n\r\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\r\n    filter(Boolean)\r\n  );\r\n\r\n  /**\r\n   * returns an Obervable string for the title.\r\n   */\r\n  title$: Observable<string> = this.componentData$.pipe(\r\n    map((data) => data.title)\r\n  );\r\n\r\n  /**\r\n   * Obervable that holds an Array of Observables. This is done, so that\r\n   * the component UI could consider to lazy load the UI components when they're\r\n   * in the viewpoint.\r\n   */\r\n  items$: Observable<Observable<Product>[]> = this.componentData$.pipe(\r\n    map((data) => data.productCodes.trim().split(' ')),\r\n    map((codes) =>\r\n      codes.map((code) => this.productService.get(code, this.PRODUCT_SCOPE))\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    protected componentData: CmsComponentData<model>,\r\n    protected productService: ProductService\r\n  ) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\r\nimport {\r\n  CarouselModule,\r\n  MediaModule,\r\n} from '../../../../shared/components/index';\r\nimport { ProductCarouselComponent } from './product-carousel.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductCarouselComponent: {\r\n          component: ProductCarouselComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductCarouselComponent],\r\n  entryComponents: [ProductCarouselComponent],\r\n  exports: [ProductCarouselComponent],\r\n})\r\nexport class ProductCarouselModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport {\r\n  CmsProductReferencesComponent,\r\n  Product,\r\n  ProductReference,\r\n  ProductReferenceService,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport {\r\n  filter,\r\n  map,\r\n  switchMap,\r\n  tap,\r\n  distinctUntilChanged,\r\n} from 'rxjs/operators';\r\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\r\nimport { CurrentProductService } from '../../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-references',\r\n  templateUrl: './product-references.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductReferencesComponent {\r\n  /**\r\n   * returns an Obervable string for the title\r\n   */\r\n  title$ = this.component.data$.pipe(map((d) => d?.title));\r\n\r\n  private currentProductCode$: Observable<\r\n    string\r\n  > = this.current.getProduct().pipe(\r\n    filter(Boolean),\r\n    map((p: Product) => p.code),\r\n    distinctUntilChanged(),\r\n    tap(() => this.referenceService.cleanReferences())\r\n  );\r\n\r\n  /**\r\n   * Obervable with an Array of Observables. This is done, so that\r\n   * the component UI could consider to lazy load the UI components when they're\r\n   * in the viewpoint.\r\n   */\r\n  items$: Observable<Observable<Product>[]> = combineLatest([\r\n    this.currentProductCode$,\r\n    this.component.data$,\r\n  ]).pipe(\r\n    switchMap(([code, data]) =>\r\n      this.getProductReferences(code, data?.productReferenceTypes)\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    protected component: CmsComponentData<CmsProductReferencesComponent>,\r\n    protected current: CurrentProductService,\r\n    protected referenceService: ProductReferenceService\r\n  ) {}\r\n\r\n  private getProductReferences(\r\n    code: string,\r\n    referenceType: string\r\n  ): Observable<Observable<Product>[]> {\r\n    return this.referenceService.get(code, referenceType).pipe(\r\n      filter(Boolean),\r\n      map((refs: ProductReference[]) => refs.map((ref) => of(ref.target)))\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\r\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\r\nimport { MediaModule } from '../../../../shared/components/media/media.module';\r\nimport { ProductReferencesComponent } from './product-references.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductReferencesComponent: {\r\n          component: ProductReferencesComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductReferencesComponent],\r\n  entryComponents: [ProductReferencesComponent],\r\n  exports: [ProductReferencesComponent],\r\n})\r\nexport class ProductReferencesModule {}\r\n","import { ViewConfig } from '../../../shared/config/view-config';\n\nexport const defaultScrollConfig: ViewConfig = {\n  view: {\n    infiniteScroll: {\n      active: false,\n      productLimit: 0,\n      showMoreButton: false,\n    },\n  },\n};\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Product } from '@spartacus/core';\r\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\r\nimport { CurrentProductService } from '../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-images',\r\n  templateUrl: './product-images.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductImagesComponent {\r\n  private mainMediaContainer = new BehaviorSubject(null);\r\n\r\n  private product$: Observable<\r\n    Product\r\n  > = this.currentProductService.getProduct().pipe(\r\n    filter(Boolean),\r\n    distinctUntilChanged(),\r\n    tap((p: Product) => {\r\n      this.mainMediaContainer.next(p.images?.PRIMARY ? p.images.PRIMARY : {});\r\n    })\r\n  );\r\n\r\n  thumbs$: Observable<any[]> = this.product$.pipe(\r\n    map((p: Product) => this.createThumbs(p))\r\n  );\r\n\r\n  mainImage$ = combineLatest([this.product$, this.mainMediaContainer]).pipe(\r\n    map(([, container]) => container)\r\n  );\r\n\r\n  constructor(private currentProductService: CurrentProductService) {}\r\n\r\n  openImage(item: any): void {\r\n    this.mainMediaContainer.next(item);\r\n  }\r\n\r\n  isActive(thumbnail): Observable<boolean> {\r\n    return this.mainMediaContainer.pipe(\r\n      filter(Boolean),\r\n      map((container: any) => {\r\n        return (\r\n          container.zoom &&\r\n          container.zoom.url &&\r\n          thumbnail.zoom &&\r\n          thumbnail.zoom.url &&\r\n          container.zoom.url === thumbnail.zoom.url\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /** find the index of the main media in the list of media */\r\n  getActive(thumbs: any[]): Observable<number> {\r\n    return this.mainMediaContainer.pipe(\r\n      filter(Boolean),\r\n      map((container: any) => {\r\n        const current = thumbs.find(\r\n          (t) =>\r\n            t.media &&\r\n            container.zoom &&\r\n            t.media.container &&\r\n            t.media.container.zoom &&\r\n            t.media.container.zoom.url === container.zoom.url\r\n        );\r\n        return thumbs.indexOf(current);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return an array of CarouselItems for the product thumbnails.\r\n   * In case there are less then 2 thumbs, we return null.\r\n   */\r\n  private createThumbs(product: Product): Observable<any>[] {\r\n    if (\r\n      !product.images ||\r\n      !product.images.GALLERY ||\r\n      product.images.GALLERY.length < 2\r\n    ) {\r\n      return [];\r\n    }\r\n\r\n    return (<any[]>product.images.GALLERY).map((c) => of({ container: c }));\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { OutletModule } from '../../../cms-structure/outlet/index';\r\nimport { CarouselModule } from '../../../shared/components/carousel/index';\r\nimport { MediaModule } from '../../../shared/components/media/media.module';\r\nimport { ProductImagesComponent } from './product-images.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MediaModule,\r\n    OutletModule,\r\n    CarouselModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductImagesComponent: {\r\n          component: ProductImagesComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductImagesComponent],\r\n  entryComponents: [ProductImagesComponent],\r\n  exports: [ProductImagesComponent],\r\n})\r\nexport class ProductImagesModule {}\r\n","import {\r\n  AfterContentChecked,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n} from '@angular/core';\r\nimport { Product, TranslationService, WindowRef } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { CurrentProductService } from '../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-intro',\r\n  templateUrl: './product-intro.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductIntroComponent implements AfterContentChecked {\r\n  reviewsTabAvailable = new BehaviorSubject<boolean>(false);\r\n\r\n  product$: Observable<Product> = this.currentProductService.getProduct();\r\n\r\n  constructor(\r\n    protected currentProductService: CurrentProductService,\r\n    private translationService: TranslationService,\r\n    protected winRef: WindowRef\r\n  ) {}\r\n\r\n  ngAfterContentChecked() {\r\n    this.reviewsTabAvailable.next(!!this.getReviewsComponent());\r\n  }\r\n\r\n  // Scroll to views component on page and click \"Reviews\" tab\r\n  showReviews() {\r\n    // Use translated label for Reviews tab reference\r\n    this.translationService\r\n      .translate('TabPanelContainer.tabs.ProductReviewsTabComponent')\r\n      .subscribe((reviewsTabLabel) => {\r\n        const tabsComponent = this.getTabsComponent();\r\n        const reviewsTab = this.getTabByLabel(reviewsTabLabel, tabsComponent);\r\n        const reviewsComponent = this.getReviewsComponent();\r\n        if (reviewsTab && reviewsComponent) {\r\n          this.clickTabIfInactive(reviewsTab);\r\n          setTimeout(\r\n            () => reviewsComponent.scrollIntoView({ behavior: 'smooth' }),\r\n            0\r\n          );\r\n        }\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  // NOTE: Does not currently exists as its own component\r\n  // but part of tabs component. This is likely to change in refactor.\r\n  private getReviewsComponent(): Element {\r\n    return this.winRef.document.querySelector('cx-product-reviews');\r\n  }\r\n\r\n  // Get Tabs Component if exists on page\r\n  private getTabsComponent(): Element {\r\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\r\n  }\r\n\r\n  // Click to activate tab if not already active\r\n  private clickTabIfInactive(tab: HTMLElement): void {\r\n    if (\r\n      !tab.classList.contains('active') ||\r\n      tab.classList.contains('toggled')\r\n    ) {\r\n      tab.click();\r\n    }\r\n  }\r\n\r\n  // Get Tab by label if exists on page\r\n  private getTabByLabel(label: string, tabsComponent: Element): HTMLElement {\r\n    if (tabsComponent) {\r\n      // NOTE: Reads through button tags to click on correct tab\r\n      // There may be a better way of doing this now/after refactor\r\n      const tabElements: HTMLCollectionOf<HTMLElement> = tabsComponent.getElementsByTagName(\r\n        'button'\r\n      );\r\n\r\n      // Look through button tab elements until finding tab with label\r\n      for (const buttonElement of Array.from(tabElements)) {\r\n        if (buttonElement.innerHTML.includes(label)) {\r\n          return buttonElement;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\r\nimport { ProductIntroComponent } from './product-intro.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule, StarRatingModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductIntroComponent: {\r\n          component: ProductIntroComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductIntroComponent],\r\n  exports: [ProductIntroComponent],\r\n  entryComponents: [ProductIntroComponent],\r\n})\r\nexport class ProductIntroModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  ActivatedRouterStateSnapshot,\r\n  CurrencyService,\r\n  LanguageService,\r\n  ProductSearchPage,\r\n  ProductSearchService,\r\n  RoutingService,\r\n  SearchConfig,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  filter,\r\n  pluck,\r\n  shareReplay,\r\n  tap,\r\n} from 'rxjs/operators';\r\n\r\ninterface ProductListRouteParams {\r\n  brandCode?: string;\r\n  categoryCode?: string;\r\n  query?: string;\r\n}\r\n\r\ninterface SearchCriteria {\r\n  currentPage?: number;\r\n  pageSize?: number;\r\n  sortCode?: string;\r\n  query?: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductListComponentService {\r\n  // TODO: make it configurable\r\n  protected defaultPageSize = 10;\r\n\r\n  protected sub: Subscription;\r\n\r\n  protected readonly RELEVANCE_ALLCATEGORIES = ':relevance:allCategories:';\r\n\r\n  constructor(\r\n    protected productSearchService: ProductSearchService,\r\n    protected routing: RoutingService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected currencyService: CurrencyService,\r\n    protected languageService: LanguageService,\r\n    protected router: Router\r\n  ) {}\r\n\r\n  private searchResults$: Observable<\r\n    ProductSearchPage\r\n  > = this.productSearchService\r\n    .getResults()\r\n    .pipe(filter((searchResult) => Object.keys(searchResult).length > 0));\r\n\r\n  private searchByRouting$: Observable<\r\n    ActivatedRouterStateSnapshot\r\n  > = combineLatest([\r\n    this.routing.getRouterState().pipe(\r\n      distinctUntilChanged((x, y) => {\r\n        // router emits new value also when the anticipated `nextState` changes\r\n        // but we want to perform search only when current url changes\r\n        return x.state.url === y.state.url;\r\n      })\r\n    ),\r\n    // also trigger search on site context changes\r\n    this.languageService.getActive(),\r\n    this.currencyService.getActive(),\r\n  ]).pipe(\r\n    pluck(0, 'state'),\r\n    tap((state: ActivatedRouterStateSnapshot) => {\r\n      const criteria = this.getCriteriaFromRoute(\r\n        state.params,\r\n        state.queryParams\r\n      );\r\n      this.search(criteria);\r\n    })\r\n  );\r\n\r\n  /**\r\n   * This stream should be used only on the Product Listing Page.\r\n   *\r\n   * It not only emits search results, but also performs a search on every change\r\n   * of the route (i.e. route params or query params).\r\n   *\r\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\r\n   * so no longer the search is performed on route change.\r\n   */\r\n  readonly model$: Observable<ProductSearchPage> = combineLatest([\r\n    this.searchResults$,\r\n    this.searchByRouting$,\r\n  ]).pipe(pluck(0), shareReplay({ bufferSize: 1, refCount: true }));\r\n\r\n  private getCriteriaFromRoute(\r\n    routeParams: ProductListRouteParams,\r\n    queryParams: SearchCriteria\r\n  ): SearchCriteria {\r\n    return {\r\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\r\n      pageSize: queryParams.pageSize || this.defaultPageSize,\r\n      currentPage: queryParams.currentPage,\r\n      sortCode: queryParams.sortCode,\r\n    };\r\n  }\r\n\r\n  private getQueryFromRouteParams({\r\n    brandCode,\r\n    categoryCode,\r\n    query,\r\n  }: ProductListRouteParams) {\r\n    if (query) {\r\n      return query;\r\n    }\r\n    if (categoryCode) {\r\n      return this.RELEVANCE_ALLCATEGORIES + categoryCode;\r\n    }\r\n    if (brandCode) {\r\n      return this.RELEVANCE_ALLCATEGORIES + brandCode;\r\n    }\r\n  }\r\n\r\n  private search(criteria: SearchCriteria): void {\r\n    const query = criteria.query;\r\n    const searchConfig = this.getSearchConfig(criteria);\r\n\r\n    this.productSearchService.search(query, searchConfig);\r\n  }\r\n\r\n  private getSearchConfig(criteria: SearchCriteria): SearchConfig {\r\n    const result: SearchConfig = {\r\n      currentPage: criteria.currentPage,\r\n      pageSize: criteria.pageSize,\r\n      sortCode: criteria.sortCode,\r\n    };\r\n\r\n    // drop empty keys\r\n    Object.keys(result).forEach((key) => !result[key] && delete result[key]);\r\n\r\n    return result;\r\n  }\r\n\r\n  setQuery(query: string): void {\r\n    this.setQueryParams({ query, currentPage: undefined });\r\n  }\r\n\r\n  viewPage(pageNumber: number): void {\r\n    this.setQueryParams({ currentPage: pageNumber });\r\n  }\r\n\r\n  /**\r\n   * Get items from a given page without using navigation\r\n   */\r\n  getPageItems(pageNumber: number): void {\r\n    this.routing\r\n      .getRouterState()\r\n      .subscribe((route) => {\r\n        const routeCriteria = this.getCriteriaFromRoute(\r\n          route.state.params,\r\n          route.state.queryParams\r\n        );\r\n        const criteria = {\r\n          ...routeCriteria,\r\n          currentPage: pageNumber,\r\n        };\r\n        this.search(criteria);\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  sort(sortCode: string): void {\r\n    this.setQueryParams({ sortCode });\r\n  }\r\n\r\n  private setQueryParams(queryParams: SearchCriteria): void {\r\n    this.router.navigate([], {\r\n      queryParams,\r\n      queryParamsHandling: 'merge',\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\r\n\r\nexport enum ViewModes {\r\n  Grid = 'grid',\r\n  List = 'list',\r\n}\r\n\r\n@Component({\r\n  selector: 'cx-product-view',\r\n  templateUrl: './product-view.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductViewComponent {\r\n  iconTypes = ICON_TYPE;\r\n  @Input()\r\n  mode: ViewModes;\r\n  @Output()\r\n  modeChange = new EventEmitter<string>();\r\n\r\n  get buttonClass() {\r\n    const viewName: string = this.viewMode.toLowerCase();\r\n    return `cx-product-${viewName}`;\r\n  }\r\n\r\n  /**\r\n   *   Display icons inversely to allow users\r\n   *   to see the view they will navigate to\r\n   */\r\n  get viewMode() {\r\n    if (this.mode === 'list') {\r\n      return this.iconTypes.GRID;\r\n    } else if (this.mode === 'grid') {\r\n      return this.iconTypes.LIST;\r\n    }\r\n  }\r\n\r\n  changeMode() {\r\n    const newMode =\r\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\r\n    this.modeChange.emit(newMode);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ProductSearchPage } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\r\nimport { ViewConfig } from '../../../../shared/config/view-config';\r\nimport { ViewModes } from '../product-view/product-view.component';\r\nimport { ProductListComponentService } from './product-list-component.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-list',\r\n  templateUrl: './product-list.component.html',\r\n})\r\nexport class ProductListComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  isInfiniteScroll: boolean;\r\n\r\n  model$: Observable<ProductSearchPage> = this.productListComponentService\r\n    .model$;\r\n\r\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\r\n  ViewModes = ViewModes;\r\n\r\n  constructor(\r\n    private pageLayoutService: PageLayoutService,\r\n    private productListComponentService: ProductListComponentService,\r\n    public scrollConfig: ViewConfig\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isInfiniteScroll = this.scrollConfig.view.infiniteScroll.active;\r\n\r\n    this.subscription.add(\r\n      this.pageLayoutService.templateName$\r\n        .pipe(take(1))\r\n        .subscribe((template) => {\r\n          this.viewMode$.next(\r\n            template === 'ProductGridPageTemplate'\r\n              ? ViewModes.Grid\r\n              : ViewModes.List\r\n          );\r\n        })\r\n    );\r\n  }\r\n\r\n  sortList(sortCode: string): void {\r\n    this.productListComponentService.sort(sortCode);\r\n  }\r\n\r\n  setViewMode(mode: ViewModes): void {\r\n    this.viewMode$.next(mode);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { ProductSearchPage } from '@spartacus/core';\r\nimport { ViewModes } from '../../product-view/product-view.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductListComponentService } from '../product-list-component.service';\r\nimport { ViewConfig } from '../../../../../shared/config/view-config';\r\n\r\n@Component({\r\n  selector: 'cx-product-scroll',\r\n  templateUrl: './product-scroll.component.html',\r\n})\r\nexport class ProductScrollComponent implements OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  @Input('scrollConfig')\r\n  set setConfig(inputConfig: ViewConfig) {\r\n    this.setComponentConfigurations(inputConfig);\r\n  }\r\n\r\n  model: ProductSearchPage;\r\n  @Input('model')\r\n  set setModel(inputModel: ProductSearchPage) {\r\n    this.infiniteScrollOperations(inputModel);\r\n  }\r\n\r\n  inputViewMode: ViewModes;\r\n  @Input('inputViewMode')\r\n  set setViewMode(inputViewMode: ViewModes) {\r\n    this.inputViewMode = inputViewMode;\r\n    //If viewMode is already set (meaning it is not the first load)\r\n    //Reset the product list\r\n    if (this.viewMode) {\r\n      this.resetListOnViewModeChange();\r\n    } else {\r\n      //If viewMode is not set (meaning it is the first load)\r\n      //Set the viewMode\r\n      this.viewMode = inputViewMode;\r\n    }\r\n  }\r\n\r\n  viewMode: ViewModes;\r\n  productLimit: number;\r\n  maxProducts: number;\r\n\r\n  ViewModes = ViewModes;\r\n  appendProducts = false;\r\n  resetList = false;\r\n  isMaxProducts = false;\r\n  isLastPage = false;\r\n  isEmpty = false;\r\n\r\n  constructor(\r\n    private productListComponentService: ProductListComponentService,\r\n    private ref: ChangeDetectorRef\r\n  ) {}\r\n\r\n  scrollPage(pageNumber: number): void {\r\n    this.appendProducts = true;\r\n    this.ref.markForCheck();\r\n    this.productListComponentService.getPageItems(pageNumber);\r\n  }\r\n\r\n  loadNextPage(pageNumber: number): void {\r\n    this.isMaxProducts = false;\r\n    this.scrollPage(pageNumber);\r\n  }\r\n\r\n  scrollToTop(): void {\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  private setComponentConfigurations(scrollConfig: ViewConfig): void {\r\n    const isButton = scrollConfig.view.infiniteScroll.showMoreButton;\r\n    const configProductLimit = scrollConfig.view.infiniteScroll.productLimit;\r\n\r\n    //Display \"show more\" button every time when button configuration is true\r\n    //Otherwise, only display \"show more\" when the configuration product limit is reached\r\n    this.productLimit = isButton ? 1 : configProductLimit;\r\n  }\r\n\r\n  private infiniteScrollOperations(inputModel: ProductSearchPage): void {\r\n    if (this.appendProducts) {\r\n      this.model = {\r\n        ...inputModel,\r\n        products: this.model.products.concat(inputModel.products),\r\n      };\r\n    } else {\r\n      this.model = inputModel;\r\n      this.maxProducts = this.productLimit;\r\n    }\r\n    this.setConditions();\r\n    this.ref.markForCheck();\r\n  }\r\n\r\n  private resetListOnViewModeChange(): void {\r\n    this.scrollToTop();\r\n    this.resetList = true;\r\n    this.productListComponentService.getPageItems(0);\r\n  }\r\n\r\n  //Set booleans after model has been retrieved\r\n  private setConditions(): void {\r\n    this.isEmpty = !this.model.products || this.model.products.length === 0;\r\n\r\n    this.isLastPage =\r\n      this.model.pagination.currentPage ===\r\n      this.model.pagination.totalPages - 1;\r\n\r\n    this.isMaxProducts =\r\n      this.productLimit &&\r\n      this.productLimit !== 0 &&\r\n      this.model.products.length >= this.maxProducts;\r\n\r\n    //Add the productLimit to the current number of products to determine the next max number of products\r\n    if (this.isMaxProducts) {\r\n      this.maxProducts = this.model.products.length + this.productLimit;\r\n    }\r\n\r\n    //Only change viewMode once the new model is set\r\n    //This prevents flickering issues\r\n    if (this.viewMode !== this.inputViewMode) {\r\n      this.viewMode = this.inputViewMode;\r\n    }\r\n\r\n    this.resetList = false;\r\n    this.appendProducts = false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Breadcrumb, Facet } from '@spartacus/core';\r\n\r\n/**\r\n * UI model that holds the full list of facet and active facets for\r\n * the product list.\r\n */\r\nexport interface FacetList {\r\n  facets: Facet[];\r\n  activeFacets?: Breadcrumb[];\r\n}\r\n\r\nexport interface FacetCollapseState {\r\n  /**\r\n   * Indicates whether the facet is toggled to expand or collapse the facet values.\r\n   * Whether the toggle results in an expanded or collapsed state, depends on the\r\n   * experience, which is controlled in CSS.\r\n   */\r\n  toggled?: FacetGroupCollapsedState;\r\n\r\n  /**\r\n   * The top number of facet values that will be visible.\r\n   */\r\n  topVisible?: number;\r\n\r\n  /**\r\n   * The max number of facet values which will be visible. This includes\r\n   * the top visible number.\r\n   */\r\n  maxVisible?: number;\r\n}\r\n\r\nexport enum FacetGroupCollapsedState {\r\n  EXPANDED = 'EXPANDED',\r\n  COLLAPSED = 'COLLAPSED',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Params } from '@angular/router';\r\nimport {\r\n  ActivatedRouterStateSnapshot,\r\n  Breadcrumb,\r\n  PageType,\r\n  ProductSearchPage,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, pluck, switchMap } from 'rxjs/operators';\r\nimport { ProductListComponentService } from '../../container/product-list-component.service';\r\nimport { FacetList } from '../facet.model';\r\n\r\n/**\r\n * Provides access to all the facets and active facets for the Product Listing Page.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductFacetService {\r\n  protected readonly routeState$ = this.routing\r\n    .getRouterState()\r\n    .pipe(pluck('state'));\r\n\r\n  protected readonly searchResult$: Observable<\r\n    ProductSearchPage\r\n  > = this.routeState$.pipe(\r\n    switchMap((state) =>\r\n      this.productListComponentService.model$.pipe(\r\n        filter((page) => this.filterForPage(state, page)),\r\n        map((page) => this.mapResults(state, page))\r\n      )\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    protected routing: RoutingService,\r\n    protected productListComponentService: ProductListComponentService\r\n  ) {}\r\n\r\n  /**\r\n   * Observes the facets and active facets for the given page. The facet data\r\n   * is provided in a `FacetList`.\r\n   */\r\n  readonly facetList$: Observable<FacetList> = this.searchResult$.pipe(\r\n    map(\r\n      (result: ProductSearchPage) =>\r\n        ({\r\n          facets: result.facets,\r\n          activeFacets: result.breadcrumbs,\r\n        } as FacetList)\r\n    )\r\n  );\r\n\r\n  /**\r\n   * Filters the current result by verifying if the result is related to the page.\r\n   * This is done to avoid a combination of the next page and the current search results.\r\n   */\r\n  protected filterForPage(\r\n    state: ActivatedRouterStateSnapshot,\r\n    page: ProductSearchPage\r\n  ): boolean {\r\n    if (state.context.type === PageType.CATEGORY_PAGE) {\r\n      return (\r\n        page.currentQuery?.query?.value?.indexOf(\r\n          `allCategories:${state.context.id}`\r\n        ) > -1\r\n      );\r\n    }\r\n\r\n    if (\r\n      state.context.type === PageType.CONTENT_PAGE &&\r\n      state.context.id === 'search'\r\n    ) {\r\n      return page.currentQuery.query.value.startsWith(`${state.params.query}:`);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private mapResults(\r\n    state: ActivatedRouterStateSnapshot,\r\n    page: ProductSearchPage\r\n  ): ProductSearchPage {\r\n    return {\r\n      ...page,\r\n      breadcrumbs: this.filterBreadcrumbs(page.breadcrumbs, state.params),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * filter breadcrumbs which are not actively selected\r\n   * but coming from the route navigation\r\n   */\r\n  private filterBreadcrumbs(\r\n    breadcrumbs: Breadcrumb[],\r\n    params: Params\r\n  ): Breadcrumb[] {\r\n    return breadcrumbs\r\n      ? breadcrumbs.filter(\r\n          (breadcrumb) => !this.hasBreadcrumb(breadcrumb, params)\r\n        )\r\n      : [];\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the breadcrumb is related to navigation parameters,\r\n   * since either the category or brand code should match those codes.\r\n   */\r\n  private hasBreadcrumb(breadcrumb: Breadcrumb, params: Params): boolean {\r\n    return (\r\n      breadcrumb.facetCode === 'allCategories' &&\r\n      breadcrumb.facetValueCode === params.categoryCode\r\n    );\r\n  }\r\n}\r\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Facet } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport {\r\n  FacetCollapseState,\r\n  FacetGroupCollapsedState,\r\n  FacetList,\r\n} from '../facet.model';\r\nimport { ProductFacetService } from './product-facet.service';\r\n\r\n/**\r\n * Provides access to the facets as well as their UI state. The UI state\r\n * represents user related changes on the facets, such as expanding or\r\n * collapsing a facet group or expanding the number of _visible_ facet values.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FacetService {\r\n  /**\r\n   * An internal map where we keep the UI state of the facets.\r\n   */\r\n  protected facetState = new Map<string, BehaviorSubject<FacetCollapseState>>();\r\n\r\n  constructor(protected productFacetService: ProductFacetService) {}\r\n\r\n  /**\r\n   * Observes the facets for the given page and configures the initial UI state.\r\n   *\r\n   * Facets are configured on each emission so that we keep the facet UI state.\r\n   * This is mainly done to keep the state during usage of the facet, but also\r\n   * benefitial when the facets are rebuild while using them.\r\n   */\r\n  facetList$: Observable<FacetList> = this.productFacetService.facetList$.pipe(\r\n    tap((facetList) => {\r\n      facetList.facets.forEach((facet) => this.initialize(facet));\r\n    })\r\n  );\r\n\r\n  /**\r\n   * Returns the observed UI state for the facet.\r\n   *\r\n   * The state is initialized using the `initialize` method.\r\n   */\r\n  getState(facet: Facet): Observable<FacetCollapseState> {\r\n    this.initialize(facet);\r\n    return this.facetState.get(facet.name);\r\n  }\r\n\r\n  /**\r\n   * Returns the UI state for the facet.\r\n   *\r\n   * The state is initialized using the `initialize` method.\r\n   */\r\n  protected getStateSnapshot(facet: Facet): FacetCollapseState {\r\n    return (this.getState(facet) as BehaviorSubject<FacetCollapseState>).value;\r\n  }\r\n\r\n  /**\r\n   * Toggles the facet expanded state. If the expanded state becomes false,\r\n   * the visible values will decrease to the top values only.\r\n   *\r\n   * If the optional value argument is provided the expanded state will be set\r\n   * to this value, regardless of the current `expanded` state.\r\n   */\r\n  toggle(facet: Facet, isExpanded: boolean): void {\r\n    const state = this.getStateSnapshot(facet);\r\n\r\n    const toggledState = {\r\n      toggled: isExpanded\r\n        ? FacetGroupCollapsedState.COLLAPSED\r\n        : FacetGroupCollapsedState.EXPANDED,\r\n    } as FacetCollapseState;\r\n\r\n    if (toggledState.toggled === FacetGroupCollapsedState.COLLAPSED) {\r\n      toggledState.maxVisible = state.topVisible;\r\n    }\r\n\r\n    this.updateState(facet, toggledState);\r\n  }\r\n\r\n  /**\r\n   * Increases the visible values to the maximum values of the facet.\r\n   */\r\n  increaseVisibleValues(facet: Facet): void {\r\n    this.updateState(facet, { maxVisible: facet.values.length });\r\n  }\r\n\r\n  /**\r\n   * Decreases the visible values to the topValueCount.\r\n   *\r\n   * The topValueCount defaults to 6, but can be controlled in\r\n   * the backend as well.\r\n   */\r\n  decreaseVisibleValues(facet: Facet): void {\r\n    this.updateState(facet, { maxVisible: facet.topValueCount });\r\n  }\r\n\r\n  /**\r\n   * Persists the facet state and initializes the default values for the top\r\n   * and max visible values.\r\n   */\r\n  protected initialize(facet: Facet): void {\r\n    if (!this.hasState(facet)) {\r\n      this.facetState.set(\r\n        facet.name,\r\n        new BehaviorSubject({\r\n          topVisible: facet.topValueCount || 0,\r\n          maxVisible: facet.topValueCount || 0,\r\n        } as FacetCollapseState)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the state of the facet in the local facet map.\r\n   */\r\n  protected updateState(facet: Facet, property: FacetCollapseState): void {\r\n    const state = { ...this.getStateSnapshot(facet), ...property };\r\n    this.facetState.get(facet.name).next(state);\r\n  }\r\n\r\n  protected hasState(facet: Facet): boolean {\r\n    return this.facetState.has(facet.name);\r\n  }\r\n\r\n  getLinkParams(query: string): { [key: string]: string } {\r\n    return {\r\n      // to avoid encoding issues with facets that have space (' ') in their name,\r\n      // we replace the decoded '+' back to empty space ' '.\r\n      // For more, see https://github.com/SAP/spartacus/issues/7348\r\n      query: new HttpUrlEncodingCodec().decodeValue(query).replace(/\\+/g, ' '),\r\n    };\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Breadcrumb } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\r\nimport { FacetList } from '../facet.model';\r\nimport { FacetService } from '../services/facet.service';\r\n\r\n/**\r\n * Active facets render the applied facet values as a list of focusable buttons\r\n * which can be used to remove the applied facet value.\r\n */\r\n@Component({\r\n  selector: 'cx-active-facets',\r\n  templateUrl: './active-facets.component.html',\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class ActiveFacetsComponent {\r\n  /** Active facets which are applied to the product results. */\r\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\r\n\r\n  /** Configurable icon which is used for the active facet close button */\r\n  @Input() closeIcon = ICON_TYPE.CLOSE;\r\n\r\n  constructor(protected facetService: FacetService) {}\r\n\r\n  getLinkParams(facet: Breadcrumb) {\r\n    return this.facetService.getLinkParams(facet.removeQuery?.query?.value);\r\n  }\r\n\r\n  /**\r\n   * The focus key is used to persist the focus on the facet when the DOM is being\r\n   * recreated. We only apply the focus key for the given _active_ facet when there\r\n   * the original facets is not available. This happens for non multi-valued facets.\r\n   *\r\n   * With this approach, the we keep the focus, either at the facet list or on the\r\n   * active facets.\r\n   */\r\n  getFocusKey(facetList: FacetList, facet: Breadcrumb) {\r\n    return facetList.facets?.find((f) =>\r\n      f.values?.find((val) => val.name === facet.facetValueName)\r\n    )\r\n      ? ''\r\n      : facet.facetValueName;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../../../cms-components/misc/icon/icon.module';\r\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { ActiveFacetsComponent } from './active-facets.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    I18nModule,\r\n    IconModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [ActiveFacetsComponent],\r\n  exports: [ActiveFacetsComponent],\r\n})\r\nexport class ActiveFacetsModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  Output,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { Facet } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FocusConfig } from '../../../../../layout/a11y/keyboard-focus/index';\r\nimport { ICON_TYPE } from '../../../../misc/icon/icon.model';\r\nimport { FacetGroupCollapsedState, FacetList } from '../facet.model';\r\nimport { FacetComponent } from '../facet/facet.component';\r\nimport { FacetService } from '../services/facet.service';\r\n\r\n@Component({\r\n  selector: 'cx-facet-list',\r\n  templateUrl: './facet-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetListComponent {\r\n  private _isDialog: boolean;\r\n  /**\r\n   * Indicates that the facet navigation is rendered in dialog.\r\n   */\r\n  @Input()\r\n  set isDialog(value: boolean) {\r\n    this._isDialog = value;\r\n    if (value) {\r\n      this.renderer.addClass(document.body, 'modal-open');\r\n    }\r\n  }\r\n\r\n  get isDialog(): boolean {\r\n    return this._isDialog;\r\n  }\r\n\r\n  /** Emits when the list must close */\r\n  @Output() closeList = new EventEmitter();\r\n\r\n  /** The list of all facet and values related to the products in the list */\r\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\r\n\r\n  iconTypes = ICON_TYPE;\r\n\r\n  dialogFocusConfig: FocusConfig = {\r\n    trap: true,\r\n    block: true,\r\n    focusOnEscape: true,\r\n    autofocus: 'cx-facet',\r\n  };\r\n\r\n  @HostListener('click') handleClick() {\r\n    this.close();\r\n  }\r\n\r\n  constructor(\r\n    protected facetService: FacetService,\r\n    protected elementRef: ElementRef,\r\n    protected renderer: Renderer2\r\n  ) {}\r\n\r\n  /**\r\n   * Toggles the facet group in case it is not expanded.\r\n   */\r\n  expandFacetGroup(facet: Facet, ref: FacetComponent) {\r\n    if (!ref.isExpanded) {\r\n      this.facetService.toggle(facet, ref.isExpanded);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates that the facet group has been expanded.\r\n   */\r\n  isExpanded(facet: Facet): Observable<boolean> {\r\n    return this.facetService\r\n      .getState(facet)\r\n      .pipe(\r\n        map((value) => value.toggled === FacetGroupCollapsedState.EXPANDED)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Indicates that the facet group has been collapsed.\r\n   */\r\n  isCollapsed(facet: Facet): Observable<boolean> {\r\n    return this.facetService\r\n      .getState(facet)\r\n      .pipe(\r\n        map((value) => value.toggled === FacetGroupCollapsedState.COLLAPSED)\r\n      );\r\n  }\r\n\r\n  close(event?: boolean): void {\r\n    this.renderer.removeClass(document.body, 'modal-open');\r\n    this.closeList.emit(event);\r\n  }\r\n\r\n  block(event?: MouseEvent) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren,\r\n} from '@angular/core';\r\nimport { Facet, FacetValue } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\r\nimport { FocusDirective } from '../../../../../layout/a11y/keyboard-focus/focus.directive';\r\nimport { FacetCollapseState } from '../facet.model';\r\nimport { FacetService } from '../services/facet.service';\r\n\r\n@Component({\r\n  selector: 'cx-facet',\r\n  templateUrl: './facet.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetComponent {\r\n  protected _facet: Facet;\r\n\r\n  state$: Observable<FacetCollapseState>;\r\n\r\n  /** configurable icon that is used to collapse the facet group  */\r\n  @Input() expandIcon: ICON_TYPE = ICON_TYPE.EXPAND;\r\n  @Input() collapseIcon: ICON_TYPE = ICON_TYPE.COLLAPSE;\r\n\r\n  @HostBinding('class.multi-select') isMultiSelect: boolean;\r\n\r\n  @ViewChildren('facetValue') values: QueryList<ElementRef<HTMLElement>>;\r\n\r\n  @ViewChild(FocusDirective) keyboardFocus: FocusDirective;\r\n\r\n  @Input()\r\n  set facet(value: Facet) {\r\n    this._facet = value;\r\n    this.isMultiSelect = !!value.multiSelect;\r\n    this.state$ = this.facetService.getState(value);\r\n  }\r\n\r\n  get facet(): Facet {\r\n    return this._facet;\r\n  }\r\n\r\n  constructor(\r\n    protected facetService: FacetService,\r\n    protected elementRef: ElementRef<HTMLElement>,\r\n    protected cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /**\r\n   * Handles clicking the heading of the facet group, which means toggling\r\n   * the visibility of the group (collapse / expand) and optionally focusing\r\n   * the group.\r\n   */\r\n  toggleGroup(event: UIEvent) {\r\n    const host: HTMLElement = this.elementRef.nativeElement;\r\n    const isLocked = this.keyboardFocus?.isLocked;\r\n\r\n    this.facetService.toggle(this.facet, this.isExpanded);\r\n\r\n    if (!isLocked || this.isExpanded) {\r\n      host.focus();\r\n      // we stop propagating the event as otherwise the focus on the host will trigger\r\n      // an unlock event from the LockFocus directive.\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  get isExpanded(): boolean {\r\n    return this.values.first.nativeElement.offsetParent !== null;\r\n  }\r\n\r\n  openLink(event: KeyboardEvent) {\r\n    (event.target as HTMLElement).click();\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Increases the number of visible values for the facet. This is delegated\r\n   * to `facetService.increaseVisibleValues`.\r\n   */\r\n  increaseVisibleValues(): void {\r\n    this.facetService.increaseVisibleValues(this.facet);\r\n  }\r\n\r\n  /**\r\n   * Decreases the number of visible values for the facet. This is delegated\r\n   * to `facetService.decreaseVisibleValues`.\r\n   */\r\n  decreaseVisibleValues(): void {\r\n    this.facetService.decreaseVisibleValues(this.facet);\r\n  }\r\n\r\n  getLinkParams(value: FacetValue) {\r\n    return this.facetService.getLinkParams(value.query?.query.value);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { I18nModule, UrlModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../../../cms-components/misc/icon/index';\r\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { FacetComponent } from './facet.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    IconModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [FacetComponent],\r\n  exports: [FacetComponent],\r\n})\r\nexport class FacetModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { I18nModule } from '@spartacus/core';\r\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\r\nimport { IconModule } from '../../../../misc/icon/icon.module';\r\nimport { FacetModule } from '../facet/facet.module';\r\nimport { FacetListComponent } from './facet-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    IconModule,\r\n    FacetModule,\r\n    KeyboardFocusModule,\r\n  ],\r\n  declarations: [FacetListComponent],\r\n  exports: [FacetListComponent],\r\n})\r\nexport class FacetListModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { asapScheduler, BehaviorSubject, interval, Observable, of } from 'rxjs';\r\nimport { delayWhen, observeOn, switchMap } from 'rxjs/operators';\r\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\r\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-facet-navigation',\r\n  templateUrl: './product-facet-navigation.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductFacetNavigationComponent {\r\n  iconTypes = ICON_TYPE;\r\n\r\n  /**\r\n   * We delay the removal of DOM so that animations can finish playing before the\r\n   * DOM is removed. Removing the DOM, as hidding is not enough to stop elements\r\n   * to be focused.\r\n   */\r\n  protected CLOSE_DELAY = 300;\r\n\r\n  /**\r\n   * Used to open the facet navigation in a dialog. The usage of the dialog depends\r\n   * on the availability of the trigger element, which is driven by CSS.\r\n   *\r\n   * The reference is also used to refocus the trigger after the dialog is closed.\r\n   */\r\n  @ViewChild('trigger') trigger: ElementRef<HTMLElement>;\r\n\r\n  protected open$ = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * Emits the open state that indicates whether the facet list should be rendered.\r\n   * This is either done instantly, or after the user triggers this by using the trigger\r\n   * button. This driven by the visiibility of the trigger, so that the CSS drives\r\n   * the behaviour. This can differ per breakpoint.\r\n   *\r\n   * There's a configurable delay for the closed state, so that the DOM is not removed\r\n   * before some CSS animations are done.\r\n   */\r\n  isOpen$: Observable<boolean> = this.breakpointService.breakpoint$.pipe(\r\n    // deffer emitting a new value to the next micro-task to ensure that the `hasTrigger`\r\n    // method represents the actual UI state.\r\n    observeOn(asapScheduler),\r\n    switchMap(() => (this.hasTrigger ? this.open$ : of(true))),\r\n    delayWhen((launched) => interval(launched ? 0 : this.CLOSE_DELAY))\r\n  );\r\n\r\n  /**\r\n   * Emits the active state that indicates whether the facet list is activated. Activation\r\n   * is related to the css, so that a animation or transition can visualize opening/closing\r\n   * the list (i.e. dialog).\r\n   */\r\n  isActive$ = this.open$.pipe(\r\n    // deffer emitting a new value to the next micro-task to ensure the active class is\r\n    //  applied after the DOM is created\r\n    observeOn(asapScheduler)\r\n  );\r\n\r\n  constructor(protected breakpointService: BreakpointService) {}\r\n\r\n  launch() {\r\n    this.open$.next(true);\r\n  }\r\n\r\n  close() {\r\n    this.open$.next(false);\r\n    this.trigger.nativeElement.focus();\r\n  }\r\n\r\n  /**\r\n   * Indicates that the facet navigation should be open explicitely by a trigger.\r\n   * This is fully controlled by CSS, where the trigger button can be hidden\r\n   * (display:none) for certain screen sizes.\r\n   */\r\n  get hasTrigger() {\r\n    return this.trigger.nativeElement.offsetParent !== null;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\r\nimport { IconModule } from '../../../misc/icon/icon.module';\r\nimport { ActiveFacetsModule } from './active-facets/active-facets.module';\r\nimport { FacetListModule } from './facet-list/facet-list.module';\r\nimport { ProductFacetNavigationComponent } from './product-facet-navigation.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FacetListModule,\r\n    ActiveFacetsModule,\r\n    IconModule,\r\n    I18nModule,\r\n    ConfigModule.withConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductRefinementComponent: {\r\n          component: ProductFacetNavigationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductFacetNavigationComponent],\r\n  exports: [ProductFacetNavigationComponent],\r\n})\r\nexport class ProductFacetNavigationModule {}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductGridItemComponent {\n  @Input() product: any;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductListItemComponent {\n  @Input() product: any;\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Product, BaseOption, VariantType } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CurrentProductService } from '../current-product.service';\r\nimport { tap, filter, distinctUntilChanged } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-product-variants',\r\n  templateUrl: './product-variants.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductVariantsComponent implements OnInit {\r\n  constructor(private currentProductService: CurrentProductService) {}\r\n\r\n  variants: BaseOption[] = [];\r\n  variantType = VariantType;\r\n  product$: Observable<Product>;\r\n\r\n  ngOnInit(): void {\r\n    this.product$ = this.currentProductService.getProduct().pipe(\r\n      filter((product) => !!(product && product.baseOptions)),\r\n      distinctUntilChanged(),\r\n      tap((product) => {\r\n        product.baseOptions.forEach((option) => {\r\n          if (option && option.variantType) {\r\n            this.variants[option.variantType] = option;\r\n          }\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport {\r\n  OccConfig,\r\n  BaseOption,\r\n  VariantQualifier,\r\n  VariantOptionQualifier,\r\n  Product,\r\n  ProductService,\r\n  ProductScope,\r\n  RoutingService,\r\n} from '@spartacus/core';\r\nimport { filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-variant-style-selector',\r\n  templateUrl: './variant-style-selector.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantStyleSelectorComponent {\r\n  constructor(\r\n    private config: OccConfig,\r\n    private productService: ProductService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  variantQualifier = VariantQualifier;\r\n\r\n  @Input()\r\n  variants: BaseOption;\r\n\r\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\r\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.STYLE);\r\n    return obj ? obj.value : '';\r\n  }\r\n\r\n  getVariantThumbnailUrl(\r\n    variantOptionQualifiers: VariantOptionQualifier[]\r\n  ): string {\r\n    const qualifier = variantOptionQualifiers.find((item) => item.image);\r\n    return qualifier\r\n      ? `${this.config.backend.occ.baseUrl}${qualifier.image.url}`\r\n      : '';\r\n  }\r\n\r\n  changeStyle(code: string): void {\r\n    if (code) {\r\n      this.productService\r\n        .get(code, ProductScope.LIST)\r\n        .pipe(\r\n          // below call might looks redundant but in fact this data is going to be loaded anyways\r\n          // we're just calling it earlier and storing\r\n          filter(Boolean),\r\n          take(1)\r\n        )\r\n        .subscribe((product: Product) => {\r\n          this.routingService.go({\r\n            cxRoute: 'product',\r\n            params: product,\r\n          });\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleSelectorComponent } from './variant-style-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleSelectorComponent],\n  entryComponents: [VariantStyleSelectorComponent],\n  exports: [VariantStyleSelectorComponent],\n})\nexport class VariantStyleSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport {\r\n  Product,\r\n  RoutingService,\r\n  BaseOption,\r\n  VariantQualifier,\r\n  VariantOptionQualifier,\r\n  ProductService,\r\n  ProductScope,\r\n} from '@spartacus/core';\r\nimport { filter, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-variant-size-selector',\r\n  templateUrl: './variant-size-selector.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantSizeSelectorComponent {\r\n  constructor(\r\n    private productService: ProductService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  @Input()\r\n  product: Product;\r\n\r\n  @Input()\r\n  variants: BaseOption;\r\n\r\n  changeSize(code: string): void {\r\n    if (code) {\r\n      this.productService\r\n        .get(code, ProductScope.LIST)\r\n        .pipe(\r\n          // below call might looks redundant but in fact this data is going to be loaded anyways\r\n          // we're just calling it earlier and storing\r\n          filter(Boolean),\r\n          take(1)\r\n        )\r\n        .subscribe((product: Product) => {\r\n          this.routingService.go({\r\n            cxRoute: 'product',\r\n            params: product,\r\n          });\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\r\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.SIZE);\r\n    return obj ? obj.value : '';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantSizeSelectorComponent } from './variant-size-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantSizeSelectorComponent],\n  entryComponents: [VariantSizeSelectorComponent],\n  exports: [VariantSizeSelectorComponent],\n})\nexport class VariantSizeSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport {\r\n  BaseOption,\r\n  Product,\r\n  RoutingService,\r\n  VariantOptionQualifier,\r\n  VariantQualifier,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-variant-color-selector',\r\n  templateUrl: './variant-color-selector.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantColorSelectorComponent {\r\n  constructor(private routingService: RoutingService) {}\r\n\r\n  @Input()\r\n  product: Product;\r\n\r\n  @Input()\r\n  variants: BaseOption;\r\n\r\n  changeColor(code: string, name: string): void {\r\n    if (code) {\r\n      this.routingService.go({\r\n        cxRoute: 'product',\r\n        params: { code, name },\r\n      });\r\n    }\r\n    return null;\r\n  }\r\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\r\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.COLOR);\r\n    return obj ? obj.value : '';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantColorSelectorComponent } from './variant-color-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantColorSelectorComponent],\n  entryComponents: [VariantColorSelectorComponent],\n  exports: [VariantColorSelectorComponent],\n})\nexport class VariantColorSelectorModule {}\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\n\r\nimport {\r\n  OccConfig,\r\n  VariantOption,\r\n  VariantOptionQualifier,\r\n  VariantQualifier,\r\n} from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-variant-style-icons',\r\n  templateUrl: './variant-style-icons.component.html',\r\n  styleUrls: ['./variant-style-icons.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantStyleIconsComponent implements OnInit {\r\n  constructor(private config: OccConfig) {}\r\n\r\n  @Input()\r\n  variants: VariantOption[];\r\n\r\n  variantNames: { [key: string]: string } = {};\r\n\r\n  ngOnInit() {\r\n    this.variants.forEach((variant) => {\r\n      this.variantNames[variant.code] = this.getVariantName(\r\n        variant.variantOptionQualifiers\r\n      );\r\n    });\r\n  }\r\n\r\n  getVariantThumbnailUrl(\r\n    variantOptionQualifiers: VariantOptionQualifier[]\r\n  ): string {\r\n    const thumbnail = variantOptionQualifiers.find(\r\n      (item) => item.qualifier === VariantQualifier.THUMBNAIL\r\n    );\r\n    return thumbnail\r\n      ? `${this.config.backend.occ.baseUrl}${thumbnail.image.url}`\r\n      : '';\r\n  }\r\n\r\n  private getVariantName(\r\n    variantOptionQualifiers: VariantOptionQualifier[]\r\n  ): string {\r\n    const rollupProperty = variantOptionQualifiers.find(\r\n      (item) => item.qualifier === VariantQualifier.ROLLUP_PROPERTY\r\n    );\r\n    const property = rollupProperty\r\n      ? variantOptionQualifiers.find(\r\n          (item) => item.qualifier === rollupProperty.value\r\n        )\r\n      : null;\r\n    return property ? property.value : '';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleIconsComponent } from './variant-style-icons.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleIconsComponent],\n  entryComponents: [VariantStyleIconsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class VariantStyleIconsModule {}\n","import { CanActivate, UrlTree } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, filter, take } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  VariantOption,\r\n  ProductService,\r\n  Product,\r\n  RoutingService,\r\n  ProductScope,\r\n} from '@spartacus/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductVariantGuard implements CanActivate {\r\n  constructor(\r\n    private productService: ProductService,\r\n    private routingService: RoutingService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> {\r\n    return this.routingService.getRouterState().pipe(\r\n      map((state) => state.nextState.params.productCode),\r\n      switchMap((productCode: string) => {\r\n        // if open pdp from smartedit\r\n        if (!productCode) {\r\n          return of(true);\r\n        }\r\n\r\n        return this.productService.get(productCode, ProductScope.VARIANTS).pipe(\r\n          filter(Boolean),\r\n          map((product: Product) => {\r\n            if (!product.purchasable) {\r\n              const variant = this.findVariant(product.variantOptions);\r\n              // below call might looks redundant but in fact this data is going to be loaded anyways\r\n              // we're just calling it earlier and storing\r\n              this.productService\r\n                .get(variant.code, ProductScope.LIST)\r\n                .pipe(filter(Boolean), take(1))\r\n                .subscribe((_product: Product) => {\r\n                  this.routingService.go({\r\n                    cxRoute: 'product',\r\n                    params: _product,\r\n                  });\r\n                });\r\n              return false;\r\n            } else {\r\n              return true;\r\n            }\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  findVariant(variants: VariantOption[]): VariantOption {\r\n    const results: VariantOption[] = variants.filter((variant) => {\r\n      return variant.stock && variant.stock.stockLevel ? variant : false;\r\n    });\r\n    return !results.length && variants.length ? variants[0] : results[0];\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { ProductVariantsComponent } from './product-variants.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VariantStyleSelectorModule } from './variant-style-selector/variant-style-selector.module';\r\nimport { VariantSizeSelectorModule } from './variant-size-selector/variant-size-selector.module';\r\nimport { VariantColorSelectorModule } from './variant-color-selector/variant-color-selector.module';\r\nimport { VariantStyleIconsModule } from './variant-style-icons/variant-style-icons.module';\r\nimport { ProductVariantGuard } from './guards/product-variant.guard';\r\nimport { VariantStyleIconsComponent } from './variant-style-icons/variant-style-icons.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    VariantStyleSelectorModule,\r\n    VariantSizeSelectorModule,\r\n    VariantColorSelectorModule,\r\n    VariantStyleIconsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductVariantSelectorComponent: {\r\n          component: ProductVariantsComponent,\r\n          guards: [ProductVariantGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductVariantsComponent],\r\n  entryComponents: [ProductVariantsComponent],\r\n  exports: [VariantStyleIconsComponent],\r\n})\r\nexport class ProductVariantsModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  FeaturesConfigModule,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { ViewConfig } from '../../../shared/config/view-config';\r\nimport { ViewConfigModule } from '../../../shared/config/view-config.module';\r\nimport {\r\n  ItemCounterModule,\r\n  ListNavigationModule,\r\n  MediaModule,\r\n  SpinnerModule,\r\n  StarRatingModule,\r\n} from '../../../shared/index';\r\nimport { AddToCartModule } from '../../cart/index';\r\nimport { IconModule } from '../../misc/icon/index';\r\nimport { defaultScrollConfig } from '../config/default-scroll-config';\r\nimport { ProductVariantsModule } from '../product-variants/product-variants.module';\r\nimport { ProductListComponent } from './container/product-list.component';\r\nimport { ProductScrollComponent } from './container/product-scroll/product-scroll.component';\r\nimport { ProductFacetNavigationComponent } from './product-facet-navigation/product-facet-navigation.component';\r\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\r\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\r\nimport { ProductViewComponent } from './product-view/product-view.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MediaModule,\r\n    AddToCartModule,\r\n    ItemCounterModule,\r\n    ListNavigationModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    StarRatingModule,\r\n    IconModule,\r\n    SpinnerModule,\r\n    InfiniteScrollModule,\r\n    ViewConfigModule,\r\n    ProductVariantsModule,\r\n    FeaturesConfigModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<ViewConfig>defaultScrollConfig),\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        CMSProductListComponent: {\r\n          component: ProductListComponent,\r\n        },\r\n        ProductGridComponent: {\r\n          component: ProductListComponent,\r\n        },\r\n        SearchResultsListComponent: {\r\n          component: ProductListComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [\r\n    ProductListComponent,\r\n    ProductListItemComponent,\r\n    ProductGridItemComponent,\r\n    ProductViewComponent,\r\n    ProductScrollComponent,\r\n  ],\r\n  exports: [\r\n    ProductListComponent,\r\n    ProductListItemComponent,\r\n    ProductGridItemComponent,\r\n    ProductViewComponent,\r\n    ProductScrollComponent,\r\n  ],\r\n  entryComponents: [ProductListComponent, ProductFacetNavigationComponent],\r\n})\r\nexport class ProductListModule {}\r\n","export enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\r\nimport { ProductSummaryComponent } from './product-summary.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OutletModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductSummaryComponent: {\r\n          component: ProductSummaryComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductSummaryComponent],\r\n  entryComponents: [ProductSummaryComponent],\r\n  exports: [ProductSummaryComponent],\r\n})\r\nexport class ProductSummaryModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Product, ProductScope } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CurrentProductService } from '../../current-product.service';\r\n\r\n@Component({\r\n  selector: 'cx-product-attributes',\r\n  templateUrl: './product-attributes.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductAttributesComponent {\r\n  product$: Observable<Product> = this.currentProductService.getProduct(\r\n    ProductScope.ATTRIBUTES\r\n  );\r\n\r\n  constructor(protected currentProductService: CurrentProductService) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { ProductAttributesComponent } from './product-attributes.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductSpecsTabComponent: {\r\n          component: ProductAttributesComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductAttributesComponent],\r\n  entryComponents: [ProductAttributesComponent],\r\n  exports: [ProductAttributesComponent],\r\n})\r\nexport class ProductAttributesModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\r\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductDetailsTabComponent: {\r\n          component: ProductDetailsTabComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductDetailsTabComponent],\r\n  entryComponents: [ProductDetailsTabComponent],\r\n  exports: [ProductDetailsTabComponent],\r\n})\r\nexport class ProductDetailsTabModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ViewChild,\r\n  ElementRef,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  switchMap,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { CurrentProductService } from '../../current-product.service';\r\nimport { CustomFormValidators } from '../../../../shared/index';\r\n\r\n@Component({\r\n  selector: 'cx-product-reviews',\r\n  templateUrl: './product-reviews.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductReviewsComponent {\r\n  @ViewChild('titleInput', { static: false }) titleInput: ElementRef;\r\n  @ViewChild('writeReviewButton', { static: false })\r\n  writeReviewButton: ElementRef;\r\n\r\n  isWritingReview = false;\r\n\r\n  // TODO: configurable\r\n  initialMaxListItems = 5;\r\n  maxListItems: number;\r\n  reviewForm: FormGroup;\r\n\r\n  product$: Observable<Product> = this.currentProductService.getProduct();\r\n\r\n  reviews$: Observable<Review[]> = this.product$.pipe(\r\n    filter((p) => !!p),\r\n    map((p) => p.code),\r\n    distinctUntilChanged(),\r\n    switchMap((productCode) =>\r\n      this.reviewService.getByProductCode(productCode)\r\n    ),\r\n    tap(() => {\r\n      this.resetReviewForm();\r\n      this.maxListItems = this.initialMaxListItems;\r\n    })\r\n  );\r\n\r\n  constructor(\r\n    protected reviewService: ProductReviewService,\r\n    protected currentProductService: CurrentProductService,\r\n    private fb: FormBuilder,\r\n    protected cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  initiateWriteReview(): void {\r\n    this.isWritingReview = true;\r\n\r\n    this.cd.detectChanges();\r\n\r\n    if (this.titleInput && this.titleInput.nativeElement) {\r\n      this.titleInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  cancelWriteReview(): void {\r\n    this.isWritingReview = false;\r\n    this.resetReviewForm();\r\n\r\n    this.cd.detectChanges();\r\n\r\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\r\n      this.writeReviewButton.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  setRating(rating: number): void {\r\n    this.reviewForm.controls.rating.setValue(rating);\r\n  }\r\n\r\n  submitReview(product: Product) {\r\n    if (this.reviewForm.valid) {\r\n      this.addReview(product);\r\n    } else {\r\n      this.reviewForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  addReview(product: Product): void {\r\n    const reviewFormControls = this.reviewForm.controls;\r\n    const review: Review = {\r\n      headline: reviewFormControls.title.value,\r\n      comment: reviewFormControls.comment.value,\r\n      rating: reviewFormControls.rating.value,\r\n      alias: reviewFormControls.reviewerName.value,\r\n    };\r\n\r\n    this.reviewService.add(product.code, review);\r\n\r\n    this.isWritingReview = false;\r\n    this.resetReviewForm();\r\n\r\n    this.cd.detectChanges();\r\n\r\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\r\n      this.writeReviewButton.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  private resetReviewForm(): void {\r\n    this.reviewForm = this.fb.group({\r\n      title: ['', Validators.required],\r\n      comment: ['', Validators.required],\r\n      rating: [null, CustomFormValidators.starRatingEmpty],\r\n      reviewerName: '',\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { ProductReviewsComponent } from './product-reviews.component';\r\nimport { StarRatingModule, FormErrorsModule } from '../../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    I18nModule,\r\n    StarRatingModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ProductReviewsTabComponent: {\r\n          component: ProductReviewsComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [ProductReviewsComponent],\r\n  entryComponents: [ProductReviewsComponent],\r\n  exports: [ProductReviewsComponent],\r\n})\r\nexport class ProductReviewsModule {}\r\n","import { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { NotificationPreference, UserInterestsService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\r\n\r\n@Component({\r\n  selector: 'cx-stock-notification-dialog',\r\n  templateUrl: './stock-notification-dialog.component.html',\r\n})\r\nexport class StockNotificationDialogComponent implements OnDestroy {\r\n  subscribeSuccess$: Observable<boolean>;\r\n  enabledPrefs: NotificationPreference[] = [];\r\n\r\n  constructor(\r\n    private modalService: ModalService,\r\n    private interestsService: UserInterestsService\r\n  ) {}\r\n\r\n  close() {\r\n    this.modalService.dismissActiveModal();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscribeSuccess$) {\r\n      this.subscribeSuccess$\r\n        .subscribe((success) => {\r\n          if (success) {\r\n            this.interestsService.resetAddInterestState();\r\n          }\r\n        })\r\n        .unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport {\r\n  UserInterestsService,\r\n  UserNotificationPreferenceService,\r\n  AuthService,\r\n  OCC_USER_ID_ANONYMOUS,\r\n  NotificationPreference,\r\n  NotificationType,\r\n  Product,\r\n  GlobalMessageService,\r\n  TranslationService,\r\n  GlobalMessageType,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription, combineLatest } from 'rxjs';\r\nimport { map, filter, tap, first } from 'rxjs/operators';\r\nimport { CurrentProductService } from '../current-product.service';\r\nimport { ModalService } from '../../../shared/components/modal/modal.service';\r\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\r\n\r\n@Component({\r\n  selector: 'cx-stock-notification',\r\n  templateUrl: './stock-notification.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class StockNotificationComponent implements OnInit, OnDestroy {\r\n  hasProductInterests$: Observable<boolean>;\r\n  prefsEnabled$: Observable<boolean>;\r\n  outOfStock$: Observable<boolean>;\r\n  isRemoveInterestLoading$: Observable<boolean>;\r\n  anonymous = true;\r\n\r\n  private enabledPrefs: NotificationPreference[] = [];\r\n  private productCode: string;\r\n  private subscribeSuccess$: Observable<boolean>;\r\n  private subscriptions = new Subscription();\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private currentProductService: CurrentProductService,\r\n    private globalMessageService: GlobalMessageService,\r\n    private translationService: TranslationService,\r\n    private interestsService: UserInterestsService,\r\n    private modalService: ModalService,\r\n    private notificationPrefService: UserNotificationPreferenceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.outOfStock$ = combineLatest([\r\n      this.currentProductService.getProduct().pipe(filter(Boolean)),\r\n      this.authService.getOccUserId(),\r\n    ]).pipe(\r\n      tap(([product, userId]: [Product, String]) => {\r\n        this.productCode = product.code;\r\n        if (userId !== OCC_USER_ID_ANONYMOUS) {\r\n          this.anonymous = false;\r\n          this.notificationPrefService.loadPreferences();\r\n          this.interestsService.loadProductInterests(\r\n            null,\r\n            null,\r\n            null,\r\n            product.code,\r\n            NotificationType.BACK_IN_STOCK\r\n          );\r\n        }\r\n      }),\r\n      map(\r\n        ([product]: [Product, String]) =>\r\n          !!product.stock && product.stock.stockLevelStatus === 'outOfStock'\r\n      )\r\n    );\r\n\r\n    this.hasProductInterests$ = this.interestsService\r\n      .getProductInterests()\r\n      .pipe(\r\n        map(\r\n          (interests) => !!interests.results && interests.results.length === 1\r\n        )\r\n      );\r\n    this.subscribeSuccess$ = this.interestsService.getAddProductInterestSuccess();\r\n    this.isRemoveInterestLoading$ = this.interestsService.getRemoveProdutInterestLoading();\r\n    this.prefsEnabled$ = this.notificationPrefService\r\n      .getEnabledPreferences()\r\n      .pipe(\r\n        tap((prefs) => (this.enabledPrefs = prefs)),\r\n        map((prefs) => prefs.length > 0)\r\n      );\r\n\r\n    this.subscriptions.add(\r\n      this.interestsService.getAddProductInterestError().subscribe((error) => {\r\n        if (error) {\r\n          this.onInterestAddingError();\r\n        }\r\n      })\r\n    );\r\n    this.subscriptions.add(\r\n      this.interestsService\r\n        .getRemoveProdutInterestSuccess()\r\n        .subscribe((success) => {\r\n          if (success) {\r\n            this.onInterestRemovingSuccess();\r\n          }\r\n        })\r\n    );\r\n  }\r\n\r\n  subscribe() {\r\n    this.openDialog();\r\n    this.interestsService.addProductInterest(\r\n      this.productCode,\r\n      NotificationType.BACK_IN_STOCK\r\n    );\r\n  }\r\n\r\n  unsubscribe() {\r\n    this.interestsService.removeProdutInterest(\r\n      {\r\n        product: {\r\n          code: this.productCode,\r\n        },\r\n        productInterestEntry: [\r\n          {\r\n            interestType: NotificationType.BACK_IN_STOCK,\r\n          },\r\n        ],\r\n      },\r\n      true\r\n    );\r\n  }\r\n\r\n  private onInterestRemovingSuccess() {\r\n    this.subscriptions.add(\r\n      this.translationService\r\n        .translate('stockNotification.unsubscribeSuccess')\r\n        .pipe(first())\r\n        .subscribe((text) =>\r\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_INFO)\r\n        )\r\n    );\r\n    this.interestsService.resetRemoveInterestState();\r\n  }\r\n\r\n  private onInterestAddingError() {\r\n    this.modalService.dismissActiveModal();\r\n    this.interestsService.resetAddInterestState();\r\n  }\r\n\r\n  private openDialog() {\r\n    const modalInstance = this.modalService.open(\r\n      StockNotificationDialogComponent,\r\n      {\r\n        centered: true,\r\n        size: 'lg',\r\n      }\r\n    ).componentInstance;\r\n    modalInstance.subscribeSuccess$ = this.subscribeSuccess$;\r\n    modalInstance.enabledPrefs = this.enabledPrefs;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.interestsService.clearProductInterests();\r\n    this.notificationPrefService.clearPreferences();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StockNotificationComponent } from './stock-notification.component';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\r\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [StockNotificationComponent, StockNotificationDialogComponent],\r\n  imports: [CommonModule, RouterModule, I18nModule, SpinnerModule, UrlModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        StockNotificationComponent: {\r\n          component: StockNotificationComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  entryComponents: [\r\n    StockNotificationComponent,\r\n    StockNotificationDialogComponent,\r\n  ],\r\n  exports: [StockNotificationComponent, StockNotificationDialogComponent],\r\n})\r\nexport class StockNotificationModule {}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\nconst WEEK_DAYS_NUMBER = 7;\n\n@Component({\n  selector: 'cx-schedule',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnChanges {\n  @Input()\n  location: any;\n  displayDays: Date[] = null;\n\n  constructor(private storeDataService: StoreDataService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.location && this.location) {\n      const initialDate = this.getInitialDate();\n      this.displayDays = [];\n\n      for (let i = 0; i < WEEK_DAYS_NUMBER; i++) {\n        const date = new Date(initialDate.valueOf());\n        date.setDate(date.getDate() + i);\n        this.displayDays.push(date);\n      }\n    }\n  }\n\n  /**\n   * Returns the store's opening time for the given date\n   * @param date date\n   */\n  getStoreOpeningTime(date: Date): string {\n    return this.storeDataService.getStoreOpeningTime(this.location, date);\n  }\n\n  /**\n   * Returns the store's closing time for the given date\n   * @param date date\n   */\n  getStoreClosingTime(date: Date): string {\n    return this.storeDataService.getStoreClosingTime(this.location, date);\n  }\n\n  /**\n   * return initial (first) date to be displayed in the schedule\n   */\n  private getInitialDate(): Date {\n    const currentDate = new Date();\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n\n    return currentDate;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StoreFinderService, GeoPoint } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-grid',\r\n  templateUrl: './store-finder-grid.component.html',\r\n})\r\nexport class StoreFinderGridComponent implements OnInit, OnDestroy {\r\n  locations$: any;\r\n  isLoading$: Observable<boolean>;\r\n  defaultLocation: GeoPoint;\r\n  country: string;\r\n  region: string;\r\n\r\n  constructor(\r\n    private storeFinderService: StoreFinderService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\r\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\r\n    this.defaultLocation = {};\r\n\r\n    if (this.route.snapshot.params.country) {\r\n      this.storeFinderService.findStoresAction(\r\n        '',\r\n        {\r\n          pageSize: -1,\r\n        },\r\n        undefined,\r\n        this.route.snapshot.params.country\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder-header',\n  templateUrl: './store-finder-header.component.html',\n})\nexport class StoreFinderHeaderComponent {}\n","import { Input, Directive } from '@angular/core';\r\nimport { StoreDataService } from '@spartacus/core';\r\n\r\n// tslint:disable:directive-class-suffix\r\n@Directive()\r\nexport class AbstractStoreItemComponent {\r\n  @Input()\r\n  location;\r\n\r\n  constructor(protected storeDataService: StoreDataService) {}\r\n\r\n  getDirections(location: any): string {\r\n    const google_map_url = 'https://www.google.com/maps/dir/Current+Location/';\r\n    const latitude = this.storeDataService.getStoreLatitude(location);\r\n    const longitude = this.storeDataService.getStoreLongitude(location);\r\n    return google_map_url + latitude + ',' + longitude;\r\n  }\r\n\r\n  getFormattedStoreAddress(addressParts: string[]): string {\r\n    return addressParts.filter(Boolean).join(', ');\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { StoreDataService } from '@spartacus/core';\r\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-list-item',\r\n  templateUrl: './store-finder-list-item.component.html',\r\n})\r\nexport class StoreFinderListItemComponent extends AbstractStoreItemComponent {\r\n  @Input()\r\n  locationIndex: number = null;\r\n  @Input()\r\n  listOrderLabel: any;\r\n  @Input()\r\n  displayDistance: boolean;\r\n  @Input()\r\n  useClickEvent: boolean;\r\n  @Output()\r\n  storeItemClick: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(protected storeDataService: StoreDataService) {\r\n    super(storeDataService);\r\n  }\r\n\r\n  handleStoreItemClick() {\r\n    if (this.locationIndex !== null) {\r\n      this.storeItemClick.emit(this.locationIndex);\r\n    }\r\n  }\r\n\r\n  onKey(event: KeyboardEvent) {\r\n    if (event.key === 'Enter') {\r\n      this.handleStoreItemClick();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { GoogleMapRendererService } from '@spartacus/core';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-map',\r\n  templateUrl: './store-finder-map.component.html',\r\n})\r\nexport class StoreFinderMapComponent implements OnChanges {\r\n  @ViewChild('mapElement', { static: true })\r\n  mapElement: ElementRef;\r\n  @Input()\r\n  locations: any[];\r\n  @Output()\r\n  selectedStoreItem: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(private googleMapRendererService: GoogleMapRendererService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.locations && this.locations) {\r\n      this.renderMap();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the center of the map to the given location\r\n   * @param latitude latitude of the new center\r\n   * @param longitude longitude of the new center\r\n   */\r\n  centerMap(latitude: number, longitude: number): void {\r\n    this.googleMapRendererService.centerMap(latitude, longitude);\r\n  }\r\n\r\n  renderMap(): void {\r\n    this.googleMapRendererService.renderMap(\r\n      this.mapElement.nativeElement,\r\n      this.locations,\r\n      (markerIndex) => {\r\n        this.selectStoreItemClickHandle(markerIndex);\r\n      }\r\n    );\r\n  }\r\n\r\n  private selectStoreItemClickHandle(markerIndex: number) {\r\n    this.selectedStoreItem.emit(markerIndex);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-pagination-details',\n  templateUrl: './store-finder-pagination-details.component.html',\n})\nexport class StoreFinderPaginationDetailsComponent {\n  @Input()\n  pagination: PaginationModel;\n\n  constructor() {}\n\n  getResultsPerPage(): string {\n    if (this.pagination.totalResults > this.pagination.pageSize) {\n      const firstItem =\n        this.pagination.currentPage * this.pagination.pageSize + 1;\n\n      let resultsPerPage =\n        (this.pagination.currentPage + 1) * this.pagination.pageSize;\n\n      if (resultsPerPage > this.pagination.totalResults) {\n        resultsPerPage = this.pagination.totalResults;\n      }\n\n      return `${firstItem} - ${resultsPerPage}`;\n    } else {\n      return `1 - ${this.pagination.totalResults}`;\n    }\n  }\n}\n","import { DOCUMENT } from '@angular/common';\r\nimport { Component, Inject, Input, ViewChild } from '@angular/core';\r\nimport { StoreDataService, PointOfService } from '@spartacus/core';\r\nimport { StoreFinderMapComponent } from '../../store-finder-map/store-finder-map.component';\r\nimport { ICON_TYPE } from './../../../../misc/icon/icon.model';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-list',\r\n  templateUrl: './store-finder-list.component.html',\r\n})\r\nexport class StoreFinderListComponent {\r\n  @Input()\r\n  locations: any;\r\n  @Input()\r\n  useMylocation: boolean;\r\n  @ViewChild('storeMap')\r\n  storeMap: StoreFinderMapComponent;\r\n\r\n  selectedStore: PointOfService;\r\n  selectedStoreIndex: number;\r\n  isDetailsModeVisible: boolean;\r\n  storeDetails: PointOfService;\r\n  iconTypes = ICON_TYPE;\r\n\r\n  constructor(\r\n    private storeDataService: StoreDataService,\r\n    @Inject(DOCUMENT) private document: any\r\n  ) {\r\n    this.isDetailsModeVisible = false;\r\n  }\r\n\r\n  centerStoreOnMapByIndex(index: number, location: PointOfService): void {\r\n    this.showStoreDetails(location);\r\n    this.selectedStoreIndex = index;\r\n    this.selectedStore = location;\r\n    this.storeMap.centerMap(\r\n      this.storeDataService.getStoreLatitude(this.locations.stores[index]),\r\n      this.storeDataService.getStoreLongitude(this.locations.stores[index])\r\n    );\r\n  }\r\n\r\n  selectStoreItemList(index: number): void {\r\n    this.selectedStoreIndex = index;\r\n    const storeListItem = this.document.getElementById('item-' + index);\r\n    storeListItem.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'center',\r\n    });\r\n  }\r\n\r\n  showStoreDetails(location: PointOfService) {\r\n    this.isDetailsModeVisible = true;\r\n    this.storeDetails = location;\r\n  }\r\n\r\n  hideStoreDetails() {\r\n    this.isDetailsModeVisible = false;\r\n    this.selectedStoreIndex = undefined;\r\n    this.selectedStore = undefined;\r\n    this.storeMap.renderMap();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport {\r\n  GeoPoint,\r\n  SearchConfig,\r\n  StoreFinderSearchQuery,\r\n  StoreFinderService,\r\n  StoreFinderConfig,\r\n} from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cx-store-finder-search-result',\r\n  templateUrl: './store-finder-search-result.component.html',\r\n})\r\nexport class StoreFinderSearchResultComponent implements OnInit, OnDestroy {\r\n  locations: any;\r\n  subscription: Subscription;\r\n  useMyLocation: boolean;\r\n  countryCode: string = null;\r\n  searchConfig: SearchConfig = {\r\n    currentPage: 0,\r\n  };\r\n  radius: number;\r\n  searchQuery: StoreFinderSearchQuery;\r\n  geolocation: GeoPoint;\r\n  locations$: Observable<any>;\r\n  isLoading$: Observable<any>;\r\n\r\n  constructor(\r\n    private storeFinderService: StoreFinderService,\r\n    private route: ActivatedRoute,\r\n    protected config: StoreFinderConfig\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.route.queryParams.subscribe((params) =>\r\n      this.initialize(params)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  viewPage(pageNumber: number) {\r\n    this.searchConfig = { ...this.searchConfig, currentPage: pageNumber };\r\n    this.storeFinderService.findStoresAction(\r\n      this.searchQuery.queryText,\r\n      this.searchConfig,\r\n      this.geolocation,\r\n      this.countryCode,\r\n      this.useMyLocation,\r\n      this.radius\r\n    );\r\n  }\r\n\r\n  private initialize(params: Params) {\r\n    this.searchQuery = this.parseParameters(params);\r\n    this.useMyLocation = params && params.useMyLocation ? true : false;\r\n    this.searchConfig = { ...this.searchConfig, currentPage: 0 };\r\n    this.radius = this.config.googleMaps.radius;\r\n    this.storeFinderService.findStoresAction(\r\n      this.searchQuery.queryText,\r\n      this.searchConfig,\r\n      this.geolocation,\r\n      this.countryCode,\r\n      this.useMyLocation,\r\n      this.radius\r\n    );\r\n\r\n    this.isLoading$ = this.storeFinderService.getStoresLoading();\r\n    this.locations$ = this.storeFinderService.getFindStoresEntities();\r\n  }\r\n\r\n  private parseParameters(queryParams: {\r\n    [key: string]: any;\r\n  }): StoreFinderSearchQuery {\r\n    let searchQuery: StoreFinderSearchQuery;\r\n\r\n    if (queryParams.query) {\r\n      searchQuery = { queryText: queryParams.query };\r\n    } else {\r\n      searchQuery = { queryText: '' };\r\n    }\r\n\r\n    searchQuery.useMyLocation =\r\n      queryParams.useMyLocation != null &&\r\n      queryParams.useMyLocation.toUpperCase() === 'TRUE';\r\n\r\n    return searchQuery;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-search',\n  templateUrl: './store-finder-search.component.html',\n})\nexport class StoreFinderSearchComponent {\n  searchBox: FormControl = new FormControl();\n  iconTypes = ICON_TYPE;\n\n  constructor(private routingService: RoutingService) {}\n\n  findStores(address: string) {\n    this.routingService.go(['store-finder/find'], { query: address });\n  }\n\n  viewStoresWithMyLoc() {\n    this.routingService.go(['store-finder/find'], { useMyLocation: true });\n  }\n\n  onKey(event: any) {\n    if (\n      this.searchBox.value &&\n      this.searchBox.value.length &&\n      event.key === 'Enter'\n    ) {\n      this.findStores(this.searchBox.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-store-description',\n  templateUrl: './store-finder-store-description.component.html',\n})\nexport class StoreFinderStoreDescriptionComponent extends AbstractStoreItemComponent {\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StoreFinderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-stores-count',\n  templateUrl: './store-finder-stores-count.component.html',\n})\nexport class StoreFinderStoresCountComponent implements OnInit {\n  locations$: Observable<any>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private storeFinderService: StoreFinderService) {}\n\n  ngOnInit() {\n    this.storeFinderService.viewAllStores();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder',\n  templateUrl: './store-finder.component.html',\n})\nexport class StoreFinderComponent {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  StoreFinderService,\n  PointOfService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-store',\n  templateUrl: './store-finder-store.component.html',\n})\nexport class StoreFinderStoreComponent implements OnInit {\n  location$: Observable<any>;\n  isLoading$: Observable<any>;\n  iconTypes = ICON_TYPE;\n\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    if (!this.location) {\n      this.requestStoresData();\n      this.location$ = this.storeFinderService.getFindStoresEntities();\n      this.isLoading$ = this.storeFinderService.getStoresLoading();\n    }\n  }\n\n  requestStoresData() {\n    this.storeFinderService.viewStoreById(this.route.snapshot.params.store);\n  }\n\n  goBack(): void {\n    this.routingService.go([\n      `store-finder/country/${this.route.snapshot.params.country}`,\n    ]);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  StoreFinderCoreModule,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { LayoutConfig } from '../../layout/config/layout-config';\r\nimport { ListNavigationModule } from '../../shared/components/list-navigation/list-navigation.module';\r\nimport { SpinnerModule } from '../../shared/components/spinner/spinner.module';\r\nimport { IconModule } from './../misc/icon/icon.module';\r\nimport { ScheduleComponent } from './components/schedule-component/schedule.component';\r\nimport { StoreFinderGridComponent } from './components/store-finder-grid/store-finder-grid.component';\r\nimport { StoreFinderHeaderComponent } from './components/store-finder-header/store-finder-header.component';\r\nimport { StoreFinderListItemComponent } from './components/store-finder-list-item/store-finder-list-item.component';\r\nimport { StoreFinderMapComponent } from './components/store-finder-map/store-finder-map.component';\r\nimport { StoreFinderPaginationDetailsComponent } from './components/store-finder-pagination-details/store-finder-pagination-details.component';\r\nimport { StoreFinderListComponent } from './components/store-finder-search-result/store-finder-list/store-finder-list.component';\r\nimport { StoreFinderSearchResultComponent } from './components/store-finder-search-result/store-finder-search-result.component';\r\nimport { StoreFinderSearchComponent } from './components/store-finder-search/store-finder-search.component';\r\nimport { StoreFinderStoreDescriptionComponent } from './components/store-finder-store-description/store-finder-store-description.component';\r\nimport { StoreFinderStoresCountComponent } from './components/store-finder-stores-count/store-finder-stores-count.component';\r\nimport { StoreFinderComponent } from './components/store-finder/store-finder.component';\r\nimport { StoreFinderStoreComponent } from './components/store-finder-store/store-finder-store.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    ListNavigationModule,\r\n    NgbTabsetModule,\r\n    SpinnerModule,\r\n    UrlModule,\r\n    StoreFinderCoreModule,\r\n    I18nModule,\r\n    IconModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig | LayoutConfig>{\r\n      cmsComponents: {\r\n        StoreFinderComponent: {\r\n          component: StoreFinderComponent,\r\n          childRoutes: [\r\n            {\r\n              path: 'find',\r\n              component: StoreFinderSearchResultComponent,\r\n            },\r\n            {\r\n              path: 'view-all',\r\n              component: StoreFinderStoresCountComponent,\r\n            },\r\n            {\r\n              path: 'country/:country',\r\n              component: StoreFinderGridComponent,\r\n            },\r\n            {\r\n              path: 'country/:country/region/:region',\r\n              component: StoreFinderGridComponent,\r\n            },\r\n            {\r\n              path: 'country/:country/region/:region/:store',\r\n              component: StoreFinderStoreComponent,\r\n            },\r\n            {\r\n              path: 'country/:country/:store',\r\n              component: StoreFinderStoreComponent,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      layoutSlots: {\r\n        StoreFinderPageTemplate: {\r\n          slots: ['MiddleContent', 'SideContent'],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [\r\n    StoreFinderSearchComponent,\r\n    StoreFinderListComponent,\r\n    StoreFinderMapComponent,\r\n    StoreFinderListItemComponent,\r\n    StoreFinderStoresCountComponent,\r\n    StoreFinderGridComponent,\r\n    StoreFinderStoreDescriptionComponent,\r\n    ScheduleComponent,\r\n    StoreFinderHeaderComponent,\r\n    StoreFinderSearchResultComponent,\r\n    StoreFinderComponent,\r\n    StoreFinderPaginationDetailsComponent,\r\n    StoreFinderStoreComponent,\r\n  ],\r\n  exports: [\r\n    ScheduleComponent,\r\n    StoreFinderComponent,\r\n    StoreFinderGridComponent,\r\n    StoreFinderHeaderComponent,\r\n    StoreFinderListItemComponent,\r\n    StoreFinderMapComponent,\r\n    StoreFinderPaginationDetailsComponent,\r\n    StoreFinderSearchComponent,\r\n    StoreFinderSearchResultComponent,\r\n    StoreFinderListComponent,\r\n    StoreFinderStoreDescriptionComponent,\r\n    StoreFinderStoresCountComponent,\r\n    StoreFinderStoreComponent,\r\n  ],\r\n  entryComponents: [\r\n    StoreFinderComponent,\r\n    StoreFinderSearchResultComponent,\r\n    StoreFinderStoresCountComponent,\r\n    StoreFinderGridComponent,\r\n    StoreFinderStoreComponent,\r\n  ],\r\n})\r\nexport class StoreFinderModule {}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActiveCartService, AuthRedirectService } from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\r\n\r\n@Component({\r\n  selector: 'cx-checkout-login',\r\n  templateUrl: './checkout-login.component.html',\r\n})\r\nexport class CheckoutLoginComponent implements OnDestroy {\r\n  checkoutLoginForm: FormGroup = this.formBuilder.group(\r\n    {\r\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\r\n      emailConfirmation: ['', [Validators.required]],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.emailsMustMatch(\r\n        'email',\r\n        'emailConfirmation'\r\n      ),\r\n    }\r\n  );\r\n  sub: Subscription;\r\n\r\n  constructor(\r\n    protected formBuilder: FormBuilder,\r\n    protected authRedirectService: AuthRedirectService,\r\n    protected activeCartService: ActiveCartService\r\n  ) {}\r\n\r\n  onSubmit() {\r\n    if (this.checkoutLoginForm.valid) {\r\n      const email = this.checkoutLoginForm.get('email').value;\r\n      this.activeCartService.addEmail(email);\r\n\r\n      if (!this.sub) {\r\n        this.sub = this.activeCartService.getAssignedUser().subscribe(() => {\r\n          if (this.activeCartService.isGuestCart()) {\r\n            this.authRedirectService.redirect();\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.checkoutLoginForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\r\nimport { CheckoutLoginComponent } from './checkout-login.component';\r\nimport { NotCheckoutAuthGuard } from '../../checkout/guards/not-checkout-auth.guard';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    I18nModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        GuestCheckoutLoginComponent: {\r\n          component: CheckoutLoginComponent,\r\n          guards: [NotCheckoutAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [CheckoutLoginComponent],\r\n  exports: [CheckoutLoginComponent],\r\n  entryComponents: [CheckoutLoginComponent],\r\n})\r\nexport class CheckoutLoginModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  AuthRedirectService,\r\n  AuthService,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  WindowRef,\r\n} from '@spartacus/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CheckoutConfigService } from '../../checkout/services/checkout-config.service';\r\nimport { CustomFormValidators } from '../../../shared/index';\r\n\r\n@Component({\r\n  selector: 'cx-login-form',\r\n  templateUrl: './login-form.component.html',\r\n})\r\nexport class LoginFormComponent implements OnInit, OnDestroy {\r\n  sub: Subscription;\r\n  loginForm: FormGroup;\r\n  loginAsGuest = false;\r\n\r\n  constructor(\r\n    protected auth: AuthService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected fb: FormBuilder,\r\n    protected authRedirectService: AuthRedirectService,\r\n    protected winRef: WindowRef,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected checkoutConfigService: CheckoutConfigService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const routeState = this.winRef.nativeWindow?.history?.state;\r\n    const prefilledEmail = routeState?.['newUid'];\r\n\r\n    this.loginForm = this.fb.group({\r\n      userId: [\r\n        prefilledEmail?.length ? prefilledEmail : '',\r\n        [Validators.required, CustomFormValidators.emailValidator],\r\n      ],\r\n      password: ['', Validators.required],\r\n    });\r\n\r\n    if (this.checkoutConfigService.isGuestCheckout()) {\r\n      this.loginAsGuest = this.activatedRoute?.snapshot?.queryParams?.[\r\n        'forced'\r\n      ];\r\n    }\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.loginForm.valid) {\r\n      this.loginUser();\r\n    } else {\r\n      this.loginForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  protected loginUser(): void {\r\n    const { userId, password } = this.loginForm.controls;\r\n    this.auth.authorize(\r\n      userId.value.toLowerCase(), // backend accepts lowercase emails only\r\n      password.value\r\n    );\r\n\r\n    if (!this.sub) {\r\n      this.sub = this.auth.getUserToken().subscribe((data) => {\r\n        if (data && data.access_token) {\r\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\r\n          this.authRedirectService.redirect();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { LoginFormComponent } from './login-form.component';\r\nimport { FormErrorsModule } from '../../../shared/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        ReturningCustomerLoginComponent: {\r\n          component: LoginFormComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [LoginFormComponent],\r\n  exports: [LoginFormComponent],\r\n  entryComponents: [LoginFormComponent],\r\n})\r\nexport class LoginFormModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService, User, UserService } from '@spartacus/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'cx-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user$: Observable<User>;\r\n\r\n  constructor(private auth: AuthService, private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user$ = this.auth.isUserLoggedIn().pipe(\r\n      switchMap((isUserLoggedIn) => {\r\n        if (isUserLoggedIn) {\r\n          return this.userService.get();\r\n        } else {\r\n          return of(undefined);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        LoginComponent: {\r\n          component: LoginComponent,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [LoginComponent],\r\n  entryComponents: [LoginComponent],\r\n  exports: [LoginComponent],\r\n})\r\nexport class LoginModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport {\r\n  AuthService,\r\n  CmsService,\r\n  PageType,\r\n  ProtectedRoutesService,\r\n  RoutingService,\r\n  SemanticPathService,\r\n} from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n/**\r\n * Guards the _logout_ route.\r\n *\r\n * Takes care of routing the user to a logout page (if available) or redirects to\r\n * the homepage. If the homepage is protected, the user is redirected\r\n * to the login route instead.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogoutGuard implements CanActivate {\r\n  constructor(\r\n    protected auth: AuthService,\r\n    protected cms: CmsService,\r\n    protected routing: RoutingService,\r\n    protected semanticPathService: SemanticPathService,\r\n    protected protectedRoutes: ProtectedRoutesService\r\n  ) {}\r\n\r\n  canActivate(): Observable<any> {\r\n    this.logout();\r\n\r\n    return this.cms\r\n      .hasPage({\r\n        id: this.semanticPathService.get('logout'),\r\n        type: PageType.CONTENT_PAGE,\r\n      })\r\n      .pipe(\r\n        tap((hasPage) => {\r\n          if (!hasPage) {\r\n            this.redirect();\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Whenever there is no specific \"logout\" page configured in the CMS,\r\n   * we redirect after the user is logged out.\r\n   *\r\n   * The user gets redirected to the homepage, unless the homepage is protected\r\n   * (in case of a closed shop). We'll redirect to the login page instead.\r\n   */\r\n  protected redirect(): void {\r\n    const cxRoute = this.protectedRoutes.shouldProtect ? 'login' : 'home';\r\n    this.routing.go({ cxRoute });\r\n  }\r\n\r\n  /**\r\n   * Log user out.\r\n   *\r\n   * This is delegated to the `AuthService`.\r\n   */\r\n  protected logout(): void {\r\n    this.auth.logout();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout-guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LogoutGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  AnonymousConsent,\r\n  AnonymousConsentsConfig,\r\n  AnonymousConsentsService,\r\n  ConsentTemplate,\r\n  GlobalMessageEntities,\r\n  GlobalMessageService,\r\n  GlobalMessageType,\r\n  RoutingService,\r\n  Title,\r\n  UserService,\r\n  UserSignUp,\r\n} from '@spartacus/core';\r\nimport { combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { sortTitles, CustomFormValidators } from '../../../shared/index';\r\n\r\n@Component({\r\n  selector: 'cx-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n  titles$: Observable<Title[]>;\r\n  loading$: Observable<boolean>;\r\n  private subscription = new Subscription();\r\n\r\n  anonymousConsent$: Observable<{\r\n    consent: AnonymousConsent;\r\n    template: string;\r\n  }>;\r\n\r\n  registerForm: FormGroup = this.fb.group(\r\n    {\r\n      titleCode: [''],\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\r\n      password: [\r\n        '',\r\n        [Validators.required, CustomFormValidators.passwordValidator],\r\n      ],\r\n      passwordconf: ['', Validators.required],\r\n      newsletter: new FormControl({\r\n        value: false,\r\n        disabled: this.isConsentRequired(),\r\n      }),\r\n      termsandconditions: [false, Validators.requiredTrue],\r\n    },\r\n    {\r\n      validators: CustomFormValidators.passwordsMustMatch(\r\n        'password',\r\n        'passwordconf'\r\n      ),\r\n    }\r\n  );\r\n\r\n  constructor(\r\n    protected userService: UserService,\r\n    protected globalMessageService: GlobalMessageService,\r\n    protected fb: FormBuilder,\r\n    protected router: RoutingService,\r\n    protected anonymousConsentsService: AnonymousConsentsService,\r\n    protected anonymousConsentsConfig: AnonymousConsentsConfig\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.titles$ = this.userService.getTitles().pipe(\r\n      tap((titles) => {\r\n        if (Object.keys(titles).length === 0) {\r\n          this.userService.loadTitles();\r\n        }\r\n      }),\r\n      map((titles) => {\r\n        return titles.sort(sortTitles);\r\n      })\r\n    );\r\n\r\n    this.loading$ = this.userService.getRegisterUserResultLoading();\r\n    this.registerUserProcessInit();\r\n\r\n    // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\r\n    this.subscription.add(\r\n      this.globalMessageService\r\n        .get()\r\n        .pipe(filter((messages) => !!Object.keys(messages).length))\r\n        .subscribe((globalMessageEntities: GlobalMessageEntities) => {\r\n          const messages =\r\n            globalMessageEntities &&\r\n            globalMessageEntities[GlobalMessageType.MSG_TYPE_ERROR];\r\n\r\n          if (\r\n            messages &&\r\n            messages.some((message) => message === 'This field is required.')\r\n          ) {\r\n            this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\r\n            this.globalMessageService.add(\r\n              { key: 'register.titleRequired' },\r\n              GlobalMessageType.MSG_TYPE_ERROR\r\n            );\r\n          }\r\n        })\r\n    );\r\n\r\n    const { registerConsent } = this.anonymousConsentsConfig?.anonymousConsents;\r\n\r\n    this.anonymousConsent$ = combineLatest([\r\n      this.anonymousConsentsService.getConsent(registerConsent),\r\n      this.anonymousConsentsService.getTemplate(registerConsent),\r\n    ]).pipe(\r\n      map(([consent, template]: [AnonymousConsent, ConsentTemplate]) => {\r\n        return {\r\n          consent,\r\n          template: template ? template.description : '',\r\n        };\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.registerForm.get('newsletter').valueChanges.subscribe(() => {\r\n        this.toggleAnonymousConsent();\r\n      })\r\n    );\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.registerForm.valid) {\r\n      this.registerUser();\r\n    } else {\r\n      this.registerForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  registerUser(): void {\r\n    this.userService.register(\r\n      this.collectDataFromRegisterForm(this.registerForm.value)\r\n    );\r\n  }\r\n\r\n  titleSelected(title: Title): void {\r\n    this.registerForm['controls'].titleCode.setValue(title.code);\r\n  }\r\n\r\n  collectDataFromRegisterForm(formData: any): UserSignUp {\r\n    const { firstName, lastName, email, password, titleCode } = formData;\r\n\r\n    return {\r\n      firstName,\r\n      lastName,\r\n      uid: email.toLowerCase(),\r\n      password,\r\n      titleCode,\r\n    };\r\n  }\r\n\r\n  isConsentGiven(consent: AnonymousConsent): boolean {\r\n    return this.anonymousConsentsService.isConsentGiven(consent);\r\n  }\r\n\r\n  private isConsentRequired(): boolean {\r\n    const {\r\n      requiredConsents,\r\n      registerConsent,\r\n    } = this.anonymousConsentsConfig?.anonymousConsents;\r\n\r\n    if (requiredConsents && registerConsent) {\r\n      return requiredConsents.includes(registerConsent);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private onRegisterUserSuccess(success: boolean): void {\r\n    if (success) {\r\n      this.router.go('login');\r\n      this.globalMessageService.add(\r\n        { key: 'register.postRegisterMessage' },\r\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\r\n      );\r\n    }\r\n  }\r\n\r\n  toggleAnonymousConsent(): void {\r\n    const { registerConsent } = this.anonymousConsentsConfig.anonymousConsents;\r\n\r\n    if (Boolean(this.registerForm.get('newsletter').value)) {\r\n      this.anonymousConsentsService.giveConsent(registerConsent);\r\n    } else {\r\n      this.anonymousConsentsService.withdrawConsent(registerConsent);\r\n    }\r\n  }\r\n\r\n  private registerUserProcessInit(): void {\r\n    this.userService.resetRegisterUserProcessState();\r\n    this.subscription.add(\r\n      this.userService.getRegisterUserResultSuccess().subscribe((success) => {\r\n        this.onRegisterUserSuccess(success);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.userService.resetRegisterUserProcessState();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  CmsConfig,\r\n  I18nModule,\r\n  NotAuthGuard,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport { SpinnerModule, FormErrorsModule } from '../../../shared/index';\r\nimport { LoginModule } from '../login/login.module';\r\nimport { RegisterComponent } from './register.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LoginModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    UrlModule,\r\n    I18nModule,\r\n    SpinnerModule,\r\n    FormErrorsModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        RegisterCustomerComponent: {\r\n          component: RegisterComponent,\r\n          guards: [NotAuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [RegisterComponent],\r\n  exports: [RegisterComponent],\r\n  entryComponents: [RegisterComponent],\r\n})\r\nexport class RegisterComponentModule {}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { CheckoutLoginModule } from './checkout-login/checkout-login.module';\nimport { LoginFormModule } from './login-form/login-form.module';\nimport { LoginModule } from './login/login.module';\nimport { LogoutModule } from './logout/logout.module';\nimport { RegisterComponentModule } from './register/register.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    LoginFormModule,\n    LogoutModule,\n    CheckoutLoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    RegisterComponentModule,\n  ],\n})\nexport class UserComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-wish-list-item',\n  templateUrl: './wish-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WishListItemComponent {\n  @Input()\n  isLoading = false;\n  @Input() cartEntry: OrderEntry;\n\n  @Output()\n  remove = new EventEmitter<OrderEntry>();\n\n  removeEntry(item: OrderEntry) {\n    this.remove.emit(item);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Cart, OrderEntry, WishListService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-wish-list',\n  templateUrl: './wish-list.component.html',\n})\nexport class WishListComponent {\n  wishList$: Observable<Cart> = this.wishListService.getWishList();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  constructor(protected wishListService: WishListService) {}\n\n  removeEntry(item: OrderEntry) {\n    this.wishListService.removeEntry(item);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuard,\r\n  CmsConfig,\r\n  I18nModule,\r\n  provideDefaultConfig,\r\n  UrlModule,\r\n} from '@spartacus/core';\r\nimport {\r\n  ItemCounterModule,\r\n  MediaModule,\r\n  StarRatingModule,\r\n} from '../../shared/index';\r\nimport { AddToCartModule } from '../cart/index';\r\nimport { WishListItemComponent } from './components/wish-list-item/wish-list-item.component';\r\nimport { WishListComponent } from './components/wish-list/wish-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AddToCartModule,\r\n    CommonModule,\r\n    I18nModule,\r\n    MediaModule,\r\n    RouterModule,\r\n    StarRatingModule,\r\n    UrlModule,\r\n    ItemCounterModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<CmsConfig>{\r\n      cmsComponents: {\r\n        WishListComponent: {\r\n          component: WishListComponent,\r\n          guards: [AuthGuard],\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  declarations: [WishListComponent, WishListItemComponent],\r\n  entryComponents: [WishListComponent],\r\n  exports: [WishListComponent, WishListItemComponent],\r\n})\r\nexport class WishListModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { HamburgerMenuModule } from '../layout/index';\r\nimport { AnonymousConsentManagementBannerModule } from './anonymous-consent-management/anonymous-consent-management.module';\r\nimport { AsmModule } from './asm/asm.module';\r\nimport { CartComponentModule } from './cart/cart.module';\r\nimport { CheckoutComponentModule } from './checkout/checkout.module';\r\nimport { BannerCarouselModule } from './content/banner-carousel/banner-carousel.module';\r\nimport {\r\n  BannerModule,\r\n  CmsParagraphModule,\r\n  LinkModule,\r\n  TabParagraphContainerModule,\r\n} from './content/index';\r\nimport { QualtricsModule, SiteContextSelectorModule } from './misc/index';\r\nimport {\r\n  AddressBookModule,\r\n  CloseAccountModule,\r\n  ConsentManagementModule,\r\n  ForgotPasswordModule,\r\n  MyCouponsModule,\r\n  MyInterestsModule,\r\n  NotificationPreferenceModule,\r\n  OrderCancellationModule,\r\n  OrderDetailsModule,\r\n  OrderHistoryModule,\r\n  OrderReturnModule,\r\n  PaymentMethodsModule,\r\n  ResetPasswordModule,\r\n  ReturnRequestDetailModule,\r\n  ReturnRequestListModule,\r\n  UpdateEmailModule,\r\n  UpdatePasswordModule,\r\n  UpdateProfileModule,\r\n} from './myaccount/index';\r\nimport {\r\n  BreadcrumbModule,\r\n  CategoryNavigationModule,\r\n  FooterNavigationModule,\r\n  NavigationModule,\r\n  SearchBoxModule,\r\n} from './navigation/index';\r\nimport { OrderConfirmationModule } from './order-confirmation/index';\r\nimport {\r\n  ProductCarouselModule,\r\n  ProductFacetNavigationModule,\r\n  ProductIntroModule,\r\n  ProductListModule,\r\n  ProductReferencesModule,\r\n  ProductTabsModule,\r\n  StockNotificationModule,\r\n} from './product/index';\r\nimport { ProductImagesModule } from './product/product-images/product-images.module';\r\nimport { ProductSummaryModule } from './product/product-summary/product-summary.module';\r\nimport { ProductVariantsModule } from './product/product-variants/product-variants.module';\r\nimport { StoreFinderModule } from './storefinder/store-finder.module';\r\nimport { UserComponentModule } from './user/user.module';\r\nimport { WishListModule } from './wish-list/wish-list.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AnonymousConsentManagementBannerModule,\r\n    AsmModule,\r\n    HamburgerMenuModule,\r\n    CmsParagraphModule,\r\n    LinkModule,\r\n    BannerModule,\r\n    CategoryNavigationModule,\r\n    NavigationModule,\r\n    FooterNavigationModule,\r\n    BreadcrumbModule,\r\n    SearchBoxModule,\r\n    SiteContextSelectorModule,\r\n    QualtricsModule,\r\n    AddressBookModule,\r\n    OrderHistoryModule,\r\n    OrderCancellationModule,\r\n    OrderReturnModule,\r\n    ReturnRequestListModule,\r\n    ReturnRequestDetailModule,\r\n    ProductListModule,\r\n    ProductFacetNavigationModule,\r\n    ProductTabsModule,\r\n    ProductCarouselModule,\r\n    ProductReferencesModule,\r\n    OrderDetailsModule,\r\n    PaymentMethodsModule,\r\n    UpdateEmailModule,\r\n    UpdatePasswordModule,\r\n    UpdateProfileModule,\r\n    ConsentManagementModule,\r\n    CloseAccountModule,\r\n    CartComponentModule,\r\n    TabParagraphContainerModule,\r\n    OrderConfirmationModule,\r\n    StoreFinderModule,\r\n    ProductImagesModule,\r\n    ProductSummaryModule,\r\n    ProductVariantsModule,\r\n    ProductIntroModule,\r\n    CheckoutComponentModule,\r\n    ForgotPasswordModule,\r\n    ResetPasswordModule,\r\n    BannerCarouselModule,\r\n    UserComponentModule,\r\n    MyCouponsModule,\r\n    WishListModule,\r\n    NotificationPreferenceModule,\r\n    MyInterestsModule,\r\n    StockNotificationModule,\r\n  ],\r\n})\r\nexport class CmsLibModule {}\r\n","import { inject, InjectionToken } from '@angular/core';\r\nimport { Route } from '@angular/router';\r\nimport {\r\n  DEFAULT_URL_MATCHER,\r\n  UrlMatcherFactory,\r\n  UrlMatcherService,\r\n} from '@spartacus/core';\r\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\r\n\r\nexport function getProductDetailsUrlMatcherFactory(\r\n  service: UrlMatcherService,\r\n  defaultMatcherFactory: UrlMatcherFactory\r\n): UrlMatcherFactory {\r\n  const factory = (route: Route) => {\r\n    const defaultMatcher = defaultMatcherFactory(route);\r\n    const suffixPDPMatcher = getSuffixUrlMatcher({\r\n      marker: 'p',\r\n      paramName: 'productCode',\r\n    });\r\n    return service.getCombined([defaultMatcher, suffixPDPMatcher]);\r\n  };\r\n  return factory;\r\n}\r\n\r\n/**\r\n * Injection token with url matcher factory for PDP.\r\n * The provided url matcher matches both:\r\n * - the configured `paths` from routing config and\r\n * - custom pattern  `** / p / :productCode`\r\n *\r\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\r\n * or additional matchers can be added for a specific route.\r\n *\r\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\r\n */\r\nexport const PRODUCT_DETAILS_URL_MATCHER = new InjectionToken<\r\n  UrlMatcherFactory\r\n>('PRODUCT_DETAILS_URL_MATCHER', {\r\n  providedIn: 'root',\r\n  factory: () =>\r\n    getProductDetailsUrlMatcherFactory(\r\n      inject(UrlMatcherService),\r\n      inject(DEFAULT_URL_MATCHER)\r\n    ),\r\n});\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\r\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\r\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\r\nimport { PRODUCT_DETAILS_URL_MATCHER } from './product-details-url-matcher';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'product' },\r\n      },\r\n    ]),\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<RoutingConfig>{\r\n      routing: {\r\n        routes: {\r\n          product: {\r\n            matchers: [PRODUCT_DETAILS_URL_MATCHER],\r\n          },\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n})\r\nexport class ProductDetailsPageModule {}\r\n","import { inject, InjectionToken } from '@angular/core';\r\nimport { Route } from '@angular/router';\r\nimport {\r\n  DEFAULT_URL_MATCHER,\r\n  UrlMatcherFactory,\r\n  UrlMatcherService,\r\n} from '@spartacus/core';\r\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\r\n\r\nexport function getProductListingUrlMatcherFactory(\r\n  service: UrlMatcherService,\r\n  defaultMatcherFactory: UrlMatcherFactory\r\n): UrlMatcherFactory {\r\n  const factory = (route: Route) => {\r\n    const defaultMatcher = defaultMatcherFactory(route);\r\n    const suffixPLPMatcher = getSuffixUrlMatcher({\r\n      marker: 'c',\r\n      paramName: 'categoryCode',\r\n    });\r\n    return service.getCombined([defaultMatcher, suffixPLPMatcher]);\r\n  };\r\n  return factory;\r\n}\r\n\r\n/**\r\n * Injection token with url matcher factory for PLP.\r\n * The provided url matcher matches both:\r\n * - the configured `paths` from routing config and\r\n * - custom pattern  `** / c / :categoryCode`\r\n *\r\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\r\n * or additional matchers can be added for a specific route.\r\n *\r\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\r\n */\r\nexport const PRODUCT_LISTING_URL_MATCHER = new InjectionToken<\r\n  UrlMatcherFactory\r\n>('PRODUCT_LISTING_URL_MATCHER', {\r\n  providedIn: 'root',\r\n  factory: () =>\r\n    getProductListingUrlMatcherFactory(\r\n      inject(UrlMatcherService),\r\n      inject(DEFAULT_URL_MATCHER)\r\n    ),\r\n});\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\r\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\r\nimport { PRODUCT_LISTING_URL_MATCHER } from './product-listing-url-matcher';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { pageLabel: 'search', cxRoute: 'search' },\r\n      },\r\n      {\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'brand' },\r\n      },\r\n      {\r\n        // The 'category' route  may include a greedy suffix url matcher '**/c/:categoryCode'\r\n        // So not to shadow the specific 'brand' route, the 'category' is the last route in the sequence.\r\n        path: null,\r\n        canActivate: [CmsPageGuard],\r\n        component: PageLayoutComponent,\r\n        data: { cxRoute: 'category' },\r\n      },\r\n    ]),\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig(<RoutingConfig>{\r\n      routing: {\r\n        routes: {\r\n          category: {\r\n            matchers: [PRODUCT_LISTING_URL_MATCHER],\r\n          },\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n})\r\nexport class ProductListingPageModule {}\r\n","import { LayoutConfig } from '../../layout/config/layout-config';\r\n\r\nexport const b2cLayoutConfig: LayoutConfig = {\r\n  // deferredLoading: {\r\n  //   strategy: DeferLoadingStrategy.DEFER,\r\n  //   intersectionMargin: '50px',\r\n  // },\r\n  layoutSlots: {\r\n    header: {\r\n      lg: {\r\n        slots: [\r\n          'SiteContext',\r\n          'SiteLinks',\r\n          'SiteLogo',\r\n          'SearchBox',\r\n          'SiteLogin',\r\n          'MiniCart',\r\n          'NavigationBar',\r\n        ],\r\n      },\r\n      slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\r\n    },\r\n    navigation: {\r\n      lg: { slots: [] },\r\n      slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\r\n    },\r\n    footer: {\r\n      slots: ['Footer'],\r\n    },\r\n    LandingPage2Template: {\r\n      pageFold: 'Section2B',\r\n      slots: [\r\n        'Section1',\r\n        'Section2A',\r\n        'Section2B',\r\n        'Section2C',\r\n        'Section3',\r\n        'Section4',\r\n        'Section5',\r\n      ],\r\n    },\r\n\r\n    ContentPage1Template: {\r\n      slots: ['Section2A', 'Section2B'],\r\n    },\r\n    CategoryPageTemplate: {\r\n      pageFold: 'Section2',\r\n      slots: ['Section1', 'Section2', 'Section3'],\r\n    },\r\n    ProductListPageTemplate: {\r\n      slots: ['ProductLeftRefinements', 'ProductListSlot'],\r\n    },\r\n    ProductGridPageTemplate: {\r\n      slots: ['ProductLeftRefinements', 'ProductGridSlot'],\r\n    },\r\n    SearchResultsListPageTemplate: {\r\n      slots: [\r\n        'Section2',\r\n        'ProductLeftRefinements',\r\n        'SearchResultsListSlot',\r\n        'Section4',\r\n      ],\r\n    },\r\n    SearchResultsGridPageTemplate: {\r\n      slots: [\r\n        'Section2',\r\n        'ProductLeftRefinements',\r\n        'SearchResultsGridSlot',\r\n        'Section4',\r\n      ],\r\n    },\r\n    ProductDetailsPageTemplate: {\r\n      lg: {\r\n        pageFold: 'UpSelling',\r\n      },\r\n\r\n      pageFold: 'Summary',\r\n\r\n      slots: [\r\n        'Summary',\r\n        'UpSelling',\r\n        'CrossSelling',\r\n        'Tabs',\r\n        'PlaceholderContentSlot',\r\n      ],\r\n    },\r\n    CartPageTemplate: {\r\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\r\n    },\r\n    AccountPageTemplate: {\r\n      slots: ['BodyContent', 'SideContent'],\r\n    },\r\n    LoginPageTemplate: {\r\n      slots: ['LeftContentSlot', 'RightContentSlot'],\r\n    },\r\n    ErrorPageTemplate: {\r\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\r\n    },\r\n    OrderConfirmationPageTemplate: {\r\n      slots: ['BodyContent', 'SideContent'],\r\n    },\r\n    MultiStepCheckoutSummaryPageTemplate: {\r\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\r\n    },\r\n    CheckoutLoginPageTemplate: {\r\n      slots: ['RightContentSlot'],\r\n    },\r\n  },\r\n};\r\n","import { MediaConfig } from '../../shared/components/media/media.config';\r\n\r\nexport const mediaConfig: MediaConfig = {\r\n  mediaFormats: {\r\n    mobile: {\r\n      width: 400,\r\n    },\r\n    tablet: {\r\n      width: 770,\r\n    },\r\n    desktop: {\r\n      width: 1140,\r\n    },\r\n    widescreen: {\r\n      width: 1400,\r\n    },\r\n    // product media\r\n    cartIcon: {\r\n      width: 65,\r\n    },\r\n    thumbnail: {\r\n      width: 96,\r\n    },\r\n    product: {\r\n      width: 284,\r\n    },\r\n    zoom: {\r\n      width: 515,\r\n    },\r\n  },\r\n};\r\n","import { CmsPageSlotsConfig, ContentSlotComponentData } from '@spartacus/core';\n\nexport const headerComponents: {\n  [key: string]: ContentSlotComponentData | any;\n} = {\n  HamburgerMenuComponent: {\n    typeCode: 'HamburgerMenuComponent',\n    flexType: 'HamburgerMenuComponent',\n  },\n  LoginComponent: {\n    typeCode: 'LoginComponent',\n    flexType: 'LoginComponent',\n    uid: 'LoginComponent',\n  },\n};\n\nexport const defaultPageHeaderConfig: CmsPageSlotsConfig = {\n  PreHeader: {\n    componentIds: ['HamburgerMenuComponent'],\n  },\n  SiteLogin: {\n    componentIds: ['LoginComponent'],\n  },\n};\n","import { CmsStructureConfig } from '@spartacus/core';\nimport {\n  defaultPageHeaderConfig,\n  headerComponents,\n} from './default-header.config';\n\nexport function defaultCmsContentConfig(): CmsStructureConfig {\n  return {\n    cmsStructure: {\n      components: {\n        ...headerComponents,\n      },\n      slots: {\n        ...defaultPageHeaderConfig,\n      },\n      pages: [],\n    },\n  };\n}\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  AnonymousConsentsModule,\r\n  AuthModule,\r\n  CartModule,\r\n  CheckoutModule,\r\n  CmsModule,\r\n  ConfigInitializerModule,\r\n  ConfigModule,\r\n  ConfigValidatorModule,\r\n  FeaturesConfigModule,\r\n  GlobalMessageModule,\r\n  I18nModule,\r\n  ProcessModule,\r\n  ProductModule,\r\n  provideConfigFromMetaTags,\r\n  StateModule,\r\n  UserModule,\r\n} from '@spartacus/core';\r\nimport { RoutingModule } from '../cms-structure/routing/routing.module';\r\nimport { LayoutModule } from '../layout/layout.module';\r\nimport { MediaModule } from '../shared/components/media/media.module';\r\nimport { ViewConfigModule } from '../shared/config/view-config.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    StateModule.forRoot(),\r\n    AuthModule.forRoot(),\r\n    AnonymousConsentsModule.forRoot(),\r\n    ConfigModule.forRoot(),\r\n    ConfigInitializerModule.forRoot(),\r\n    ConfigValidatorModule.forRoot(),\r\n    RoutingModule.forRoot(),\r\n    I18nModule.forRoot(),\r\n    CmsModule.forRoot(),\r\n    GlobalMessageModule.forRoot(),\r\n    ProcessModule.forRoot(),\r\n    CartModule.forRoot(),\r\n    CheckoutModule.forRoot(),\r\n    UserModule.forRoot(),\r\n    ProductModule.forRoot(),\r\n    ViewConfigModule.forRoot(),\r\n    FeaturesConfigModule.forRoot('2.0'),\r\n    LayoutModule,\r\n    MediaModule.forRoot(),\r\n  ],\r\n  exports: [LayoutModule],\r\n  providers: [...provideConfigFromMetaTags()],\r\n})\r\nexport class StorefrontFoundationModule {}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport {\r\n  ExternalRoutesModule,\r\n  OccModule,\r\n  PersonalizationModule,\r\n  provideConfig,\r\n  SiteContextModule,\r\n  SmartEditModule,\r\n} from '@spartacus/core';\r\nimport { AsmModule } from '../cms-components/asm/asm.module';\r\nimport { ProductDetailsPageModule } from '../cms-pages/product-details-page/product-details-page.module';\r\nimport { ProductListingPageModule } from '../cms-pages/product-listing-page/product-listing-page.module';\r\nimport { MainModule } from '../layout/main/main.module';\r\nimport { StorefrontConfig } from '../storefront-config';\r\nimport { StorefrontFoundationModule } from './storefront-foundation.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot([], {\r\n      scrollPositionRestoration: 'enabled',\r\n      anchorScrolling: 'enabled',\r\n    }),\r\n\r\n    StoreModule.forRoot({}),\r\n    EffectsModule.forRoot([]),\r\n\r\n    // ASM module must be imported before the `AuthModule (which is imported in `StorefrontFoundationModule`)\r\n    // since we might have conflicting interceptor logic. See #5461.\r\n    AsmModule,\r\n\r\n    StorefrontFoundationModule,\r\n    MainModule,\r\n    SiteContextModule.forRoot(), // should be imported after RouterModule.forRoot, because it overwrites UrlSerializer\r\n\r\n    SmartEditModule.forRoot(), // should be custom\r\n    PersonalizationModule.forRoot(), // should be custom\r\n\r\n    // opt-in explicitly\r\n    OccModule.forRoot(),\r\n    ProductDetailsPageModule,\r\n    ProductListingPageModule,\r\n    ExternalRoutesModule.forRoot(),\r\n  ],\r\n  exports: [MainModule, StorefrontFoundationModule],\r\n})\r\nexport class StorefrontModule {\r\n  static withConfig(\r\n    config?: StorefrontConfig\r\n  ): ModuleWithProviders<StorefrontModule> {\r\n    return {\r\n      ngModule: StorefrontModule,\r\n      providers: [provideConfig(config)],\r\n    };\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport {\r\n  provideConfig,\r\n  provideDefaultConfig,\r\n  provideDefaultConfigFactory,\r\n} from '@spartacus/core';\r\nimport { CmsLibModule } from '../cms-components/cms-lib.module';\r\nimport { StorefrontConfig } from '../storefront-config';\r\nimport { b2cLayoutConfig, mediaConfig } from './config/index';\r\nimport { defaultCmsContentConfig } from './config/static-cms-structure/default-cms-content.config';\r\nimport { StorefrontModule } from './storefront.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    StorefrontModule,\r\n\r\n    // the cms lib module contains all components that added in the bundle\r\n    CmsLibModule,\r\n  ],\r\n  providers: [\r\n    provideDefaultConfig({\r\n      pwa: {\r\n        enabled: true,\r\n        addToHomeScreen: true,\r\n      },\r\n    }),\r\n    provideDefaultConfig(b2cLayoutConfig),\r\n    provideDefaultConfig(mediaConfig),\r\n    provideDefaultConfigFactory(defaultCmsContentConfig),\r\n  ],\r\n  exports: [StorefrontModule],\r\n})\r\nexport class B2cStorefrontModule {\r\n  static withConfig(\r\n    config?: StorefrontConfig\r\n  ): ModuleWithProviders<B2cStorefrontModule> {\r\n    return {\r\n      ngModule: B2cStorefrontModule,\r\n      providers: [provideConfig(config)],\r\n    };\r\n  }\r\n}\r\n"],"names":["DIALOG_TYPE","LAUNCH_CALLER","BREAKPOINT","Injectable","Config","Inject","DOCUMENT","of","isDevMode","RendererFactory2","ComponentFactoryResolver","BehaviorSubject","resolveApplicable","OutletPosition","TemplateRef","Input","Directive","NgModule","CommonModule","map","filter","first","Observable","flatMap","distinctUntilChanged","DeferLoadingStrategy","isPlatformServer","PLATFORM_ID","EventEmitter","Subscription","ComponentFactory","ViewContainerRef","Output","tap","RoutingService","combineLatest","ElementRef","HostBinding","HostListener","Renderer2","AnonymousConsentsService","Component","ICON_TYPE","IconResourceType","WindowRef","DomSanitizer","provideDefaultConfig","take","AnonymousConsentsConfig","ViewChild","I18nModule","FeaturesConfigModule","provideConfig","ANONYMOUS_CONSENT_STATUS","withLatestFrom","skipWhile","GlobalMessageType","concat","scan","UserConsentService","GlobalMessageService","AuthService","FormsModule","ReactiveFormsModule","AuthGuard","ChangeDetectionStrategy","RouterModule","UrlModule","startWith","Router","PaginationItemType","PaginationNavigationPosition","ActivatedRoute","NgSelectModule","NgbModalRef","NgbModal","HttpClientModule","fromEvent","switchMap","_a","LANGUAGE_CONTEXT_ID","CURRENCY_CONTEXT_ID","Optional","ContextServiceMap","Injector","SiteContextModule","SiteContextType","shareReplay","UserOrderService","PromotionLocation","CheckoutService","ActiveCartService","EMAIL_PATTERN","PASSWORD_PATTERN","CmsConfig","CmsService","DynamicAttributeService","from","Location","APP_INITIALIZER","mergeMap","AsmAuthService","UserService","AsmService","ViewEncapsulation","AsmConfig","ChangeDetectorRef","Pipe","Validators","FormBuilder","debounceTime","AsmCoreModule","ProductScope","ProductService","FormGroup","FormControl","CartVoucherService","CustomerCouponService","SelectiveCartService","NgbModule","InjectionToken","WishListService","CartModule","CheckoutStepType","DeliveryModePreferences","RoutingConfigService","AuthRedirectService","OCC_USER_ID_ANONYMOUS","CheckoutDeliveryService","CheckoutPaymentService","UserAddressService","UserPaymentService","TranslationService","SkipLinkScrollPosition","ConfigModule","router","NavigationStart","ServiceWorkerModule","SwRegistrationOptions","LanguageService","PageRobotsMeta","Title","Meta","PageMetaService","isPlatformBrowser","SecurityContext","endWith","isObservable","TranslationChunkService","PageType","SemanticPathService","ProtectedRoutesGuard","CoreRoutingModule","ProductReviewService","ViewChildren","NotAuthGuard","AmendOrderType","formatCurrency","getCurrencySymbol","OrderReturnRequestService","NgbActiveModal","UserNotificationPreferenceService","UserInterestsService","CmsPageTitleModule","NavigationEnd","SearchboxService","ProductReferenceService","pluck","ProductSearchService","CurrencyService","ViewModes","FacetGroupCollapsedState","HttpUrlEncodingCodec","observeOn","asapScheduler","delayWhen","interval","VariantType","VariantQualifier","OccConfig","InfiniteScrollModule","ProductDetailOutlets","NotificationType","StoreDataService","StoreFinderService","GoogleMapRendererService","StoreFinderConfig","NgbTabsetModule","StoreFinderCoreModule","ProtectedRoutesService","inject","UrlMatcherService","DEFAULT_URL_MATCHER","StateModule","AuthModule","AnonymousConsentsModule","ConfigInitializerModule","ConfigValidatorModule","CmsModule","GlobalMessageModule","ProcessModule","CheckoutModule","UserModule","ProductModule","provideConfigFromMetaTags","StoreModule","EffectsModule","SmartEditModule","PersonalizationModule","OccModule","ExternalRoutesModule","provideDefaultConfigFactory"],"mappings":"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"}